var htmlFileInfoList = ["GUID-000ECF5B-FF15-4E67-A3E6-6C544A713D7E.html@@@1.1.2.1.2.4.4 GATTC_DiscoverCharacteristicsByUUID@@@uint16_t GATTC_DiscoverCharacteristicsByUUID (uint16_t connHandle, GATTC_DiscoverCharacteristicByUuidParams_T *p_discParams); Initiates the discovery of characteristics with a specific UUID within a...","GUID-00442B75-722F-4DFA-A915-77A7303B1C29.html@@@2.5.1.1 Conformance@@@If conformance to this profile is claimed, all capabilities indicated as mandatory for this profile shall be supported in the specified manner (process-mandatory). This also applies to all optional...","GUID-00597234-2A93-4E80-B8B3-FA89290688A9.html@@@1.1.2.2.3.3.9 BLE_DD_EventField_T@@@typedef union { BLE_DD_EvtDiscResult_T evtDiscResult; BLE_DD_EvtSecRequire_T evtSecRequire; BLE_DD_EvtConnect_T evtConnect; BLE_DD_EvtDisconnect_T evtDisconnect; } BLE_DD_EventField_T; Union of BLE_DD...","GUID-006A1A37-5837-4FDD-94F7-220F77B05152.html@@@1.1.2.2.1.4.12 BLE_DM_SetFilterAcceptList@@@uint16_t BLE_DM_SetFilterAcceptList (uint8_t devCnt, uint8_t const *p_devId); Sets the filter accept list. Parameter Description [in] devCnt The number of devices to add to the filter accept list...","GUID-009292E5-40A2-48F8-AF80-41D20F2EB7F8.html@@@1.1.2.2.1.5.4 BLE_DM Connection Parameters Update Procedure@@@Example demonstrating automatic reply by BLE_DM to L2CAP Connection Parameters Update requests. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating BLE_DM automatically replying to LL Connection Parameters Update...","GUID-00B3AAC3-E333-4DC4-A53B-D8B6CF3FE3B7.html@@@1.1.2.1.1.5.6 GAP Security Encryption Procedure@@@Example demonstrating the central device initiating a security (encryption) procedure Example demonstrating the central device initiating a security (encryption) procedure...","GUID-00E43E29-22F6-4E44-B03F-CF14B8524B93.html@@@1.1.2.1.3.4 Message Sequence Chart@@@L2CAP CoC connection Procedure L2CAP Connection Parameter Update Procedure...","GUID-00F09EBB-18BD-4A8B-A100-90A9845DF277.html@@@1.1.2.1.1.1.49 RPA timeouts@@@#define BLE_GAP_RPA_TIMEOUT_MIN 0x0001 #define BLE_GAP_RPA_TIMEOUT_MAX 0x0708 Defines the Resolvable Private Address (RPA) timeouts. Macro Description BLE_GAP_RPA_TIMEOUT_MIN Minimum value for RPA...","GUID-0131F3BC-75FC-480E-8EE4-A1C59FDA2977.html@@@1.1.2.1.8.2 HCI Enumerations@@@HCI_CmdCbId_T Type of HCI command that application implement...","GUID-019FDCBD-1C56-4E89-B909-18844EDC6FD2.html@@@2.2.8 References@@@[1] Transparent Service v1.0. [2] Bluetooth Core Specification v4.0 or later version of the Core Specification. [3] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG...","GUID-01B45B36-427D-4D04-92D1-DB14D4E57921.html@@@1.1.2.1.5.2 Enumerations@@@STACK_GroupId_T Enumerates the group IDs for different stack components...","GUID-02717B1E-3160-4263-8062-3CD9596DD5AE.html@@@1.1.2.1.7.3.2 BLE_DTM_EnhancedReceiverTest@@@uint16_t BLE_DTM_EnhancedReceiverTest (uint8_t rxChannel, uint8_t phy); Starts a receiver test where the device receives test reference packets at a fixed interval. BLE_DTM_Init must be called before...","GUID-02778FD3-8B04-4ED8-AC0A-4179B6B96BA5.html@@@1.1.2.1.2.1.22 UUID length types@@@#define ATT_UUID_LENGTH_2 2 #define ATT_UUID_LENGTH_4 4 #define ATT_UUID_LENGTH_16 16 Defines the possible lengths for Bluetooth UUIDs. Macro Description ATT_UUID_LENGTH_2 Length in bytes for a 16-bit...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-02C68A5B-C6A7-4111-9861-8C941BCB3F4D.html@@@1.1.2.3.7.2.3.6 BLE_TRSPS_EvtReceiveData_T@@@typedef struct BLE_TRSPS_EvtReceiveData_T { uint16_t connHandle; }BLE_TRSPS_EvtReceiveData_T; Structure for the BLE_TRSPS_EVT_RECEIVE_DATA event. Field Description connHandle Connection handle...","GUID-02DEFD65-9B85-4B79-81AB-417BED3A8A66.html@@@1.1.2.3.7.2.4.6 BLE_TRSPS_SendVendorCommand@@@uint16_t BLE_TRSPS_SendVendorCommand (uint16_t connHandle, uint8_t commandID, uint8_t commandLength, uint8_t *p_commandPayload); Sends a vendor-specific command over BLE. Parameter Description [in]...","GUID-02E12399-7FB5-434B-BDB6-B4CFA2CD8CB1.html@@@1.1.2.1.4.1.3 Key flags@@@#define BLE_SMP_FLAG_ENCRYPT_INFO ( 1 &lt;&lt; 0 ) #define BLE_SMP_FLAG_CENTRAL_ID ( 1 &lt;&lt; 1 ) #define BLE_SMP_FLAG_ID_INFO ( 1 &lt;&lt; 2 ) #define BLE_SMP_FLAG_ID_ADDR_INFO ( 1 &lt;&lt; 3 ) #define...","GUID-03181892-0135-4307-BB13-1B3F062B030E.html@@@1.1.2.3.5.1.3.2 BLE_PXPM_DescInfo_T@@@typedef struct BLE_PXPM_DescInfo_T { uint16_t attrHandle; uint16_t uuid; } BLE_PXPM_DescInfo_T; Structure representing descriptor information. Field Description attrHandle Handle of the descriptor&apos;s...","GUID-036B53F2-93B3-459B-8E45-090660ADB89B.html@@@1.1.2.3.5.1.4.5 BLE_PXPM_GetDescList@@@uint16_t BLE_PXPM_GetDescList (uint16_t connHandle, BLE_PXPM_DescList_T *p_descList); Retrieves information about the descriptor list of the Proximity Service that has been discovered. This API could...","GUID-036D3D8F-8FDF-4287-86F9-CBC274F165A9.html@@@2.2.2 Configuration@@@...","GUID-049FC0EF-A122-407D-82A4-023D4EEA067C.html@@@1.1.2.3.6.1.3.5 BLE_TRCBPS_EvtReceiveData_T@@@typedef struct BLE_TRCBPS_EvtReceiveData_T { uint16_t connHandle; BLE_TRCBPS_ChanType_T chanType; uint8_t leL2capId; } BLE_TRCBPS_EvtReceiveData_T; Structure for the BLE_TRCBPS_EVT_RECEIVE_DATA event...","GUID-04D5B255-6880-42DF-B79F-D6C3A38ABDC3.html@@@1.1.1.3.1 BLE Memory Usage for PIC32CX-BZ2@@@Introduction Optimizing memory usage is crucial for efficient BLE application development. This document provides a comprehensive guide on evaluating BLE memory usage, offing insights and best...","GUID-051BD359-0BDE-4360-A147-DD981F8072EE.html@@@2.3.2.1 Roles@@@The profile defines two roles: Transparent Credit Based Server and Transparent Credit Based Client. Both of them can transfer data to each other. The Transparent Credit Based Server shall be a GATT...","GUID-053481D7-C98A-4E78-B7AD-4D71F3A1B03B.html@@@1.1.2.1.2.1.1 ATT error codes@@@#define ATT_ERR_INVALID_HANDLE 0x01 #define ATT_ERR_READ_NOT_PERMITTED 0x02 #define ATT_ERR_WRITE_NOT_PERMITTED 0x03 #define ATT_ERR_INVALID_PDU 0x04 #define ATT_ERR_INSUF_AUTHN 0x05 #define...","GUID-053B925B-761E-4FBE-99BE-89D41F43FB04.html@@@1.1.2.3.2.2.1.2 ANPS command definitions@@@#define BLE_ANPS_CMD_ENABLE_NEW_ALERT ( 0x00U ) #define BLE_ANPS_CMD_ENABLE_UNREAD_ALERT_STAT ( 0x01U ) #define BLE_ANPS_CMD_DISABLE_NEW_ALERT ( 0x02U ) #define BLE_ANPS_CMD_DISABLE_UNREAD_ALERT_STAT...","GUID-057D9C4D-EA93-48CB-B28C-1090D04A5F7C.html@@@1.1.2.1.6.4.11 BT_SYS_PtaWlanActiveIrqHandler@@@void BT_SYS_PtaWlanActiveIrqHandler (); Handles the WLAN active interrupt. This function must be called from the interrupt service routine (ISR) or a similar context where the WLAN active interrupt is...","GUID-0660F22C-C930-4AF5-9688-9DC179096869.html@@@1.1.2.3.1.1.1.2 ANCS attribute lengths@@@#define BLE_ANCS_MAX_PACKET_BUFFER_SIZE 1024 #define BLE_ANCS_MAX_APPID_LEN 32 #define BLE_ANCS_MAX_TITLE_LEN 32 #define BLE_ANCS_MAX_SUB_TITLE_LEN 32 #define BLE_ANCS_MAX_MESSAGE_LEN 512 #define...","GUID-06A0B2A5-80E2-4A4A-95ED-0555734ACB2F.html@@@2.2.6 Security Considerations@@@Security requirements may be defined by the higher layer specification...","GUID-06CE5132-9A89-4C0D-8F78-DF8BB927F8A0.html@@@1.1.2.3.4.1.1.5 OTAPC result code definitions@@@#define BLE_OTAPC_RESULT_SUCCESS ( 0x00U ) #define BLE_OTAPC_RESULT_INVALID_STATE ( 0x01U ) #define BLE_OTAPC_RESULT_NOT_SUPPORTED ( 0x02U ) #define BLE_OTAPC_RESULT_OPERATION_FAILED ( 0x03U ) #define...","GUID-071E46CA-399E-4425-BC72-0B76045C69C9.html@@@1.1.2.3.7.2.4.3 BLE_TRSPS_GetData@@@uint16_t BLE_TRSPS_GetData (uint16_t connHandle, uint8_t *p_data); Retrieves queued data from the profile. Parameter Description [in] connHandle Connection handle associated with the queued data...","GUID-07438979-F739-480E-A2C2-0329A5939525.html@@@1.1.2.1.1.4.18 BLE_GAP_ExtScanInit@@@uint16_t BLE_GAP_ExtScanInit (uint16_t maxDataLen, uint8_t maxNumOfSecPkts); Initializes the BLE GAP extended scanning module. BLE_GAP_ScanInit must be called prior to enabling this module. Parameter...","GUID-076E2022-E1A1-4C65-90E4-E2E110FB22D1.html@@@1.1.2.1.1.4.25 BLE_GAP_PeriodicAdvInit@@@uint16_t BLE_GAP_PeriodicAdvInit ( void ); Initializes the BLE GAP periodic advertising module. Periodic advertising is part of the extended advertising feature. Both BLE_GAP_AdvInit and...","GUID-0792D51F-6576-4826-947E-A2103EB634F1.html@@@1.1.2.1.1.4.11 BLE_GAP_EnableEncryption@@@uint16_t BLE_GAP_EnableEncryption (uint16_t connHandle, uint8_t *p_random, uint8_t *p_ediv, uint8_t *p_ltk); Authenticates and encrypts the connection using the provided encryption key. This command...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-07CD282B-B2AC-4DFC-8CDC-290CD58C1008.html@@@1.1.2.3.6.1.2.1 BLE_TRCBPS_ChanType_T@@@typedef enum BLE_TRCBPS_ChanType_T { BLE_TRCBPS_UNKNOWN_CHAN = 0x00U , BLE_TRCBPS_CTRL_CHAN, BLE_TRCBPS_DATA_CHAN } BLE_TRCBPS_ChanType_T; Enumeration for BLE Transparent Credit Based Profile channel...","GUID-085D2B3E-E5DB-4072-8916-29201399538E.html@@@1.1.2.1.1.2.1 BLE_GAP_EventId_T@@@typedef enum BLE_GAP_EventId_T { BLE_GAP_EVT_CONNECTED, BLE_GAP_EVT_DISCONNECTED, BLE_GAP_EVT_CONN_PARAM_UPDATE, BLE_GAP_EVT_ENCRYPT_STATUS, BLE_GAP_EVT_ADV_REPORT, BLE_GAP_EVT_ENC_INFO_REQUEST...","GUID-086FB212-53F2-476D-B948-2A569E99D162.html@@@1.1.2.1.2.3.1 ATT_Uuid_T@@@typedef struct ATT_Uuid_T { uint8_t uuid[ATT_MAX_UUID_SIZE]; uint8_t uuidLength; } ATT_Uuid_T; Structure representing a universally unique identifier (UUID) for ATT (Attribute Protocol) operations...","GUID-089F5ADB-7173-4AA0-8859-7929BE804A1D.html@@@1.1.2.2.1.3 Structures@@@BLE_DM_Config_T Structure for configuring connection parameters and security settings. BLE_DM_ConnConfig_T Structure for configuring connection parameters and security settings...","GUID-08E0DA4A-EE54-4EF0-8B14-D61D9018EC87.html@@@1.1.2.3.7.1.4.6 BLE_TRSPC_Init@@@uint16_t BLE_TRSPC_Init ( void ); Initializes the BLE Transparent Profile Client. Return value Description MBA_RES_SUCCESS BLE Transparent Profile Client was successfully initialized. MBA_RES_FAIL BLE...","GUID-08ED7CB4-9F62-4151-9E94-E0C285726C59.html@@@2.1.4.1 GATT Sub-Procedure Requirements@@@Requirements in this section represent a minimum set of requirements for an OTA Client. Other GATT sub-procedures may be used if supported by both OTA Client and Server. The table below summarizes...","GUID-09122EE8-5B31-4335-9EB3-8358010C1ABE.html@@@1.1.2.3.2.2.3.2 BLE_ANPS_EventCb_T@@@typedef void (*BLE_ANPS_EventCb_T)(BLE_ANPS_Event_T *p_event); BLE Alert Notification profile server callback type. This callback function sends BLE Alert Notification profile server events to the...","GUID-0950A21C-B6BC-4F1A-8505-A0335947D141.html@@@1.1.2.2.4.3.1 BLE_SCM_Event_T@@@typedef struct BLE_SCM_Event_T { BLE_SCM_EventId_T eventId; BLE_SCM_EventField_T eventField; } BLE_SCM_Event_T; BLE_SCM callback event structure. Field Description eventId Identifier for the event...","GUID-095F5AFF-F46B-4AC1-8C76-6472345998F8.html@@@1.1.2.1.6.3.5 BT_SYS_HpaCpsCb_T@@@Only valid for PIC32CX-BZ2 typedef void (*BT_SYS_HpaCpsCb_T)(bool bypass); Callback type for Bluetooth system High Power Amplifier (HPA) Current Power State (CPS) events. Parameter Description [in]...","GUID-09C92594-E0A7-4C40-9850-F08D64E6BD52.html@@@1.1.2.2.5.1.1.1 MW_AES_Ctx_T@@@typedef struct MW_AES_Ctx_T { CRYPT_AES_CTX aesCtx; } MW_AES_Ctx_T; Structure for maintaining AES encryption context. Field Description aesCtx Underlying cryptographic library&apos;s AES context. This...","GUID-0A6F27FE-8447-45A0-844A-232F66D55ABD.html@@@1.1.2.1.6.4.12 BT_SYS_ReadVersion@@@void BT_SYS_ReadVersion (uint32_t *p_version); Retrieve the Bluetooth system version. Parameter Description [out] p_version Pointer to a variable where the version number will be stored...","GUID-0AA05C17-0A28-4E49-827A-4E5BDE86E5B9.html@@@1.1.2.1.2.3.17 GATT_EvtReceiveHandleValue_T@@@typedef struct GATT_EvtReceiveHandleValue_T { uint16_t connHandle; uint16_t charHandle; uint16_t receivedLength; uint8_t receivedValue[BLE_ATT_MAX_MTU_LEN-ATT_NOTI_INDI_HEADER_SIZE]; }...","GUID-0AC9BDBE-BD8E-4F05-BB14-137F4DC7422E.html@@@1.1.2.1.3 Loqical Link Control and adaptation Protocal (L2CAP)@@@Defines the interface for the BLE L2CAP functions provided by the BLE Library. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-0AFDBD9F-B4D4-4720-A48B-A53D00F1DBEC.html@@@1.1.2.1.2.3.26 GATTS_Attribute_T@@@typedef struct GATTS_Attribute_T { uint8_t *p_uuid; uint8_t *p_value; uint16_t *p_len; uint16_t maxLen; uint8_t settings; uint8_t permissions; } GATTS_Attribute_T; Structure representing a GATT...","GUID-0B3A03D9-F92B-4EA0-A60D-CF204F649C97.html@@@1.1.2.2.3.4.5 BLE_DD_ServiceDiscoveryRegister@@@uint16_t BLE_DD_ServiceDiscoveryRegister (BLE_DD_DiscSvc_T *p_discSvc); Registers a specific service with the database discovery module. The service discovery process will be initiated by the module...","GUID-0B5B8D98-C91A-4CFF-ABFA-245F9ED08A70.html@@@1.1.2.3.4 Microchip Over the Air (OTA) Profile@@@Provides the interface for the BLE OTA Profile. See Microchip OTA Profile in detail. Microchip OTA Profile Client Role Microchip OTA Profile Server Role Message Sequence Chart...","GUID-0B73836C-FCF1-4B96-8146-4F244D80B603.html@@@1.1.2.3.2.2.4 Functions@@@BLE_ANPS_SetSuppNewCat Set new alert category. BLE_ANPS_EventRegister Register BLE Alert Notification profile callback. BLE_ANPS_Init Initialize BLE Alert Notification Profile...","GUID-0B938EFE-3C65-4A9F-8AE7-6803552927F5.html@@@1.1.2.3.2.1.1.1 ANPC category identifiers@@@#define BLE_ANPC_CAT_ID_SIMPLE_ALERT ( 0x00 ) #define BLE_ANPC_CAT_ID_EMAIL ( 0x01 ) #define BLE_ANPC_CAT_ID_NEWS ( 0x02 ) #define BLE_ANPC_CAT_ID_CALL ( 0x03 ) #define BLE_ANPC_CAT_ID_MISSED_CALL (...","GUID-0C50046A-98EA-4DA8-9171-8A060D2F890B.html@@@1.1.2.3 BLE Profile@@@Apple Notification Center Service (ANCS) Alert Notification Profile (ANP) HID Over GATT Profile (HOGP) Microchip Over The Air Profile Proximity Profile (PXP) Transparent Credit Based Profile (TRCBP)...","GUID-0C6C7426-F767-4A6D-BE6E-2F4FF9498815.html@@@1.1.2.2.3.5.4 Database Discovery with BLE_SCM in Service Change Scenarios@@@Example demonstrating receiving a service change indication from a peer. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating receiving a service change indication from a peer...","GUID-0C7AD80F-7B39-4B25-8126-08D3A31B9130.html@@@1.1.2.1.1.3.3 BLE_GAP_AdvParams_T@@@typedef struct BLE_GAP_AdvParams_T { uint16_t intervalMin; uint16_t intervalMax; uint8_t type; BLE_GAP_Addr_T peerAddr; uint8_t advChannelMap; uint8_t filterPolicy; } BLE_GAP_AdvParams_T; Structure...","GUID-0CA230D1-795A-4A98-82AE-02C8D2C32481.html@@@1.1.2.1.2.3.18 GATT_EvtServiceChange_T@@@typedef struct GATT_EvtServiceChange_T { uint16_t connHandle; uint8_t serviceChange; } GATT_EvtServiceChange_T; Structure for GATTS_EVT_SERVICE_CHANGE event. Field Description connHandle Connection...","GUID-0CAF2DCC-FCF2-45C9-AAAA-768466FEDC89.html@@@1.1.2.1.6.1 Defines@@@Bluetooth address length Defines the length of a Bluetooth device address. RF suspend status Defines the RF suspend status indicating if the RF can be suspended and under what conditions. Trace level...","GUID-0CDC457D-EAA3-48B9-AC02-2BEA92E23B79.html@@@2.1.4.5.4 Firmware Update Start Operation@@@This procedure is used by OTA Client when it attempts to request OTA Server to start OTA firmware update process. The OTA Client shall write the OTACP Firmware Update Start opcode to the OTACP with...","GUID-0CF7CA02-0403-486E-94AF-6D705CAB7C86.html@@@1.1.2.3.1.1.1.1 ANCS error codes@@@#define ANCS_ERRCODE_UNKNOWN_COMMAND 0xA0 #define ANCS_ERRCODE_INVALID_COMMAND 0xA1 #define ANCS_ERRCODE_INVALID_PARAMETER 0xA2 #define ANCS_ERRCODE_ACTION_FAILED 0xA3 Defines error code for ANCS...","GUID-0D00E7E9-2E51-4440-9417-8083682DFD7F.html@@@1.1.2.1.2.1.21 UUID definitions@@@#define UUID_PRIMARY_SERVICE 0x2800 #define UUID_SECONDARY_SERVICE 0x2801 #define UUID_INCLUDE 0x2802 #define UUID_CHARACTERISTIC 0x2803 #define UUID_DESCRIPTOR_CHAR_EXT_PROP 0x2900 #define...","GUID-0D831528-B2BE-42F9-9185-11F8F17DC4E1.html@@@1.1.2.1.2.1.2 ATT opcodes@@@#define ATT_ERROR_RSP 0x01 #define ATT_EXCHANGE_MTU_REQ 0x02 #define ATT_EXCHANGE_MTU_RSP 0x03 #define ATT_FIND_INFORMATION_REQ 0x04 #define ATT_FIND_INFORMATION_RSP 0x05 #define...","GUID-0DD15562-7238-4258-9EC1-3BB5E98AFE7F.html@@@1.1.2.3.2.1.3.6 BLE_ANPC_EventField_T@@@typedef union { BLE_ANPC_EvtDiscComplete_T evtDiscComplete; BLE_ANPC_EvtSuppNewAlertCatInd_T evtSuppNewAlertCatInd; BLE_ANPC_EvtSuppUnreadAlertCatInd_T evtSuppUnreadAlertCatInd...","GUID-0E52EE3B-19EF-4C37-A7F0-9900A2E68C1B.html@@@2.4.4.2 Firmware Update Request operation@@@When the Firmware Update Request opcode is written to the OTACP and an error condition does not occur, the Server shall start the firmware update procedure. The format of the Firmware Update Request...","GUID-0E755529-4FD2-4252-8598-8EDF707DDEC5.html@@@2.6.1 Introduction@@@The Transparent Credit Based Service (TRCBS) is used for Transparent Credit Based Profile (TRCBP) to establish one or more LE L2CAP connection oriented channels that intended for higher layer...","GUID-0E8B25A7-B7BA-45F1-B803-C9EC0FEEC359.html@@@1.1.2.1.6.4.5 BT_SYS_ErrRegister@@@void BT_SYS_ErrRegister (BT_SYS_ErrCb_T errHandler); Register a callback function for Bluetooth system error events. Parameter Description [in] errHandler The callback function to handle Bluetooth...","GUID-0F684465-9912-4A60-97A0-77569BD92858.html@@@1.1.2.1.1.1.3 Advertising channels@@@#define BLE_GAP_ADV_CHANNEL_37 0x01 #define BLE_GAP_ADV_CHANNEL_38 0x02 #define BLE_GAP_ADV_CHANNEL_39 0x04 #define BLE_GAP_ADV_CHANNEL_ALL 0x07 Defines the advertising channel indices that can be...","GUID-0F7C8455-8DC4-4A25-ADB0-9DD7FBEEB3CA.html@@@1.1.2.1.1.1.31 Maximum filter accept list size@@@#define BLE_GAP_MAX_FILTER_ACCEPT_LIST_NUM 0x08 Defines the maximum size of the filter accept list. Macro Description BLE_GAP_MAX_FILTER_ACCEPT_LIST_NUM Maximum size of the filter accept list...","GUID-0FB221C2-FB41-4EB7-BED4-E45E7FE9B427.html@@@1.1.2.1.4.5.3 SMP LESC Pairing in the GAP Central Role Procedure@@@Example demonstrating SMP LESC Pairing in the GAP central role using the &quot;Just Works&quot; method Example demonstrating SMP LESC Pairing in the GAP central role with Passkey Entry, where the...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-10320544-EB80-4C42-B5B8-AF9FC5916257.html@@@1.1.2.1.4.5.1 SMP Legacy Pairing in The GAP Central Role Procedure@@@Example demonstrating SMP Legacy Pairing in the GAP central role using the &quot;Just Works&quot; method Example demonstrating SMP Legacy Pairing in the GAP central role with Passkey Entry, where the...","GUID-1073D44C-6F01-4016-8E1F-59EE4C55C52E.html@@@1.1.2.1.4.1.5 Pairing failure reasons@@@#define BLE_SMP_REASON_PASSKEY_ENTRY_FAILED 0x01 #define BLE_SMP_REASON_OOB_NOT_AVAILABLE 0x02 #define BLE_SMP_REASON_AUTH_REQ 0x03 #define BLE_SMP_REASON_CONFIRM_VALUE_FAILED 0x04 #define...","GUID-107491C7-37B9-42E6-B701-7B25D66710CF.html@@@1.1.2.2.2.3.1 BLE_LOG_EventRegister@@@void BLE_LOG_EventRegister (BLE_LOG_EventCb_T eventCb); Registers a callback function for BLE logging events. This function allows a client to register a callback that will be invoked when a BLE...","GUID-10AE70EE-C721-45B5-A333-90C47B2DAFA3.html@@@1.1.2.1.2.3.36 GATTS_Service_T@@@typedef struct GATTS_Service_T { struct GATTS_Service_T *p_next; GATTS_Attribute_T *p_attrList; GATTS_CccdSetting_T const *p_cccdSetting; uint16_t startHandle; uint16_t endHandle; uint8_t cccdNumber...","GUID-10E27B76-DD45-47C2-B147-705EA1EC3185.html@@@1.1.2.1.1.3.43 BLE_GAP_LocalPrivacyParams_T@@@typedef struct BLE_GAP_LocalPrivacyParams_T { uint8_t privacyAddrType; uint16_t addrTimeout; uint8_t localIrk[ 16 ]; } BLE_GAP_LocalPrivacyParams_T; Structure for configuring privacy parameters. Field...","GUID-113381EE-0E1D-4804-85DA-86E0583BB3FA.html@@@1.1.2.3.6.1.4.10 BLE_TRCBPS_SendVendorCommand@@@uint16_t BLE_TRCBPS_SendVendorCommand (uint16_t connHandle, uint8_t cmdId, uint16_t len, uint8_t *p_payload); Send a vendor-specific command through the BLE TRCBP Control pipe. Parameter Description...","GUID-1162ABF9-6321-488C-990D-4DF90A24C1BA.html@@@1.1.2.2.3.4 Functions@@@BLE_DD_BleEventHandler Handles BLE events by passing them to the BLE Device Discovery (BLE_DD) module. BLE_DD_EventRegister Registers a callback for BLE Device Discovery (BLE_DD) events. BLE_DD_Init...","GUID-11B4AAF8-7B4B-4886-BF77-75434A49D288.html@@@2.1.4.2 Service Discovery@@@This section defines service discovery procedures for the OTA role. The OTA Client shall use either the GATT Discover All Primary Services sub-procedure or the GATT Discover Primary Services by...","GUID-11DE66E3-51F5-4087-A40B-D0F4C79BD19D.html@@@1.1.2.1.2.4.15 GATTS_EncDataKeyMatlRsp@@@uint16_t GATTS_EncDataKeyMatlRsp (uint16_t connHandle, uint8_t *p_key, uint8_t *p_iv); Responds to a GATT client&apos;s request for encrypted data key material. This function should be called upon...","GUID-11DE66E3-51F5-4087-A40B-D0F4C79BD19D_2.html@@@1.1.2.1.2.4.29 GATTS_EncDataKeyMatlRsp@@@uint16_t GATTS_EncDataKeyMatlRsp (uint16_t connHandle, uint8_t *p_key, uint8_t *p_iv); Responds to a GATT client&apos;s request for encrypted data key material. This function should be called upon...","GUID-11F607B9-DF00-4A77-B31A-5B7F57E1B990.html@@@1.1.2.1.7.3.4 BLE_DTM_Init@@@uint16_t BLE_DTM_Init ( void ); Initializes the BLE Directed Test Mode (DTM) module. Return value Description MBA_RES_SUCCESS Successfully initializes the BLE DTM module. MBA_RES_OOM Internal memory...","GUID-1232F05F-A3FA-49C3-B525-365832E44FAB.html@@@2.2.7 Acronyms and Abbreviations@@@Table 7.1: Abbreviations and Acronyms Acronyms and Abbreviations Meaning AD Advertising Data GATT Generic Attribute Profile LE Low Energy MTU Maximum Transmission Unit TRSP Transparent Profile TRS...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-128EAAC3-2B0D-4B2D-90A4-052368A15F4F.html@@@2.4.3.4.1 Fragmented_Image Field@@@The fragmented image field is used for client to distribute firmware image to server. This field is only valid after client issues Firmware Update Start procedure. The maximum length of the...","GUID-129F2168-EE63-44F7-AD24-D798CDFA0F66.html@@@1.1.2.1.7.1.3 Receiver PHY types@@@#define BLE_DTM_RX_1M 0x01 #define BLE_DTM_RX_2M 0x02 #define BLE_DTM_RX_CODED 0x03 Defines the PHY types for the receiver during DTM. Macro Description BLE_DTM_RX_1M Receiver uses the LE 1M PHY...","GUID-12BB813E-0FD6-4C2D-8EE2-BCA177FFD097.html@@@1.1.2.3.7.2.3.5 BLE_TRSPS_EvtCtrlStatus_T@@@typedef struct BLE_TRSPS_EvtCtrlStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPS_EvtCtrlStatus_T; Structure for the BLE_TRSPS_EVT_CTRL_STATUS event. Field Description connHandle Connection...","GUID-12EECC6A-DD30-4762-BAA9-05CFF4334FE2.html@@@1.1.2.3.7.1.4.5 BLE_TRSPC_GetDataLength@@@void BLE_TRSPC_GetDataLength (uint16_t connHandle, uint16_t *p_dataLength); Retrieves the length of data queued. Parameter Description [in] connHandle Connection handle associated with the queued...","GUID-134A7276-1E04-49FA-AEA7-157E9F30EFAF.html@@@1.1.2.3.4.2.4.1 BLE_OTAPS_EventRegister@@@void BLE_OTAPS_EventRegister (BLE_OTAPS_EventCb_T bleOtapsRoutine); Registers a callback function for BLE OTA profile events. Parameter Description [in] bleOtapsRoutine Callback function to handle BLE...","GUID-1375DB5C-696A-4BDE-8DF5-B112C11DA1DC.html@@@1.1.2.2.1.5.1 BLE_DM Pairing Procedure@@@Example demonstrating the main flow of BLE_DM security. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating BLE_DM Security: When disabled, BLE_DM automatically accepts and responds to pairing and security requests. \u00A0\u00A0\u00A0\u00A0...","GUID-13A6B45F-81F1-42A4-8FEC-D1FD6E073882.html@@@1.1.2.1.1.4.52 BLE_GAP_SetExtScanningParams@@@uint16_t BLE_GAP_SetExtScanningParams (uint8_t filterPolicy, BLE_GAP_ExtScanningPhy_T *p_extScanPhy); Sets the extended scan parameters for advertising physical channels. This API is part of the...","GUID-1427E5A2-3559-4624-97D1-07302093C407.html@@@2.3.4.4.1 L2PSM Characteristic@@@Before L2CAP CoC connection establishment, Client may get L2CAP PSM values for the TRCBP Data Pipe by reading this characteristic from Server role...","GUID-142B64CC-DCC9-4EB3-8310-78A1489BB56A.html@@@1.1.2.2.1.4.2 BLE_DM_Config@@@uint16_t BLE_DM_Config (BLE_DM_Config_T *p_config); Configures the BLE_DM module. Parameter Description [in] p_config Pointer to the configuration structure of type BLE_DM_Config_T . Return value...","GUID-14376FCF-8BEC-4107-9B9E-3FA061A2728C.html@@@1.1.2.1.3.3.1 BLE_L2CAP_Event_T@@@typedef struct BLE_L2CAP_Event_T { BLE_L2CAP_EventId_T eventId; BLE_L2CAP_EventField_T eventField; } BLE_L2CAP_Event_T; BLE L2CAP callback event structure. Field Description eventId Identifier for the...","GUID-149FD3A2-34C1-4737-822B-EA8201B7E0FA.html@@@1.1.2.3.3.1.2.8 BLE_HOGPS_EvtReportModeEnter_T@@@typedef struct BLE_HOGPS_EvtReportModeEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtReportModeEnter_T; Structure for BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND event. Field Description connHandle The...","GUID-14A52760-9064-4A41-BAAE-AADCEF1BE4A4.html@@@1.1.2.3.4.1.1.3 OTAPC firmware feature definitions@@@#define BLE_OTAPC_FW_FEATURE_MASK1 ( 1U &lt;&lt; 0U ) Defines extended features supported by the firmware. Macro Description BLE_OTAPC_FW_FEATURE_MASK1 Bitmask for supported feature set 1...","GUID-14B8CE18-5E39-45E9-B31C-E34937BD51D3.html@@@1.1.2.1.8 Host Controller Interface (HCI)@@@This module defines the HCI interface to the BLE Library Defines Enumerations Structures Functions...","GUID-1521780D-C191-4267-8309-126E9F995179.html@@@1.1.2.3.1.1.5 Message Sequence Chart@@@Example demonstrating the process of receiving ANCS notifications. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the retrieval of notification attributes...","GUID-153239C5-D97F-41B6-95AD-467048F32CB7.html@@@1.1.2.1.3.1.5 L2CAP maximum SDU size@@@#define BLE_L2CAP_MAX_SDU_SIZE 739 Defines the maximum size for Service Data Units (SDU) in bytes. Macro Description BLE_L2CAP_MAX_SDU_SIZE Maximum size of a L2CAP SDU in bytes...","GUID-16053FDF-B5AA-4C9A-8C41-746574C6AE97.html@@@1.1.2.1.3.3.9 BLE_L2CAP_EvtConnParamUpdateRsp_T@@@typedef struct BLE_L2CAP_EvtConnParamUpdateRsp_T { uint16_t connHandle; uint16_t result; } BLE_L2CAP_EvtConnParamUpdateRsp_T; Structure for BLE_L2CAP_EVT_CONN_PARA_UPD_RSP event. Field Description...","GUID-161C9C9B-EA20-4745-A79F-20421EDCB232.html@@@1.1.2.1.2.5.13 Reading Characteristic Values by UUID@@@Example demonstrating how read characteristic value by UUID...","GUID-164E3098-A072-414C-A1EF-36129EC37BFB.html@@@1.1.2.1.4.1.4 Keypress notification types@@@#define BLE_SMP_KEYPRESS_STARTED 0x00 #define BLE_SMP_KEYPRESS_DIGIT_ENTERED 0x01 #define BLE_SMP_KEYPRESS_DIGIT_ERASED 0x02 #define BLE_SMP_KEYPRESS_CLEARED 0x03 #define BLE_SMP_KEYPRESS_COMPLETED...","GUID-16580DD0-FC8A-41B0-9975-2277329CF69E.html@@@1.1.2.3.4.1.3.11 BLE_OTAPC_Req_T@@@typedef struct BLE_OTAPC_Req_T { uint32_t fwImageSize; uint32_t fwImageId; uint32_t fwImageVer; uint8_t fwImageEnc; uint16_t fwImageChksum; uint8_t fwImageFileType; uint16_t fwImageCrc16; }...","GUID-16D4076F-169C-4C35-9008-A76745701905.html@@@1.1.2.1.2.1.10 GATT client configuration definitions@@@#define GATTC_CONFIG_NONE 0x0000 #define GATTC_CONFIG_MANUAL_CONFIRMATION 0x0001 Defines GATT Client configuration bits. Macro Description GATTC_CONFIG_NONE No configuration for any supported...","GUID-1719B91A-B0A1-40F3-BC49-9A2B981F69DB.html@@@1.1.2.2.3.5.3 Configure Database Discovery Function and Disable It at Runtime@@@Example demonstrating wow to enable the database discovery function in the GAP central role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating wow to enable the database discovery function in the GAP peripheral role...","GUID-17311324-2111-4AC8-B0D0-F9D932319C6A.html@@@1.1.2.3.7.1.1.3 TRSPC maximum connection number@@@#define BLE_TRSPC_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR Defines the maximum number of concurrent connections. Macro Description BLE_TRSPC_MAX_CONN_NBR Maximum number of concurrent connections supported by...","GUID-174B1ACC-C253-4BF9-B0CB-6C4A3E7C63EA.html@@@1.1.2.1.1.4.31 BLE_GAP_ReadTxPowerLevel@@@uint16_t BLE_GAP_ReadTxPowerLevel (uint16_t connHandle, uint8_t phy, int8_t *p_txPower, int8_t *p_txPowerMax); Reads the current and maximum transmit power levels for a specific LE connection handle...","GUID-179AF0F2-85E7-462E-A54B-F4983FD3D7DA.html@@@1.1.2.1.5 STACK@@@Defines the interface for the STACK functions provided by the BLE Library. Defines Enumerations Structures Functions...","GUID-17E71300-054F-4815-AD10-6CFCF73EFA94.html@@@1.1.2.1.4.4.6 BLE_SMP_GenerateScOobData@@@uint16_t BLE_SMP_GenerateScOobData ( void ); Generates OOB data for the next LE Secure Connections pairing process. This function should be called before initiating the pairing process and the...","GUID-17F8991D-014C-4C71-8E6F-F0B51108EF67.html@@@1.1.1.4.1 PTA Introduction@@@PIC32CX-BZs provide the Three-Wire Packet Traffic Arbitration (PTA) WLAN coexistence solution. This coexistence solution contains three pins that exchange coordinating information between BT and WLAN...","GUID-17FDF15A-DB58-4272-B92E-80C99AE7E11F.html@@@1.1.2.1.2.3.35 GATTS_SendWriteRespParams_T@@@typedef struct GATTS_SendWriteRespParams_T { uint8_t responseType; uint16_t attrHandle; uint16_t valueOffset; uint16_t writeLength; uint8_t writeValue[BLE_ATT_MAX_MTU_LEN...","GUID-18303686-9DAC-430F-9AB6-DC4E4672C0F2.html@@@1.1.2.1.2.3.34 GATTS_SendReadRespParams_T@@@typedef struct GATTS_SendReadRespParams_T { uint16_t attrLength; uint8_t responseType; uint8_t attrValue[BLE_ATT_MAX_MTU_LEN - ATT_READ_RESP_HEADER_SIZE]; } GATTS_SendReadRespParams_T; Structure for...","GUID-184B99E4-8C26-4312-8593-3EE58F9E842B.html@@@1.1.2.1.4.2.1 BLE_SMP_EventId_T@@@typedef enum BLE_SMP_EventId_T { BLE_SMP_EVT_PAIRING_COMPLETE, BLE_SMP_EVT_SECURITY_REQUEST, BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST, BLE_SMP_EVT_INPUT_PASSKEY_REQUEST...","GUID-188D7531-EB94-4762-B5B9-2619FF823B7B.html@@@1.1.2.2.4.1 Defines@@@Defines the number of characteristics to be discovered in a GATT service. Defines the number of characteristics to be discovered in a GATT service...","GUID-18A0FFA3-8906-4809-AEEA-F669EAE8E93E.html@@@1.1.2.2.1.3.2 BLE_DM_ConnConfig_T@@@typedef struct BLE_DM_ConnConfig_T { uint16_t minAcceptConnInterval; uint16_t maxAcceptConnInterval; uint16_t minAcceptPeripheralLatency; uint16_t maxAcceptPeripheralLatency; bool...","GUID-18A9DADE-E30C-443A-9D82-4219BC843237.html@@@1.1.2.3.5.1.2.2 BLE_PXPM_EventId_T@@@typedef enum BLE_PXPM_EventId_T { BLE_PXPM_EVT_DISC_COMPLETE_IND = 0x00 , BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND, BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND, BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND...","GUID-18E2A0E8-90D9-49E6-B399-5FE46A5DE470.html@@@1.1.2.1.2.5.17 Handling Handle Value Confirmation@@@Example demonstrating how the application handles Handle Value Confirmation. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how BLE library handles Handle Value Confirmation...","GUID-1903F907-ED4A-4C3D-99C0-77AB3EAF7986.html@@@1.1.2.1.1.4.16 BLE_GAP_ExtConnCentralInit@@@uint16_t BLE_GAP_ExtConnCentralInit ( void ); Initializes BLE GAP extended connection central module. BLE_GAP_ConnCentralInit is also required for this module enabling. Return value Description...","GUID-19484883-2CB0-4497-A6CF-3A4254BBF654.html@@@1.1.2.3.4.1.2.1 BLE_OTAPC_EventId_T@@@typedef enum BLE_OTAPC_EventId_T { BLE_OTAPC_EVT_SEC_REQ = 0x00 , BLE_OTAPC_EVT_CONNECT_IND, BLE_OTAPC_EVT_FEATURE_IND, BLE_OTAPC_EVT_REQ_RSP_IND, BLE_OTAPC_EVT_START_RSP_IND...","GUID-194CF211-8A26-474E-BB0E-3592E67647AF.html@@@1.1.2.1.1.3.41 BLE_GAP_ExtScanningParams_T@@@typedef struct BLE_GAP_ExtScanningParams_T { bool enable; uint8_t type; uint16_t interval; uint16_t window; uint8_t disChannel; } BLE_GAP_ExtScanningParams_T; Structure for configuring extended scan...","GUID-1988C6A2-15F9-4B33-BD28-738955C58145.html@@@2.4.3.5 OTA Control Point@@@When written by a client, the OTA Control Point characteristic is an 8-bit enumerated value (known as the opcode) followed by zero or more parameter octets. The opcode is used by the server to...","GUID-19CCDCEA-439A-46A6-8D8D-9CD06ABD9EFA.html@@@1.1.2.1.2.3.5 GATT_EvtClientFeatureChange_T@@@typedef struct GATT_EvtClientFeatureChange_T { uint16_t connHandle; uint8_t clientSupportFeature; } GATT_EvtClientFeatureChange_T; Structure for GATTS_EVT_CLIENT_FEATURE_CHANGE event. Field...","GUID-19DD8E02-2F17-4294-AD2C-97BEB9E9F804.html@@@1.1.2.3.2.1.2.1 BLE_ANPC_EventId_T@@@typedef enum BLE_ANPC_EventId_T { BLE_ANPC_EVT_DISC_COMPLETE_IND = 0x00 , BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND, BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND, BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND...","GUID-1A0D03AA-448E-4714-BBF8-67A0FC83B584.html@@@1.1.2.3.6.1.2 Enums@@@BLE_TRCBPS_ChanType_T Enumeration for BLE Transparent Credit Based Profile channel types. BLE_TRCBPS_EventId_T Enumeration for BLE Transparent Credit Based Profile callback event identifiers...","GUID-1A0E77CB-C2BC-4B7F-AA7C-AF8767018F80.html@@@2.4.3.3 OTA Data@@@The OTA Data characteristic allow client to send specified data to Server. Client shall enable the Client Characteristic Configuration Descriptor (CCCD) of OTA Data on Server before sending the...","GUID-1A263F12-9CF9-46EC-B3DB-F537EC4BF530.html@@@1.1.2.3.2.1.3.4 BLE_ANPC_Event_T@@@typedef struct BLE_ANPC_Event_T { BLE_ANPC_EventId_T eventId; BLE_ANPC_EventField_T eventField; }BLE_ANPC_Event_T; BLE ANPC callback event structure. Field Description eventId Identifier for the type...","GUID-1A7E8B4B-B471-43E1-BC73-81D705900D18.html@@@1.1.2.1.1.5 Message Sequence Chart@@@GAP Advertising/Extended Advertising Procedure GAP Scanning/Extended Scanning Procedure GAP Connection Creation Procedure GAP Connection Parameter Update Procedure GAP PHY Update Procedure GAP...","GUID-1AB814D9-448B-4FAE-B045-FFC84A848B3E.html@@@1.1.2.1.2.3.27 GATTS_BondingParams_T@@@typedef struct GATTS_BondingParams_T { uint8_t serviceChange; uint8_t clientSupportFeature; } GATTS_BondingParams_T; Structure for bonding information. Field Description serviceChange Indicates the...","GUID-1AC20773-BED7-4578-99C8-24538CAD6930.html@@@1.1.2.1.3.4.2 L2CAP Connection Parameter Update Procedure@@@Example demonstrating L2CAP Connection Parameter Update procedure for a peripheral device Example demonstrating L2CAP Connection Parameter Update procedure for a central device...","GUID-1AEC2D5B-259D-4936-A3F0-D7508A50890A.html@@@1.1.2.2.2.1 Defines@@@BLE log types Defines various BLE log types used for debugging and tracing BLE communication...","GUID-1AF16EBB-341A-419F-96DB-BC075A5E9F67.html@@@1.1.2.3.3.1.3.10 BLE_HOGPS_SetBootKeyboardInputReport@@@uint16_t BLE_HOGPS_SetBootKeyboardInputReport (uint8_t *p_keyCodeArray); Sets the HID boot keyboard input report. This function updates the input report for a boot keyboard with the specified key...","GUID-1B07A125-33F8-4EF9-BE98-119067740339.html@@@1.1.2.1.1.1.8 Advertising types@@@#define BLE_GAP_ADV_TYPE_ADV_IND 0x00 #define BLE_GAP_ADV_TYPE_ADV_DIRECT_IND 0x01 #define BLE_GAP_ADV_TYPE_ADV_SCAN_IND 0x02 #define BLE_GAP_ADV_TYPE_ADV_NONCONN_IND 0x03 #define...","GUID-1B0A3A26-249E-4D66-B3AB-6F61171EEE21.html@@@1.1.2.1.4.5.2 SMP Legacy Pairing in the GAP Peripheral Role Procedure@@@Example demonstrating SMP Legacy Pairing in the GAP peripheral role using the &quot;Just Works&quot; method Example demonstrating SMP Legacy Pairing in the GAP peripheral role with Passkey Entry...","GUID-1B3DC485-D6BD-463C-808D-98104A5FC067.html@@@1.1.2.3.4.2.4.2 BLE_OTAPS_Init@@@uint16_t BLE_OTAPS_Init ( void ); Initializes the BLE Over-The-Air Programming Service (OTAPS) profile and service. Return value Description MBA_RES_SUCCESS Initialization successful...","GUID-1B546973-9547-485A-9AD8-E0A3F8F9A46A.html@@@1.1.2.1.7.3.6 BLE_DTM_StopCwTest@@@uint16_t BLE_DTM_StopCwTest ( void ); Stops the Continuous Wave (CW) test. BLE_DTM_Init must be called before using this function. Return value Description MBA_RES_SUCCESS Successfully stops the CW...","GUID-1B5891A3-72E1-45B4-B381-3432871015BA.html@@@1.1.2.3.5.2.1 Defines@@@Supported service The definition of supported service...","GUID-1B66AA6E-254B-4E4C-B70C-AB4C9AC5D7DD.html@@@1.1.2.1.4.4.2 BLE_SMP_AcceptPairingRequest@@@uint16_t BLE_SMP_AcceptPairingRequest (uint16_t connHandle); Accepts a pairing request. This function should be called to proceed with the pairing process when the BLE_SMP_EVT_PAIRING_REQUEST event is...","GUID-1B80B52B-F8E4-4C9D-8BD2-1E412C48F5EB.html@@@1.1.2.2.3.2 Enums@@@BLE_DD_EventId_T Enumeration of BLE Device Discovery (BLE_DD) module event identifiers...","GUID-1C1984A2-C814-4E27-B9C3-835DE742088B.html@@@1.1.2.1.1.3.53 BLE_GAP_PathLossReportingParams_T@@@typedef struct BLE_GAP_PathLossReportingParams_T { uint16_t connHandle; uint8_t highThreshold; uint8_t highHysteresis; uint8_t lowThreshold; uint8_t lowHysteresis; uint16_t minTimeSpent; }...","GUID-1C1D97EE-D905-4F27-844E-A72C4F5E96E0.html@@@2.5.3.3.1 Transparent Control Point Procedure Requirements@@@Enter a short description of your topic here (optional)...","GUID-1C49F088-356B-4200-B73D-85A13F9AA713.html@@@1.1.2.1.1.4.58 BLE_GAP_SetPathLossReportingParams@@@uint16_t BLE_GAP_SetPathLossReportingParams (BLE_GAP_PathLossReportingParams_T *p_params); Sets the path loss threshold reporting parameters for a specific connection. This command should be used only...","GUID-1C6AEFAF-3618-42BB-9C67-16A440F4B724.html@@@1.1.2.2.1.2.2 BLE_DM_SecurityProc_T@@@typedef enum BLE_DM_SecurityProc_T { DM_SECURITY_PROC_PAIRING, DM_SECURITY_PROC_ENCRYPTION, } BLE_DM_SecurityProc_T; Enumeration for security processes in BLE Device Manager. Enumerator Description...","GUID-1CA8B302-0ADA-4F74-A94A-6D0A15923F76.html@@@1.1.2.2.1.4.3 BLE_DM_ConnectionParameterUpdate@@@uint16_t BLE_DM_ConnectionParameterUpdate (uint16_t connHandle, BLE_DM_ConnParamUpdate_T *p_params); Requests a change in the connection parameters for a specific connection. Parameter Description...","GUID-1CB70BB3-F67A-48FD-95FF-FB9B048027A3.html@@@1.1.2.1.4.4.14 BLE_SMP_RejectPairingRequest@@@uint16_t BLE_SMP_RejectPairingRequest (uint16_t connHandle); Rejects a pairing request. This function should be called to terminate the pairing process when the BLE_SMP_EVT_PAIRING_REQUEST event is...","GUID-1D08947B-0BCB-4916-B0E9-C31CE2E86CA9.html@@@1.1.2.2.3.4.2 BLE_DD_EventRegister@@@void BLE_DD_EventRegister (BLE_DD_EventCb_T eventCb); Registers a callback for BLE Device Discovery (BLE_DD) events. This function should be called during the application initialization process...","GUID-1DBC06EF-9E94-4AA9-879C-6949FF021C1D.html@@@1.1.2.3.2.1.4.4 BLE_ANPC_EnableUnreadAlertNtfy@@@uint16_t BLE_ANPC_EnableUnreadAlertNtfy (uint16_t connHandle, bool enable); Enables or disables notifications for unread alerts. Parameter Description [in] connHandle The connection handle to identify...","GUID-1DE7F398-A485-4143-964B-2CB21E5F4B26.html@@@1 BLE Software@@@BLE software is compatible with BLE protocol developed by Microchip. BLE Software contains four major blocks. BLE Stack BLE Stack plays an important role in BLE Software, it is the core of BLE...","GUID-1DFE2FDD-E653-4526-ACDB-7A88E81F5E8A.html@@@1.1.2.1.1.1.21 Extended scan window@@@#define BLE_GAP_EXT_SCAN_WINDOW_MIN 0x0004 #define BLE_GAP_EXT_SCAN_WINDOW_MAX 0xFFFF Defines the range of LE extended scan windows. (Unit: 0.625 ms) Macro Description BLE_GAP_EXT_SCAN_WINDOW_MIN...","GUID-1E06207D-D195-447A-91D4-213272CEE1D9.html@@@2.4.5 Acronyms And Abbreviations@@@Table 5.1: Acronyms and Abbreviations Acronyms and Abbreviations Meaning GATT Generic Attribute Profile LE Low Energy OTA Over the air OTAP OTA Profile OTAS OTA Service OTACP Over the Air Firmware...","GUID-1E32B3C0-CBE3-45D7-AECC-C13C97F155B1.html@@@1.1.2.2.1.3.5 BLE_DM_EventCb_T@@@typedef void (*BLE_DM_EventCb_T)(BLE_DM_Event_T *p_event); Callback type for BLE_DM events. This callback function is used to send BLE_DM events to the application...","GUID-1EE45FFB-A0D6-49C7-AEA2-E3F39359A6C3.html@@@1.1.2.1.1.4.74 BLE_GAP_UpdateConnParam@@@uint16_t BLE_GAP_UpdateConnParam (uint16_t connHandle, BLE_GAP_ConnParams_T *p_connParams); Updates connection parameters for an existing connection. This command should only be used after the...","GUID-1F0AE18A-E74E-4D8D-B299-2F5FDB72E2FA.html@@@1.1.2.3.6.2.2 Transparent Credit Based Profile Connection Establishment Procedure@@@Example demonstrating the client-initiated opening of the Transparent Credit Based Profile data pipe. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the client-initiated opening of the Transparent Credit Based...","GUID-1F181859-176C-49AB-A034-34A29131F8ED.html@@@2.6.3.2.1 Transparent Credit Based Control Point Procedure Requirements@@@Table 3.2 shows the opcode definition of TRCBCP characteristic. Range from 0x00 to 0xFF are reserved for higher layer specification application. Table 3.2: Definition of Op Code in TRCBCP...","GUID-1F6AF334-EDDF-4C37-8BAE-9B246FD37EE5.html@@@1.1 Wireless BLE@@@This page has the necessary supporting documentation to get started with application development on PIC32CX-BZ2, PIC32CX-BZ3, WBZ45x and WBZ35x Family of devices. BLE Software Specification BLE...","GUID-1F8ADCCF-8FAB-4D30-9F13-8BA3CDB3DBF7.html@@@1.1.2.2.2.3.2 BLE_LOG_StackLogHandler@@@void BLE_LOG_StackLogHandler (BT_SYS_LogEvent_T *p_log); Processes BLE stack logs containing HCI traffic information. This function is responsible for handling the debug logs generated by the BLE...","GUID-200D5BDB-30A6-462C-B092-E82E1A440171.html@@@1.1.2.1.1.5.1 GAP Advertising/Extended Advertising Procedure@@@Example demonstrating the initiation of advertising Example demonstrating the modification of advertising data while advertising is enabled Example demonstrating the modification...","GUID-2018830F-4E1F-4A6E-A4F0-A188837FFBAC.html@@@1.1.2.1.1.3.45 BLE_GAP_PeriAdvParams_T@@@typedef struct BLE_GAP_PeriAdvParams_T { uint8_t advHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t properties; } BLE_GAP_PeriAdvParams_T; Structure for configuring periodic advertising...","GUID-20395739-5D78-45FB-B139-7801D98D67FE.html@@@1.1.2.3.5.1.4.6 BLE_PXPM_Init@@@uint16_t BLE_PXPM_Init ( void ); Initializes the BLE Proximity Profile Monitor. Return value Description MBA_RES_SUCCESS Success to initalize BLE PXP monitor. MBA_RES_FAIL Initialization failed...","GUID-204209FF-74E3-48C2-BC77-4D2FC6C0C47B.html@@@1.1.2.1.2.3.12 GATT_EvtProtocolAvailable_T@@@typedef struct GATT_EvtProtocolAvailable_T { uint16_t connHandle; } GATT_EvtProtocolAvailable_T; Structure for GATTC_EVT_PROTOCOL_AVAILABLE or GATTS_EVT_PROTOCOL_AVAILABLE event. Field Description...","GUID-204797D4-B498-42CF-BE13-6FDE10A57A31.html@@@1.1.2.1.1.1.20 Extended scan interval@@@#define BLE_GAP_EXT_SCAN_INTERVAL_MIN 0x0004 #define BLE_GAP_EXT_SCAN_INTERVAL_MAX 0xFFFF Defines the range of LE extended scan intervals. (Unit: 0.625 ms) Macro Description...","GUID-20A8EAE8-A886-4CEF-84C2-5A54D13CEAF8.html@@@2.2.1 Introduction@@@The Transparent Profile (TRSP) defines fundamental requirements to enable higher layer application data exchange between TRSP Client and Server devices that exposes the Transparent Service (TRS) [1]...","GUID-20B87617-46AF-45DE-B452-DCD6D4307740.html@@@1.1.2.1.1.4.49 BLE_GAP_SetExtAdvEnable@@@uint16_t BLE_GAP_SetExtAdvEnable (bool enable, uint8_t numOfSets, BLE_GAP_ExtAdvEnableParams_T *p_advParam); Enables or disables one or more advertising sets. If enable is set to false and numOfSets...","GUID-20D7A93F-D2EE-4938-97BF-D6A7C80873CA.html@@@1.1.2.2.5.2.1.2 Maximum image size@@@#define MW_DFU_MAX_SIZE_FW_IMAGE 507904 Defines the maximum allowable size for a firmware image during Device Firmware Update (DFU). Macro Description MW_DFU_MAX_SIZE_FW_IMAGE Maximum firmware image...","GUID-20EFFBD2-7D3F-40CA-B85C-8FD3202D9933.html@@@1.1.2.1.2.2.1 GATT_EventId_T@@@typedef enum GATT_EventId_T { GATTC_EVT_ERROR_RESP = 0x00U , GATTC_EVT_DISC_PRIM_SERV_RESP, GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP, GATTC_EVT_DISC_CHAR_RESP, GATTC_EVT_DISC_DESC_RESP...","GUID-210D5AC4-E68C-499D-870A-E235F22D39AE.html@@@1.1.2.3.2.2.2 Enums@@@BLE_ANPS_EventId_T Enumeration type of BLE Alert Notification callback events...","GUID-2171A2B0-E0B8-48CF-89AB-0BCB17848D3C.html@@@1.1.2.3.4.2.4.8 BLE_OTAPS_UpdatingResponse@@@uint16_t BLE_OTAPS_UpdatingResponse (bool success); Responds to the peer device after receiving a BLE_OTAPS_EVT_UPDATING_REQ event. The application must handle the update of the fragmented firmware...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-21B371D1-F5A2-4CA1-BCC5-B22D29F0D8A2.html@@@1.1.2.3.7.1.3.6 BLE_TRSPC_EvtReceiveData_T@@@typedef struct BLE_TRSPC_EvtReceiveData_T { uint16_t connHandle; } BLE_TRSPC_EvtReceiveData_T; Structure for the BLE_TRSPC_EVT_RECEIVE_DATA event. Field Description connHandle Connection handle...","GUID-21BDD2E5-0993-4F18-A076-B875949E9A71.html@@@1.1.2.2.4.1.1 Number of discovered characteristics of GATT service@@@#define BLE_SCM_GATT_DISC_CHAR_NUM 0x03 Defines the number of characteristics to be discovered in a GATT service. Macro Description BLE_SCM_GATT_DISC_CHAR_NUM Number of characteristics to be...","GUID-21F5CF45-7448-46DD-A9D5-DBBDF1023B5C.html@@@1.1.2.1.2.1.15 Maximum UUID length definitions@@@#define ATT_MAX_UUID_SIZE ATT_UUID_LENGTH_ 16 Defines the maximum length allowed for UUIDs in the GATT protocol. Macro Description ATT_MAX_UUID_SIZE Maximum size of a UUID in bytes...","GUID-22055442-E74D-4706-811F-48C7A7A8F530.html@@@1.1.2.1.5.4 Functions@@@STACK_EventRegister Registers a callback function for STACK events...","GUID-22476BB9-841E-4ACB-A5B2-23788D26B170.html@@@1.1.2.1.2.4.26 GATTS_SetMinEncKeySize@@@uint16_t GATTS_SetMinEncKeySize (uint8_t svcUuidLength, uint8_t *p_svcUuid, uint8_t minKeySize); Set minimum encryption key length of a service. This function is used to set minimum key size...","GUID-22527805-336F-451A-BDE2-617D77705FD3.html@@@1.1.2.1.6.3.12 BT_SYS_TraceInfo_T@@@typedef struct BT_SYS_TraceInfo_T { uint8_t level; uint8_t componentId; uint8_t eventId; } BT_SYS_TraceInfo_T; Structure for additional information about a trace event. Field Description level Level...","GUID-22957034-8605-4D1E-9DFA-20215807A2E3.html@@@1.1.2.2.1.3.1 BLE_DM_Config_T@@@typedef struct BLE_DM_Config_T { BLE_DM_ConnConfig_T connConfig; bool secAutoAccept; } BLE_DM_Config_T; Structure for configuring connection parameters and security settings. Field Description...","GUID-22E51F9F-5DCD-44AA-A3DF-4E98F49C4D59.html@@@1.1.2.2.4.4.5 BLE_SCM_SetBondedCharInfo@@@void BLE_SCM_SetBondedCharInfo (uint16_t connHandle, BLE_DD_CharInfo_T *p_charInfo); Sets the characteristic handle information for a bonded connection. The application is responsible for caching the...","GUID-22F0200D-B99D-400A-8FF1-542F5DC9C283.html@@@1.1.2.3.2 Alert Notification Profile (ANP)@@@Provides the interface for the BLE Alert Notification Profile v1.0. Alert Notification Profile Client Role Alert Notification Profile Server Role...","GUID-2325B23F-01C7-4753-AA21-69A3D8B4AB1F.html@@@1.1.2.2.1.3.3 BLE_DM_ConnParamUpdate_T@@@typedef struct BLE_DM_ConnParamUpdate_T { uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_DM_ConnParamUpdate_T; Structure for containing information about...","GUID-2332289F-4AD3-4431-A19E-6BC876CE0076.html@@@1.1.2.2.3.1 Defines@@@Characteristic setting Defines the related to characteristic settings during discovery. Maximum register services number Defines the maximum number of services that can be registered in the BLE_DD...","GUID-233FD07E-CD63-4736-929C-F282B999501E.html@@@1.1.2.1.1.1.34 Maximum periodic advertising data length@@@#define BLE_GAP_PERI_ADV_DATA_LEN 1650 Defines the maximum length of periodic advertising data in bytes. Macro Description BLE_GAP_PERI_ADV_DATA_LEN Maximum length of periodic advertising data in...","GUID-23582996-DA5D-4F68-8D81-4A88EC2F19B5.html@@@1.1.2.1.1.4.34 BLE_GAP_RemoveExtAdvSet@@@uint16_t BLE_GAP_RemoveExtAdvSet (uint8_t advHandle); Removes an advertising set. This API is part of the extended advertising feature and is incompatible with legacy advertising APIs. See Categories...","GUID-238354B2-CA7F-4A8F-B3A3-002AB74ACAA8.html@@@1.1.2.1.4.3.1 BLE_SMP_Config_T@@@typedef struct BLE_SMP_Config_T { uint8_t ioCapability; uint8_t authReqFlag; bool oobDataFlag; bool scOnly; bool authPairingRequired; }BLE_SMP_Config_T; Structure for configuring pairing parameters in...","GUID-23B44960-24B6-4762-BC7F-3DC77D3815C5.html@@@1.1.2.1.2.5.15 Writing Characteristic Values@@@Example demonstrating how to write characteristic values. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how to write characteristic values without a response...","GUID-240EECF6-A12C-4740-8D3D-58A894447E78.html@@@1.1.2.3.2.1.1.2 ANPC command definitions@@@#define BLE_ANPC_CMD_ENABLE_NEW_ALERT ( 0x00 ) #define BLE_ANPC_CMD_ENABLE_UNREAD_ALERT_STAT ( 0x01 ) #define BLE_ANPC_CMD_DISABLE_NEW_ALERT ( 0x02 ) #define BLE_ANPC_CMD_DISABLE_UNREAD_ALERT_STAT (...","GUID-24222818-AF73-4625-B0DE-DA2A12765452.html@@@1.1.2.1.1.1.29 Maximum extended advertising data length@@@#define BLE_GAP_EXT_ADV_DATA_LEN 1650 Defines the maximum length of extended advertising data in bytes. Macro Description BLE_GAP_EXT_ADV_DATA_LEN Maximum length of extended advertising data in...","GUID-2447F5F6-10AF-4BA9-A98A-F1CB78AE0C26.html@@@1.1.2.1.1.6.2 TX Power Control Concept@@@The initial RF transmission power level is set to the highest value stored in the OTP (One-Time Programmable) memory. The BLE_GAP_ReadFactoryTxPowerLevel function allows applications to retrieve the...","GUID-24897941-6790-441B-8D4E-59F1D3D620A5.html@@@1.1.2.1.1.3.31 BLE_GAP_EvtRemoteConnParamRequest_T@@@typedef struct BLE_GAP_EvtRemoteConnParamRequest_T { uint16_t connHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_GAP_EvtRemoteConnParamRequest_T...","GUID-24A84FFF-24BE-46BD-99D7-955E6B76AE2A.html@@@2.2.2.1 Roles@@@The profile defines two roles: Transparent Server and Transparent Client. Transparent Server and Transparent Client can transfer data to each other. The Transparent Server shall be a GATT Server. The...","GUID-24AB2D73-94C1-4E18-A7CF-7A11FC28CA23.html@@@1.1.2.2.3.3.5 BLE_DD_DiscInfo_T@@@typedef struct BLE_DD_DiscInfo_T { uint16_t svcStartHandle; uint16_t svcEndHandle; }BLE_DD_DiscInfo_T; Structure for the range of a primary service during discovery. Field Description svcStartHandle...","GUID-24EA5598-FCEE-4072-9B6E-9543D8749FC5.html@@@1.1.1.1 Initializing the BLE Software@@@Before using any BLE Stack relevant API, BLE component must be initialized. It is strongly recommend that BLE component be initialized during system initialization. BLE component only operates with...","GUID-252C22E7-3AF9-417F-8C2F-9E8CE1F09A35.html@@@1.1.2.3.6.1.4.8 BLE_TRCBPS_QueryPsm@@@uint16_t BLE_TRCBPS_QueryPsm (uint16_t *dataPsm); Query the local L2CAP CoC PSM value for the TRCBP Data Channel. Parameter Description [out] dataPsm Pointer to store the PSM of the data channel...","GUID-25A1F34E-8F92-4D84-91C9-CF8C4E314DD4.html@@@2.2.4.4.1 Transparent Up-Link Data (TUD) Characteristic@@@Before Transparent Server sends data to Transparent Client through this attribute handle, the Transparent Client shall configure the Transparent Uplink Characteristic on Transparent Server for...","GUID-25BFECAB-4107-454C-949E-81BD39DF4985.html@@@1.1.2.3.7.1.3.9 BLE_TRSPC_EvtVendorCmdRsp_T@@@typedef struct BLE_TRSPC_EvtVendorCmdRsp_T { uint16_t connHandle; } BLE_TRSPC_EvtVendorCmdRsp_T; Structure for the BLE_TRSPC_EVT_VENDOR_CMD_RSP event. Field Description connHandle Connection handle...","GUID-25C3AD06-BA10-47E1-9188-67CF5B34B443.html@@@1.1.2.2.1.4.5 BLE_DM_DeletePairedDevice@@@uint16_t BLE_DM_DeletePairedDevice (uint8_t devId); Deletes specific paired device information. Use BLE_DM_GetPairedDeviceList to retrieve the list of paired device IDs. Parameter Description [in]...","GUID-25D117D1-1B5C-4670-9CC6-B33E17D3C1B1.html@@@1.1.2.1.4.4.11 BLE_SMP_OobDataReply@@@uint16_t BLE_SMP_OobDataReply (uint16_t connHandle, uint8_t *p_oobData); Sends OOB data for pairing in response to an OOB data request. This function should be invoked from the SMP callback function...","GUID-25FFA7F4-274C-44C3-9225-DDC9CF6BDCD7.html@@@1.1.2.1.4.4.17 BLE_SMP_UpdateBondingInfo@@@uint16_t BLE_SMP_UpdateBondingInfo (uint16_t connHandle, uint8_t encryptKeySize, BLE_SMP_PairInfo_T *p_pairInfo); Updates the paired device information to the SMP module. It is recommended to call...","GUID-26ADCD6F-E28A-4D1D-89B2-6AB1B3E375D2.html@@@1.1.2.2.4.3.3 BLE_SCM_EventField_T@@@typedef union { BLE_SCM_EvtServiceChange_T evtServiceChange; BLE_SCM_EvtBondedCharInfo_T evtBondedCharInfo; BLE_SCM_EvtConfigured_T evtConfigured; BLE_SCM_EvtDiscComplete_T evtDiscComplete; }...","GUID-26EF7156-3EB8-4DC7-B821-3D8824D04B3C.html@@@1.1.2.3.3.1.2.4 BLE_HOGPS_EvtBootModeEnter_T@@@typedef struct BLE_HOGPS_EvtBootModeEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtBootModeEnter_T; Structure for BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND event. Field Description connHandle The connection...","GUID-26F49515-3F5D-4557-B24A-872F8BFBCC87.html@@@1.1.2.2.2.3 Functions@@@BLE_LOG_EventRegister Registers a callback function for BLE logging events. BLE_LOG_StackLogHandler Processes BLE stack logs containing HCI traffic information...","GUID-271E7C0B-FE36-4587-AAE8-C25E69170E9D.html@@@2.2.4.5.2 Uplink Credit Based Flow Control@@@The procedure is used by a Transparent Client to enable Uplink Credit Based Flow Control on the Transparent Server. Once it is enabled, Server role can only send data to Client while the credit count...","GUID-2724C3B8-B9E1-445E-9B36-7A8BA8D6138B.html@@@1.1.2.1.1.1.42 Periodic advertising properties@@@#define BLE_GAP_PERIODIC_ADV_PROP_TX_POWER ( 1 &lt;&lt; 6 ) Defines the properties of periodic advertising. Macro Description BLE_GAP_PERIODIC_ADV_PROP_TX_POWER Property indicating the inclusion of TxPower...","GUID-27414DB8-1D21-4D91-B6F7-152BCAD03085.html@@@1.1.2.3.6.1.4.5 BLE_TRCBPS_GetData@@@uint16_t BLE_TRCBPS_GetData (uint16_t connHandle, uint8_t *p_data); Retrieve queued data from the Data pipe for a given connection handle. Parameter Description [in] connHandle Connection handle...","GUID-27BD37C8-15AC-4FCB-8A69-DEB36DA83396.html@@@1.1.2.1.8.3.2 HCI_CmdCb_T@@@typedef void (*HCI_CmdCb_T)(HCI_CmdCbId_T cmdID,uint8_t length ,uint8_t *p_packet); HCI callback type. This callback function for the application to implement HCI command...","GUID-27D3577F-D7FE-4FC8-A08F-631F8F327B41.html@@@1.1.2.3.7.1.4.4 BLE_TRSPC_GetData@@@uint16_t BLE_TRSPC_GetData (uint16_t connHandle, uint8_t *p_data); Retrieves queued data from the buffer. Parameter Description [in] connHandle Connection handle associated with the queued data. [out]...","GUID-27DD74F5-85A7-4D82-A5FA-4877F865629A.html@@@1.1.2.1.2.5.3 Handling Peer Reads of Long Characteristic Values@@@Example demonstrating peer reads of long characteristic value (Handled by BLE library). \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating peer reads of long characteristic values (Handled by Application). Authorization...","GUID-280A474A-406B-4CAC-9E30-2F92149D26B2.html@@@1.1.2.3.3.1.3.1 BLE_HOGPS_BleEventHandler@@@void BLE_HOGPS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-280D5422-617E-4CCD-8931-0EF4A314C369.html@@@1.1.2.1.2.3.20 GATT_EvtWrite_T@@@typedef struct GATT_EvtWrite_T { uint16_t connHandle; uint16_t attrHandle; uint8_t writeType; uint8_t flags; uint16_t valueOffset; uint16_t writeDataLength; uint8_t writeValue[BLE_ATT_MAX_MTU_LEN...","GUID-2851F78C-E4E0-4D18-BDD9-7DBC3E45E3D0.html@@@1.1.2.3.7.1.1.2 TRSPC uplink status definition@@@#define BLE_TRSPC_UL_STATUS_DISABLED 0x00 #define BLE_TRSPC_UL_STATUS_CBFCENABLED 0x01 Defines the status of the BLE transparent service uplink. Macro Description BLE_TRSPC_UL_STATUS_DISABLED Uplink...","GUID-2877172A-DC05-4868-9992-0E20E45521B2.html@@@1.1.2.3.1.1.4.7 BLE_ANCS_PerformNtfyAction@@@uint16_t BLE_ANCS_PerformNtfyAction (uint16_t connHandle, uint32_t ntfyId, BLE_ANCS_ActionId_T actId); Performs an action on a specific iOS notification. This function sends a command to the iOS...","GUID-28A3ED97-E207-4CFD-A060-0129DD1E8751.html@@@1.1.2.3.5.1.3.7 BLE_PXPM_EvtDiscComplete_T@@@typedef struct BLE_PXPM_EvtDiscComplete_T { uint16_t connHandle; uint16_t llsStartHandle; uint16_t llsEndHandle; uint16_t iasStartHandle; uint16_t iasEndHandle; uint16_t tpsStartHandle; uint16_t...","GUID-28A9FE03-B026-4CB0-85FF-7F311FA45108.html@@@1.1.2.3.2.1.3.5 BLE_ANPC_EventCb_T@@@typedef void (*BLE_ANPC_EventCb_T)(BLE_ANPC_Event_T *p_event); Type definition for the BLE Alert Notification profile Client callback function. This callback function is used to send BLE Alert...","GUID-28AADCE5-834E-4D55-8427-2B08753058FD.html@@@1.1.2.3.7.3.1 Transparent Profile Client Role Initialization and Connection Establishment Procedure@@@Example demonstrating the initialization of the Transparent Profile client role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the opening of the Transparent Profile client role control pipe. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example...","GUID-28B3D197-7BAA-445C-8DBE-18C6157DB777.html@@@1.1.2.3.7.2.3.1 BLE_TRSPS_Event_T@@@typedef struct BLE_TRSPS_Event_T { BLE_TRSPS_EventId_T eventId; BLE_TRSPS_EventField_T eventField; } BLE_TRSPS_Event_T; BLE Transparent profile server callback event. Field Description eventId...","GUID-28B91BC1-2765-4528-B386-B631258FB2DD.html@@@1.1.2.1.1.4.22 BLE_GAP_GetLocalPrivacy@@@uint16_t BLE_GAP_GetLocalPrivacy (bool * p_enable, BLE_GAP_LocalPrivacyParams_T *p_privacyParams); Retrieves the current local privacy mode setting parameters. Parameter Description [out] p_enable...","GUID-29193070-0984-4252-B1BF-D64683BCF0C8.html@@@1.1.2.1.5.4.1 STACK_EventRegister@@@void STACK_EventRegister (STACK_EventCb_T eventCb); Registers a callback function for STACK events. This function allows application to register a callback that will be invoked when a STACK event...","GUID-29367C88-4BB1-4BF9-92A5-5A4720CEDFC5.html@@@1.1.2.1.2.4.6 GATTC_ExchangeMTURequest@@@uint16_t GATTC_ExchangeMTURequest (uint16_t connHandle, uint16_t mtuLen); Initiates an Exchange MTU Request from the GATT Client to the GATT Server. The requested MTU size is adjusted to be within the...","GUID-298CB8E1-A459-44B1-B58B-241C6CA43595.html@@@1.1.2.1.7.1.2 Receiver or transmitter channel range@@@#define BLE_DTM_CHANNEL_MIN 0x00 #define BLE_DTM_CHANNEL_MAX 0x27 Defines the range of channels for RX/TX during Direct Test Mode (DTM). Macro Description BLE_DTM_CHANNEL_MIN Minimum channel number...","GUID-29C34CC0-3915-42D9-A485-499EF1F7F2D2.html@@@1.1.2.1.6.3.11 BT_SYS_TraceEventCb_T@@@typedef void (*BT_SYS_TraceEventCb_T)(BT_SYS_TraceInfo_T *p_traceInfo, uint8_t length, uint8_t *p_tracePayload); Callback type for Bluetooth system trace events. Parameter Description [in] p_traceInfo...","GUID-29F82178-858F-42F7-B519-9197AE12D4FE.html@@@1.1.2.1.2.1.11 GATT client features@@@#define GATT_ROBUST_CACHING 0x01 #define GATT_EATT_BEARER 0x02 #define GATT_MULTI_HANDLE_NOTI 0x04 The definition of client features in client supported features characteristic in GATT Service. Macro...","GUID-2A70B6D5-3938-4F3C-946E-56192384B633.html@@@1.1.2.1.1.1.4 Advertising filter policies@@@#define BLE_GAP_ADV_FILTER_DEFAULT 0x00 #define BLE_GAP_ADV_FILTER_SCAN 0x01 #define BLE_GAP_ADV_FILTER_CONNECT 0x02 #define BLE_GAP_ADV_FILTER_SCAN_CONNECT 0x03 Defines the policies for filtering...","GUID-2AC7D9CD-100E-46F8-BAEE-18C08B8C0BE2.html@@@1.1.2.1.2.2 Enums@@@GATT_EventId_T Enumeration type of GATT callback events...","GUID-2ADE1ED6-66CF-4C03-BE5C-CC1C3C14E7C0.html@@@1.1.2.2.1.2.1 BLE_DM_EventId_T@@@typedef enum BLE_DM_EventId_T { BLE_DM_EVT_DISCONNECTED, BLE_DM_EVT_CONNECTED, BLE_DM_EVT_SECURITY_START, BLE_DM_EVT_SECURITY_SUCCESS, BLE_DM_EVT_SECURITY_FAIL, BLE_DM_EVT_PAIRED_DEVICE_FULL...","GUID-2BBDB66C-E29B-46F3-A149-455019BFAAC6.html@@@2.3.5.2 Control Pipe@@@To enable the Control Pipe of Transparent Credit Based Profile, Client shall configure the Transparent Credit Based Control Point (TRCBCP) characteristic for notifications (i.e., via the Client...","GUID-2C8F7158-DD20-4413-93A9-69708F1F475A.html@@@2.4.1 Introduction@@@The OTA Service is used for OTA Profile Client and Server roles for Microchip BLE device firmware update...","GUID-2CDEEADD-6AC4-4518-B243-FC41FDA47A88.html@@@1.1.2.3.6.1.1.6 TRCPBS status@@@#define BLE_TRCBPS_STATUS_STANDBY ( 0x00U ) #define BLE_TRCBPS_STATUS_CONNECTING ( 0x01U ) #define BLE_TRCBPS_STATUS_CONNECTED ( 0x02U ) #define BLE_TRCBPS_STATUS_DISCONNECTING ( 0x03U ) Defines the...","GUID-2CEB9D04-3CAD-4016-B28C-39F60F651B70.html@@@2.3.3.1 Additional Requirements for Low Energy Transport@@@This section describes the additional Transparent Credit Based Server requirements beyond those defined in the Transparent Credit Based Service when using this profile over Low Energy transport...","GUID-2CF55892-78B6-4613-8381-4745A1A047E0.html@@@1.1.2.3.5 Proximity Profile (PXP)@@@Provides a interface for the BLE Proximity Profile v1.0.1. Proximity Profile Monitor Role Proximity Profile Reporter Role...","GUID-2D021FE6-741A-4DDE-8820-EDF3B9EBFFFC.html@@@2.1.4.6 General Error Handling@@@This is the start of your topic. The OTA Client shall be tolerant and behave appropriately (i.e., the OTA Client shall be able to continue to process operations and/or receive data normally) when...","GUID-2D261F80-1DC5-4F30-8B46-68182FA5D00E.html@@@1.1.2.3.6.1.1.2 TRCBPS unassigned L2CAP ID@@@#define BLE_TRCBPS_L2CAP_UNASSIGNED_ID ( 0xFFU ) Defines the value for an unassigned L2CAP ID. Macro Description BLE_TRCBPS_L2CAP_UNASSIGNED_ID Unassigned BLE L2CAP ID...","GUID-2DA39EC4-CB5E-4303-9E76-61089619ED52.html@@@1.1.2.3.6.1.1.5 TRCBPS maximum connection number@@@#define BLE_TRCBPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR Defines the maximum number of connections for the BLE Transparent Credit-Based Profile. Macro Description BLE_TRCBPS_MAX_CONN_NBR Maximum allowing...","GUID-2DDE4845-C7E4-43D9-AB98-77E966F470DD.html@@@1.1.2.1.3.5.7 BLE_L2CAP_CbRegisterSpsm@@@uint16_t BLE_L2CAP_CbRegisterSpsm (uint16_t spsm, uint16_t mtu, uint16_t mps, uint16_t initCredits, uint8_t permission); Registers an SPSM (Simplified Protocol/Service Multiplexer). This function must...","GUID-2DF77F12-C1F8-4BBB-9D41-726783A6981E.html@@@1.1.2.1.6 BLE Systems@@@Defines the interface for the BLE System functions provided by the BLE Library. Defines Enumerations Structures Functions...","GUID-2DF78189-535E-4940-83DF-AF9C7B05F809.html@@@1.1.2.1.8.4.7 HCI_AppCmdComplEvt@@@void HCI_AppCmdComplEvt (uint8_t status, uint8_t paramLen, uint8_t * p_param); Application-implemented HCI command complete event. Parameter Description [in] status Status of application-implemented...","GUID-2E865D10-4434-42CB-B6C1-C97595A43906.html@@@2.2.1.1 Profile Dependencies@@@This profile requires the Generic Attribute Profile (GATT)...","GUID-2E985220-41A8-468E-BA73-4DC334466BDA.html@@@1.1.2.1.8.4.9 HCI_AclRxRegister@@@void HCI_AclRxRegister (HCI_AclRxCb_T aclRxCb); HCI ACL Receive callback registration. Parameter Description [in] aclRxCb Callback function for HCI ACL received data...","GUID-2F463189-3014-40DF-B45E-521673F1FDA7.html@@@1.1.2.1.2.3.21 GATT_EvtWriteResp_T@@@typedef struct GATT_EvtWriteResp_T { uint16_t connHandle; uint8_t responseType; uint16_t charHandle; uint16_t valueOffset; uint16_t writeLength; uint8_t...","GUID-2F78900D-FD04-4FCB-BD98-2CB54181A32C.html@@@1.1.2.1.1.4.69 BLE_GAP_SetTxPowerReportingEnable@@@uint16_t BLE_GAP_SetTxPowerReportingEnable (uint16_t connHandle, bool localEnable, bool remoteEnable); Enables or disables reporting of transmit power level changes for a specific connection. This...","GUID-2FF7EC30-7A92-4387-A112-C7AAED8B66E7.html@@@1.1.2.3.7.1.3.7 BLE_TRSPC_EvtUplinkStatus_T@@@typedef struct BLE_TRSPC_EvtUplinkStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPC_EvtUplinkStatus_T; Structure for the BLE_TRSPC_EVT_UL_STATUS event. Field Description connHandle...","GUID-2FFEF37F-32EB-4E6E-83D8-F039E56BCB95.html@@@1.1.2.3.7.2.2 Enums@@@BLE_TRSPS_EventId_T Enumeration of BLE Transparent Profile callback event types...","GUID-300015CF-9D0C-4AAB-A511-83906036C25C.html@@@1.1.2.1.6.3.6 BT_SYS_HpaCtxCb_T@@@Only valid for PIC32CX-BZ2 typedef void (*BT_SYS_HpaCtxCb_T)(bool active); Callback type for Bluetooth system High Power Amplifier (HPA) Context events. Parameter Description [in] active Flag...","GUID-30740A49-B57E-4230-B0CB-4D4EE7937168.html@@@1.1.2.3.2.1.4.7 BLE_ANPC_GetDescList@@@uint16_t BLE_ANPC_GetDescList (uint16_t connHandle, BLE_ANPC_DescList_T *p_descList); Retrieves a list of descriptors within the Alert Notification Service. This function should be called after the...","GUID-30B9B7CC-F921-4592-A7A2-8AEF30A96869.html@@@1.1.2.1.1.1.30 Maximum extended advertising fragment data length@@@#define BLE_GAP_EXT_ADV_FRAGMENT_MAX_LENGTH 0xE5 Defines the maximum length of extended advertising fragment data in bytes. Macro Description BLE_GAP_EXT_ADV_FRAGMENT_MAX_LENGTH Maximum length of...","GUID-31369F94-8A83-4482-AE19-47E48D961CE5.html@@@1.1.2.1.1.1.36 Maximum resolving list size@@@#define BLE_GAP_MAX_RESOLV_NUM 0x08 Defines the maximum size of the resolving list. Macro Description BLE_GAP_MAX_RESOLV_NUM Maximum number of resolving list...","GUID-31BF6CA6-D9C5-41B3-87ED-DD72CB4C45DA.html@@@1.1.2.3.5.1.3.8 BLE_PXPM_EvtLlsAlertLvInd_T@@@typedef struct BLE_PXPM_EvtLlsAlertLvInd_T { uint16_t connHandle; BLE_PXPM_AlertLevel_T alertLevel; } BLE_PXPM_EvtLlsAlertLvInd_T; Structure for the BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND event. Field...","GUID-31DFCBCE-2A1C-486D-ABEC-CB4A8DF588FC.html@@@1.1.2.1.4.5.4 SMP LESC Pairing in the GAP Peripheral Role Procedure@@@Example demonstrating SMP LESC Pairing in the GAP peripheral role using the &quot;Just Works&quot; method Example demonstrating SMP LESC Pairing in the GAP peripheral role with Passkey Entry, where...","GUID-3310A31A-0E97-42FF-9FCB-6C6C47B45EAE.html@@@2.2.4.4.3 Transparent Control Point (TCP) Characteristic@@@Before performing a Transparent Control Point procedure, the Transparent Client shall configure the Transparent Control Point (TCP) characteristic for notifications (i.e., via the Client...","GUID-3343772E-C6A4-4195-B8E7-42568CBBDE6F.html@@@2.5 Microchip Transparent Service v1.1@@@The Service is used for data exchange between Transparent Client and Transparent Server that intended for consumer burst application data exchange...","GUID-33775B69-2ACE-4A02-8A46-4E9AD56D70E2.html@@@2.2.4.5.1 Downlink Credit Based Flow Control@@@The procedure is used by a Transparent Client to enable Downlink Credit Based Flow Control for the Transparent Server. Once it is enabled, Client role can only send data to Server while the credit...","GUID-338BED4B-6274-4CF7-A108-1651CE421817.html@@@1.1.2.3.6.2 TRCBP Message Sequence Chart@@@Transparent Credit Based Profile initialization Transparent Credit Based Profile Connection Establishment Procedure Transparent Credit Based Profile Disconnection Procedure Transparent Credit Based...","GUID-3391B42D-AA2E-48C1-83A9-A329CD6A1C95.html@@@1.1.2.1.2.5.16 Writing Long Characteristic Values@@@Example demonstrating how to write long characteristic values...","GUID-33A31F88-780D-4154-84F7-C36C08EEA171.html@@@1.1.2.3.5.1.3.4 BLE_PXPM_Event_T@@@typedef struct BLE_PXPM_Event_T { BLE_PXPM_EventId_T eventId; BLE_PXPM_EventField_T eventField; } BLE_PXPM_Event_T; BLE Proximity Profile Monitor callback event structure. Field Description eventId...","GUID-34487CE2-9BA8-45AF-A32B-2D8849CF682C.html@@@1.1.2.1.1.3.9 BLE_GAP_ConnParams_T@@@typedef struct BLE_GAP_ConnParams_T { uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t supervisionTimeout; } BLE_GAP_ConnParams_T; Structure for configuring connection...","GUID-3464EE6F-9E78-4460-947F-E463ACCFEFD6.html@@@1.1.2.2.1.1.2 Maximum paired devices@@@#define BLE_DM_MAX_PAIRED_DEVICE_NUM 8 Defines the maximum number of paired devices that can be stored in flash memory. Macro Description BLE_DM_MAX_PAIRED_DEVICE_NUM Maximum number of paired devices...","GUID-347B9612-7A12-4EBB-AAAC-57FB3DD4960D.html@@@1.1.2.1.7.3 Functions@@@BLE_DTM_EndTest Stops any ongoing test. BLE_DTM_EnhancedReceiverTest Starts a receiver test where the device receives test reference packets at a fixed interval. BLE_DTM_EnhancedTransmitterTest Starts...","GUID-34DDB903-505F-4FCD-BC2E-DECEC3B29884.html@@@1.1.2.3.7.2 Transparent Profile Server Role@@@Provides a interface for the BLE Transparent Profile Server. Defines Enumerations Structures Functions...","GUID-34EF318B-A394-41FA-A2B4-FFDDFBE16810.html@@@1.1.2.3.2.2.3.1 BLE_ANPS_Event_T@@@typedef struct BLE_ANPS_Event_T { BLE_ANPS_EventId_T eventId; BLE_ANPS_EventField_T eventField; }BLE_ANPS_Event_T; BLE ANPS callback event structure. Field Description eventId Identifier for the type...","GUID-358C319B-60F3-4200-A851-DCF9BCB980C3.html@@@1.1.2.1.6.3 Structures@@@BT_SYS_LogEvent_T Structure for a Bluetooth system log event. BT_SYS_Cfg_T Structure for Bluetooth system configuration. BT_SYS_LogEventCb_T Callback type for Bluetooth system log events...","GUID-359AF83E-4883-483C-864C-8C627C5F4A85.html@@@1.1.2.3.2.1.1.5 ANPC supported category ID bit masks@@@#define BLE_ANPC_SUPP_CAT_SIMPLE_ALERT ( 1 &lt;&lt; 0 ) #define BLE_ANPC_SUPP_CAT_EMAIL ( 1 &lt;&lt; 1 ) #define BLE_ANPC_SUPP_CAT_NEWS ( 1 &lt;&lt; 2 ) #define BLE_ANPC_SUPP_CAT_CALL ( 1 &lt;&lt; 3 ) #define...","GUID-360F59C9-E789-4BE3-BAE1-BD0A4386AD65.html@@@1.1.2.1.2.3.3 GATT_EventField_T@@@typedef union { GATT_EvtError_T onError; GATT_EvtRead_T onRead; GATT_EvtWrite_T onWrite; GATT_EvtDiscPrimServResp_T onDiscPrimServResp; GATT_EvtDiscPrimServByUuidResp_T onDiscPrimServByUuidResp...","GUID-365CC6A9-9C72-4FCB-ADEC-405CF68B0426.html@@@1.1.2.1.4.1.6 Pairing options@@@#define BLE_SMP_OPTION_NONE 0x00 #define BLE_SMP_OPTION_BONDING 0x01 #define BLE_SMP_OPTION_MITM 0x04 #define BLE_SMP_OPTION_SECURE_CONNECTION 0x08 #define BLE_SMP_OPTION_KEYPRESS 0x10 Defines pairing...","GUID-3674C841-7A70-4A72-A6A5-7C972F1DB241.html@@@1.1.2.1.4.4.7 BLE_SMP_Init@@@uint16_t BLE_SMP_Init ( void ); Initializes the BLE Security Manager Protocol (SMP) main module. Return value Description MBA_RES_SUCCESS Initialization of the BLE SMP main module was successful...","GUID-36F561BF-6DFE-4459-986F-BAAF3186C6D1.html@@@1.1.2.2.5.1.2.1 MW_AES_AesCbcDecrypt@@@uint16_t MW_AES_AesCbcDecrypt (MW_AES_Ctx_T * p_ctx, uint16_t length, uint8_t *p_plainText, uint8_t *p_chiperText); Decrypts a block of data using AES CBC mode. Parameter Description [in] p_ctx...","GUID-3734A779-8A0A-4E24-8306-6140738EDB71.html@@@1.1.2.3.2.1.1.6 UUIDs of characteristics in Alert Notification profile@@@#define BLE_ANPC_UUID_ANCP ( 0x2A44 ) #define BLE_ANPC_UUID_UNREAD_ALERT_STAT ( 0x2A45 ) #define BLE_ANPC_UUID_NEW_ALERT ( 0x2A46 ) #define BLE_ANPC_UUID_SUPP_NEW_ALERT_CAT ( 0x2A47 ) #define...","GUID-37656300-1213-4655-8A3C-3841F9E50750.html@@@1.1.2.3.7.1.4.2 BLE_TRSPC_BleEventHandler@@@void BLE_TRSPC_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called by the application when BLE stack events occur. Parameter Description [in]...","GUID-37795A59-939D-44C1-A59E-53751537651D.html@@@1.1.2.3.2.1.4.3 BLE_ANPC_EnableNewAlertNtfy@@@uint16_t BLE_ANPC_EnableNewAlertNtfy (uint16_t connHandle, bool enable); Enables or disables notifications for new alerts. Parameter Description [in] connHandle The connection handle to identify the...","GUID-3784D6FB-7774-4C25-B665-B75F04CE6444.html@@@1.1.2.1.8.3.3 HCI_AclRxCb_T@@@typedef bool (*HCI_AclRxCb_T)(uint16_t connHandle , uint16_t length, uint8_t *p_packet); HCI callback type. This callback function sends HCI ACL data to the application...","GUID-37DD486E-D5DB-4306-9BFE-7AB8E35EB7C6.html@@@2.1.4.5.6 Device Reset Request Operation@@@This procedure is used by OTA Client when it attempts to request OTA Server to perform the reset procedure. The OTA Client shall write the OTACP Device Reset Request opcode to the OTACP...","GUID-380DE040-4C48-4734-B9FB-1EDDA41A6730.html@@@1.1.2.1.1.3.42 BLE_GAP_ExtScanningPhy_T@@@typedef struct BLE_GAP_ExtScanningPhy_T { BLE_GAP_ExtScanningParams_T le1mPhy; BLE_GAP_ExtScanningParams_T leCodedPhy; } BLE_GAP_ExtScanningPhy_T; Structure for configuring PHY-specific extended scan...","GUID-38736ACA-7BFC-4F8D-B6D6-54F8F53FB3A4.html@@@1.1.2.3.7.1.3.8 BLE_TRSPC_EvtVendorCmd_T@@@typedef struct BLE_TRSPC_EvtVendorCmd_T { uint16_t connHandle; uint8_t payloadLength; uint8_t *p_payLoad; } BLE_TRSPC_EvtVendorCmd_T; Structure for the BLE_TRSPC_EVT_VENDOR_CMD event. Field...","GUID-38911D3C-CA17-4DB0-AA25-2D9AEE238457.html@@@1.1.2.3.7.2.4.4 BLE_TRSPS_SendData@@@uint16_t BLE_TRSPS_SendData (uint16_t connHandle, uint16_t len, uint8_t *p_data); Sends transparent data over BLE. Parameter Description [in] connHandle Connection handle associated with this...","GUID-398425DC-D743-4105-8D40-1662D9F64875.html@@@1.1.2.3.7.1.3.3 BLE_TRSPC_EventField_T@@@typedef union { BLE_TRSPC_EvtUplinkStatus_T onUplinkStatus; BLE_TRSPC_EvtDownlinkStatus_T onDownlinkStatus; BLE_TRSPC_EvtReceiveData_T onReceiveData; BLE_TRSPC_EvtVendorCmd_T onVendorCmd...","GUID-39F32807-8A6F-4AC8-93AD-2AA3B1C75F46.html@@@1.1.2.1.1.3.1 BLE_GAP_Addr_T@@@typedef struct BLE_GAP_Addr_T { uint8_t addrType; uint8_t addr[GAP_MAX_BD_ADDRESS_LEN]; } BLE_GAP_Addr_T; Structure for Bluetooth address. Field Description addrType Address type indicating public or...","GUID-3A3691CA-2287-42E3-AEBB-8B792EF08585.html@@@1.1.2.1.6.4.14 BT_SYS_TraceEnable@@@void BT_SYS_TraceEnable (BT_SYS_TraceFmt_T fmt, uint32_t traceMask, BT_SYS_TraceEventCb_T traceCb); Enable Bluetooth system trace message indications. Parameter Description [in] fmt The format of the...","GUID-3A6A883F-3B3A-4BF0-B992-CEDA5DFDA320.html@@@1.1.2.3.4.2.1.1 OTAPS firmware extended feature definitions@@@#define BLE_OTAPS_FW_FEATURE_MASK1 ( 1U &lt;&lt; 0U ) Defines extended firmware features in OTAPS. Macro Description BLE_OTAPS_FW_FEATURE_MASK1 Bitmask for supported feature set 1...","GUID-3A6DFA4E-4197-4A61-9A89-2F1274338B1D.html@@@1.1.2.1.6.1.1 Bluetooth address length@@@#define BT_SYS_DEV_ADDR_LEN 7 Defines the length of a Bluetooth device address. Macro Description BT_SYS_DEV_ADDR_LEN Bluetooth device address length in bytes...","GUID-3AD21640-C301-427F-BC3B-BA0761ED3344.html@@@2.5.3.1 Transparent Uplink Data (TUD) Characteristic@@@This characteristic is used for uplink data transmission from Server to Client via Characteristic Value Notify operation...","GUID-3B631715-34AA-46CB-AD82-FB5F8A3453A1.html@@@1.1.2.1.1.4.23 BLE_GAP_GetRssi@@@uint16_t BLE_GAP_GetRssi (uint16_t connHandle, int8_t *p_rssi); Retrieves the absolute Received Signal Strength Indication (RSSI) value in dBm. The RSSI metric represents an absolute receiver signal...","GUID-3BA3D179-61EF-4BA9-B3F7-837E2DFA76A4.html@@@1.1.2.1.6.4 Functions@@@BM_Task The main task function for the Bluetooth module. BT_SYS_AllowSystemSleep Check if the Bluetooth system allows the system to enter sleep mode. BT_SYS_EnterDeepSleepMode Request the Bluetooth...","GUID-3BBA6E22-85EE-4B8F-BC37-840881963D97.html@@@1.1.2.1.2.3 Structures@@@ATT_Uuid_T Structure representing a universally unique identifier (UUID) for ATT (Attribute Protocol) operations. GATT_Event_T GATT callback event structure. GATT_EventField_T Union of BLE GATT...","GUID-3C567A09-3210-42C4-8E36-BBB3F3A9AC64.html@@@1.1.2.3.2.1.4.8 BLE_ANPC_Init@@@uint16_t BLE_ANPC_Init ( void ); Initializes BLE Alert Notification Client. Return value Description MBA_RES_SUCCESS The client was successfully initialized. MBA_RES_FAIL The client failed to...","GUID-3C56CA6A-5CC4-4C10-9501-BABC211176A5.html@@@1.1.2.3.4.1.4.6 BLE_OTAPC_FragmentDist@@@uint16_t BLE_OTAPC_FragmentDist (uint16_t connHandle, uint16_t length, uint8_t *p_data); Distributes a fragmented firmware image to a server device for OTA DFU. The application should wait for the...","GUID-3C6DA67B-6B8B-4EE9-8ADE-6C1159144535.html@@@1.1.2.3.6.1.4 Functions@@@BLE_TRCBPS_BleEventHandler Handles BLE_Stack events. BLE_TRCBPS_ConnReq Issue an L2CAP CoC connection request to establish a TRCBP Data pipe. BLE_TRCBPS_DisconnectReq Issue an L2CAP CoC disconnect...","GUID-3C858497-5BAC-4608-94D4-F56EA856A20B.html@@@2.1.4.5.5 Firmware Update Complete Operation@@@This procedure is used by OTA Client when it attempts to notify all the OTA firmware update process is complete. OTA Client shall issue the Firmware Update Request operation for future OTA firmware...","GUID-3C96416D-0110-413C-8634-8DC41E5A7CB4.html@@@1.1.2.3.1.1.3.1 BLE_ANCS_AppAttrsMask_T@@@typedef struct BLE_ANCS_AppAttrsMask_T { unsigned int displayName : 1 ; unsigned int reserved : 7 ; } BLE_ANCS_AppAttrsMask_T; Structure representing the bitmask for iOS app attribute flags. Field...","GUID-3CD90AFF-D96B-4C0D-8A22-A4E2E18F8783.html@@@1.1.2.1.8.4.4 HCI_AppHardwareErrEvt@@@void HCI_AppHardwareErrEvt (uint8_t hardwareCode); Application-triggered Hardware error event. Parameter Description [in] hardwareCode Hardware error code...","GUID-3CEC6A55-4A7A-40B2-A955-06E240196F95.html@@@1.1.2.3.4.2.2 Enums@@@BLE_OTAPS_EventId_T Enumeration for BLE OTA (Over-The-Air) profile callback events...","GUID-3CECF792-F54B-4A5C-95FA-5A2D18F38B24.html@@@1.1.2.3.5.2.3.3 BLE_PXPR_EvtAlertLevelWriteInd_T@@@typedef struct BLE_PXPR_EvtAlertLevelWriteInd_T { uint16_t connHandle; BLE_PXPR_AlertLevel_T alertLevel; } BLE_PXPR_EvtAlertLevelWriteInd_T; Structure for the BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND...","GUID-3CF0A6B4-B5CA-4CD3-928F-C9B90B809F37.html@@@1.1.2.1.2.5.1 Adding and Removing GATT Services@@@Example demonstrating GATT service addition. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating GATT service removal...","GUID-3D019296-86B3-4944-8D77-C1CA1669EF48.html@@@1.1.2.3.3.1.2.6 BLE_HOGPS_EvtHostSuspendEnter_T@@@typedef struct BLE_HOGPS_EvtHostSuspendEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtHostSuspendEnter_T; Structure for BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND event. Field Description connHandle The...","GUID-3E520A9F-73F6-4974-800C-CE1C651F7D5D.html@@@1.1.2.3.3.1.3.15 BLE_HOGPS_SetMouseButtonInputReport@@@uint16_t BLE_HOGPS_SetMouseButtonInputReport (uint8_t buttons, int8_t wheel, int8_t acPan); Sets the HID mouse button input report. This function prepares the input report for mouse button states...","GUID-3E6736E8-5849-46B9-9436-C3753A449283.html@@@1.1.2.1.3.4.1 L2CAP CoC Connection Procedure@@@Example demonstrating locally initiated L2CAP CoC connection procedure Example demonstrating remotely initiated L2CAP CoC connection procedure Example demonstrating L2CAP CoC local...","GUID-3E801860-C4B6-4436-8EB4-7A89131B8067.html@@@2.4.1.2 Service Dependency@@@This service is not dependent upon any other services...","GUID-3EE73EEC-B3E4-435C-87F6-1E5BDC06308D.html@@@1.1.2.3.2.2.2.1 BLE_ANPS_EventId_T@@@typedef enum BLE_ANPS_EventId_T { BLE_ANPS_EVT_ANCP_WRITE_IND = 0x00U , BLE_ANPS_EVT_ERR_UNSPECIFIED_IND, BLE_ANPS_EVT_ERR_NO_MEM_IND }BLE_ANPS_EventId_T; Enumeration of BLE Alert Notification Profile...","GUID-3F42B240-4C95-45C2-B93F-624809AE377C.html@@@1.1.2.1.2.3.23 GATTC_DiscoverPrimaryServiceParams_T@@@typedef struct GATTC_DiscoverPrimaryServiceParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t valueLength; uint8_t value[ATT_MAX_UUID_SIZE]; } GATTC_DiscoverPrimaryServiceParams_T; Structure...","GUID-3FD2A01E-A9F0-4A96-BE6D-24B5CBBF6B0A.html@@@1.1.2.3.7.2.3.9 BLE_TRSPS_Uuids_T@@@typedef struct BLE_TRSPS_Uuids_T { uint8_t *p_primaryService; uint8_t *p_transTx; uint8_t *p_transRx; uint8_t *p_transCtrl; } BLE_TRSPS_Uuids_T; The structure contains information about change UUID...","GUID-3FD56DAB-A22D-4C15-B363-779F25F235EF.html@@@1.1.2.3.7.2.4.1 BLE_TRSPS_EventRegister@@@void BLE_TRSPS_EventRegister (BLE_TRSPS_EventCb_T bleTranServHandler); Registers a callback function for BLE Transparent Profile server events. Parameter Description [in] bleTranServHandler The client...","GUID-3FF165A5-4872-459F-95A4-37623FB53F79.html@@@1.1.2.1.2.4.11 GATTC_SetPreferredMtu@@@uint16_t GATTC_SetPreferredMtu (uint16_t preferredMtuCentral); Configures the preferred ATT MTU size for the GATT Client in the central role. When connection established with remote peer, GATT client...","GUID-408CE073-DEDA-4662-839C-36C0405D996B.html@@@1.1.2.3.6.1.3.6 BLE_TRCBPS_EvtVendorCmd_T@@@typedef struct BLE_TRCBPS_EvtVendorCmd_T { uint16_t connHandle; uint16_t length; uint8_t *p_payLoad; } BLE_TRCBPS_EvtVendorCmd_T; Structure for the BLE_TRCBPS_EVT_VENDOR_CMD event. Field Description...","GUID-41171C5F-25EA-4061-B9E2-4B95233F1E75.html@@@2.5.5 References@@@[1] Bluetooth Core Specification v4.0 or later version of the Core Specification. [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers...","GUID-4125105D-DB1E-45F9-B443-D9B5C4D6165C.html@@@1.1.2.2.1.3.9 BLE_DM_EvtSecurityStart_T@@@typedef struct BLE_DM_EvtSecurityStart_T { BLE_DM_SecurityProc_T procedure; } BLE_DM_EvtSecurityStart_T; Structure for BLE_DM_EVT_SECURITY_START event. Field Description procedure Security procedure...","GUID-41911D6F-569E-43A8-A849-2918EA900D19.html@@@1.1.2.2.5.1.1 Structures@@@MW_AES_Ctx_T Structure for maintaining AES encryption context...","GUID-41C437AC-5933-4BDE-9BA2-D6CE0E2879F5.html@@@1.1.2.1.7.3.3 BLE_DTM_EnhancedTransmitterTest@@@uint16_t BLE_DTM_EnhancedTransmitterTest (BLE_DTM_TransmitterTestParams_T *p_transTestParams); Starts a transmitter test where the device generates test reference packets at a fixed interval...","GUID-4209610E-FAD4-4CC7-9F94-5977AB0C80D3.html@@@1.1.2.3.2.1.3.13 BLE_ANPC_EvtWriteNewAlertRspInd_T@@@typedef struct BLE_ANPC_EvtWriteNewAlertRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteNewAlertRspInd_T; Structure for the BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND event. Field...","GUID-42233CC2-2806-428D-95E8-AD27D44CE5D5.html@@@2.3.2.3 Transport Dependencies@@@The transport must be Bluetooth Low Energy because TRCBP is based on LE L2CAP CoC with Credit Based flow control...","GUID-43241C2D-AFCA-40B7-83A0-D5A7D15E6564.html@@@2.6.1.3 GATT Sub-Procedure Requirements@@@Requirements in this section represent a minimum set of requirements for a Server. Other GATT sub-procedures may be used if supported by both Client and Server. Table 1.1 summarizes additional GATT...","GUID-433203E7-53C9-4E77-B92B-523DC8C42617.html@@@1.1.2.1.6.1.5 Feature mask@@@#define BT_SYS_FEAT_PWR_CTRL 1 Defines the feature mask to enable or disable specific Bluetooth system features. Macro Description BT_SYS_FEAT_PWR_CTRL Power control feature mask...","GUID-433DC6E6-5494-4A91-8212-39E5B2039F77.html@@@1.1.2.3.4.2.3.5 BLE_OTAPS_EvtStartInd_T@@@typedef struct BLE_OTAPS_EvtStartInd_T { uint8_t imageType; } BLE_OTAPS_EvtStartInd_T; Structure for the BLE_OTAPS_EVT_START_IND event. Field Description imageType Type of the image being updated...","GUID-43947BB3-DED9-4DEE-A580-80CCCC79A915.html@@@1.1.2.2.5.2.3.6 MW_DFU_FwImageValidate@@@uint16_t MW_DFU_FwImageValidate (uint16_t fwCfmValue); Validates the updated MCU image using CRC for internal flash or checksum for external flash. Parameter Description [in] fwCfmValue CRC value for...","GUID-43AC440A-9514-4EFE-862E-D9D75B22D004.html@@@1.1.2.3.2.2.4.2 BLE_ANPS_EventRegister@@@void BLE_ANPS_EventRegister (BLE_ANPS_EventCb_T bleAnpRoutine); Registers a callback function for the BLE Alert Notification profile events. Parameter Description [in] bleAnpRoutine The callback...","GUID-43B7311F-309A-43D1-B360-4EF8B26C99E2.html@@@1.1.2.1.1.3.29 BLE_GAP_EvtPeriAdvSyncLost_T@@@typedef struct BLE_GAP_EvtPeriAdvSyncLost_T { uint16_t syncHandle; }BLE_GAP_EvtPeriAdvSyncLost_T; Structure for BLE_GAP_EVT_PERI_ADV_SYNC_LOST event. Field Description syncHandle Handle identifying...","GUID-4458B79C-852A-49A3-9DFE-15E8C17D4A90.html@@@2.2.4.1 GATT Sub-Procedure Requirements@@@This section represents a minimum set of the requirements for a Transparent Client. The other GATT sub-procedures might be used if both of Transparent Client and Transparent Server are supported. The...","GUID-44DDD565-77DC-4EFE-8B89-5E5C986FCB3D.html@@@1.1.2.1.4.3.4 BLE_SMP_EventField_T@@@typedef union { BLE_SMP_EvtPairingComplete_T evtPairingComplete; BLE_SMP_EvtInputPasskeyReq_T evtInputPasskeyReq; BLE_SMP_EvtDisplayCompareValueReq_T evtDisplayCompareValueReq...","GUID-450D625C-AE91-469F-BB5A-B0265915F999.html@@@1.1.2.3.7.2.3.8 BLE_TRSPS_EvtVendorCmd_T@@@typedef struct BLE_TRSPS_EvtVendorCmd_T { uint16_t connHandle; uint16_t length; uint8_t *p_payLoad; }BLE_TRSPS_EvtVendorCmd_T; Structure for the BLE_TRSPS_EVT_VENDOR_CMD event. Field Description...","GUID-45146E7D-EC04-4A22-BA0E-0F6CAD3858A7.html@@@1.1.2.1.4.1.2 IO capability@@@#define BLE_SMP_IO_DISPLAYONLY 0x00 #define BLE_SMP_IO_DISPLAYYESNO 0x01 #define BLE_SMP_IO_KEYBOARDONLY 0x02 #define BLE_SMP_IO_NOINPUTNOOUTPUT 0x03 #define BLE_SMP_IO_KEYBOARDDISPLAY 0x04 Defines...","GUID-4577A043-D574-4B9B-ACDF-CCB699407B92.html@@@1.1.2.1.1.3.32 BLE_GAP_EvtScanReqReceived_T@@@typedef struct BLE_GAP_EvtScanReqReceived_T { uint8_t advHandle; BLE_GAP_Addr_T scannerAddr; }BLE_GAP_EvtScanReqReceived_T; Structure for BLE_GAP_EVT_SCAN_REQ_RECEIVED event. Field Description...","GUID-458D8316-D608-4BA9-98D7-4186128A1385.html@@@1.1.2.1.8.1.1 Status of HCI event@@@#define HCI_EVENT_STATUS_SUCCESS 0x00 #define HCI_EVENT_STATUS_UNKNOWN_HCI_COMMAND 0x01 #define HCI_EVENT_STATUS_INVALID_HCI_COMMAND_PARAMETERS 0x12 Status of HCI event. Macro Description...","GUID-45BBEAF5-6AC8-4907-91BF-BF8D646FE2E3.html@@@1.1.2.3.4.1.4 Functions@@@BLE_OTAPC_BleDdEventHandler Handless BLE Database Discovery (BLE_DD) middleware events. BLE_OTAPC_BleEventHandler Handles BLE_Stack events. BLE_OTAPC_DeviceReset Requests a device reset on the server...","GUID-460F16F3-B0D1-4B84-A151-0FCF50952A64.html@@@1.1.2.1.1.1.39 Options for creating synchronization@@@#define BLE_GAP_SYNC_CREATE_OPTION_USE_ADV_LIST ( 1 &lt;&lt; 0 ) #define BLE_GAP_SYNC_CREATE_OPTION_REPORT_DISABLED ( 1 &lt;&lt; 1 ) Defines the options for creating synchronization with a periodic advertising...","GUID-46BF057B-D1D7-40E8-9940-44BC541442B1.html@@@1.1.2.1.1.3.44 BLE_GAP_PeriAdvDataParams_T@@@typedef struct BLE_GAP_PeriAdvDataParams_T { uint8_t advHandle; uint8_t operation; uint8_t advLen; uint8_t *p_advData; } BLE_GAP_PeriAdvDataParams_T; Structure for configuring periodic advertising...","GUID-46DE193C-432C-45BD-B62B-0F2CE255CF08.html@@@1.1.2.1.6.4.9 BT_SYS_LogEnable@@@void BT_SYS_LogEnable (BT_SYS_LogEventCb_T logCb); Enables logging for Bluetooth system events. Parameter Description [in] logCb A function pointer to the callback that will handle the Bluetooth...","GUID-46F660F0-0E2B-4F7D-B2D5-C23204697EF2.html@@@1.1.2.3.7.1.4.1 BLE_TRSPC_BleDdEventHandler@@@void BLE_TRSPC_BleDdEventHandler (BLE_DD_Event_T *p_event); Handles BLE Database Discovery (BLE_DD) events. This function should be called when BLE_DD events occur. Parameter Description [in] p_event...","GUID-474E0E7B-1467-44AA-851C-0291A9269F9D.html@@@1.1.2.1.1.4.1 BLE_GAP_AdvInit@@@uint16_t BLE_GAP_AdvInit ( void ); Initializes the BLE GAP legacy advertising module. Return value Description MBA_RES_SUCCESS Successfully initializes the BLE GAP advertising module. MBA_RES_OOM...","GUID-47595E09-3CF2-4D7F-9935-3D7B7165C7C7.html@@@1.1.2.1.1.4.55 BLE_GAP_SetGoldenRxPowerRange@@@uint16_t BLE_GAP_SetGoldenRxPowerRange (int8_t upperLimit, int8_t lowerLimit, uint8_t stepDecreasePower); Sets the golden receive power range. Parameter Description [out] upperLimit The upper limit of...","GUID-4762260C-1D1C-4DBF-B021-57FEF443E0F4.html@@@2.3.4.5 Open Data Pipe@@@To open TRCBP Data Pipe for higher layer profile/application, Client should initiate L2CAP CoC connection procedure with LE Credit Based Flow Control Mode...","GUID-4766BD96-39D9-49CC-825C-772FFD3D0082.html@@@1.1.2.3.3.1.3 Functions@@@BLE_HOGPS_BleEventHandler Handles BLE_Stack events. BLE_HOGPS_EventRegister Registers a callback for the BLE HID over GATT profile server role events. BLE_HOGPS_Init Initializes the BLE HID over GATT...","GUID-47722FB5-36D7-4844-BCB6-700CF4B19291.html@@@1.1.2.3.5.1 Proximity Profile Monitor Role@@@Provides a interface for the BLE Proximity Profile Monitor. Defines Enumerations Structures Functions...","GUID-47F0E7E6-ED0C-46F2-AB83-71A98024F227.html@@@1.1.2.1.1.1.56 Scan types@@@#define BLE_GAP_SCAN_TYPE_PASSIVE_SCAN 0x00 #define BLE_GAP_SCAN_TYPE_ACTIVE_SCAN 0x01 Defines the types of scanning methods that can be used. Macro Description BLE_GAP_SCAN_TYPE_PASSIVE_SCAN Passive...","GUID-4815E953-9D90-415F-82EB-9F7A527A7E18.html@@@1.1.2.1.1.3.22 BLE_GAP_EvtDisconnect_T@@@typedef struct BLE_GAP_EvtDisconnect_T { uint16_t connHandle; uint8_t reason; } BLE_GAP_EvtDisconnect_T; Structure for BLE_GAP_EVT_DISCONNECTED event. Field Description connHandle Connection handle...","GUID-481712D0-E55A-4584-935C-C6782048031B.html@@@1.1.2.1.1.4.60 BLE_GAP_SetPeriAdvEnable@@@uint16_t BLE_GAP_SetPeriAdvEnable (bool enable, uint8_t advHandle); Enables or disables periodic advertising for a specified advertising set. If the advertising set is not currently enabled (see...","GUID-48C9C5B5-8259-4047-BD23-85BE45B3EB49.html@@@1.1.2.1.1.4.13 BLE_GAP_EncInfoReqNegativeReply@@@uint16_t BLE_GAP_EncInfoReqNegativeReply (uint16_t connHandle); Responds negatively to an LE encryption information request event. This API should only be called in response to a...","GUID-48D8F0DE-8D7A-418B-989B-DC1FA520BE58.html@@@1.1.2.2.5.2.3.4 MW_DFU_FwImageStart@@@uint16_t MW_DFU_FwImageStart ( void ); Starts or restarts the firmware image update procedure. Calling this API resets the state machine and parameters of the DFU module. Return value Description...","GUID-48F0E981-B4AA-44DB-9786-B9430664C991.html@@@2.6.3.2.2 Transparent Credit Based Control Point Characteristic Behavior@@@While the Transparent Credit Based Control Point is used by a Client to control certain behaviors of the Server. The procedures are triggered by Write a Characteristic Value that includes an Op Code...","GUID-4908FBAF-F012-4C11-B31A-7D042C846961.html@@@1.1.2.3.6.1.4.2 BLE_TRCBPS_ConnReq@@@uint16_t BLE_TRCBPS_ConnReq (uint16_t connHandle); Issue an L2CAP CoC connection request to establish a TRCBP Data pipe. Parameter Description [in] connHandle Connection handle. Return value...","GUID-496E86C5-DF5D-4618-AB6A-D74DDD13219B.html@@@1.1.2.1.1.1.38 Operation of periodic advertising data@@@#define BLE_GAP_PERIODIC_ADV_DATA_OP_COMPLETE 0x03 Defines operations related to periodic advertising data. Macro Description BLE_GAP_PERIODIC_ADV_DATA_OP_COMPLETE Indicates that the periodic...","GUID-4978104A-B456-462C-AC13-4A68831D022E.html@@@1.1.2.1.2.3.10 GATT_EvtEncDataKeyMatlReq_T@@@typedef struct GATT_EvtEncDataKeyMatlReq_T { uint16_t connHandle; } GATT_EvtEncDataKeyMatlReq_T; Structure for the GATTS_EVT_ENC_DATA_KEY_MATL_REQ event.This event is triggered when peer request to...","GUID-4991CCB0-2639-4835-BE34-5ABA4BD03170.html@@@1.1.2.1.1.4.30 BLE_GAP_ReadRemoteTxPowerLevel@@@uint16_t BLE_GAP_ReadRemoteTxPowerLevel (uint16_t connHandle, uint8_t phy); Requests the transmit power level used by the remote device on a specific connection. This command should only be used after...","GUID-49B26F1D-8A8E-4171-9F0B-CD4685CE5254.html@@@1.1.2.1.4.3.16 BLE_SMP_IdInfo_T@@@typedef struct BLE_SMP_IdInfo_T { uint8_t irk[ 16 ]; BLE_GAP_Addr_T addr; }BLE_SMP_IdInfo_T; Structure for identity information. Field Description irk Identity Resolving Key (IRK). Used to resolve or...","GUID-49F8A6C2-190C-4A66-9B87-1E9080DAACF7.html@@@1.1.2.1.1.4.39 BLE_GAP_SetAdvTxPowerLevel@@@uint16_t BLE_GAP_SetAdvTxPowerLevel (int8_t advTxPower, int8_t *p_selectedTxPower); Sets the RF Tx power level for Advertising physical channel PDUs. Advertising physical channel PDUs encompass...","GUID-4A395D10-0500-4827-A711-3045C03C7F6B.html@@@2.2.1.2 Bluetooth Specification Release Compatibility@@@This specification is compatible with Bluetooth Core Specification v4.1 [3]...","GUID-4A772703-D197-40AE-A35F-77D7C1504E97.html@@@1.1.2.3.3.1.1.1 BLE_HOGPS_EventId_T@@@typedef enum BLE_HOGPS_EventId_T { BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND, BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND, BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND, BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND...","GUID-4AA51FB9-9BB3-46D9-94DB-B2E05809427A.html@@@1.1.2.1.4.1.1 Confirm result@@@#define BLE_SMP_CONFIRM_YES 0x00 #define BLE_SMP_CONFIRM_NO 0x01 Defines user confirmation results for pairing. Macro Description BLE_SMP_CONFIRM_YES User confirms &quot;YES&quot;. BLE_SMP_CONFIRM_NO User...","GUID-4AB2996B-F714-4AC6-B13A-232AE4D5AEC7.html@@@2.4.1.1 Conformance@@@If conformance to this specification is claimed, all capabilities indicated as mandatory for this specification shall be supported in the specified manner (process-mandatory). This also applies for...","GUID-4B313C94-F7CE-4AF8-9A1C-064F260EAEB5.html@@@2.3.7 Acronyms and Abbreviations@@@Table 7.1: Abbreviations and Acronyms Acronyms and Abbreviations Meaning GATT Generic Attribute Profile LE Low Energy L2CAP CoC L2CAP Connection Oriented Channels L2CAP PSM L2CAP Protocol/Service...","GUID-4B41B616-5FA0-4274-8F18-E84B3534F505.html@@@1.1.2.3.4.1.3.10 BLE_OTAPC_EvtStartRspInd_T@@@typedef struct BLE_OTAPC_EvtStartRspInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtStartRspInd_T; Structure for the BLE_OTAPC_EVT_START_RSP_IND event. Field Description connHandle...","GUID-4BB8FD63-76FD-4D39-8EEF-FBC86B43A2DC.html@@@1.1.2.3.1.1.2.3 BLE_ANCS_EventId_T@@@typedef enum BLE_ANCS_EventId_T { BLE_ANCS_EVT_DISC_COMPLETE_IND, BLE_ANCS_EVT_ERR_ATTR_BUF_IND, BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND, BLE_ANCS_EVT_NTFY_ADDED_IND, BLE_ANCS_EVT_NTFY_MODIFIED_IND...","GUID-4C3AA05A-5FD2-4DF1-9DA3-6E797B864D62.html@@@1.1.2.1.1.3.36 BLE_GAP_ExtAdvEnableParams_T@@@typedef struct BLE_GAP_ExtAdvEnableParams_T { uint8_t advHandle; uint16_t duration; uint8_t maxExtAdvEvts; }BLE_GAP_ExtAdvEnableParams_T; Structure for configuring extended advertising enable...","GUID-4C6C7959-03BE-44B0-93E3-78CA907E01B1.html@@@1.1.2.3.4.1.3.8 BLE_OTAPC_EvtReqRspInd_T@@@typedef struct BLE_OTAPC_EvtReqRspInd_T { uint16_t connHandle; uint8_t result; uint16_t maxFragImgSize; uint32_t imgStartIdx; uint32_t fwImageVer; } BLE_OTAPC_EvtReqRspInd_T; Structure for the...","GUID-4CA0295B-2946-4A3F-8BE8-8C217673D7BE.html@@@1.1.2.1.2.1.19 Server Characteristic Configuration definitions@@@#define SCCD_BROADCAST 0x0001 Defines the Server Characteristic Configuration bit field. Macro Description SCCD_BROADCAST If set, the Characteristic Value shall be broadcast...","GUID-4CA51F22-7C6E-4B0A-B31E-AC0D8F38B99C.html@@@1.1.2.3.4.1.3.1 BLE_OTAPC_Event_T@@@typedef struct BLE_OTAPC_Event_T { BLE_OTAPC_EventId_T eventId; BLE_OTAPC_EventField_T eventField; } BLE_OTAPC_Event_T; BLE OTA profile callback event structure. Field Description eventId Identifier...","GUID-4D3EFDBD-737D-4301-AC80-E0C082AFB2F9.html@@@1.1.2.3.7.1.4.3 BLE_TRSPC_EventRegister@@@void BLE_TRSPC_EventRegister (BLE_TRSPC_EventCb_T bleTranCliHandler); Registers a callback function for BLE Transparent profile client events. Parameter Description [in] bleTranCliHandler The client...","GUID-4D450F27-0510-4DEB-A85B-41D18C6809C0.html@@@1.1.2.3.6.1.4.7 BLE_TRCBPS_Init@@@uint16_t BLE_TRCBPS_Init ( void ); Initialize the BLE Transparent Credit Based Profile. Return value Description MBA_RES_SUCCESS Successfully initialized the profile. MBA_RES_INVALID_PARA Invalid MTU...","GUID-4D7AB850-C364-4435-9A88-30536EA6415E.html@@@1.1.2.1.1.1.19 Extended scan data length@@@#define BLE_GAP_EXT_SCAN_DATA_LEN_MIN 0x004A #define BLE_GAP_EXT_SCAN_DATA_LEN_MAX 0x0672 Defines the range of extended scan data length. Macro Description BLE_GAP_EXT_SCAN_DATA_LEN_MIN Minimum...","GUID-4DD65F65-7116-46D6-BE91-EB4B9EDA6F6C.html@@@1.1.2.1.1.4.20 BLE_GAP_GetDeviceAddr@@@uint16_t BLE_GAP_GetDeviceAddr (BLE_GAP_Addr_T *p_addr); Retrieves the current Bluetooth device address. Parameter Description [out] p_addr Pointer to the device address buffer. See BLE_GAP_Addr_T...","GUID-4E0C18C3-20B3-4A6B-A1B2-739151117520.html@@@1.1.2.1.1.1.50 Scan channels@@@#define BLE_GAP_SCAN_CHANNEL_37 0x01 #define BLE_GAP_SCAN_CHANNEL_38 0x02 #define BLE_GAP_SCAN_CHANNEL_39 0x04 Defines the channel map bit field for scan. Macro Description BLE_GAP_SCAN_CHANNEL_37 Use...","GUID-4E45A3BF-B384-45CF-8F86-DC3DDF70254B.html@@@1.1.2.1.6.3.2 BT_SYS_ErrCb_T@@@typedef void (*BT_SYS_ErrCb_T)(BT_SYS_ErrCode_T errCode); Callback type for Bluetooth system error events. Parameter Description [in] errCode Error code indicating the type of error that occurred. See...","GUID-4E4DAE13-1BCF-48DE-864E-DC821097161F.html@@@1.1.2.3.6 Transparent Credit Based Profile (TRCBP)@@@Provides the interface for the Transparent Credit Based Profile. See Microchip Transparent Credit Based Profile in detail Transparent Credit Based Profile Server Role Message Sequence Chart...","GUID-4E5532F6-DB71-4361-8C17-6971DEF76681.html@@@1.1.2.3.7.3.3 Transparent Profile Vendor Command Exchange Procedure@@@Example demonstrating vendor command exchange over the control pipe of the Transparent Profile client role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating vendor command exchange over the control pipe of the...","GUID-4E6414B1-49B8-427C-ACFB-97EF00444F24.html@@@1.1.2.1.2.5 Message Sequence Chart@@@Adding and Removing GATT Services Handling Peer Reads of Characteristic Values Handling Peer Reads of Long Characteristic Values Handling Peer Writes of Characteristic Values Handling Peer Writes of...","GUID-4E70AF2E-7136-4DBA-BA83-8C67FAACF9F8.html@@@1.1.2.3.5.1.2 Enums@@@BLE_PXPM_AlertLevel_T Alert levels for BLE Proximity Profile Monitor. BLE_PXPM_EventId_T Enumeration type of BLE PXP Monitor callback events...","GUID-4EAA8368-F1C7-4125-A844-2BFFE5CAF2F9.html@@@1.1.2.3.4.2.3 Structures@@@BLE_OTAPS_EventCb_T Type definition for the BLE OTA profile event callback function. BLE_OTAPS_EventField_T Union of BLE OTA profile callback event data types. BLE_OTAPS_EvtUpdatingInd_T Structure for...","GUID-4EE423F4-3FF4-4041-A31B-88438BAB2CF5.html@@@1.1.2.3.6.1.3.2 BLE_TRCBPS_Event_T@@@typedef struct BLE_TRCBPS_Event_T { BLE_TRCBPS_EventId_T eventId; BLE_TRCBPS_EventField_T eventField; } BLE_TRCBPS_Event_T; BLE Transparent Credit Based profile callback event. Field Description...","GUID-4EF535CC-F5E9-484F-A6A2-B281191A5254.html@@@1.1.2.3.2.1.1.4 ANPC maximum descriptor count@@@#define BLE_ANPC_DESC_MAX_NUM ( 2 ) Defines the maximum number of descriptors. Macro Description BLE_ANPC_DESC_MAX_NUM Maximum number of descriptors allowed...","GUID-4F1C8E06-FABF-4598-960D-B06CBD7081AD.html@@@1.1.2.2.1.4.11 BLE_DM_ProceedSecurity@@@uint16_t BLE_DM_ProceedSecurity (uint16_t connHandle, bool repairing); Initiates the security process based on the current role and pairing status. For the Central role, if paired information exists...","GUID-4F904B7C-13AE-4B10-9F6A-D019E5B18E18.html@@@1.1.2.1.1.4.26 BLE_GAP_ReadAuthPayloadTimeout@@@uint16_t BLE_GAP_ReadAuthPayloadTimeout (uint16_t connHandle, uint16_t *p_authPayloadTo); Reads the authenticated payload timeout value for a BLE connection. Parameter Description [in] connHandle...","GUID-5004C7E1-58FE-4A71-9D23-E73F5CE40FEF.html@@@2.5.3 Service Characteristics@@@This section defines the characteristic and descriptor requirements for Transparent Service. Table 3.1 provides a summary of the characteristic support requirements for Transparent Service. Table 3.2...","GUID-505D3425-57BF-4681-BA7F-0DF175AD1063.html@@@2.3.4.1 GATT Sub-Procedure Requirements@@@Requirements in this section represent a minimum set of requirements for a Transparent Credit Based Client. Other GATT sub-procedures may be used if supported by both of Transparent Credit Based...","GUID-50888E80-2BB6-4250-8C86-4B83F0FABC31.html@@@1.1.2.1.4.3.3 BLE_SMP_Event_T@@@typedef struct BLE_SMP_Event_T { BLE_SMP_EventId_T eventId; BLE_SMP_EventField_T eventField; } BLE_SMP_Event_T; BLE SMP callback event structure. Field Description eventId Identifier for the BLE SMP...","GUID-508FDA3D-6874-4E42-85E7-56A1C0A02069.html@@@1.1.2.1.1.1.14 Event type for extended advertising reports@@@#define BLE_GAP_EXT_ADV_RPT_TYPE_CONNECTABLE ( 1 &lt;&lt; 0 ) #define BLE_GAP_EXT_ADV_RPT_TYPE_SCANNABLE ( 1 &lt;&lt; 1 ) #define BLE_GAP_EXT_ADV_RPT_TYPE_DIRECTED ( 1 &lt;&lt; 2 ) #define...","GUID-50B09164-637F-40A5-A406-BF6625422756.html@@@1.1.2.1.1.1.53 Scan filter policies@@@#define BLE_GAP_SCAN_FP_ACCEPT_ALL 0x00 #define BLE_GAP_SCAN_FP_ACCEPT_LIST 0x01 #define BLE_GAP_SCAN_FP_NOT_RESOLVED_DIRECTED 0x02 #define BLE_GAP_SCAN_FP_ACCEPT_LIST_NOT_RESOLVED_DIRECTED 0x03...","GUID-50E51CC5-2E4A-410D-B420-0EBE3E49AD62.html@@@1.1.2.3.7.1 Transparent Profile Client Role@@@Provides a interface for the BLE Transparent Profile Client. Defines Enumerations Structures Functions...","GUID-50F37979-1190-46A0-AD12-C27766B0C56A.html@@@1.1.2.3.1.1.2.2 BLE_ANCS_CategoryId_T@@@typedef enum BLE_ANCS_CategoryId_T { BLE_ANCS_CATEGORY_ID_OTHER, BLE_ANCS_CATEGORY_ID_INCOMING_CALL, BLE_ANCS_CATEGORY_ID_MISSED_CALL, BLE_ANCS_CATEGORY_ID_VOICE_MAIL, BLE_ANCS_CATEGORY_ID_SOCIAL...","GUID-5112AEFD-5062-4AC9-BB3D-FA6AAB7CF122.html@@@1.1.2.2.1.4.6 BLE_DM_EventRegister@@@uint16_t BLE_DM_EventRegister (BLE_DM_EventCb_T eventCb); Registers a callback function for BLE_DM events. This API should be called during the application initialization phase. Parameter Description...","GUID-5126202B-8E1A-41C3-8822-1CD89CC37D1A.html@@@1.1.2.1.8.4.2 HCI_EventRegister@@@void HCI_EventRegister (HCI_EventCb_T eventCb); HCI event callback registration. Parameter Description [in] eventCb Callback function for HCI event...","GUID-51A5E683-EC34-4BFF-86B8-9A0CDE7B536E.html@@@1.1.2.2.5.1.2.6 MW_AES_CcmDecryptInit@@@uint16_t MW_AES_CcmDecryptInit (MW_AES_Ctx_T * p_ctx, uint8_t *p_aesKey, uint8_t *p_nonce, uint8_t nonceSz, uint8_t tagSz, uint8_t *p_aad, uint16_t aadSz, uint16_t dataSz); Initializes AES CCM...","GUID-51FC8C8F-7001-46B3-9139-5E17517B3959.html@@@1.1.2.3.5.1.1.1 PXPM Maximum descriptor number@@@#define BLE_PXPM_DESC_MAX_NUM ( 2U ) Defines maximum number of descriptors allowed. Macro Description BLE_PXPM_DESC_MAX_NUM Maximum number of descriptors...","GUID-52EE6A92-DC75-476D-8F69-5BA5154882EA.html@@@1.1.2.2.5.1.2.3 MW_AES_CbcDecryptInit@@@uint16_t MW_AES_CbcDecryptInit (MW_AES_Ctx_T * p_ctx, uint8_t *p_aesKey, uint8_t *p_iv); Initializes AES CBC block cipher decryption. Parameter Description [out] p_ctx Pointer to the AES context...","GUID-52FF3AE7-F385-4388-8777-53513C109A13.html@@@1.1.2.3.4.1.1.2 OTAPC encryption type definitions@@@#define BLE_OTAPC_ENC_NONE ( 0x00U ) #define BLE_OTAPC_ENC_AES_CBC ( 0x01U ) Defines the encryption methods used for OTA images. Macro Description BLE_OTAPC_ENC_NONE No encryption applied to the...","GUID-531EDDE0-0642-450B-BDF3-0792437EC4D9.html@@@1.1.2.1.1.1.9 Appearance definitions@@@#define GAP_APPEARANCE_UNKNOWN 0 #define GAP_APPEARANCE_GENERIC_PHONE 64 #define GAP_APPEARANCE_GENERIC_COMPUTER 128 #define GAP_APPEARANCE_GENERIC_WATCH 192 #define GAP_APPEARANCE_GENERIC_HID 960...","GUID-5380FB0F-E862-47BA-96E7-A025291296EC.html@@@1.1.2.1.2.4.7 GATTC_HandleValueConfirm@@@uint16_t GATTC_HandleValueConfirm (uint16_t connHandle); Sends a Handle Value Confirmation from the GATT Client to the GATT Server upon receiving a Handle Value Indication. Call this API only after...","GUID-53D7C555-EBE7-4CA1-8F8B-A0B937288A00.html@@@1.1.2.1.2.3.2 GATT_Event_T@@@typedef struct GATT_Event_T { GATT_EventId_T eventId; GATT_EventField_T eventField; } GATT_Event_T; GATT callback event structure. Field Description eventId Identifier for the GATT event. See...","GUID-54204554-81F3-47FC-9339-4781687E1F5D.html@@@ANPS supported category ID bit masks@@@#define BLE_ANPS_CAT_ID_SIMPLE_ALERT ( 0x00 ) #define BLE_ANPS_CAT_ID_EMAIL ( 0x01 ) #define BLE_ANPS_CAT_ID_NEWS ( 0x02 ) #define BLE_ANPS_CAT_ID_CALL ( 0x03 ) #define BLE_ANPS_CAT_ID_MISSED_CALL (...","GUID-5428E2E0-A3A8-40B5-8660-A5EC080B4D39.html@@@1.1.2.1.1.3.55 BLE_GAP_SubrateParams_T@@@typedef struct BLE_GAP_SubrateParams_T { uint16_t subrateMin; uint16_t subrateMax; uint16_t maxLatency; uint16_t continuationNum; uint16_t supervisionTimeout; }BLE_GAP_SubrateParams_T; Structure for...","GUID-54377E49-7E19-4650-8E02-2AF163E8FEF5.html@@@1.1.2.1.1.3.7 BLE_GAP_CharEncDataKeyMatl_T@@@typedef struct BLE_GAP_CharEncDataKeyMatl_T { bool enable; } BLE_GAP_CharEncDataKeyMatl_T; Structure for the Encrypted Data Key Material characteristic. Field Description enable True to enable the...","GUID-5452D89C-3298-443B-A932-5DC08765C257.html@@@2.1.1.2 Bluetooth Specification Release Capability@@@This specification is compatible with Bluetooth Core Specification. [2]...","GUID-5474BF23-242F-4B76-8261-9D6E958F93D5.html@@@1.1.2.1.2.3.19 GATT_EvtUpdateMtu_T@@@typedef struct GATT_EvtUpdateMtu_T { uint16_t connHandle; uint16_t exchangedMTU; } GATT_EvtUpdateMtu_T; Structure for ATT_EVT_UPDATE_MTU event. Field Description connHandle Connection handle...","GUID-54ACB83D-103B-4CF5-8456-9144EE0AFEED.html@@@1.1.2.1.1.6 Notes@@@Categories of Advertising APIs and Events TX Power Control Concept...","GUID-54C7E990-94F7-40DD-BD1F-A5628B538B05.html@@@2.1.4.5.3 Firmware Update Request Operation@@@This procedure is used by OTA Client when it attempts to request OTA Server to authorize OTA firmware update process. The OTA Client shall write the OTACP Firmware Update Request opcode to the OTACP...","GUID-558BC684-B811-4516-BA33-E96825287EC9.html@@@1.1.2.1.3.1.4 L2CAP maximum PDU size@@@#define BLE_L2CAP_MAX_PDU_SIZE 1024 Defines the maximum size for Protocol Data Units (PDU) in bytes. Macro Description BLE_L2CAP_MAX_PDU_SIZE Maximum size of a L2CAP PDU in bytes...","GUID-5650922A-83B3-4561-BAA4-1D29B537AE04.html@@@1.1.2.1.1.4.50 BLE_GAP_SetExtAdvParams@@@uint16_t BLE_GAP_SetExtAdvParams (BLE_GAP_ExtAdvParams_T *p_extAdvParams, int8_t *p_selectedTxPower); Configures the extended advertising parameters. This API is part of the extended advertising...","GUID-565BC0FE-0B56-41E7-AA8A-66B800CD3E98.html@@@1.1.2.1.4.3.11 BLE_SMP_EvtKeypress_T@@@typedef struct BLE_SMP_EvtKeypress_T { uint16_t connHandle; uint8_t notifyType; } BLE_SMP_EvtKeypress_T; Structure for BLE_SMP_EVT_KEYPRESS event. Field Description connHandle Connection handle...","GUID-56DEF505-0E22-417E-9AEC-989BBDAB313D.html@@@1.1.2.1.1.3.38 BLE_GAP_ExtCreateConnParams_T@@@typedef struct BLE_GAP_ExtCreateConnParams_T { bool enable; uint16_t scanInterval; uint16_t scanWindow; BLE_GAP_ConnParams_T connParams; }BLE_GAP_ExtCreateConnParams_T; Structure for configuring...","GUID-56E8CC58-715D-4227-865B-C80974153431.html@@@1.1.2.3.5.1.1.2 UUIDs for characteristics in the Proximity profile@@@#define BLE_PXPM_UUID_ALERT_LEVEL ( 0x2A06U ) #define BLE_PXPM_UUID_TXPOWER_LEVEL ( 0x2A07U ) Defines UUIDs for characteristics in the Proximity profile. Macro Description BLE_PXPM_UUID_ALERT_LEVEL...","GUID-56F4E97E-6C55-4593-9D14-0C0D26EA0CB1.html@@@1.1.2.1.1.3.51 BLE_GAP_ScanningParams_T@@@typedef struct BLE_GAP_ScanningParams_T { uint8_t type; uint16_t interval; uint16_t window; uint8_t filterPolicy; uint8_t disChannel; } BLE_GAP_ScanningParams_T; Structure for configuring scanning...","GUID-56FDC57E-AF57-48A6-B67A-50D3606476D9.html@@@1.1.2.1.2.5.14 Reading Long Characteristic Values@@@Example demonstrating how to read long characteristic values (N=ATT_MTU-1)...","GUID-57858D1B-EA35-40DE-9714-EBD47F6C09F8.html@@@2.4.3 Service Characteristics@@@This section defines the characteristic and descriptor requirements for OTAS. Table 3.1 provides a summary of the characteristic support requirements for OTAS. Table 3.2 defines the characteristic...","GUID-57983CDC-9821-4241-97A5-7459D623DEB7.html@@@1.1.2.1.1.1.64 Type of constant tone extension@@@#define BLE_GAP_CTE_TYPE_AOA 0x00 #define BLE_GAP_CTE_TYPE_AOD_WITH_1US 0x01 #define BLE_GAP_CTE_TYPE_AOD_WITH_2US 0x02 #define BLE_GAP_CTE_TYPE_NO 0x03 Defines the type of Constant Tone Extension...","GUID-57C46099-FC2D-4F0C-9340-F4139DF8C632.html@@@1.1.2.1.1.3.50 BLE_GAP_ScanFilterServiceData_T@@@typedef struct BLE_GAP_ScanFilterServiceData_T { uint8_t uuidLen; uint8_t uuidData[ 16 ]; uint8_t svcDataLen; uint8_t svcData[BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN]; } BLE_GAP_ScanFilterServiceData_T...","GUID-57E5240C-10EA-498C-AFA2-BC04007F0834.html@@@1.1.2.1.4.1.7 Pairing result@@@#define BLE_SMP_PAIRING_SUCCESS 0x00 #define BLE_SMP_PAIRING_FAIL 0x01 #define BLE_SMP_PAIRING_TIMEOUT 0x02 Defines the possible outcomes of the BLE pairing process. Macro Description...","GUID-57FF4904-086D-44E9-823D-2080363CDAA0.html@@@1.1.2.1.1.1.55 Scan modes@@@#define BLE_GAP_SCAN_MODE_GENERAL_DISCOVERY 0x00 #define BLE_GAP_SCAN_MODE_LIMITED_DISCOVERY 0x01 #define BLE_GAP_SCAN_MODE_OBSERVER 0x02 Defines the scanning modes that determine the type of...","GUID-582E1896-6B98-476C-A4B3-68B8C449643D.html@@@1.1.2.3.3.1.3.9 BLE_HOGPS_SendMouseMotionInputReport@@@uint16_t BLE_HOGPS_SendMouseMotionInputReport (uint16_t connHandle, int16_t xAxis, int16_t yAxis); Sends a HID mouse motion input report. Parameter Description [in] connHandle The connection handle...","GUID-59048023-5FBD-4CC7-831E-5E36B5378A28.html@@@1.1.2.1.6.2.2 BT_SYS_LogType_T@@@typedef enum BT_SYS_LogType_T { BT_STS_LOG_TYPE_HCI_COMMAND = ( 0x0100 + 0x0001 ), BT_STS_LOG_TYPE_HCI_ACL_TX, BT_STS_LOG_TYPE_HCI_ACL_RX, BT_STS_LOG_TYPE_HCI_EVENT, }BT_SYS_LogType_T; Enumerates the...","GUID-59329C67-A345-4700-8FE4-BAF20D3B4EBB.html@@@2.1.4.5.2 OTA Data Discovery@@@This procedure shall be used for fragmented image distribution. The OTA Client shall configure the OTA Data characteristic for notifications (i.e., via the Client Characteristic Configuration...","GUID-5965B910-3F32-43D0-88E7-A054AE2F10C6.html@@@1.1.2.3.7.1.3.5 BLE_TRSPC_EvtDownlinkStatus_T@@@typedef struct BLE_TRSPC_EvtDownlinkStatus_T { uint16_t connHandle; uint8_t status; uint8_t currentCreditNumber; } BLE_TRSPC_EvtDownlinkStatus_T; Structure for the BLE_TRSPC_EVT_DL_STATUS event. Field...","GUID-59BC791A-3CBC-45C0-B7E2-D1177C64453F.html@@@2.1.2.1 Roles@@@The profile defines two roles: OTA Client and OTA Server. In general, mobile phone plays as OTA Client role and BLE accessory device is Server device...","GUID-59CE9059-FA55-4B29-B0C5-BE23701674FD.html@@@1.1.2.1.1.1.17 Extended advertising event properties@@@#define BLE_GAP_EXT_ADV_EVT_PROP_CONNECTABLE_ADV ( 1 &lt;&lt; 0 ) #define BLE_GAP_EXT_ADV_EVT_PROP_SCANNABLE_ADV ( 1 &lt;&lt; 1 ) #define BLE_GAP_EXT_ADV_EVT_PROP_DIRECTED_ADV ( 1 &lt;&lt; 2 ) #define...","GUID-5A2A5B06-A546-48A9-9421-F2F143645F0D.html@@@1.1.2.1.5.2.1 STACK_GroupId_T@@@typedef enum STACK_GroupId_T{ STACK_GRP_BLE_GAP, STACK_GRP_BLE_L2CAP, STACK_GRP_BLE_SMP, STACK_GRP_GATT, }STACK_GroupId_T; Enumerates the group IDs for different stack components. Enumerator...","GUID-5A7208D7-81D9-4C7C-82BD-F9753F4B3011.html@@@1.1.2.1.3.1.9 L2CAP maximum SPSM number@@@#define BLE_L2CAP_MAX_CB_SPSM_NUM 2 Defines the maximum number of Service Protocol/Service Multiplexer (SPSM) identifiers that can be registered for credit-based channels. Macro Description...","GUID-5A735015-F630-4BB9-97C7-CCB8E4867F7B.html@@@1.1.2.1.7.2 Structures@@@BLE_DTM_TransmitterTestParams_T Structure for the BLE Direct Test Mode (DTM) transmitter test...","GUID-5A7B32D0-EA17-4F5F-8676-23513BE322C9.html@@@1.1.2.1.1.3.27 BLE_GAP_EvtPeriAdvReport_T@@@typedef struct BLE_GAP_EvtPeriAdvReport_T { uint16_t syncHandle; uint8_t txPwr; int8_t rssi; uint8_t cteType; uint8_t dataStatus; uint8_t dataLength; uint8_t...","GUID-5B05105A-C1BE-4F55-A3BE-A9B27337297B.html@@@1.1.2.2.3.3.10 BLE_DD_EvtConnect_T@@@typedef struct BLE_DD_EvtConnect_T { uint16_t connHandle; } BLE_DD_EvtConnect_T; Structure for BLE_DD_EVT_CONNECTED event. Field Description connHandle Connection handle associated with this...","GUID-5B80F561-1E54-4BC6-9294-B3E75D35AA88.html@@@2.6.3 Service Characteristics@@@The following characteristics are exposed in the TRCBS: L2CAP PSM Value (L2PSM) Characteristic: UUID 49535343-C2DB-4991-9A9F-68C13B25DD1F Transparent Credit Based Control Point (TRCBCP)...","GUID-5BBF740E-F06C-4FB9-AB65-6F44C4BEFC2B.html@@@1.1.2.2.3.3.4 BLE_DD_DiscChar_T@@@typedef struct BLE_DD_DiscChar_T { ATT_Uuid_T const *p_uuid; uint8_t settings; } BLE_DD_DiscChar_T; Structure for the characteristic information used during the discovery process. Field Description...","GUID-5BF2AEA9-62A1-4983-8DB5-F7ECF8E43740.html@@@1.1.2.1.4 Security Manager Protocal (SMP)@@@Defines the interface for the BLE SMP functions provided by the BLE Library. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-5C4332DF-3DBC-44CA-BB0E-CD2D9A622A19.html@@@1.1.2.1.2.3.6 GATT_EvtDiscCharResp_T@@@typedef struct GATT_EvtDiscCharResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; uint8_t...","GUID-5C66E77D-6667-4E7A-A7D0-0CF327985A40.html@@@1.1.2.1.1.1.65 TX power change reason@@@#define BLE_GAP_LOCAL_TX_POWER_CHANGED ( 0U ) #define BLE_GAP_REMOTE_TX_POWER_CHANGED ( 1U ) #define BLE_GAP_READ_REMOTE_POWER_COMPLETED ( 2U ) Enumerates the reasons for reporting a change in TX...","GUID-5CA98112-2036-4706-AAFC-5BC8C9465A0C.html@@@1.1.2.3.4.1.3.7 BLE_OTAPC_EvtFragmentComplInd_T@@@typedef struct BLE_OTAPC_EvtFragmentComplInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtFragmentComplInd_T; Structure for the BLE_OTAPC_EVT_FRAGMENT_COMPL_IND event. Application shall...","GUID-5D17839E-4880-4584-B1A4-182806385675.html@@@1.1.2.3.1.1.3.5 BLE_ANCS_EventCb_T@@@typedef void (*BLE_ANCS_EventCb_T)(BLE_ANCS_Event_T *p_event); BLE ANCS callback function type. Applications implement this callback to receive BLE ANCS events from the stack. Parameter Description...","GUID-5D42802D-F3E3-40CC-943D-48F66577D896.html@@@1.1.2.1.2.1.4 Attribute settings@@@#define SETTING_MANUAL_WRITE_RSP 0x01 #define SETTING_MANUAL_READ_RSP 0x02 #define SETTING_UUID_16 0x04 #define SETTING_VARIABLE_LEN 0x08 #define SETTING_ALLOW_OFFSET 0x10 #define SETTING_CCCD 0x20...","GUID-5D4780E3-3C97-4658-ACA9-B149510D21DB.html@@@1.1.2.3.2.2.4.5 BLE_ANPS_SendNewAlert@@@uint16_t BLE_ANPS_SendNewAlert (uint16_t connHandle, uint8_t catId, uint8_t numAlert, uint16_t txtStrLen, const uint8_t *p_txtStr); Sends a new alert notification to a connected peer device. Parameter...","GUID-5D9E1C52-01BE-4D9A-A0C6-F0E33E792578.html@@@1.1.2.1.1.4.53 BLE_GAP_SetExtScanRspData@@@uint16_t BLE_GAP_SetExtScanRspData (BLE_GAP_ExtAdvDataParams_T *p_scanDataParam); Configures extended scan response data for an advertising set. This function sets the scan response data associated...","GUID-5DA20D72-373F-4E6E-9615-24845CF7B80D.html@@@1.1.2.1.3.5.11 BLE_L2CAP_Init@@@uint16_t BLE_L2CAP_Init ( void ); Initializes the BLE L2CAP main module. Return value Description MBA_RES_SUCCESS Successfully initialized the BLE L2CAP main module. MBA_RES_OOM Internal memory...","GUID-5E3D4D30-01FF-450E-856D-7B5F7B91585E.html@@@2.1.1 Introduction@@@The OTA Profile (OTAP) defines fundamental requirements to enable over the air (OTA) application. One application scenario is OTA Client distributes new firmware image to OTA Server by the OTA Service...","GUID-5E63B5E0-21F7-4152-B256-057A8FCC922B.html@@@1.1.2.2.3.4.3 BLE_DD_Init@@@bool BLE_DD_Init ( void ); Initializes the BLE Device Discovery (BLE_DD) module. Return value Description true Initialization of the BLE_DD module was successful. false Initialization of the BLE_DD...","GUID-5EA99334-2816-468E-8CEE-115B0ADD3B9D.html@@@1.1.2.3.7.2.4.5 BLE_TRSPS_Init@@@uint16_t BLE_TRSPS_Init ( void ); Initializes the BLE Transparent Profile Server. Return value Description MBA_RES_SUCCESS Service successfully added to the service table. MBA_RES_FAIL Failed to add...","GUID-5EF0EB74-0A06-457B-8C3B-8138607FE7C0.html@@@1.1.2.1.2.1.7 Client Characteristic Configuration definitions@@@#define NOTIFICATION 0x0001 #define INDICATION 0x0002 Defines the Client Characteristic Configuration bit field. Macro Description NOTIFICATION If set, the Characteristic Value shall be notified...","GUID-5F20AA2C-04D9-4E87-80E6-D5D352EA6A08.html@@@1.1.2.3.2.1.3.3 BLE_ANPC_DescList_T@@@typedef struct BLE_ANPC_DescList_T { uint8_t totalNum; BLE_ANPC_DescInfo_T descInfo[BLE_ANPC_DESC_MAX_NUM]; }BLE_ANPC_DescList_T; Structure representing the descriptor list. Field Description totalNum...","GUID-5F2F020E-30D1-4FEC-B236-3213C40F6AED.html@@@1.1.2.3.6.1.3.4 BLE_TRCBPS_EvtConnStatus_T@@@typedef struct BLE_TRCBPS_EvtConnStatus_T { uint16_t connHandle; BLE_TRCBPS_ChanType_T chanType; uint8_t leL2capId; uint16_t peerMtu; uint16_t peerMps; uint8_t status; } BLE_TRCBPS_EvtConnStatus_T...","GUID-5F79D6B1-A941-426E-85AB-0EA6F2BA43FB.html@@@1.1.2.3.7.3.2 Transparent Profile Server Role Initialization and Connection Establishment Procedure@@@Example demonstrating the initialization of the Transparent Profile server role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the opening of the Transparent Profile server role control pipe. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example...","GUID-5FBAF639-F6DA-4A3C-BCC1-70EAC76AA65F.html@@@2.1.2 Configuration@@@...","GUID-60223ED9-61C4-45F1-94B5-70CC468EE1A9.html@@@1.1.2.1.8.4.1 HCI_Init@@@void HCI_Init (uint8_t preferAclTxBufNum); Initialize HCI mode. Parameter Description [in] preferAclTxBufNum HCI ACL Tx buffer number that application prefer. Note that each buffer is 251 bytes...","GUID-60560479-408F-4398-9863-E056A82F51CC.html@@@1.1.2.1.1.5.3 GAP Connection Creation Procedure@@@Example demonstrating the central device connecting to legacy advertising devices Example demonstrating the central device establishing connections with extended advertising devices \u00A0\u00A0\u00A0\u00A0...","GUID-60C31EFB-81A9-4DDB-877F-CA13A1D7D247.html@@@1.1.2.3.1 Apple Notification Center Service (ANCS)@@@Provides the interface for the BLE Apple Notification Center Service (ANCS) Profile. Apple Notification Center Service Consumer Role...","GUID-60DAB359-CAF1-41E0-979A-527BC87CF775.html@@@1.1.2.1.2.1.3 Attribute permissions@@@#define PERMISSION_READ 0x01 #define PERMISSION_READ_AUTHEN 0x02 #define PERMISSION_READ_AUTHEN_SC 0x04 #define PERMISSION_READ_ENC 0x08 #define PERMISSION_WRITE 0x10 #define PERMISSION_WRITE_AUTHEN...","GUID-610666C6-91C4-4A97-A3F7-71407FE3E639.html@@@1.1.2.2.1.3.10 BLE_DM_EvtSecuritySuccess_T@@@typedef struct BLE_DM_EvtSecuritySuccess_T { BLE_DM_SecurityProc_T procedure; bool bonded; } BLE_DM_EvtSecuritySuccess_T; Data structure for BLE_DM_EVT_SECURITY_SUCCESS event. Field Description...","GUID-6134F8DB-546D-4ED7-9B87-9B05758ADF00.html@@@1.1.2.2.5.2.3.3 MW_DFU_FwImageRead@@@uint16_t MW_DFU_FwImageRead (uint32_t offset, uint16_t length, uint8_t *p_content); Reads a fragment of the firmware image from flash memory. The first 16 bytes of the image fragment read from flash...","GUID-61D62468-F49F-4C26-BE31-A66F9D548551.html@@@1.1.2.1.2.1.17 Permission key size@@@#define ATT_PERMISSION_KEY_SIZE 0x10 Defines the minimum key size for attribute permissions. Access to certain attributes may require permissions such as encryption or authentication. The key size...","GUID-62036F9B-3D3F-4756-834A-909C23AE410A.html@@@1.1.2.3.5.1.4.9 BLE_PXPM_WriteIasAlertLevel@@@uint16_t BLE_PXPM_WriteIasAlertLevel (uint16_t connHandle, BLE_PXPM_AlertLevel_T level); Writes the Alert Level value to the Immediate Alert Service of a connected peer PXP Reporter device. Parameter...","GUID-6255454B-6379-4BF0-8912-ADB6A21871FA.html@@@1.1.2.1.4.5.6 SMP Pairing Timeout Handling@@@Example demonstrating SMP Pairing Timeout in the GAP central role Example demonstrating SMP Pairing Timeout in the GAP peripheral role...","GUID-62592A27-6DC0-40EE-BAA4-F88BA9296B2E.html@@@1.1.2.3.7.1.1.1 TRSPC downlink status definition@@@#define BLE_TRSPC_DL_STATUS_DISABLED 0x00 #define BLE_TRSPC_DL_STATUS_NONCBFCENABLED 0x10 #define BLE_TRSPC_DL_STATUS_CBFCENABLED 0x20 Defines the status of the BLE transparent service downlink. Macro...","GUID-62798694-B163-43E2-B37B-B50D38E905AC.html@@@1.1.2.1.4.4.9 BLE_SMP_Keypress@@@uint16_t BLE_SMP_Keypress (uint16_t connHandle, uint8_t notifyType); Sends a keypress notification to the remote device to indicate key entry or erasure. This function should be called in response to...","GUID-629BEAFF-0BDD-4521-8E20-F81D3FA47153.html@@@1.1.2.3.7.1.2.1 BLE_TRSPC_EventId_T@@@typedef enum BLE_TRSPC_EventId_T { BLE_TRSPC_EVT_UL_STATUS = 0x01 , BLE_TRSPC_EVT_DL_STATUS, BLE_TRSPC_EVT_RECEIVE_DATA, BLE_TRSPC_EVT_VENDOR_CMD, BLE_TRSPC_EVT_VENDOR_CMD_RSP...","GUID-62C15569-E282-4398-8BF2-3D503D4EDCAE.html@@@1.1.2.3.7.3.5 Transparent Profile Data Exchange Procedure - Server Role@@@Example demonstrating data exchange over the data pipe of the Transparent Profile server role, where the data is transmitted from the server role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating data exchange over...","GUID-62CC2CE4-4F06-4CC3-AB79-2685F531C0EE.html@@@1.1.2.1.1.4.68 BLE_GAP_SetScanRspData@@@uint16_t BLE_GAP_SetScanRspData (BLE_GAP_AdvDataParams_T *p_scanData); Sets scan response data. If advertising is currently enabled, the new data will be used in subsequent advertising events. If an...","GUID-6321B18E-F243-4D13-AB67-578F5928793F.html@@@1.1.2.2.3.3.12 BLE_DD_EvtDiscResult_T@@@typedef struct BLE_DD_EvtDiscResult_T { uint16_t connHandle; } BLE_DD_EvtDiscResult_T; Structure for BLE_DD_EVT_DISC_COMPLETE event. Field Description connHandle Connection handle associated with this...","GUID-636B185D-E80D-4839-A443-EF1750F1D2B1.html@@@1.1.2.1.4.3 Structures@@@BLE_SMP_Config_T Structure for configuring pairing parameters in BLE Security Manager Protocol (SMP). BLE_SMP_EncInfo_T Structure for encryption information used in BLE connections. BLE_SMP_Event_T...","GUID-6399D17D-61A2-45C5-984C-E13AD14E6FFA.html@@@2.1.2.3 Transport Dependencies@@@There are no transport restrictions imposed by this profile specification. Bluetooth Low Energy transport is recommended from real implementation view...","GUID-63B122F1-1D91-4C89-AB3F-A788CB0EE540.html@@@1.1.2.3.2.1.4.5 BLE_ANPC_EventRegister@@@void BLE_ANPC_EventRegister (BLE_ANPC_EventCb_T routine); Registers a callback function for the BLE Alert Notification Client events. Parameter Description [in] routine The callback function to handle...","GUID-6403B49F-F3CE-4558-9AE1-843FA7B46844.html@@@1.1.2.1.3.5.9 BLE_L2CAP_ConnParamUpdateReq@@@uint16_t BLE_L2CAP_ConnParamUpdateReq (uint16_t connHandle, uint16_t intervalMin, uint16_t intervalMax, uint16_t latency, uint16_t timeout); Issues a connection parameter update request. This API...","GUID-64143354-67F2-4D8F-8A73-86F6D9FC88B4.html@@@1.1.2.1.4.3.12 BLE_SMP_EvtNotifyKeys_T@@@typedef struct BLE_SMP_EvtNotifyKeys_T { uint16_t connHandle; BLE_SMP_KeyList_T keys; } BLE_SMP_EvtNotifyKeys_T; Structure for BLE_SMP_EVT_NOTIFY_KEYS event. Field Description connHandle Connection...","GUID-64398A20-89D3-4565-BFB7-4B0DB9C72856.html@@@1.1.2.2.5 Utilities@@@Provides diverse utility interfaces for versatile usage. Advanced Encryption Standard (AES) Device Firmware Update (DFU)...","GUID-649AA2A5-B480-478B-AD34-137EDE75C855.html@@@1.1.2.2.4.3 Structures@@@BLE_SCM_Event_T BLE_SCM callback event structure. BLE_SCM_EventCb_T Callback type for BLE_SCM events. BLE_SCM_EventField_T Union of BLE_SCM callback event data types. BLE_SCM_EvtBondedCharInfo_T...","GUID-64FB53ED-9266-422D-99AF-6937637F48D7.html@@@1.1.2.1.2.3.24 GATTC_ReadByTypeParams_T@@@typedef struct GATTC_ReadByTypeParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t attrTypeLength; uint8_t attrType[ATT_MAX_UUID_SIZE]; } GATTC_ReadByTypeParams_T; Structure for a GATT Read...","GUID-652877E4-9C06-4E6C-82E6-13D814877EDF.html@@@1.1.2.3.5.1.3.1 BLE_PXPM_CharList_T@@@typedef struct BLE_PXPM_CharList_T { uint16_t attrHandle; uint8_t property; uint16_t charHandle; } BLE_PXPM_CharList_T; Structure representing a characteristic list. Field Description attrHandle...","GUID-65616CE8-689A-4BB4-AE57-E5F9A5B3FBF3.html@@@1.1.2.2.1.3.7 BLE_DM_EvtPairedDeviceFull_T@@@typedef struct BLE_DM_EvtPairedDeviceFull_T { uint8_t pairedDeviceNum; } BLE_DM_EvtPairedDeviceFull_T; Structure for BLE_DM_EVT_PAIRED_DEVICE_FULL event. Field Description pairedDeviceNum Current...","GUID-6596ABFB-83DF-4A71-9F32-47D23E1659EF.html@@@1.1.2.1.2.1.18 Procedure status@@@#define GATT_PROCEDURE_STATUS_CONTINUE 0x00 #define GATT_PROCEDURE_STATUS_FINISH 0x01 Represents the status of a GATT procedure. GATT procedures may span multiple ATT requests, resulting in multiple...","GUID-659E2978-389C-475F-819E-666E09440D66.html@@@1.1.2.2.1.5.3 Handling BLE_DM Resolving List@@@Example demonstrating the process of adding all paired devices to the BLE_DM Resolving List. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the process of adding selected paired devices to the BLE_DM Resolving...","GUID-66678822-983D-4BC6-8A16-964BC89A78E7.html@@@1.1.2.1.1.1.63 Transmitter PHY type@@@#define BLE_GAP_TX_1M_PHY 0x01 #define BLE_GAP_TX_2M_PHY 0x02 #define BLE_GAP_TX_CODED_PHY_S_8 0x03 #define BLE_GAP_TX_CODED_PHY_S_2 0x04 Defines the PHY types for transmitter test packets. Macro...","GUID-668E9C69-24E2-424D-ACDD-6B96B58E5716.html@@@1.1.2.1.1.1.11 Connection roles@@@#define BLE_GAP_ROLE_CENTRAL 0x00 #define BLE_GAP_ROLE_PERIPHERAL 0x01 Defines the roles a device can assume in a BLE connection. Macro Description BLE_GAP_ROLE_CENTRAL Device acts as the Central role...","GUID-66AEFD14-8A3F-4265-A2FB-303A15B6BB2F.html@@@1.1.2.3.5.1.3.5 BLE_PXPM_EventCb_T@@@typedef void (*BLE_PXPM_EventCb_T)(BLE_PXPM_Event_T *p_event); BLE Proximity Profile Monitor callback function type. Applications must implement this callback to receive BLE PXP Monitor events...","GUID-66B9DFB3-E85F-43CF-9BB1-1DF08A1B1E17.html@@@1.1.2.1.1.4.71 BLE_GAP_SyncInit@@@uint16_t BLE_GAP_SyncInit ( void ); Initializes BLE GAP sync module, which refers to periodic advertising synchronization. Synchronization is part of the extended advertising feature. Return value...","GUID-66D5E649-BBA1-4D92-88E7-6B187E003991.html@@@1.1.2.1.1.4.65 BLE_GAP_SetScanningEnable@@@uint16_t BLE_GAP_SetScanningEnable (bool enable, uint8_t filterDuplicate, uint8_t mode, uint16_t duration); Starts or stops scanning for advertising devices. Scanning is used to discover nearby...","GUID-670C68DB-E9F6-41D7-906A-F72766C95494.html@@@1.1.2.1.2.4.27 GATTS_UpdateBondingInfo@@@uint16_t GATTS_UpdateBondingInfo (uint16_t connHandle, GATTS_BondingParams_T *p_gattsParams, uint8_t numOfCccds, GATTS_CccdList_T *p_cccdList); Notifies the local GATT Server of the bonding...","GUID-67502C5F-FF61-4EBA-940F-BB0A2B9D4B99.html@@@1.1.2.2.4.3.6 BLE_SCM_EvtDiscComplete_T@@@typedef struct BLE_SCM_EvtDiscComplete_T { uint16_t connHandle; } BLE_SCM_EvtDiscComplete_T; Structure for BLE_SCM_EVT_DISC_COMPLETE event. Field Description connHandle Connection handle associated...","GUID-67770E57-45A5-436C-98F5-3BE78BF42F8E.html@@@1.1.2.2.3.1.2 Maximum register services number@@@#define BLE_DD_MAX_DISC_SVC_NUM 0x06 Defines the maximum number of services that can be registered in the BLE_DD module. Macro Description BLE_DD_MAX_DISC_SVC_NUM Maximum number of services that can...","GUID-67B09842-7F50-4613-AAFC-31CE10F36B4E.html@@@1.1.2.3.6.1.1.4 TRCBPS maximum buffer list@@@#define BLE_TRCBPS_CTRL_MAX_BUF_IN BLE_TRCBPS_CTRL_MAX_CREDITS #define BLE_TRCBPS_DATA_MAX_BUF_IN BLE_TRCBPS_DATA_MAX_CREDITS Defines maximum buffer list. Macro Description BLE_TRCBPS_CTRL_MAX_BUF_IN...","GUID-67D0FFE2-90DE-454E-AAC9-FF29C6A1932A.html@@@1.1.2.1.2.3.30 GATTS_GattServiceOptions_T@@@typedef struct GATTS_GattServiceOptions_T { uint8_t enable; } GATTS_GattServiceOptions_T; Structure for configuration options for a GATT service. Field Description enable Flag to enable or disable the...","GUID-67E481F5-EA68-4C6C-AAA3-AE4B41EB52C1.html@@@2.1.4.5.1 OTA Feature Discovery@@@This procedure shall be performed at least once before any other OTA Procedure is attempted. The OTA Client shall read the OTA Feature characteristic to determine the supported image types of the OTA...","GUID-6854D233-FE74-4634-AF20-2F770D2E2C47.html@@@2.3.4.3.1 TRCBS Characteristic Discovery@@@The Client shall use either the GATT Discover All Characteristics of a Service sub-procedure or the GATT Discover Characteristics by UUID sub-procedure to discover the characteristics of the service...","GUID-689D93AA-77F4-4222-B593-631DF60C9F67.html@@@2.5.2 Service Declaration@@@In most cases, the Transparent Service should be instantiated as a \u00ABPrimary Service\u00BB; however, it can be refined by upper layer profile or specification. The Service UUID is set to...","GUID-68D0AE07-6A4F-4FD4-A977-F676AB3EC466.html@@@1.1.2.1.1.4.4 BLE_GAP_ConnCentralInit@@@uint16_t BLE_GAP_ConnCentralInit ( void ); Initializes the BLE GAP connection central module. Return value Description MBA_RES_SUCCESS Successfully initializse the BLE GAP connection central module...","GUID-68EA2D43-A935-4B18-8C7F-7CDE7C7949A6.html@@@1.1.2.1.4.5.5 SMP Security Request Transmission and Reception Procedure@@@Example demonstrating SMP receiving a Security Request in the GAP central role Example demonstrating SMP sending a Security Request in the GAP peripheral role...","GUID-69048D91-B5E9-4D90-9B67-708EE80F0516.html@@@1.1.2.1.4.4.10 BLE_SMP_NumericComparisonConfirmReply@@@uint16_t BLE_SMP_NumericComparisonConfirmReply (uint16_t connHandle, uint8_t outcome); Confirms acceptance or rejection of numeric comparison during pairing. Valid during pairing when numeric...","GUID-6925ABFD-2A3F-49F2-ACA3-81D4320D85AC.html@@@1.1.2.1.8.3 HCI Structures@@@HCI_EventCb_T HCI callback type. This callback function sends HCI events to the application. HCI_CmdCb_T HCI callback type. This callback function for the application to implement HCI command...","GUID-69274DAE-B0C4-4D2F-BC21-45E93B09F7A4.html@@@2.4.3.6 OTA Control Point Behavior@@@The OTA Control Point is used by a Client to control certain behaviors of the Server. The procedures are triggered by writing a value that includes an Opcode specifying the operation and this may be...","GUID-699C5EA9-FDCB-40AC-84D5-712BF87BD89A.html@@@1.1.2.2.3.1.1 Characteristic setting@@@#define CHAR_SET_DESCRIPTOR 0x01 Defines the related to characteristic settings during discovery. Macro Description CHAR_SET_DESCRIPTOR Flag indicating if this is a characteristic descriptor...","GUID-69E1BB6C-2985-4893-8F78-3A3D0CF1C54B.html@@@1.1.1.3 BLE Memory Usage@@@BLE Memory Usage for PIC32CX-BZ2 BLE Memory Usage for PIC32CX-BZ3...","GUID-6A7C78FE-1473-4B99-B2C9-01CDC06FE578.html@@@1.1.2.2 BLE Middleware@@@Serves as an interface between the BLE library and the application, streamlining BLE operations: Device manager (DM) LOG Database Discovery (DD) Service Change Manager (SCM) Utilities...","GUID-6AB6716E-AB10-41BA-AA2A-05DADE43A66B.html@@@1.1.2.2.4.2 Enums@@@BLE_SCM_EventId_T Enumeration for BLE Service Change Module (SCM) event identifiers...","GUID-6AC7354D-DE77-48C5-8724-3DCC98A65C57.html@@@1.1.2.2.1.4 Functions@@@BLE_DM_BleEventHandler Handles BLE stack events. BLE_DM_Config Configures the BLE_DM module. BLE_DM_ConnectionParameterUpdate Requests a change in the connection parameters for a specific connection...","GUID-6ACD3394-51BB-44B8-A44E-1A705ED4DA73.html@@@1.1.2.1.6.3.1 BT_SYS_Cfg_T@@@typedef struct BT_SYS_Cfg_T { int8_t antennaGain; unsigned int addrValid: 1 ; unsigned int rssiOffsetValid: 1 ; uint8_t devAddr[BT_SYS_DEV_ADDR_LEN]; int8_t rssiOffset; } BT_SYS_Cfg_T; Structure for...","GUID-6AD2B00B-D555-4F8C-AE13-04B57A861164.html@@@1.1.2.1.4.3.2 BLE_SMP_EncInfo_T@@@typedef struct BLE_SMP_EncInfo_T { uint8_t ltk[ 16 ]; uint8_t ediv[ 2 ]; uint8_t randNum[ 8 ]; unsigned int lesc: 1 ; unsigned int auth: 1 ; unsigned int ltkLen: 6 ; }BLE_SMP_EncInfo_T; Structure for...","GUID-6B274602-B628-48D8-9345-D483824E66AC.html@@@2.1.8 References@@@[1] Microchip OTA Service v1.3. [2] Bluetooth Core Specification v4.0 or later version of the Core Specification. [3] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG...","GUID-6B769578-124E-42C9-8C46-29E318DDDCD2.html@@@2.4.3.2 OTA Feature Behavior@@@An OTA Feature characteristic returns its characteristic value when read by a client. The Server uses the OTA Feature characteristic to expose the supported image types of the device...","GUID-6BAEC72A-3B90-4224-8BA7-65CD9D51E63B.html@@@2.1.7 Acronyms and Abbreviations@@@Table 7.1: Abbreviations and Acronyms Acronyms and Abbreviations Meaning GATT Generic Attribute Profile LE Low Energy OTAP OTA Profile OTAS OTA Service OTACP OTA Control Point RFU Reserved for Future...","GUID-6BB8EC42-2015-4A10-A4A0-8FA05EEAA270.html@@@1.1.2.3.7.2.3.4 BLE_TRSPS_EvtCbfcEnabled_T@@@typedef struct BLE_TRSPS_EvtCbfcEnabled_T { uint16_t connHandle; }BLE_TRSPS_EvtCbfcEnabled_T; Structure for the BLE_TRSPS_EVT_CBFC_ENABLED event. Field Description connHandle Connection handle...","GUID-6BD82D99-7BB0-4AFA-8C32-B7D8B7AFC048.html@@@2.2.3 Transparent Server Role Requirements@@@The Transparent Server shall instantiate one Transparent Services [1] . A higher layer specification might add additional requirements on the service declaration of the Transparent Service (e.g...","GUID-6C387F84-D1FD-4B18-81CB-9D9FFE366EF7.html@@@1.1.2.3.7.1.3.4 BLE_TRSPC_EvtDiscComplete_T@@@typedef struct BLE_TRSPC_EvtDiscComplete_T { uint16_t connHandle; } BLE_TRSPC_EvtDiscComplete_T; Structure for the BLE_TRSPC_EVT_DISC_COMPLETE event. Field Description connHandle Connection handle...","GUID-6C7A49E6-0D7E-41D7-823A-509F275AE3A2.html@@@1.1.2.1.1.1.26 Maximum advertiser list size@@@#define BLE_GAP_MAX_DEV_NUM 0x08 Defines the maximum number of devices that can be included in the advertiser list. Macro Description BLE_GAP_MAX_DEV_NUM Maximum number of devices in the advertiser...","GUID-6C9F0A19-A980-4B58-BA29-F482CDEE6AE1.html@@@1.1.2.2.1.3.11 BLE_DM_PairedDevInfo_T@@@typedef struct BLE_DM_PairedDevInfo_T { BLE_GAP_Addr_T remoteAddr; uint8_t remoteIrk[ 16 ]; BLE_GAP_Addr_T localAddr; uint8_t localIrk[ 16 ]; uint8_t rv[ 8 ]; uint8_t ediv[ 2 ]; uint8_t ltk[ 16 ]...","GUID-6D09D1D3-2F82-49CD-A5EF-E1D01C1EB743.html@@@1.1.2.1.2.3.22 GATTC_DiscoverCharacteristicByUuidParams_T@@@typedef struct GATTC_DiscoverCharacteristicByUuidParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t uuidLength; uint8_t uuid[ATT_MAX_UUID_SIZE]; } GATTC_DiscoverCharacteristicByUuidParams_T...","GUID-6D3F24AD-60AA-4269-B1F0-F5DB04FDF354.html@@@1.1.2.3.6.1.4.6 BLE_TRCBPS_GetDataLength@@@uint16_t BLE_TRCBPS_GetDataLength (uint16_t connHandle, uint16_t *p_dataLength); Get the length of queued data in the Data pipe for a given connection handle. Parameter Description [in] connHandle...","GUID-6DCDDD1D-6C33-4269-A252-E1ED3EC058FC.html@@@2.3.2 Configuration@@@...","GUID-6DF2AD31-7DBF-4D56-9DE0-A912DD810FFF.html@@@1.1.2.1.1.4.64 BLE_GAP_SetResolvingList@@@uint16_t BLE_GAP_SetResolvingList (uint8_t num, BLE_GAP_ResolvingListParams_T *p_resolvingList); Sets devices to the resolving list. This API is not permitted under the following conditions: - If...","GUID-6E0A284B-75C5-4CBB-9F0C-3AB355A43705.html@@@2.1.5 Connection Establishment Procedures@@@Connection establishment requirements may be defined by the higher layer specification...","GUID-6E1585BC-98BF-4196-ACD3-4287052F5CD9.html@@@1.1.2.1.1.1.62 The transmit power levels@@@#define BLE_GAP_TPL_FLAG_LOW ( 0x00U ) #define BLE_GAP_TPL_FLAG_MID ( 0x01U ) Defines the flags for transmit power levels. Macro Description BLE_GAP_TPL_FLAG_LOW Transmit power level is low (reduced...","GUID-6E62F830-6555-4CC5-8737-3F230EF5B408.html@@@1.1.2.1.2.5.12 Reading Characteristic Values@@@Example demonstrating how to read characteristic values (N=ATT_MTU-1)...","GUID-6E837F09-509F-4C5B-A912-B3D37FBB8329.html@@@1.1.2.2.5.2.2.1 MW_DFU_Info_T@@@typedef struct MW_DFU_Info_T { uint32_t fwImageSize; uint8_t fwFlashType; } MW_DFU_Info_T; Structure for DFU (Device Firmware Update) information. This structure is used to store information about the...","GUID-6EAC2060-F2E6-4C7B-8A88-FF61D9F48B61.html@@@1.1.2.3.4.2.3.4 BLE_OTAPS_Event_T@@@typedef struct BLE_OTAPS_Event_T { BLE_OTAPS_EventId_T eventId; BLE_OTAPS_EventField_T eventField; } BLE_OTAPS_Event_T; BLE OTA profile callback event structure. Field Description eventId Identifier...","GUID-6EF8FAC2-3DB0-4C3B-9EBE-37F531CD4A81.html@@@2.5.3.3.2.1 Downlink Credit Based Flow Control (DCBFC)@@@The procedure is used by a Transparent Client to enable Downlink Credit Based Flow Control for the Transparent Server. Once it is enabled, Client role can only send data to Server while the credit...","GUID-6F852313-EC73-46B1-9903-24CBA17905E6.html@@@1.1.2.2.1.3.6 BLE_DM_EventField_T@@@typedef union { BLE_DM_EvtSecurityStart_T evtSecurityStart; BLE_DM_EvtSecuritySuccess_T evtSecuritySuccess; BLE_DM_EvtSecurityFail_T evtSecurityFail; BLE_DM_EvtPairedDeviceFull_T evtPairedDevFull; }...","GUID-6FD01CF9-9D7C-4157-AB4F-70FE7B99D7F8.html@@@1.1.2.1.2.1.20 Application service start handle@@@#define GATTS_APP_ATTRIBUTE_START_HANDLE 0x0050 Defines the starting handle value for application-registered services. Application-defined services should have a starting handle greater than this...","GUID-6FF016F4-732C-47E1-A935-30C28F6FA718.html@@@1.1.2.2.5.1 Advanced Encryption Standard (AES)@@@Provides AES cryptographic functions for BLE applications. Structures Functions...","GUID-70AF4A02-6A83-4C27-A13F-90EAEA5E01BD.html@@@1.1.2.1.1.4.48 BLE_GAP_SetExtAdvData@@@uint16_t BLE_GAP_SetExtAdvData (BLE_GAP_ExtAdvDataParams_T *p_advDataParam); Configures extended advertising data. This API can be called at any time after creating an advertising set with...","GUID-70F5F2CB-4075-4D38-ADAD-6B7A23F9C626.html@@@1.1.2.3.2.1.4 Functions@@@BLE_ANPC_BleDdEventHandler Handle BLE DD (Database Discovery middleware) events. BLE_ANPC_BleEventHandler Handle BLE_Stack related events. BLE_ANPC_EnableNewAlertNtfy Enable New Alert Notification...","GUID-71056F96-E278-4AEA-AE0B-D65C7EAE1BD8.html@@@1.1.2.1.6.4.1 BM_Task@@@void BM_Task ( void *p_param); The main task function for the Bluetooth module. Parameter Description [in] p_param A pointer to a parameter that will be passed to the task function...","GUID-713ADCA8-213E-4C66-B4D7-EF5CBCCC4F3F.html@@@1.1.2.1.5.1 Defines@@@Error code definitions Defines result codes for BLE Stack API operations...","GUID-7141F452-8817-4F64-A83A-187E0EE1CA2C.html@@@1.1.2.1.1.3.34 BLE_GAP_EvtTxPowerReporting_T@@@typedef struct BLE_GAP_EvtTxPowerReporting_T { uint8_t status; uint16_t connHandle; uint8_t reason; uint8_t phy; int8_t txPowerLevel; uint8_t txPowerLevelFlag; int8_t delta...","GUID-71644E1F-E3B4-4E1B-8084-E48C09F6A454.html@@@1.1.2.1.1.1.43 PHY options for transmission and reception@@@#define BLE_GAP_PHY_OPTION_NO_PREF 0 #define BLE_GAP_PHY_OPTION_1M ( 1 &lt;&lt; 0 ) #define BLE_GAP_PHY_OPTION_2M ( 1 &lt;&lt; 1 ) #define BLE_GAP_PHY_OPTION_CODED ( 1 &lt;&lt; 2 ) Defines the PHY options for...","GUID-7199C336-0C86-4B0D-AD94-FB0168FC6CCD.html@@@1.1.2.1.4.3.20 BLE_SMP_SignInfo_T@@@typedef struct BLE_SMP_SignInfo_T { uint8_t srk[ 16 ]; }BLE_SMP_SignInfo_T; Structure for storing the signature resolving key. Field Description srk Signature Resolving Key (SRK) used for signing...","GUID-719A4BCE-0D04-4F3B-ABCC-DB6663640998.html@@@1.1.2.3.4.2.1.2 OTAPS image file type definitions@@@#define BLE_OTAPS_IMG_FILE_TYPE_INT ( 0x01U ) #define BLE_OTAPS_IMG_FILE_TYPE_APP ( 0x02U ) #define BLE_OTAPS_IMG_FILE_TYPE_EXT ( 0x03U ) #define BLE_OTAPS_IMG_FILE_TYPE_UNKNOWN ( 0xFFU ) Defines...","GUID-7228414F-260A-4A2D-A1A2-3BE5372EED98.html@@@1.1.2.2.3 Database Discovery (DD)@@@Manages GATT Client Procedures for service discovery on remote devices. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-7232FC14-AEFC-4A64-99AC-9C79078F11EB.html@@@1.1.2.2.1.1.4 Maximum resolving list size@@@#define BLE_DM_MAX_RESOLVING_LIST_NUM BLE_DM_MAX_PAIRED_DEVICE_NUM Defines the maximum number of devices that can be included in the resolving list. Macro Description BLE_DM_MAX_RESOLVING_LIST_NUM...","GUID-7253957B-D1BE-4E0B-82C7-4396A44C60DC.html@@@1.1.2.3.5.1.3.6 BLE_PXPM_EventField_T@@@typedef union { BLE_PXPM_EvtDiscComplete_T evtDiscComplete; BLE_PXPM_EvtLlsAlertLvWriteRspInd_T evtLlsAlertLvWriteRspInd; BLE_PXPM_EvtLlsAlertLvInd_T evtLlsAlertLvInd; BLE_PXPM_EvtTpsTxPwrLvInd_T...","GUID-72939995-D3EF-4DAB-9085-937F8B45B744.html@@@1.1.2.3.4.3 Message Sequence Chart@@@Over The Air Profile Server Role Procedure Over The Air Profile Client Role Procedure...","GUID-72E94370-8214-4D0E-8F12-475DD84E4F73.html@@@1.1.2.2.5.2.3.2 MW_DFU_FwImageActivate@@@uint16_t MW_DFU_FwImageActivate ( void ); Activates the new firmware after a system reboot. The system state after activation should be verified to ensure proper operation. Return value Description...","GUID-72ED1EA1-A0EA-4368-8ACE-866D5AD589A4.html@@@1.1.2.3.3.1.1 Enums@@@BLE_HOGPS_EventId_T Enumeration for BLE HID over GATT Profile (HOGP) service callback events...","GUID-73139CE5-399C-4A7B-92C9-394C0A20A1B4.html@@@2.3.6 Security Considerations@@@Security requirements may be defined by the higher layer specification...","GUID-738AAC55-2A0F-4964-857C-1482C887755B.html@@@1.1.2.3.7.1.4.7 BLE_TRSPC_SendData@@@uint16_t BLE_TRSPC_SendData (uint16_t connHandle, uint16_t len, uint8_t *p_data); Sends transparent data to the connected BLE device. Parameter Description [in] connHandle Connection handle associated...","GUID-73AE5D05-3423-4FBD-B676-221F0AE401A2.html@@@1.1.2.3.2.1.3.11 BLE_ANPC_EvtUnreadAlertStatInd_T@@@typedef struct BLE_ANPC_EvtUnreadAlertStatInd_T { uint16_t connHandle; uint8_t categoryId; uint8_t unreadCnt; }BLE_ANPC_EvtUnreadAlertStatInd_T; Structure for the BLE_ANPC_EVT_UNREAD_ALERT_STAT_IND...","GUID-73C97CCB-AD6E-49F2-83F8-2076366D2BC3.html@@@1.1.2.3.7.1.3.2 BLE_TRSPC_EventCb_T@@@typedef void (*BLE_TRSPC_EventCb_T)(BLE_TRSPC_Event_T *p_event); Callback type for BLE Transparent profile client events. This callback function is used to send events from the BLE Transparent profile...","GUID-73E19565-AAF8-4AA7-BCE3-851F68A7A75E.html@@@1.1.2.1.1.5.4 GAP Connection Parameter Update Procedure@@@Example demonstrating the central device updating connection parameters Example demonstrating the peripheral device updating connection parameters...","GUID-73E29FE3-DF10-4889-BE1C-4178373563CA.html@@@2.3.4.4.2 Transparent Credit Based Control Point (TRCBCP) Characteristic@@@To ensure the data transmission throughput of Data Pipe over LE L2CAP CoC with Credit Based flow control, TRCBCP characteristic can be utilized as a Control Pipe. Both of Transparent Credit Based...","GUID-73EBF25E-3B0E-4534-9E55-8CA94736BC5F.html@@@1.1.2.2.5.1.2.8 MW_AES_AesCcmDecrypt@@@uint16_t MW_AES_AesCcmDecrypt (MW_AES_Ctx_T * p_ctx, uint16_t length, uint8_t *p_cipherText, uint8_t *p_tag, uint8_t *p_plainText); Decrypts data using AES CCM mode. Parameter Description [in] p_ctx...","GUID-7447F936-573C-44E7-9EFC-CD5F346FA26A.html@@@1.1.2.1.6.4.3 BT_SYS_EnterDeepSleepMode@@@void BT_SYS_EnterDeepSleepMode (); Request the Bluetooth system to enter deep sleep mode...","GUID-7448101D-2BC4-41C4-9D98-672806B90551.html@@@1.1.2.1.1.4.41 BLE_GAP_SetConnTxPowerLevel@@@uint16_t BLE_GAP_SetConnTxPowerLevel (int8_t connTxPower, int8_t *p_selectedTxPower); Sets the RF Tx power level for LE connection Data physical channel PDUs before LE power control is activated. If...","GUID-745702A8-66B7-49B6-BB96-B70389BA7B5A.html@@@2.2.4.3.1 Transparent Service Characteristic Discovery@@@The Transparent Client shall use either the GATT Discover All Characteristics of a Service sub-procedure or the GATT Discover Characteristics by UUID sub-procedure to discover the characteristics of...","GUID-74909A65-9CD1-4E9F-B47A-087C63EE0543.html@@@1.1.2.3.5.1.1 Defines@@@PXPM Maximum descriptor number Defines maximum number of descriptors allowed. UUIDs for characteristics in the Proximity profile Defines UUIDs for characteristics in the Proximity profile. UUIDs for...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-75578D65-5073-47E8-BB34-09E8A5D48662.html@@@1.1.2.1.1.4.5 BLE_GAP_ConnPeripheralInit@@@uint16_t BLE_GAP_ConnPeripheralInit ( void ); Initialize BLE GAP connection peripheral module. Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP connection peripheral module...","GUID-755BE43C-BC77-4A54-A8DF-7E4E57C5B2CD.html@@@1.1.2.1.1.4.42 BLE_GAP_SetDefaultPhy@@@uint16_t BLE_GAP_SetDefaultPhy (uint8_t txPhys, uint8_t rxPhys); Specifies the preferred values for the transmitter PHY and receiver PHY to be used for all subsequent connections. Parameter...","GUID-756DB65B-060E-4F42-B92C-35D072E1E008.html@@@1.1.2.3.4.1.4.9 BLE_OTAPC_UpdateStart@@@uint16_t BLE_OTAPC_UpdateStart (uint16_t connHandle, uint8_t imgType); Initiates a firmware update start operation. An event of type BLE_OTAPC_EVT_START_RSP_IND will be generated upon completion of...","GUID-7583A4F3-0021-4C15-8ACD-4C4B11731CEA.html@@@1.1.2.1.1.1.27 Maximum connection handle@@@#define BLE_GAP_MAX_CONN_HANDLE 0xEFF Defines the highest value that can be used as a connection handle in GAP (Generic Access Profile). Macro Description BLE_GAP_MAX_CONN_HANDLE Maximum valid BLE GAP...","GUID-75A8E645-3A17-42A9-BA4B-9D036AB2B28E.html@@@1.1.2.1.3.1.3 L2CAP maximum credit-based channels@@@#define BLE_L2CAP_MAX_CB_NUM 0x05 Defines the maximum number of L2CAP credit-based channels allowed per connection. Macro Description BLE_L2CAP_MAX_CB_NUM Maximum number of L2CAP credit-based channels...","GUID-75F1611D-3EF8-4ABD-8843-67860CC21002.html@@@1.1.2.3.7.2.1.2 TRSPS status@@@#define BLE_TRSPS_STATUS_CTRL_DISABLED 0x00 #define BLE_TRSPS_STATUS_CTRL_OPENED 0x01 #define BLE_TRSPS_STATUS_TX_DISABLED 0x00 #define BLE_TRSPS_STATUS_TX_OPENED 0x01 Defines the status of the BLE...","GUID-766EA60B-7A4E-4B99-8D8D-11E27AEED5AB.html@@@2.3.5.1 Data Pipe@@@Before creating the L2CAP CoC connection, Client obtains the L2CAP PSM value for the TRCBP Data Pipe by reading the L2PSM characteristic from Server role. Then Client issues the L2CAP CoC connection...","GUID-77D127AF-C206-49E6-97E0-2202C60ECD5E.html@@@2.2.4.4 Transparent Service Characteristics@@@This section contains the characteristics and behavior which are not defined in the transparent procedures in Transparent Procedures session...","GUID-77F31BC6-2CD8-4A20-B06E-791C830EB0A0.html@@@1.1.2.2.5.2.3.5 MW_DFU_FwImageUpdate@@@uint16_t MW_DFU_FwImageUpdate (uint16_t length, uint8_t *p_content); Updates a fragment of the firmware image in flash memory. This API should be called multiple times to update all fragments of the...","GUID-78664C7B-BE69-48DD-9F78-07A20300FB8E.html@@@1.1.2.3.5.2.2.1 BLE_PXPR_AlertLevel_T@@@typedef enum BLE_PXPR_AlertLevel_T { BLE_PXPR_ALERT_LEVEL_NO = 0x00U , BLE_PXPR_ALERT_LEVEL_MILD = 0x01U , BLE_PXPR_ALERT_LEVEL_HIGH = 0x02U , } BLE_PXPR_AlertLevel_T; Enumeration for BLE Proximity...","GUID-788AD127-5D7C-48A9-BD7D-F1DB7F6355F1.html@@@1.1.2.1.3.5.5 BLE_L2CAP_CbInit@@@uint16_t BLE_L2CAP_CbInit ( void ); Initializes the BLE L2CAP Credit Based Flow Control module. Return value Description MBA_RES_SUCCESS Successfully initialize the BLE L2CAP credit based module...","GUID-789CB29D-5B52-42C0-B98A-74741D1701DA.html@@@1.1.2.3.4.1.4.7 BLE_OTAPC_Init@@@uint16_t BLE_OTAPC_Init ( void ); Initializes the BLE Over-The-Air Programming (OTA) profile client. Return value Description MBA_RES_SUCCESS The initialization of the BLE OTA profile client is...","GUID-78C37D30-6D55-4034-9908-CDE10CE3A3A8.html@@@1.1.2.1.1.3.6 BLE_GAP_CharLeGattSecLvls_T@@@typedef struct BLE_GAP_CharLeGattSecLvls_T { bool enable; } BLE_GAP_CharLeGattSecLvls_T; Structure for the LE GATT Security Levels characteristic. Field Description enable True to enable the LE GATT...","GUID-79090506-AD44-4CFA-912A-269FBA1E95FE.html@@@1.1.2.2.5.2.3 Functions@@@MW_DFU_Config Configures the device information for the DFU process. MW_DFU_FwImageActivate Activates the new firmware after a system reboot. MW_DFU_FwImageRead Reads a fragment of the firmware image...","GUID-790E181C-615F-4D06-B20B-9756FBC5D0D6.html@@@2.4.1.3 Specification Release Compatibility@@@This specification is compatible with Bluetooth Core Specification 4.0 or later version of the Core Specification [1]...","GUID-791492BD-49C4-4844-8A55-D4AE2E1E91EC.html@@@1.1.2.2.1.2 Enums@@@BLE_DM_EventId_T Enumeration type for BLE Device Manager callback events. BLE_DM_SecurityProc_T Enumeration for security processes in BLE Device Manager...","GUID-79157BDE-86A8-4660-98CA-D67BF921F154.html@@@1.1.2 BLE Software API@@@BLE Stack BLE Middleware BLE Profile...","GUID-7936CFC8-E8CB-4185-BFAA-2F49B1481F07.html@@@1.1.2.2.3.5 Message Sequence Chart@@@Register Service Information for Discovery Database Discovery Procedure Configure Database Discovery Function and Disable It at Runtime Database Discovery with BLE_SCM in Service Change Scenarios...","GUID-796289F7-90EA-49A4-B36C-A593F1660B06.html@@@1.1.2.3.4.1.3.4 BLE_OTAPC_EvtCompleteRspInd_T@@@typedef struct BLE_OTAPC_EvtCompleteRspInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtCompleteRspInd_T; Structure for the BLE_OTAPC_EVT_COMPLETE_RSP_IND event. Field Description...","GUID-796A6CC7-F1DD-4333-8D6C-37A924A89D70.html@@@1.1.2.1.2.3.16 GATT_EvtReceiveCfm_T@@@typedef struct GATT_EvtReceiveCfm_T { uint16_t connHandle; uint16_t attrHandle; } GATT_EvtReceiveCfm_T; Structure for GATTS_EVT_HV_CONFIRM event. Field Description connHandle Connection handle...","GUID-7998054E-29FE-4497-BC2B-CE024220F435.html@@@1.1.2.3.2.1.4.6 BLE_ANPC_GetCharList@@@uint16_t BLE_ANPC_GetCharList (uint16_t connHandle, uint16_t charUuid, BLE_ANPC_CharList_T *p_charList); Retrieves a list of discovered Alert Notification service characteristics. This function should...","GUID-79C9108C-13DE-46A7-ADEF-F5A90F16AC1D.html@@@2.6.2 Service Declaration@@@In most cases, the Transparent Credit Based Service (TRCBS) should be instantiated as a \u00ABPrimary Service\u00BB; however, it can be refined by upper layer profile or specification. The default service UUID...","GUID-79D89986-E36E-4E7C-9D22-F549A53BB229.html@@@1.1.2.1.1.1.40 Path loss zones@@@#define BLE_GAP_PATH_LOSS_ZONE_LOW 0x00U #define BLE_GAP_PATH_LOSS_ZONE_MID 0x01U #define BLE_GAP_PATH_LOSS_ZONE_HIGH 0x02 U Defines the zones based on the level of path loss detected. Macro...","GUID-79E7425D-A364-4C4A-850F-87852826DC02.html@@@1.1.2.1.2.4.1 GATTC_DiscoverAllCharacteristics@@@uint16_t GATTC_DiscoverAllCharacteristics (uint16_t connHandle, uint16_t startHandle, uint16_t endHandle); Starts the discovery of all characteristics within a specified handle range on the GATT...","GUID-7A2BC74D-E714-41F0-8201-0D183867E570.html@@@2.5.3.3.2 Transparent Control Point Characteristic Behavior@@@While the Transparent Control Point is used by a Client to control certain behaviors of the Server. The procedures are triggered by writing a Characteristic Value that includes an opcode specifying...","GUID-7A371764-6EB0-4042-8A19-646F3A5F59F4.html@@@1.1.2.3.3.1.3.12 BLE_HOGPS_SetBootMouseInputReport@@@uint16_t BLE_HOGPS_SetBootMouseInputReport (uint8_t buttons, int8_t xAxis, int8_t yAxis); Sets the HID boot mode mouse input report. This function prepares the input report for a mouse in HID boot...","GUID-7A802A65-58A9-4CE8-B338-D062650C2F1B.html@@@1.1.2.3.5.2.4.3 BLE_PXPR_Init@@@uint16_t BLE_PXPR_Init ( void ); Initializes the BLE Proximity Profile (PXP) Reporter. Return value Description MBA_RES_SUCCESS The PXP reporter was successfully initialized. MBA_RES_FAIL The PXP...","GUID-7A9B41EC-97DD-46FE-B962-56939D6AB761.html@@@1.1.2.3.2.1 Alert Notification Profile Client Role@@@Provides the interface for the BLE Alert Notification Profile Client (ANPC). Defines Enumerations Structures Functions...","GUID-7AB485F4-C2FB-49B6-A2A2-AB5353E3A9DA.html@@@1.1.2.3.5.2.1.1 Supported service@@@#define BLE_PXPR_IAS_ENABLE #define BLE_PXPR_TPS_ENABLE The definition of supported service. Macro Description BLE_PXPR_IAS_ENABLE Feature of PXP Reporter supporting optional Immediate Alert Service...","GUID-7AD492DC-F1C9-42E4-A712-0E0099A9DC79.html@@@1.1.2.1.1.1.28 Maximum device name length@@@#define GAP_MAX_DEVICE_NAME_LEN 0x20 Defines the maximum length of a device name. Macro Description GAP_MAX_DEVICE_NAME_LEN Maximum length of a device name in bytes...","GUID-7AD89125-E9F5-4B32-B22E-300D22070549.html@@@1.1.2.3.4.2.4.3 BLE_OTAPS_SetEncrytionInfo@@@uint16_t BLE_OTAPS_SetEncrytionInfo (uint8_t * p_iv, uint8_t * p_key); Sets the Initialization Vector (IV) and encryption key for AES-CBC decryption of the new OTA DFU image. This function must be...","GUID-7B12FFF3-B330-439C-A791-CFF6B42A3796.html@@@2.4.6 References@@@[1] Bluetooth Core Specification v4.0 or later version of the Core Specification. [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers...","GUID-7B67251B-2CCF-4457-B30C-66F798896CCB.html@@@1.1.2.3.2.2.3.3 BLE_ANPS_EventField_T@@@typedef union { BLE_ANPS_EvtAncpWriteInd_T evtAncpWriteInd; }BLE_ANPS_EventField_T; Union containing data types for all possible events in the BLE Alert Notification profile. Field Description...","GUID-7B7D0D59-AB7F-4C52-9D59-C189767883E0.html@@@1.1.2.2.5.1.2 Functions@@@MW_AES_AesCbcDecrypt Decrypts a block of data using AES CBC mode. MW_AES_AesEcbEncrypt Encrypts a block of data using AES ECB mode. MW_AES_CbcDecryptInit Initializes AES CBC block cipher decryption...","GUID-7BB0ABB5-C38C-4339-81BA-64D4AEC0D636.html@@@1.1.2.1.2.5.8 Discovering Primary Services@@@Example demonstrating how to discover all primary services. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how to discover a specific service...","GUID-7BE10B6E-E34D-428E-A24E-3CE30145668C.html@@@1.1.2.3.4.2.4.5 BLE_OTAPS_CompleteResponse@@@uint16_t BLE_OTAPS_CompleteResponse (bool success); Responds to the peer device after receiving a BLE_OTAPS_EVT_COMPLETE_IND event if errStatus is false. The application must verify the success or...","GUID-7C2FFEEC-DB5D-48CA-AF92-92C934D4352E.html@@@1.1.2.3.4.2.3.8 BLE_OTAPS_DevInfo_T@@@typedef struct BLE_OTAPS_DevInfo_T { uint32_t fwImageVer; } BLE_OTAPS_DevInfo_T; Structure containing the current device&apos;s firmware information. Field Description fwImageVer Firmware image version of...","GUID-7C8E1126-E46A-4CA3-B891-E36D1F95EF7F.html@@@1.1.2.3.3.1.3.13 BLE_HOGPS_SetKeyboardInputReport@@@uint16_t BLE_HOGPS_SetKeyboardInputReport (uint8_t *p_keyCodeArray); Sets HID keyboard input report. This function prepares the input report for a keyboard device in the Human Interface Device (HID)...","GUID-7CE7324E-4B76-41ED-B3E7-5A1EAE2C919C.html@@@1.1.2.1.4.4.13 BLE_SMP_PasskeyReply@@@uint16_t BLE_SMP_PasskeyReply (uint16_t connHandle, uint8_t *p_passkey); Responds to a passkey request event with the passkey. Call this in response to BLE_SMP_EVT_INPUT_PASSKEY_REQUEST or...","GUID-7D25C0C3-350E-4930-91C8-09B67ABDCEC3.html@@@1.1.2.3.5.2.4 Functions@@@BLE_PXPR_BleEventHandler Handles BLE_Stack events. BLE_PXPR_EventRegister Registers a callback function for BLE PXP Reporter events. BLE_PXPR_Init Initializes the BLE Proximity Profile (PXP) Reporter...","GUID-7D8C8069-7976-47D3-8550-5BA4A4CC71D7.html@@@1.1.2.3.2.2.4.3 BLE_ANPS_Init@@@uint16_t BLE_ANPS_Init ( void ); Initializes the BLE Alert Notification Profile. Return value Description MBA_RES_SUCCESS Successfully initialized the BLE Alert Notification Profile...","GUID-7DE416F7-2A25-4611-A1D6-49C2E62E5496.html@@@1.1.2.1.4.4.4 BLE_SMP_EnableDebugMode@@@uint16_t BLE_SMP_EnableDebugMode ( void ); Enables BLE SMP debug mode for the pairing procedure. When debug mode is enabled, the debug public key will be used. Invoking this function will prohibit the...","GUID-7E06BC42-C171-42E8-8B55-D9C305F62A01.html@@@1.1.2.1.8.4.6 HCI_AppCmdRegister@@@void HCI_AppCmdRegister (HCI_CmdCb_T cmdCb); Application-implemented HCI command registration. Parameter Description [in] cmdCb Callback function for application-implemented HCI command...","GUID-7E30BC98-AC0D-41E8-BBF7-55B38B80AFDF.html@@@1.1.2.2.1.4.4 BLE_DM_DeleteAllPairedDevice@@@uint16_t BLE_DM_DeleteAllPairedDevice ( void ); Deletes all paired device information. Return value Description MBA_RES_SUCCESS All paired device information deleted successfully. MBA_RES_FAIL...","GUID-7EFB32B2-4037-4C13-B9CA-87306C9C6EF2.html@@@1.1.2.1.1.4.73 BLE_GAP_TrafficUnlock@@@uint16_t BLE_GAP_TrafficUnlock ( void ); Unlocks BLE data traffic. The BLE stack will lock data traffic when BLE_GAP_EnableOneTimeAdv is called and a connection is established automatically. The...","GUID-7F1BAB0C-E7B7-4C7D-B48E-E31D6C9D706E.html@@@1.1.2.1.1.4.44 BLE_GAP_SetDeviceAddr@@@uint16_t BLE_GAP_SetDeviceAddr (BLE_GAP_Addr_T *p_addr); Sets the Bluetooth device address (identity address). The address type must be either BLE_GAP_ADDR_TYPE_PUBLIC or...","GUID-7F1C8247-F6C3-4DAB-A8F7-B2AD44B52177.html@@@1.1.2.3.7.2.2.1 BLE_TRSPS_EventId_T@@@typedef enum BLE_TRSPS_EventId_T { BLE_TRSPS_EVT_CTRL_STATUS, BLE_TRSPS_EVT_TX_STATUS, BLE_TRSPS_EVT_CBFC_ENABLED, BLE_TRSPS_EVT_CBFC_CREDIT, BLE_TRSPS_EVT_RECEIVE_DATA, BLE_TRSPS_EVT_VENDOR_CMD...","GUID-7F62C769-0357-47B0-BD0D-3946CF46D4EA.html@@@1.1.2.2.4 Service Change Manager (SCM)@@@Manages GATT service changes on remote GATT servers. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-7F65351A-2FDD-4618-A75F-D30076CE2470.html@@@1.1.1.4.4 PTA Software Design Information@@@PTA APIs in BLE_Stack library : Two APIs are designed in BLE_Stack library. BT_SYS_PtaInit: It is called within APP_PtaInit() to enable BLE stack PTA feature. BT_SYS_PtaWlanActiveIrqHandler: It is...","GUID-7FA5D113-8F0A-4615-B2C0-9A079BE4394B.html@@@2.3.1 Introduction@@@The Transparent Credit Based Profile (TRCBP) defines fundamental requirements to enable higher layer application data exchange between TRCBP Client and Server devices...","GUID-80707A75-E945-4947-A4D5-1D9B33EA65BB.html@@@1.1.2.1.7.1.4 Transmitter payload types@@@#define BLE_DTM_TX_TEST_PAYLOAD_0 0x00 #define BLE_DTM_TX_TEST_PAYLOAD_1 0x01 #define BLE_DTM_TX_TEST_PAYLOAD_2 0x02 #define BLE_DTM_TX_TEST_PAYLOAD_3 0x03 #define BLE_DTM_TX_TEST_PAYLOAD_4 0x04...","GUID-80C93DD9-8B18-4639-ADCB-252308C32085.html@@@1.1.2.1.1.1.59 Subrate parameters range@@@#define BLE_GAP_SUBRATE_MIN_SUBRATE_MIN ( 0x0001U ) #define BLE_GAP_SUBRATE_MIN_SUBRATE_MAX ( 0x01F4U ) #define BLE_GAP_SUBRATE_MAX_SUBRATE_MIN ( 0x0001U ) #define BLE_GAP_SUBRATE_MAX_SUBRATE_MAX (...","GUID-80E4849A-99CB-4540-994D-D24CEA64B2E3.html@@@1.1.2.1.1.1.37 Maximum secondary advertisements for extended scan@@@#define BLE_GAP_EXT_SCAN_2ND_ADV_NUM 0x10 Defines the maximum number of secondary advertisements for extended scanning. Macro Description BLE_GAP_EXT_SCAN_2ND_ADV_NUM Maximum number of secondary...","GUID-8104EBA7-9D5B-4926-A32F-4C6A4E3603D4.html@@@2.4.1.6 Error Code@@@This service does not define any Attribute Protocol Application Error codes...","GUID-8142484B-2E7A-4BBC-9F11-32CE0D179C21.html@@@1.1.2.1.1.4.17 BLE_GAP_ExtCreateConnection@@@uint16_t BLE_GAP_ExtCreateConnection (uint8_t filterPolicy, BLE_GAP_Addr_T *p_peerAddr, BLE_GAP_ExtCreateConnPhy_T *p_createConnPhy); Initiates a BLE connection using the extended advertising feature...","GUID-81A74AB1-2306-452C-9856-6F4366636A94.html@@@1.1.2.3.5.1.4.3 BLE_PXPM_EventRegister@@@void BLE_PXPM_EventRegister (BLE_PXPM_EventCb_T routine); Registers a callback function for BLE Proximity Profile Monitor events. Parameter Description [in] routine Callback function to handle BLE PXP...","GUID-82D2E2A9-7F83-439D-8588-8195A22E2278.html@@@1.1.2.2.1.1 Defines@@@Invalid peer device ID The definition of invalid peer device id. Maximum paired devices The definition of maximum number of paired device store in flash. Maximum filter accept list size The definition...","GUID-83155105-DC76-4639-AD41-5D8F6118ABB3.html@@@1.1.2.1.2.3.7 GATT_EvtDiscDescResp_T@@@typedef struct GATT_EvtDiscDescResp_T { uint16_t connHandle; uint8_t infoDataFormat; uint16_t infoDataLength; uint8_t infoData[BLE_ATT_MAX_MTU_LEN-ATT_FIND_INFO_RESP_HEADER_SIZE]; uint8_t...","GUID-835AA322-4AA4-473C-9BB5-F6F7368CD9EC.html@@@1.1.2.2.4.2.1 BLE_SCM_EventId_T@@@typedef enum BLE_SCM_EventId_T { BLE_SCM_EVT_SVC_CHANGE, BLE_SCM_EVT_BONDED_CHAR_INFO, BLE_SCM_EVT_CONFIGURED, BLE_SCM_EVT_DISC_COMPLETE, }BLE_SCM_EventId_T; Enumeration for BLE Service Change Module...","GUID-83A36AAD-1D37-4B08-8C3E-92BDD24338A6.html@@@1.1.2.1.3.3.5 BLE_L2CAP_EvtCbConnInd_T@@@typedef struct BLE_L2CAP_EvtCbConnInd_T { uint8_t leL2capId; uint16_t connHandle; uint16_t spsm; uint16_t remoteMtu; uint16_t remoteMps; uint16_t initialCredits; uint16_t localCid; uint16_t remoteCid...","GUID-83CF6A53-6CF6-40E5-8413-341F92588B71.html@@@1.1.2.3.5.1.4.7 BLE_PXPM_ReadLlsAlertLevel@@@uint16_t BLE_PXPM_ReadLlsAlertLevel (uint16_t connHandle); Reads the Alert Level value from the Link Loss Service of a connected peer PXP Reporter device. Parameter Description [in] connHandle...","GUID-83D82C20-085C-44EE-8795-545D82BDDE62.html@@@1.1.2.1.2.4.19 GATTS_SendErrorResponse@@@uint16_t GATTS_SendErrorResponse (uint16_t connHandle, GATTS_SendErrRespParams_T *p_errParams); Sends an error response from the GATT Server. This function should be called when the application...","GUID-841273B1-1FDB-44AF-80FE-E356903C7CBD.html@@@1.1.2.3.2.1.4.9 BLE_ANPC_ReadSuppNewAlertCat@@@uint16_t BLE_ANPC_ReadSuppNewAlertCat (uint16_t connHandle); Requests the value of the Supported New Alert Category from the server. Parameter Description [in] connHandle The connection handle to...","GUID-8465CB71-86EC-4F11-B6C6-FFA7F3CB3078.html@@@1.1.2.1.7.1 Defines@@@Continuous wave (CW) channel range Defines the channel range for Continuous Wave (CW) testing during DTM. Receiver or transmitter channel range Defines the range of channels for RX/TX during Direct...","GUID-84666F5A-CD4D-44BC-9836-CA547284CC53.html@@@1.1.2.1.6.4.7 BT_SYS_HpaInit@@@Only valid for PIC32CX-BZ2 void BT_SYS_HpaInit (BT_SYS_HpaCpsCb_T hpaCb, BT_SYS_HpaCtxCb_T hpaCtxCb); Initialize the Bluetooth system High Power Amplifier (HPA) with callback functions. Parameter...","GUID-84B4B7EE-02D7-43B3-8C61-D2E2E187859E.html@@@1.1.2.1.2.4.3 GATTC_DiscoverAllPrimaryServices@@@uint16_t GATTC_DiscoverAllPrimaryServices (uint16_t connHandle); Initiates the discovery of all primary services on the connected GATT server. The discovery process may result in multiple events...","GUID-84D192A6-3C2A-4840-8427-37814138CD13.html@@@1.1.2.3.1.1.4.1 BLE_ANCS_BleDdEventHandler@@@void BLE_ANCS_BleDdEventHandler (BLE_DD_Event_T *p_event); Handles BLE Database Discovery (BLE_DD) events. This function should be called when BLE_DD events occur. Parameter Description [in] p_event...","GUID-851E7979-95AC-4B35-B736-0CFE87A58669.html@@@1.1.2.3.4.2.4.4 BLE_OTAPS_BleEventHandler@@@void BLE_OTAPS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called by the application when BLE stack events occur. Parameter Description [in]...","GUID-85457EA2-5A68-4F37-A5BB-714694269D78.html@@@1.1.2.1.1.4.43 BLE_GAP_SetDefaultSubrate@@@uint16_t BLE_GAP_SetDefaultSubrate (BLE_GAP_SubrateParams_T *p_subrateParams); Sets the initial values for the acceptable parameters for subrating requests. This command should be used only after the...","GUID-85A885EF-D5B2-4FD6-A6FD-655281BB5037.html@@@1.1.2.3.4.2.4.6 BLE_OTAPS_UpdateResponse@@@uint16_t BLE_OTAPS_UpdateResponse (uint16_t connHandle, bool isAllow, BLE_OTAPS_DevInfo_T *p_devInfo); Responds to the peer device after receiving a BLE_OTAPS_EVT_UPDATE_REQ event. The application...","GUID-85F37DFD-236D-4EC8-95C5-BC83D12A06B1.html@@@1.1.2.3.5.1.1.3 UUIDs for services in the Proximity profile@@@#define BLE_PXPM_UUID_IMMEDIATE_ALERT_SVC ( 0x1802U ) #define BLE_PXPM_UUID_LINKLOSS_SVC ( 0x1803U ) #define BLE_PXPM_UUID_TXPOWER_SVC ( 0x1804U ) Defines UUIDs for services in the Proximity profile...","GUID-8607DC9F-A050-448C-9A78-674000B817E2.html@@@1.1.2.3.6.2.4 Transparent Credit Based Profile Data/Vendor Command Exchange Procedure@@@Example demonstrating data exchange from client to server over the Transparent Credit Based Profile data pipe. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating client-to-server data exchange over the Transparent...","GUID-861378F5-1EDF-4967-ADD4-7C487EA21941.html@@@1.1.2.1.1.4.67 BLE_GAP_SetScanningParam@@@uint16_t BLE_GAP_SetScanningParam (BLE_GAP_ScanningParams_T *p_scanParams); Sets the scanning parameters. This API should not be called while scanning is active. It is part of the legacy advertising...","GUID-862925C7-80A4-4A5C-9BE4-5CF32ED711F9.html@@@1.1.2.1.4.3.8 BLE_SMP_EvtInputOobData_T@@@typedef struct BLE_SMP_EvtInputOobData_T { uint16_t connHandle; } BLE_SMP_EvtInputOobData_T; Structure for BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST event. Field Description connHandle Connection handle...","GUID-8680FA51-B717-4A7D-A1E9-05B7B54B3DB9.html@@@1.1.2.1.1.4.8 BLE_GAP_CreateSync@@@uint16_t BLE_GAP_CreateSync (BLE_GAP_CreateSync_T *p_periSync); Synchronizes with a periodic advertising train from an advertiser and begin receiving periodic advertising packets. This API can be...","GUID-86CCF0F0-DB36-4F0D-8DD1-779FC2FA7EF5.html@@@2.3.1.2 Bluetooth Specification Release Compatibility@@@This specification is compatible with Bluetooth Core Specification v4.1 [3]...","GUID-86DCEFDA-A388-4AF9-96D8-947AB6C22F1D.html@@@1.1.2.3.6.1.1.1 TRCBPS definition aggregation@@@#define BLE_TRCBPS_SDU_LEN_FIELD_LEN 0x02 #define BLE_TRCBPS_CTRL_MTU BLE_ATT_MAX_MTU_LEN - BLE_TRCBPS_SDU_LEN_FIELD_LEN #define BLE_TRCBPS_DATA_MTU BLE_ATT_MAX_MTU_LEN - BLE_TRCBPS_SDU_LEN_FIELD_LEN...","GUID-86ED5462-EBBE-4ED2-A861-0D2CF4C49A0C.html@@@1.1.2.1.5.3 Structures@@@STACK_Event_T Structure representing an event generated by the STACK. STACK_EventCb_T Defines the prototype for the STACK event callback function...","GUID-86F1B7AA-FD74-414B-AD3E-20A9EBD4266F.html@@@1.1.2.1.1.4.14 BLE_GAP_EncInfoReqReply@@@uint16_t BLE_GAP_EncInfoReqReply (uint16_t connHandle, uint8_t *p_ltk); Responds to an LE encryption information request event. This API should only be called in response to a...","GUID-86F988CB-FD87-4448-86C2-5DC8644E254F.html@@@1.1.2.3.4.2 Microchip OTA Profile Server Role@@@Interface for the BLE OTA (Over-The-Air) Profile Server used by applications. Defines Enumerations Structures Functions...","GUID-86FD26CF-F83F-4EA3-A80D-9309A20779F3.html@@@1.1.2.1.1.3.28 BLE_GAP_EvtPeriAdvSyncEst_T@@@typedef struct BLE_GAP_EvtPeriAdvSyncEst_T { uint8_t status; uint16_t syncHandle; uint8_t advSid; BLE_GAP_Addr_T advAddr; uint8_t advPhy; uint16_t periAdvInterval; uint8_t advClkAccuracy...","GUID-877BD5E4-7DA1-4831-B1C8-A81BFF65856E.html@@@1.1.2.3.1.1.3.14 BLE_ANCS_NtfyAttrsMask_T@@@typedef struct { unsigned int appId : 1 ; unsigned int title : 1 ; unsigned int subtitle : 1 ; unsigned int msg : 1 ; unsigned int msgSize : 1 ; unsigned int date : 1 ; unsigned int positiveAction : 1...","GUID-87911188-56F1-4CB4-BC63-5EF2E006BD23.html@@@1.1.2.1.1.3.35 BLE_GAP_ExtAdvDataParams_T@@@typedef struct BLE_GAP_ExtAdvDataParams_T { uint8_t advHandle; uint8_t operation; uint8_t fragPreference; uint8_t advLen; uint8_t *p_advData; } BLE_GAP_ExtAdvDataParams_T; Structure for configuring...","GUID-87C9F8A4-1DC1-46A3-80E1-B84D5145BB8D.html@@@1.1.2.1.4.4.8 BLE_SMP_InitiatePairing@@@uint16_t BLE_SMP_InitiatePairing (uint16_t connHandle); Initiates the BLE pairing procedure. This function starts the pairing process between two previously unbonded devices, which involves the...","GUID-87E1871C-1050-4D46-9F4F-9F404CFA7CC4.html@@@1.1.2.3.4.1.4.3 BLE_OTAPC_DeviceReset@@@uint16_t BLE_OTAPC_DeviceReset (uint16_t connHandle); Requests a device reset on the server device after OTA DFU. Parameter Description [in] connHandle Handle of the connection for device reset...","GUID-8809223A-F907-46F5-AAE6-813DCDB704C9.html@@@1.1.2.3.1.1.3.4 BLE_ANCS_Event_T@@@typedef struct BLE_ANCS_Event_T { BLE_ANCS_EventId_T eventId; BLE_ANCS_EventField_T eventField; } BLE_ANCS_Event_T; BLE ANCS callback event structure. Field Description eventId Identifier for the type...","GUID-884E0728-9E48-4AAA-AF24-DA7CDDD871CA.html@@@1.1.2.2.4.4.3 BLE_SCM_EventRegister@@@void BLE_SCM_EventRegister (BLE_SCM_EventCb_T eventCb); Registers a callback function for BLE_SCM events. This function should be invoked during the application&apos;s initialization phase to ensure that...","GUID-888910F0-8007-4C13-9BD0-FD969CA34980.html@@@1.1.2.3.1.1.3.11 BLE_ANCS_EvtErrRecomposeBufInd_T@@@typedef struct { uint16_t connHandle; } BLE_ANCS_EvtErrRecomposeBufInd_T; Structure for the BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND event. Field Description connHandle Connection handle associated with...","GUID-88C91195-9CF6-452F-80B5-066D0556F970.html@@@1.1.2.1.1.1.18 Extended primary advertising interval range@@@#define BLE_GAP_EXT_PRIM_ADV_INTVL_MIN 0x0020 #define BLE_GAP_EXT_PRIM_ADV_INTVL_MAX 0x1F4000 Defines the range for the LE extended primary advertising interval in units of 0.625 ms. Macro Description...","GUID-88FF2F67-48AB-4C1A-A64D-0FAEC6351635.html@@@1.1.2.3.3.1.2.2 BLE_HOGPS_EventCb_T@@@typedef void (*BLE_HOGPS_EventCb_T)(BLE_HOGPS_Event_T *p_event); Registers a callback for the BLE HID over GATT profile server role events. Parameter Description [in] p_event Callback function to...","GUID-898E7190-04B1-4DC5-8C8C-AD2A08CBB60F.html@@@1.1.2.1.1.4.37 BLE_GAP_SetAdvEnable@@@uint16_t BLE_GAP_SetAdvEnable (bool enable, uint16_t duration); Starts or stop advertising. The duration parameter is only applicable when the advertising type is not set to Directed Advertising...","GUID-89A09871-6F27-4373-BE0C-2E8F80975245.html@@@1.1.2.2.1.1.1 Invalid peer device ID@@@#define BLE_DM_PEER_DEV_ID_INVALID BLE_DM_MAX_PAIRED_DEVICE_NUM Defines an invalid peer device ID value. Macro Description BLE_DM_PEER_DEV_ID_INVALID Value representing an invalid peer device ID...","GUID-89ED7EC3-7536-455C-86B6-A5A934E25EBF.html@@@1.1.2.3.4.2.1.3 OTAPS image type definitions@@@#define BLE_OTAPS_IMG_TYPE_FW ( 1U &lt;&lt; 0U ) Defines OTAPS image types. Macro Description BLE_OTAPS_IMG_TYPE_FW Firmaware image type...","GUID-8A36D7D3-EBBA-4A0F-BA0E-7D11C4275A14.html@@@1.1.2.1.6.4.6 BT_SYS_GetSleepMode@@@bool BT_SYS_GetSleepMode (); Query the sleep status of the Bluetooth system. Return value Description true The Bluetooth system is currently in sleep mode. false The Bluetooth system is not in sleep...","GUID-8A476C54-6E12-444E-AF40-B38B887B261A.html@@@1.1.2.1.4.3.17 BLE_SMP_KeyList_T@@@typedef struct BLE_SMP_KeyList_T { BLE_SMP_SecKeys_T local; BLE_SMP_SecKeys_T remote; } BLE_SMP_KeyList_T; Structure for storing the security keys of both local and remote devices. Field Description...","GUID-8A5ACB8D-1412-4244-B2E1-1203FE7D15B3.html@@@1.1.2.1.1.4.72 BLE_GAP_TerminateSync@@@uint16_t BLE_GAP_TerminateSync (uint16_t syncHandle); Stops reception of the periodic advertising train identified by the provided syncHandle. This API is part of the extended advertising feature set...","GUID-8A5C35DE-3B93-4FD1-9B13-F5E0376434DF.html@@@1.1.2.3.1.1.4.2 BLE_ANCS_BleEventHandler@@@void BLE_ANCS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-8A80628A-773E-4246-B56C-8E4271106349.html@@@1.1.2.1.1.3.33 BLE_GAP_EvtTxBufAvailable_T@@@typedef struct BLE_GAP_EvtTxBufAvailable_T { uint16_t connHandle; } BLE_GAP_EvtTxBufAvailable_T; Structure for BLE_GAP_EVT_TX_BUF_AVAILABLE event. Field Description connHandle Connection handle...","GUID-8AF80EE7-43B9-4ED9-9A89-8DDCAD43D0F5.html@@@1.1.2.1.1.1.66 Encryption status@@@#define BLE_GAP_ENCRYPT_SUCCESS 0x00 #define BLE_GAP_ENCRYPT_FAIL 0x01 The definition of encryption status. Macro Description BLE_GAP_ENCRYPT_SUCCESS The link is encrypted successfully...","GUID-8B092EEB-E204-4213-A00A-BD0E8C90476E.html@@@1.1.2.2.4.5.1 Initialize Service Change Manager module@@@Example demonstrating initialization of BLE_DD module (Required for BLE_SCM) and management of service change status post-connection...","GUID-8B0D3F24-23E4-4B6D-932F-E3FEFB0F8E96.html@@@2.3.3 Transparent Credit Based Server Role Requirements@@@The Transparent Credit Based Server shall instantiate one Transparent Credit Based Service [1]. A higher layer specification may impose additional requirements on the service declaration of the...","GUID-8B76BAE6-3B53-4B9B-9C74-4AE17B75D60C.html@@@1.1.2.3.2.2.4.1 BLE_ANPS_SetSuppNewCat@@@uint16_t BLE_ANPS_SetSuppNewCat (uint16_t catMask); Sets the supported categories for new alerts. Parameter Description [in] catMask Category mask for new alerts. Refer to ANPS supported category ID...","GUID-8BDF4B21-8954-4F3B-8E6B-8F7250E8AE62.html@@@1.1.2.1.2.1.14 Maximium build-in CCCD count@@@#define GATTS_BUILDIN_CCCD_NUM 0x01 Defines the total number of Client Characteristic Configuration Descriptors (CCCDs) for built-in GATT services. Macro Description GATTS_BUILDIN_CCCD_NUM There exist...","GUID-8BF05FEB-46AD-4594-9C38-55E832DD0162.html@@@1.1.2.1.4.3.7 BLE_SMP_EvtGenScOobDataDone_T@@@typedef struct BLE_SMP_EvtGenScOobDataDone_T { uint8_t confirm[ 16 ]; uint8_t randNum[ 16 ]; } BLE_SMP_EvtGenScOobDataDone_T; Structure for BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE event. Field Description...","GUID-8C579DB8-1E01-44BF-B3C9-1CB390F8A7BC.html@@@1.1.2.2.1.5 Message Sequence Chart@@@BLE_DM Pairing Procedure Handling BLE_DM Filter Accept List Handling BLE_DM Resolving List BLE_DM Connection Parameters Update Procedure...","GUID-8C73BDC5-0E34-42E0-94D6-C9CE271D063D.html@@@1.1.2.1.6.2.1 BT_SYS_ErrCode_T@@@typedef enum BT_SYS_ErrCode_T{ BT_SYS_ERR_OOM, BT_SYS_ERR_END }BT_SYS_ErrCode_T; Defines for error codes used in the Bluetooth system. Enumerator Description BT_SYS_ERR_OOM Error code for &apos;Out of...","GUID-8C9E1D47-B753-4EBC-A021-73E42F908146.html@@@1.1.2.3.1.1.4 Functions@@@BLE_ANCS_BleDdEventHandler Handles BLE Database Discovery (BLE_DD) events. BLE_ANCS_BleEventHandler Handles BLE_Stack events. BLE_ANCS_EventRegister Registers a callback function for BLE ANCS events...","GUID-8CE348C8-F80C-4539-9248-B31209B6B822.html@@@1.1.2.3.3.1.3.6 BLE_HOGPS_SendBootMouseInputReport@@@uint16_t BLE_HOGPS_SendBootMouseInputReport (uint16_t connHandle, uint8_t buttons, int8_t xAxis, int8_t yAxis); Sends a HID boot mouse input report. This function transmits the current state of the...","GUID-8D1B61EE-DB0E-4273-8BAB-2F8FD4658F8B.html@@@1.1.2.3.6.1.2.2 BLE_TRCBPS_EventId_T@@@typedef enum BLE_TRCBPS_EventId_T { BLE_TRCBPS_EVT_CONNECTION_STATUS = 0x00U , BLE_TRCBPS_EVT_RECEIVE_DATA, BLE_TRCBPS_EVT_VENDOR_CMD, BLE_TRCBPS_EVT_ERR_NO_MEM } BLE_TRCBPS_EventId_T; Enumeration for...","GUID-8D237AC1-FD92-4ED3-9223-4F7E1DE368E5.html@@@1.1.2.1.1.1.61 The accuracy of the periodic advertiser&apos;s clock@@@#define BLE_GAP_PERIODIC_ACA_500_PPM 0x00 #define BLE_GAP_PERIODIC_ACA_250_PPM 0x01 #define BLE_GAP_PERIODIC_ACA_150_PPM 0x02 #define BLE_GAP_PERIODIC_ACA_100_PPM 0x03 #define...","GUID-8D4F68C6-3222-4995-AB60-88F279789348.html@@@1.1.2.1.1.3.8 BLE_GAP_CharPeriPreferConnParams_T@@@typedef struct BLE_GAP_CharPeriPreferConnParams_T { bool enable; uint16_t minConnInterval; uint16_t maxConnInterval; uint16_t peripheralLatency; uint16_t connSupervisionTimeoutMulti; }...","GUID-8D7514F0-26D5-4821-831F-A137982D1CF2.html@@@1.1.2.3.4.1.4.5 BLE_OTAPC_FeatureDisc@@@uint16_t BLE_OTAPC_FeatureDisc (uint16_t connHandle); Initiates a feature discovery operation. An event of type BLE_OTAPC_EVT_FEATURE_IND will be generated upon completion of the procedure. Parameter...","GUID-8D788AB8-DEE9-4EC1-AADA-CBCCE9C8F6AC.html@@@1.1.2.1.3.5.10 BLE_L2CAP_ConnParamUpdateRsp@@@uint16_t BLE_L2CAP_ConnParamUpdateRsp (uint16_t connHandle, uint16_t result); Responds to a connection parameter update request. This function should be called upon receiving...","GUID-8DA0A78A-82A9-4165-A035-7D8EC39B81F6.html@@@1.1.2.1.1.4.9 BLE_GAP_CreateSyncCancel@@@uint16_t BLE_GAP_CreateSyncCancel ( void ); Cancels the synchronization process initiated by BLE_GAP_CreateSync while it is pending. This API is part of the extended advertising feature set and is not...","GUID-8DCC8D2C-9A9B-401A-AB29-9CD3B28E26D9.html@@@2.2.4.2 Service Discovery@@@The Transparent Client shall discover the Transparent Service on Transparent Server. When using the Low Energy transport and performing primary service discovery, the Transparent Client shall use...","GUID-8E7A838F-400D-4443-A911-F057D02FDD05.html@@@1.1.2.1.4.3.15 BLE_SMP_EvtSecurityReq_T@@@typedef struct BLE_SMP_EvtSecurityReq_T { uint16_t connHandle; uint8_t authReq; } BLE_SMP_EvtSecurityReq_T; Structure for BLE_SMP_EVT_SECURITY_REQUEST event. Field Description connHandle Connection...","GUID-8F203164-FCA0-428E-85F4-0301224E876E.html@@@1.1.2.1.1.4.63 BLE_GAP_SetPhy@@@uint16_t BLE_GAP_SetPhy (uint16_t connHandle, uint8_t txPhys, uint8_t rxPhys, uint8_t phyOptions); Sets the PHY preferences for the specified connection. The BLE Stack might not be able to make the...","GUID-8FB2E8E4-2700-455A-8B4B-7E396CAD954D.html@@@2.1 Microchip OTA Profile v1.2@@@This profile defines fundamental requirements to perform OTA DFU procedures between OTA Client and Server. Table 2-1.\u2000 Revision History Revision Number Comments v1.0 Initial version v1.2 Update...","GUID-8FF47EF0-4472-48D7-B999-D699796FBC56.html@@@1.1.2.3.3.1.3.14 BLE_HOGPS_SetKeyboardOutputReport@@@uint16_t BLE_HOGPS_SetKeyboardOutputReport (uint8_t ledValue); Sets the HID keyboard output report. This function updates the LED status indicators for a HID keyboard, such as Num Lock, Caps Lock, and...","GUID-90396442-AC79-4369-845B-66DB2881FB0A.html@@@1.1.2.3.3.1.3.16 BLE_HOGPS_SetMouseMotionInputReport@@@uint16_t BLE_HOGPS_SetMouseMotionInputReport (int16_t xAxis, int16_t yAxis); Sets the HID mouse motion input report. This function prepares the input report for mouse motion in the HID profile. It...","GUID-910D933F-0C04-4957-9999-A312B0C9BB89.html@@@1.1.2.1.6.1.2 Rf Suspend Status@@@#define BT_SYS_RF_NOT_SUSPEND 0 #define BT_SYS_RF_SUSPENDED_NO_SLEEP 1 #define BT_SYS_RF_SUSPENDED_WITH_SLEEP 2 Defines the RF suspend status indicating if the RF can be suspended and under what...","GUID-918D6B61-4825-4685-8E1E-C1A416C8E7AE.html@@@1.1.2.3.1.1.4.4 BLE_ANCS_GetAppAttr@@@uint16_t BLE_ANCS_GetAppAttr (uint16_t connHandle, uint8_t *p_appId, BLE_ANCS_AppAttrsMask_T bitmask); Retrieves attributes for a specific app on an iOS device. Parameter Description [in] connHandle...","GUID-9193BCBE-82CE-47CC-AF72-B0E8A7A68BC4.html@@@1.1.2.3.1.1.3.13 BLE_ANCS_EvtNtfyInd_T@@@typedef struct { uint16_t connHandle; uint32_t ntfyId; BLE_ANCS_NtfyEvtFlagMask_T ntfyEvtFlagMask; BLE_ANCS_CategoryId_T categoryId; uint8_t categoryCount; } BLE_ANCS_EvtNtfyInd_T; Structure for the...","GUID-91D55D80-4397-48D1-BB8D-C2A0F010F669.html@@@1.1.2.1.3.2.1 BLE_L2CAP_EventId_T@@@typedef enum BLE_L2CAP_EventId_T { BLE_L2CAP_EVT_CONN_PARA_UPD_REQ= 0x00 , BLE_L2CAP_EVT_CONN_PARA_UPD_RSP, BLE_L2CAP_EVT_CB_CONN_IND, BLE_L2CAP_EVT_CB_CONN_FAIL_IND, BLE_L2CAP_EVT_CB_SDU_IND...","GUID-91D6F8AA-2F12-40CF-B412-CC4CDC41A3C6.html@@@2.1.4.5 OTA Firmware Update Procedures@@@The generic procedures defined in this section provide standardized methods of using the features of the OTA Service [1] in specified sequences in order to satisfy common use cases. This profile does...","GUID-91EA8992-FC00-463C-9046-248F7F4863DD.html@@@1.1.2.3.4.1.4.2 BLE_OTAPC_BleEventHandler@@@void BLE_OTAPC_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-91F3526B-28E8-432B-99E6-E6FBEF52394C.html@@@1.1.2.3.5.2.4.4 BLE_PXPR_SetLlsAlertLevel@@@uint16_t BLE_PXPR_SetLlsAlertLevel (BLE_PXPR_AlertLevel_T level); Sets the Alert Level for the Link Loss Service (LLS). Parameter Description [in] level The desired Alert Level to be set. See...","GUID-92525081-BBDA-4587-9D1A-E4455FA0B082.html@@@2.5.3.2 Transparent Downlink Data (TDD) Characteristic@@@This characteristic is used for downlink data transmission from Client to Server via Characteristic Value Write Command or Write Request...","GUID-930F7421-6023-4E98-980F-20CDC5D99566.html@@@1.1.2.1.1.3.18 BLE_GAP_EvtConnect_T@@@typedef struct BLE_GAP_EvtConnect_T { uint8_t status; uint16_t connHandle; uint8_t role; BLE_GAP_Addr_T remoteAddr; uint8_t localRpaAddr[GAP_MAX_BD_ADDRESS_LEN]; uint8_t...","GUID-93341705-EE66-4812-A8CB-2FA658816712.html@@@1.1.2.1.1.3.20 BLE_GAP_EvtDeviceNameChanged_T@@@typedef struct BLE_GAP_EvtDeviceNameChanged_T { uint8_t length; uint8_t devName[GAP_MAX_DEVICE_NAME_LEN]; } BLE_GAP_EvtDeviceNameChanged_T; Structure for BLE_GAP_EVT_DEVICE_NAME_CHANGED event. Field...","GUID-93462726-1C20-4F9B-AA28-B2BA3AC37241.html@@@1.1.2.1.4.3.13 BLE_SMP_EvtPairingComplete_T@@@typedef struct BLE_SMP_EvtPairingComplete_T { uint16_t connHandle; uint8_t status; uint8_t failReason; bool bond; uint8_t encryptKey[ 16 ]; BLE_SMP_SecKeys_T local; BLE_SMP_SecKeys_T remote; }...","GUID-93AAFCC3-49A5-4614-86E8-B12D9ABD0807.html@@@1.1.2.1.1.4.45 BLE_GAP_SetDeviceName@@@uint16_t BLE_GAP_SetDeviceName (uint8_t len, uint8_t *p_deviceName); Sets the local device name. Parameter Description [in] len Length of the device name. See Maximum device name length . [in]...","GUID-93DA0333-5DE5-4536-AC30-2855D6DCD68C.html@@@1.1.2.1.6.2.3 BT_SYS_TraceFmt_T@@@typedef enum BT_SYS_TraceFmt_T{ BT_SYS_FMT_ASCII, }BT_SYS_TraceFmt_T; Enumeration for Bluetooth system trace output formats. Enumerator Description BT_SYS_FMT_ASCII ASCII format for trace output...","GUID-93DA9CA2-563C-4494-AFCB-02DDDB6352B9.html@@@1.1.2.2.4.4.1 BLE_SCM_BleDdEventHandler@@@void BLE_SCM_BleDdEventHandler (BLE_DD_Event_T *p_event); Handles BLE Device Discovery (BLE_DD) events. This function must be called for each BLE_DD event that occurs to ensure proper operation of the...","GUID-94759142-5FF2-463A-964B-BAE774154B60.html@@@2.3.3.1.1 Manufacturer Specific Data or Service Data AD Types@@@While in a GAP Discoverable Mode for initial connection to a Transparent Credit Based Client, the Transparent Credit Based Server may include the Manufacturer Specific Data or Service Data defined in...","GUID-94C0F802-0523-4D02-949F-E5FB75A490A6.html@@@1.1.2.1.1.5.2 GAP Scanning/Extended Scanning Procedure@@@Example demonstrating the initiation of an active scan Example demonstrating the initiation of a passive scan Example demonstrating the reception of an ADV_DIRECT_IND advertisement...","GUID-954F2906-D8D5-45CD-BD41-35EE7D8DA084.html@@@1.1.2.3.1.1.3.7 BLE_ANCS_EvtAppAttrInd_T@@@typedef struct { uint16_t connHandle; BLE_ANCS_DecodeAppAttrs_T *p_data; } BLE_ANCS_EvtAppAttrInd_T; Structure for the BLE_ANCS_EVT_APP_ATTR_IND event. Field Description connHandle Connection handle...","GUID-95AA5A7D-9316-4F7D-9AB8-839345072AEA.html@@@1.1.2.3.4.2.4 Functions@@@BLE_OTAPS_EventRegister Registers a callback function for BLE OTA profile events. BLE_OTAPS_Init Initializes the BLE Over-The-Air Programming Service (OTAPS) profile and service...","GUID-961C9060-9EE6-4979-8A4A-C3B881CD1A95.html@@@1.1.2.1.2.4.10 GATTC_ReadUsingUUID@@@uint16_t GATTC_ReadUsingUUID (uint16_t connHandle, GATTC_ReadByTypeParams_T *p_readParams); Initiates a read operation for a characteristic value by UUID within a handle range. This function starts a...","GUID-9630891B-6917-4AF0-86FF-6B7B106D524D.html@@@1.1.2.1.1.4.6 BLE_GAP_CreateConnection@@@uint16_t BLE_GAP_CreateConnection (BLE_GAP_CreateConnParams_T *p_createConnParam); Initiates a BLE connection to a connectable advertiser. This API is part of the legacy advertising feature set and...","GUID-967090E1-20FE-4251-A2CE-5B8ED5C50C6E.html@@@1.1.2.2.3.3.1 BLE_DD_CharInfo_T@@@typedef struct BLE_DD_CharInfo_T { uint16_t charHandle; uint8_t property; uint16_t attrHandle; } BLE_DD_CharInfo_T; Structure for information about a specific BLE characteristic. Field Description...","GUID-972299B3-E4E3-4F0E-A9AD-1795864542CF.html@@@1.1.2.1.8.4 HCI Functions@@@HCI_Init Initialize HCI mode. HCI_EventRegister HCI event callback registration. HCI_Cmd HCI command. HCI_AppHardwareErrEvt Application-triggered Hardware error event. HCI_AppCmdStatusEvt...","GUID-972BA4EA-F703-4CBA-8978-AD7B4742103B.html@@@1.1.2.1.1.1.16 Extended advertising data operations@@@#define BLE_GAP_EXT_ADV_DATA_OP_COMPLETE 0x03 #define BLE_GAP_EXT_ADV_DATA_OP_UNCHANGED 0x04 Defines the operations related to extended advertising data. Macro Description...","GUID-97343EFC-3466-4B74-A9CB-8859B218FAFD.html@@@1.1.2.1.1.3.10 BLE_GAP_CreateConnParams_T@@@typedef struct BLE_GAP_CreateConnParams_T { uint16_t scanInterval; uint16_t scanWindow; uint8_t filterPolicy; BLE_GAP_Addr_T peerAddr; BLE_GAP_ConnParams_T connParams; } BLE_GAP_CreateConnParams_T...","GUID-975351AD-0EB7-44A1-A4E9-A774978E675D.html@@@1.1.2.3.2.2.1.3 Maximum connection number@@@# #define BLE_ANPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR The definition of Memory size. Macro Description BLE_ANPS_MAX_CONN_NBR Maximum allowing Conncetion Numbers...","GUID-9760DEAA-340C-4E4B-9C42-0B988B6E99F5.html@@@1.1.2.3.2.1.3.9 BLE_ANPC_EvtSuppNewAlertCatInd_T@@@typedef struct BLE_ANPC_EvtSuppNewAlertCatInd_T { uint16_t connHandle; uint16_t category; }BLE_ANPC_EvtSuppNewAlertCatInd_T; Structure for the BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND event. Field...","GUID-97BA9EF4-1CFC-49DC-B607-AC5AE766E5A3.html@@@1.1.2.1.2.3.15 GATT_EvtReadUsingUuidResp_T@@@typedef struct GATT_EvtReadUsingUuidResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; }...","GUID-98098C1F-CE33-42E0-BE0E-DF55B7A3D08F.html@@@1.1.2.1.1.3.56 BLE_GAP_EvtSubrateChange_T@@@typedef struct BLE_GAP_EvtSubrateChange_T { uint8_t status; uint16_t connHandle; uint16_t subrateFactor; uint16_t periLatency; uint16_t continuationNum; uint16_t supervisionTimeout...","GUID-9833F530-E345-4306-B35C-37C361816D32.html@@@1.1.2.1.1.1.51 Scan filter duplicate options@@@#define BLE_GAP_SCAN_FD_DISABLE 0x00 #define BLE_GAP_SCAN_FD_ENABLE 0x01 #define BLE_GAP_SCAN_FD_ENABLE_RESET 0x02 Defines the options for filtering duplicate advertising reports during scanning...","GUID-9882F04D-66D0-44AA-B87D-EC82D22BE80F.html@@@1.1.2.1.1.4.19 BLE_GAP_GetAdvAddr@@@uint16_t BLE_GAP_GetAdvAddr (uint8_t advHandle, BLE_GAP_Addr_T *p_addr); Retrieves the advertising address used in advertising events for a given advertising handle. Parameter Description [in]...","GUID-98CD8D45-B85A-45DB-B750-2FB5E55B57ED.html@@@1.1.2.1.5.3.2 STACK_EventCb_T@@@typedef void (*STACK_EventCb_T)(STACK_Event_T *p_event); Defines the prototype for the STACK event callback function...","GUID-993D230B-1682-47B8-86B0-A491C027FA4B.html@@@1.1.2.3.3.1.2.3 BLE_HOGPS_EventField_T@@@typedef union { BLE_HOGPS_EvtBootModeEnter_T evtBootModeEnter; BLE_HOGPS_EvtReportModeEnter_T evtReportModeEnter; BLE_HOGPS_EvtHostSuspendEnter_T evtHostSuspendEnter; BLE_HOGPS_EvtHostSuspendExit_T...","GUID-99591034-AC02-4E1D-B750-D2DE3A2A3C06.html@@@1.1.2.3.4.2.3.3 BLE_OTAPS_EvtUpdatingInd_T@@@typedef struct BLE_OTAPS_EvtUpdatingInd_T { uint16_t length; uint8_t *p_fragment; } BLE_OTAPS_EvtUpdatingInd_T; Structure for the BLE_OTAPS_EVT_UPDATING_IND event. Field Description length Length of...","GUID-99787238-8749-43FB-8EC5-5076715C6586.html@@@1.1.2.3.4.2.1 Defines@@@OTAPS firmware extended feature definitions Defines extended firmware features in OTAPS. OTAPS image file type definitions Defines OTAPS image file types. OTAPS image type definitions Defines OTAPS...","GUID-999CD055-702A-476C-AE62-D2A83F909F8A.html@@@1.1.2.2.5.1.2.2 MW_AES_AesEcbEncrypt@@@uint16_t MW_AES_AesEcbEncrypt (MW_AES_Ctx_T * p_ctx, uint16_t length, uint8_t *p_chiperText, uint8_t *p_plainText); Encrypts a block of data using AES ECB mode. Parameter Description [in] p_ctx...","GUID-99A5150A-D68F-4BBC-9CCB-B091E1EDFF55.html@@@1.1.2.1.1.4.35 BLE_GAP_ScanInit@@@uint16_t BLE_GAP_ScanInit ( void ); Initializes the BLE GAP legacy scan module. Return value Description MBA_RES_SUCCESS Successfully initializes the BLE GAP scan module. MBA_RES_OOM Internal memory...","GUID-9A194529-05FE-40D4-8C2F-EC37747D30F9.html@@@1.1.2.2.2.2.1 BLE_LOG_EventCb_T@@@typedef void (*BLE_LOG_EventCb_T)(uint8_t logType, uint16_t logLength, uint8_t *p_logPayload); Callback type for BLE logging events. This callback function is used to send BLE logging events to the...","GUID-9A2B2A80-1F4A-4DF6-AFB5-153ACD7632DC.html@@@1.1.2.2.3.3.13 BLE_DD_EvtSecRequire_T@@@typedef struct BLE_DD_EvtSecRequire_T { uint16_t connHandle; } BLE_DD_EvtSecRequire_T; Structure for BLE_DD_EVT_SEC_REQUIRED event. Field Description connHandle Connection handle associated with this...","GUID-9A5B3D5D-8E92-42ED-A7B4-C8E3768DC851.html@@@1.1.2.1.7.1.5 Transmitter PHY types@@@#define BLE_DTM_TX_1M 0x01 #define BLE_DTM_TX_2M 0x02 #define BLE_DTM_TX_CODED_S_8 0x03 #define BLE_DTM_TX_CODED_S_2 0x04 Defines the PHY types for the transmitter during DTM. Macro Description...","GUID-9AE93CED-8A79-4858-B3EE-4B0066124CF6.html@@@1.1.2.1.3.1.6 L2CAP minimum MPS size@@@#define BLE_L2CAP_MIN_MPS_SIZE 23 Defines the minimum size for the L2CAP Maximum PDU Payload Size (MPS) in bytes. Macro Description BLE_L2CAP_MIN_MPS_SIZE Minimum size of a L2CAP MPS in bytes...","GUID-9AF99D19-0628-4D56-9F56-A4B5C11372A6.html@@@1.1.2.2.2 LOG@@@Provides functions for handling BLE Stack logs. Defines Structures Functions...","GUID-9B1359AE-7E65-4E73-B86F-7BF748B818D3.html@@@1.1.2.1.4.4.5 BLE_SMP_GeneratePasskey@@@void BLE_SMP_GeneratePasskey (uint8_t *p_passkey); Generates a six-byte random passkey in ASCII format. This function should be invoked within the SMP callback when the...","GUID-9B32352A-C48B-4027-A92C-FF81BE6A7B2D.html@@@1.1.2.2.4.5.2 Retrieve Characteristic Handles for Remote GATT Service@@@Example demonstrating how to retrieve characteristic handles from database discovery. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how to retrieve characteristic handles from an application with cached handles...","GUID-9B7AF741-9AA6-4A33-AA43-CBB2B15810ED.html@@@1.1.2.3.1.1.3.15 BLE_ANCS_NtfyEvtFlagMask_T@@@typedef struct { unsigned int silent : 1 ; unsigned int important : 1 ; unsigned int preExisting : 1 ; unsigned int positiveAction : 1 ; unsigned int negativeAction : 1 ; } BLE_ANCS_NtfyEvtFlagMask_T...","GUID-9BD0D6F6-F2FF-4F84-BA20-A1F25200C097.html@@@1.1.2.1.2.1.23 UUID declaration@@@extern const uint8_t g_gattUuidPrimSvc[ATT_UUID_LENGTH_ 2 ]; extern const uint8_t g_gattUuidSecSvc[ATT_UUID_LENGTH_ 2 ]; extern const uint8_t g_gattUuidInc[ATT_UUID_LENGTH_ 2 ]; extern const uint8_t...","GUID-9BD0F71C-2778-4604-8820-B15425EC4F06.html@@@1.1.2.1.1.1.25 Maximum advertising handle@@@#define BLE_GAP_MAX_ADV_HANDLE 0xEF Defines the highest value that can be used as an advertising handle. Macro Description BLE_GAP_MAX_ADV_HANDLE Maximum valid BLE advertising handle...","GUID-9BDEFBAE-4C9B-4E8D-9296-F95F2B0B4884.html@@@1.1.2.1.3.5.8 BLE_L2CAP_CbSendSdu@@@uint16_t BLE_L2CAP_CbSendSdu (uint8_t leL2capId, uint16_t length, uint8_t *p_payload); Sends an L2CAP SDU (Service Data Unit) over a credit-based connection channel. Parameter Description [in]...","GUID-9C0824C2-B7A0-42E3-9AE3-81D700FFD9E7.html@@@1.1.2.3.1.1.4.6 BLE_ANCS_Init@@@uint16_t BLE_ANCS_Init ( void ); Initializes the Apple Notification Center Service (ANCS) profile. Return value Description MBA_RES_SUCCESS BLE ANCS profile was initialized successfully. MBA_RES_FAIL...","GUID-9C6F7949-5F1D-4E3E-8EF3-148C1E7DA963.html@@@1.1.2.1.1.4.59 BLE_GAP_SetPeriAdvData@@@uint16_t BLE_GAP_SetPeriAdvData (BLE_GAP_PeriAdvDataParams_T *p_advDataParam); Sets periodic advertising data. This API can be called at any time. If periodic advertising is enabled for the specified...","GUID-9CAB3500-865E-4C63-8DF9-DDDCF4BF8708.html@@@1.1.2.3.4.2.4.7 BLE_OTAPS_UpdateStop@@@uint16_t BLE_OTAPS_UpdateStop ( void ); Stops the ongoing BLE OTA firmware update procedure. Return value Description MBA_RES_SUCCESS OTA procedure successfully stopped...","GUID-9D03BA4D-C18A-409F-8084-1568A4F82D8D.html@@@1.1.2.2.3.3.11 BLE_DD_EvtDisconnect_T@@@typedef struct BLE_DD_EvtDisconnect_T { uint16_t connHandle; } BLE_DD_EvtDisconnect_T; Structure for BLE_DD_EVT_DISCONNECTED event. Field Description connHandle Connection handle associated with this...","GUID-9D4040A1-4922-48F6-BA70-EB4B094F9B91.html@@@1.1.2.3.1.1.3 Structures@@@BLE_ANCS_AppAttrsMask_T Structure representing the bitmask for iOS app attribute flags. BLE_ANCS_DecodeAppAttrs_T Structure containing information about iOS app attributes. BLE_ANCS_DecodeNtfyAttrs_T...","GUID-9D543F8D-434E-4784-B9C8-7522E512B6D9.html@@@1.1.2.1.1.1.60 Synchronization timeout@@@#define BLE_GAP_SYNC_TIMEOUT_MIN 0x000A #define BLE_GAP_SYNC_TIMEOUT_MAX 0x4000 Defines the synchronization timeout range for the periodic advertising train. Macro Description BLE_GAP_SYNC_TIMEOUT_MIN...","GUID-9D5E0544-D01F-4F4A-A525-20A1732CCECB.html@@@1.1.2.3.4.1.4.8 BLE_OTAPC_UpdateComplete@@@uint16_t BLE_OTAPC_UpdateComplete (uint16_t connHandle); Initiates the firmware update completion process. BLE_OTAPC_EVT_COMPLETE_RSP_IND event will be generated upon completion. Parameter Description...","GUID-9D758EC2-E195-49F3-831E-F407CEDC6081.html@@@2.2.2.3 Transport Dependencies@@@There are no transport restrictions exposed by this profile specification. However, a higher layer specification might add additional requirements...","GUID-9D7C3EEB-B510-401A-BFCE-005BC574D0D2.html@@@1.1.2.1.1.1.1 Address length@@@#define GAP_MAX_BD_ADDRESS_LEN 0x06 Defines the maximum length of a Bluetooth address. Macro Description GAP_MAX_BD_ADDRESS_LEN Maximum length of a Bluetooth Device address in bytes...","GUID-9D841B5D-626A-49D9-A324-E0CF8795D52C.html@@@1.1.2.1.1.4.12 BLE_GAP_EnableOneTimeAdv@@@uint16_t BLE_GAP_EnableOneTimeAdv (uint8_t option); Starts a one-time advertising event. This API is part of the legacy advertising feature set. It will be disallowed if any API from the extended...","GUID-9DB82683-6132-46A4-9663-076C9332BFA2.html@@@1.1.2.1.1.1.46 Preferred PHY coding preference@@@#define BLE_GAP_PHY_PREF_NO 0 #define BLE_GAP_PHY_PREF_S2 1 #define BLE_GAP_PHY_PREF_S8 2 Defines the preferred PHY coding for transmission on the LE Coded PHY. Macro Description BLE_GAP_PHY_PREF_NO...","GUID-9DE2D7B5-FDDB-4AE1-95C1-494675275B68.html@@@1.1.2.2.4.5.4 Manage Service Change Status on Remote Device@@@Example demonstrating how to receive a service change indication from a remote peer. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how to receive a database out of sync error code from a remote peer...","GUID-9E0CA168-2F64-40A9-AD7C-BAABD71F48C8.html@@@1.1.2.1.1.3.26 BLE_GAP_EvtPathLossThreshold_T@@@typedef struct BLE_GAP_EvtPathLossThreshold_T { uint16_t connHandle; uint8_t currentPathLoss; uint8_t zoneEntered; }BLE_GAP_EvtPathLossThreshold_T; Structure for BLE_GAP_EVT_PATH_LOSS_THRESHOLD event...","GUID-9EBC36F1-1D8C-4762-A43E-AD118C82CCC0.html@@@1.1.2.1.1.4.61 BLE_GAP_SetPeriAdvParams@@@uint16_t BLE_GAP_SetPeriAdvParams (BLE_GAP_PeriAdvParams_T *p_periAdvParams); Configures periodic advertising parameters. This API can be called at any time and is part of the extended advertising...","GUID-9ECAA998-68A4-4E3E-AEA3-EC8214EDBA51.html@@@1.1.2.1.2.4.9 GATTC_Read@@@uint16_t GATTC_Read (uint16_t connHandle, uint16_t charHandle, uint16_t valueOffset); Initiates a read operation from the GATT Client to the GATT Server. This API is used to read a Characteristic...","GUID-9EF28314-5966-4A48-A87F-2A012CFDAA03.html@@@1.1.2.3.5.2.3.1 BLE_PXPR_EventField_T@@@typedef union { BLE_PXPR_EvtAlertLevelWriteInd_T evtLlsAlertLevelWriteInd; BLE_PXPR_EvtAlertLevelWriteInd_T evtIasAlertLevelWriteInd; } BLE_PXPR_EventField_T; Union of BLE Proximity Profile Reporter...","GUID-9F03D0C8-1AA9-47E2-A9FA-1E08E267C60E.html@@@1.1.2.2.3.5.2 Database Discovery Procedure@@@Example demonstrating database discovery after a connection is established. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating database discovery after a connection is established and paired/encrypted. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example...","GUID-9F374BB0-03D0-4E6F-AF2D-4B0414AE169D.html@@@1.1.2.1.2.4.18 GATTS_RemoveService@@@uint16_t GATTS_RemoveService (uint16_t startHandle); Removes a previously registered service from the GATT server. Parameter Description [in] startHandle The start handle of the service to remove...","GUID-9F3A2053-802F-43AA-995C-A99E19486B54.html@@@1.1.2.3.1.1.4.5 BLE_ANCS_GetNtfyAttr@@@uint16_t BLE_ANCS_GetNtfyAttr (uint16_t connHandle, uint32_t ntfyId, BLE_ANCS_NtfyAttrsMask_T bitmask); Requests attributes for a specific iOS notification. This function triggers the ANCS client role...","GUID-9F422221-4315-4037-B339-81D28932D1A7.html@@@2.6.4 Acronyms and Abbreviations@@@Table 4.1: Acronyms and Abbreviations Acronyms and Abbreviations Meaning GATT Generic Attribute Profile LE Low Energy L2CAP CoC L2CAP Connection oriented Channels L2CAP PSM L2CAP protocol/service...","GUID-9F77307A-D3E0-4915-BC24-BBE46AE0DF2A.html@@@2.4.4.5 Device Reset Request operation@@@When the Device Reset Request opcode is written to the OTACP, the Server shall be ready to reset the device. The format of the Device Reset Request operation is defined in Table 4.10. Table 4.10...","GUID-9F845AE9-F918-4003-B311-E85F343C77CF.html@@@1.1.2.2.1.1.3 Maximum filter accept list size@@@#define BLE_DM_MAX_FILTER_ACCEPT_LIST_NUM BLE_DM_MAX_PAIRED_DEVICE_NUM Defines the maximum number of devices that can be included in the filter accept list. Macro Description...","GUID-9F88202F-E1EA-4A86-94F0-8325D8AA1EF2.html@@@1.1.2.1.2.5.4 Handling Peer Writes of Characteristic Values@@@Example demonstrating peer writes of characteristic value (Response handled by BLE library). \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating peer writes of characteristic value (Response handled by application)...","GUID-A0C15243-FF31-4EAB-90BE-300FE0F0888E.html@@@1.1.2.1.1.3.40 BLE_GAP_ExtScanningEnable_T@@@typedef struct BLE_GAP_ExtScanningEnable_T { bool enable; uint8_t filterDuplicates; uint16_t duration; uint16_t period; } BLE_GAP_ExtScanningEnable_T; Structure for enabling or disabling extended...","GUID-A0CC250A-0581-49CA-B038-9A92CDAB5423.html@@@1.1.2.1.1.1.41 Periodic advertising interval@@@#define BLE_GAP_PERIODIC_ADV_INTVL_MIN 0x0006 #define BLE_GAP_PERIODIC_ADV_INTVL_MAX 0xFFFF Defines the range of LE periodic advertising intervals. (Unit: 1.25 ms) Macro Description...","GUID-A0E7191A-5AF6-44B4-9E1B-19D74354392D.html@@@1.1.2.1.1.1.10 Connection parameters range@@@#define BLE_GAP_CP_MIN_CONN_INTVAL_MIN 0x0006 #define BLE_GAP_CP_MIN_CONN_INTVAL_MAX 0x0C80 #define BLE_GAP_CP_MAX_CONN_INTVAL_MIN 0x0006 #define BLE_GAP_CP_MAX_CONN_INTVAL_MAX 0x0C80 #define...","GUID-A1595ACB-6522-44A3-8CF5-5C6F04A32490.html@@@2.3 Microchip Transparent Credit Based Profile v1.0@@@This profile defines fundamental requirements to connect and interact with Transparent Credit Based Profile intended for higher application layer to exchange control command and data between Client...","GUID-A15AC144-CD72-427A-B096-33FC1E7FEA88.html@@@1.1.2.1.1.3 Structures@@@BLE_GAP_Addr_T Structure for the Bluetooth address. BLE_GAP_AdvDataParams_T Structure for configuring advertising data. BLE_GAP_AdvParams_T Structure for configuring advertising parameters...","GUID-A31CF5F9-8362-448E-A136-57C5D4088345.html@@@1.1.2.3.4.1.4.10 BLE_OTAPC_UpdateRequest@@@uint16_t BLE_OTAPC_UpdateRequest (uint16_t connHandle, BLE_OTAPC_Req_T * p_req); Initiates a firmware update request operation. An event of type BLE_OTAPC_EVT_REQ_RSP_IND will be generated upon...","GUID-A327A745-BB24-4565-A6C1-92B0A609DE22.html@@@1.1.2.2.5.2.1.1 Maximum block lenth@@@#define MW_DFU_MAX_BLOCK_LEN 0x400 Defines the maximum length of a data block during DFU. Macro Description MW_DFU_MAX_BLOCK_LEN Maximum data block length in bytes...","GUID-A32FDFB3-83E6-4EF0-A462-52A638A4F43A.html@@@2.4.1.4 GATT Sub-Procedure Requirements@@@Requirements in this section represent a minimum set of requirements for a server. Other GATT sub\u2011procedures may be used if supported by both the client and server. Table 1.1 summarizes additional...","GUID-A3699D37-929F-41C1-B357-DDC3341F781C.html@@@1.1.2.1.6.4.2 BT_SYS_AllowSystemSleep@@@bool BT_SYS_AllowSystemSleep (uint32_t ulRtcFrequency, uint32_t ulRtcCurrentCnt); Check if the Bluetooth system allows the system to enter sleep mode. Parameter Description [in] ulRtcFrequency The...","GUID-A3702509-FE68-4F09-8735-0FE47BD093F5.html@@@1.1.2.3.4.2.3.6 BLE_OTAPS_EvtUpdateReq_T@@@typedef struct BLE_OTAPS_EvtUpdateReq_T { uint16_t connHandle; uint32_t fwImageSize; uint32_t fwImageId; uint32_t fwImageVer; uint16_t fwImageChksum; uint16_t fwImageCrc16; uint8_t fwImageFileType; }...","GUID-A37CD39C-147D-4255-AC5F-4958ABC738EE.html@@@1.1.2.2.4.4 Functions@@@BLE_SCM_BleDdEventHandler Handles BLE Device Discovery (BLE_DD) events. BLE_SCM_BleEventHandler Handles BLE stack events. BLE_SCM_EventRegister Registers a callback function for BLE_SCM events...","GUID-A389CB90-74E0-4527-8A8B-AD69E05F2120.html@@@1.1.2.1.2.5.9 Discovering Characteristics@@@Example demonstrating how to discover all characteristics. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating how to discover characteristics by UUID...","GUID-A3A3A39F-2267-40EF-A32E-EC9EDF69665F.html@@@2.5.3.3 Transparent Control Point (TCP) Characteristics@@@The structure of TCP characteristic is defined as below. To ensure the successful operation, this Client Characteristic Configuration Descriptor (CCCD) of Transparent Control Point (TCP) on Server...","GUID-A3C5EC41-CEF5-4911-A5CD-56AD6A24523F.html@@@1.1.2.1.2.1.16 MTU length@@@#define BLE_ATT_DEFAULT_MTU_LEN 23 #define BLE_ATT_MAX_MTU_LEN 247 Defines the GATT MTU length. Macro Description BLE_ATT_DEFAULT_MTU_LEN Default MTU length for ATT protocol. BLE_ATT_MAX_MTU_LEN...","GUID-A3D0C4E7-5D25-4E32-8253-C82CEA549411.html@@@1.1.2.2.1.1.5 Maximum registration number@@@#define BLE_DM_MAX_REGISTER_NUM 2 Defines the maximum number of registrations allowed in BLE Device Manager (BLE_DM). Macro Description BLE_DM_MAX_REGISTER_NUM Maximum number of registrations in...","GUID-A49939F9-5F09-4BD4-867E-97DB4DC09F46.html@@@1.1.2.1.1 Generic Access Profile (GAP)@@@Defines the interface for the BLE GAP functions provided by the BLE Library. The BLE GAP module is responsible for device discovery, connection establishment, and security management. It is the...","GUID-A5020944-366F-400D-94FD-81EFC440AC04.html@@@1.1.2.2.5.1.2.4 MW_AES_EcbEncryptInit@@@uint16_t MW_AES_EcbEncryptInit (MW_AES_Ctx_T * p_ctx, uint8_t *p_aesKey); Initializes AES ECB block cipher encryption. Parameter Description [out] p_ctx Pointer to the AES context structure. See...","GUID-A507AD4E-54B1-4ADA-A35B-A0F68857391D.html@@@2.6.1.2 Bluetooth Specification Release Compatibility@@@This specification is compatible with Bluetooth Core Specification 4.1 or later version of the Core Specification [1]...","GUID-A51A755A-E84F-4AA8-8DB7-D2A3A0F7161F.html@@@1.1.2.3.3 HID Over GATT Profile@@@Provides the interface for the BLE HID over GATT profile v1.0 (HOPGS). HID over GATT Profile Server Role...","GUID-A54BDD85-5BEC-4241-85F6-F5ACE9782A82.html@@@1.1.2.1.1.5.8 GAP Privacy Procedure@@@Example demonstrating the use of a resolvable private address generated from a locally stored default IRK in privacy advertising procedures Example demonstrating the use of a resolvable...","GUID-A637090F-69A5-4A8F-B3D2-73E28120E350.html@@@1.1.2.1.8.4.8 HCI_AclTx@@@void HCI_AclTx (uint16_t length, uint8_t *p_packet); HCI ACL data Trasmit. Parameter Description [in] length The length of HCI ACL data packet to be trasmitted. [in] p_packet Pointer to HCI ACL data...","GUID-A65EDA69-E440-47DC-96C1-445771D85CEE.html@@@1.1.2.3.6.2.1 Transparent Credit Based Profile initialization@@@Example demonstrating the initialization of the Transparent Credit Based Profile...","GUID-A69881E3-A582-475C-AED5-A76031AD0AEF.html@@@1.1.2.1.1.4.10 BLE_GAP_Disconnect@@@uint16_t BLE_GAP_Disconnect (uint16_t connHandle, uint8_t reason); Terminates an existing connection. BLE_GAP_EVT_DISCONNECTED is generated upon disconnection. Parameter Description [in] connHandle...","GUID-A7013816-3375-4AB5-9DCA-83ECF1DDB5C3.html@@@1.1.2.2.1.3.8 BLE_DM_EvtSecurityFail_T@@@typedef struct BLE_DM_EvtSecurityFail_T { BLE_DM_SecurityProc_T procedure; uint8_t error; uint8_t reason; } BLE_DM_EvtSecurityFail_T; Structure for BLE_DM_EVT_SECURITY_FAIL event. Field Description...","GUID-A7CF368C-F31C-4CCE-8CFD-D7B00D8A3652.html@@@1.1.2.1.2 Generic Attribute Profile (GATT)@@@Defines the interface for the GATT functions provided by the BLE Library. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-A7D140FB-84B5-4193-BC9D-7E7A8B06E8ED.html@@@2.5.3.2.1 Transparent Downlink Data Characteristic Behavior@@@While Downlink Credit Based Flow Control is enabled, Client can send burst data to Server by performing a Write Command with a Characteristic Value of this attribute handle. If Downlink Credit Based...","GUID-A802106D-F5F4-465A-9EC0-68D3150322E7.html@@@1.1.2.1.6.3.3 BT_SYS_LogEventCb_T@@@typedef void (*BT_SYS_LogEventCb_T)(BT_SYS_LogEvent_T *p_event); Callback type for Bluetooth system log events. Parameter Description [in] p_event Pointer to the log event structure containing details...","GUID-A8E0A8D6-7207-4F74-9302-B6D6886BA6D0.html@@@1.1.2.3.5.1.4.2 BLE_PXPM_BleEventHandler@@@void BLE_PXPM_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack related events. This function should be called when BLE Stack events occur. Parameter Description [in] p_stackEvent...","GUID-A9073ABD-C75E-4884-82C0-655745C3C64C.html@@@1.1.2.1.4.3.14 BLE_SMP_EvtPairingReq_T@@@typedef struct BLE_SMP_EvtPairingReq_T { uint16_t connHandle; uint8_t authReq; } BLE_SMP_EvtPairingReq_T; Structure for BLE_SMP_EVT_PAIRING_REQUEST event. Field Description connHandle Connection...","GUID-A9156C84-B10C-4C95-90C0-92B552BF2C14.html@@@1.1.2.2.3.3.6 BLE_DD_DiscSvc_T@@@typedef struct BLE_DD_DiscSvc_T { ATT_Uuid_T svcUuid; BLE_DD_DiscInfo_T *p_discInfo; BLE_DD_DiscChar_T **p_discChars; BLE_DD_CharList_T *p_charList; uint8_t discCharsNum; } BLE_DD_DiscSvc_T; Structure...","GUID-A91B6BFA-5046-44BC-8D15-31A907A0D6AA.html@@@1.1.2.1.4.3.5 BLE_SMP_EvtDisplayCompareValueReq_T@@@typedef struct BLE_SMP_EvtDisplayCompareValueReq_T { uint16_t connHandle; uint8_t value[ 6 ]; } BLE_SMP_EvtDisplayCompareValueReq_T; Structure for BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST event...","GUID-A9778E35-B64F-45F9-B9EC-99102EDAB8F0.html@@@1.1.2.1.2.4.16 GATTS_GetHandleValue@@@uint16_t GATTS_GetHandleValue (uint16_t attrHandle, uint8_t *p_attrValue, uint16_t *p_attrLength); Retrieves the value of an attribute from the GATT Server. If the attribute is readable, its value is...","GUID-AA1659A8-C8AF-4041-8FF3-0100CDCDB8B2.html@@@2.6.1.1 Service Dependency@@@This service is not dependent upon any other services...","GUID-AA412A66-C329-47A0-BB6A-362B8F7A62FE.html@@@1.1.2.1.2.4 Functions@@@GATTC_DiscoverAllCharacteristics Starts the discovery of all characteristics within a specified handle range on the GATT server. GATTC_DiscoverAllDescriptors Initiates the discovery of all descriptors...","GUID-AA9F6190-9E01-48C5-A22A-6BC2FE3B90B6.html@@@2.3.8 Reference@@@[1] Transparent Credit Based Service v1.0. [2] Bluetooth Core Specification v4.0 or later version of the Core Specification. [3] Characteristic and Descriptor descriptions are accessible via the...","GUID-AACDF1D9-EC0A-42D8-94DC-2D5EF61DDBFC.html@@@2.3.3.1.2 TRCBP Data Pipe@@@The L2CAP LE Credit Based Flow Control Mode shall be supported...","GUID-AB1D4278-4AAB-4470-9F8A-12C2A0181155.html@@@1.1.2.1.2.4.17 GATTS_Init@@@uint16_t GATTS_Init (uint16_t configuration); Initialize the GATT Server module. Parameter Description [in] configuration A bit-field configuring the GATT Server&apos;s functions. See GATT server...","GUID-AB68BD79-9311-4A41-A673-9A4536F9FC58.html@@@1.1.2.1.1.4.54 BLE_GAP_SetFilterAcceptList@@@uint16_t BLE_GAP_SetFilterAcceptList (uint8_t num, BLE_GAP_Addr_T *p_addr); Adds devices to the filter accept list. This API is not permitted under the following conditions: - If the advertising...","GUID-ABBABB3D-0FFB-4E52-A1A5-12F0C12F8191.html@@@1.1.2.2.3.3.7 BLE_DD_Event_T@@@typedef struct BLE_DD_Event_T { BLE_DD_EventId_T eventId; BLE_DD_EventField_T eventField; } BLE_DD_Event_T; BLE DD callback event structure. Field Description eventId Identifier for the type of event...","GUID-ABC8747A-F11E-4932-BED6-4E402D92C436.html@@@1.1.2.3.7.3 TRSP Message Sequence Chart@@@Transparent Profile Client Role Initialization and Connection Establishment Procedure Transparent Profile Server Role Initialization and Connection Establishment Procedure Transparent Profile Vendor...","GUID-ABD07A9B-3BAE-424C-94C3-34D2C20BC9A0.html@@@1.1.2.1.1.3.17 BLE_GAP_EvtAuthPayloadTimeout_T@@@typedef struct BLE_GAP_EvtAuthPayloadTimeout_T { uint16_t connHandle; } BLE_GAP_EvtAuthPayloadTimeout_T; Structure for BLE_GAP_EVT_AUTH_PAYLOAD_TIMEOUT event. Field Description connHandle Connection...","GUID-AC019545-F0F5-40F3-ADE2-B50B6C037F5E.html@@@1.1.2.1.7 BLE Direct Test Mode@@@Defines the interface for the BLE DTM functions provided by the BLE Library. Defines Structures Functions...","GUID-AC29BD98-F1E5-48A5-8987-1F9FD4ED344C.html@@@1.1.2.3.4.1.1 Defines@@@OTAPC file type definitions Defines the types of files used in OTA updates. OTAPC encryption type definitions Defines the encryption methods used for OTA images. OTAPC firmware feature definitions...","GUID-ACC5119B-CA80-4F7E-9481-23DD468F7528.html@@@2.4.4.4 Firmware Update Complete operation@@@When the Firmware Update Complete opcode is written to the OTACP and an error condition does not occur, the Server shall end the firmware update process. The format of the Firmware Update Complete...","GUID-ACD78EEF-16F8-44DE-8C0D-1A056F124D0E.html@@@1.1.2.3.1.1.3.12 BLE_ANCS_EvtNtfyAttrInd_T@@@typedef struct { uint16_t connHandle; BLE_ANCS_DecodeNtfyAttrs_T *p_data; } BLE_ANCS_EvtNtfyAttrInd_T; Structure for the BLE_ANCS_EVT_NTFY_ATTR_IND event. Field Description connHandle Connection...","GUID-AD2FA46B-5956-4EC8-B08C-75999D6BB301.html@@@1.1.2.3.5.1.3.10 BLE_PXPM_EvtTpsTxPwrLvInd_T@@@typedef struct BLE_PXPM_EvtTpsTxPwrLvInd_T { uint16_t connHandle; int8_t txPowerLevel; } BLE_PXPM_EvtTpsTxPwrLvInd_T; Structure for the BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND event. Field Description...","GUID-AD407F58-5826-4390-AD6A-AE7F736874F2.html@@@1.1.2.3.7.2.3.2 BLE_TRSPS_EventCb_T@@@typedef void (*BLE_TRSPS_EventCb_T)(BLE_TRSPS_Event_T *p_event); Callback type for BLE Transparent profile server events. This callback function is used to send events from the BLE Transparent profile...","GUID-AD5EEF87-16A7-4E5C-95AB-2B616C0EC809.html@@@1.1.2.3.6.1 Transparent Credit Based Profile Server Role@@@Provides the server role functionality for the Transparent Credit Based Profile. Defines Enumerations Structures Functions...","GUID-AD7662AB-1247-4D85-9CD5-A3BF09EC24F7.html@@@1.1.2.1.5.3.1 STACK_Event_T@@@typedef struct STACK_Event_T { STACK_GroupId_T groupId; uint16_t evtLen; uint8_t *p_event; } STACK_Event_T; Structure representing an event generated by the STACK. Field Description groupId Identifier...","GUID-AD7FCE19-B510-4A42-B223-E0EAE1950AE8.html@@@1.1.2.1.1.1.7 Advertising Set Identifier (SID) range@@@#define BLE_GAP_ADV_SID_MIN 0x00 #define BLE_GAP_ADV_SID_MAX 0x0F Defines the range of values for the Advertising Set Identifier (SID). Macro Description BLE_GAP_ADV_SID_MIN The minimum value for...","GUID-ADB0AB34-DEE4-4107-8618-C3FBA1CDDDA1.html@@@2.4 Microchip OTA Service v1.3@@@OTA Service exposes a device firmware update scheme when in a connection. Table 2-2.\u2000 Revision History Revision Number Comments v1.0 Initial version v1.3 Add a new supported image type- metadata. Add...","GUID-AE268FE3-C196-46C8-8D08-8A4D5E35963C.html@@@1.1.2.1.6.3.8 BT_SYS_PtaEventBtActiveCb_T@@@typedef void (*BT_SYS_PtaEventBtActiveCb_T)(bool btActive); Callback type for BT active event in PTA (Packet Traffic Arbitration). Parameter Description [in] btActive Indicates whether BT is...","GUID-AE7C6E5E-069A-4753-A013-0C58A632AD16.html@@@1.1.2.1.6.1.3 Trace Level@@@#define BT_SYS_TRACE_LEVEL_ERR 0 #define BT_SYS_TRACE_LEVEL_API 1 #define BT_SYS_TRACE_LEVEL_OP 2 Defines the trace levels for debugging purposes. Macro Description BT_SYS_TRACE_LEVEL_ERR Error trace...","GUID-AF3287A3-EC8C-422B-A78B-35C734484CD4.html@@@1.1.2.3.2.2.4.7 BLE_ANPS_SetSuppUnreadCat@@@uint16_t BLE_ANPS_SetSuppUnreadCat (uint16_t catMask); Sets the supported categories for unread alerts. Parameter Description [in] catMask Category mask for unread alerts. Refer to ANPS supported...","GUID-AF6224B1-E4B6-4572-9AE4-13788CE7DF78.html@@@1.1.2.2.1.3.4 BLE_DM_Event_T@@@typedef struct BLE_DM_Event_T { BLE_DM_EventId_T eventId; uint16_t connHandle; uint8_t peerDevId; BLE_DM_EventField_T eventField; } BLE_DM_Event_T; BLE_DM callback event structure. Field Description...","GUID-AF87B845-1C64-41F6-AAF7-02A04FA37B40.html@@@1.1.2.1.1.1.13 Disconnect reason@@@#define GAP_DISC_REASON_AUTH_FAIL 0x05 #define GAP_DISC_REASON_REMOTE_TERMINATE 0x13 #define GAP_DISC_REASON_LOW_RESOURCES 0x14 #define GAP_DISC_REASON_POWER_OFF 0x15 #define...","GUID-B068C11F-F560-4E1E-99DB-F0B380C37301.html@@@1.1.2.3.2.2 Alert Notification Profile Server Role@@@This module contains Alert Notification Profile Server interface Defines Enumerations Structures Functions...","GUID-B0692245-D5C0-4B6B-9B8B-7E413D4BF7BC.html@@@1.1.2.1.4.3.18 BLE_SMP_PairInfo_T@@@typedef struct BLE_SMP_PairInfo_T { unsigned int auth: 1 ; unsigned int lesc: 1 ; unsigned int reserve: 6 ; }BLE_SMP_PairInfo_T; Structure for storing pairing information post-pairing process. Field...","GUID-B08A3397-47E6-4030-A335-F61291C8B4DC.html@@@1.1.2.1.1.1.32 Maximum number of connections@@@#define BLE_GAP_MAX_LINK_NBR 0x08 Defines the maximum number of simultaneous GAP connections that can be maintained. Macro Description BLE_GAP_MAX_LINK_NBR Maximum number of allowed simultaneous BLE...","GUID-B10CC562-D5DB-44E8-8574-8FA1CCFB11A9.html@@@1.1.2.3.2.1.3.2 BLE_ANPC_DescInfo_T@@@typedef struct BLE_ANPC_DescInfo_T { uint16_t attrHandle; uint16_t uuid; }BLE_ANPC_DescInfo_T; Structure representing descriptor information. Field Description attrHandle Attribute handle of the...","GUID-B14C5A22-F6A1-4BAC-900E-2678C42D7B87.html@@@1.1.2.3.1.1.3.3 BLE_ANCS_DecodeNtfyAttrs_T@@@typedef struct BLE_ANCS_DecodeNtfyAttrs_T { BLE_ANCS_NtfyAttrsMask_T bitmask; uint32_t ntfyId; uint8_t appId[BLE_ANCS_MAX_APPID_LEN]; uint8_t *p_title; uint8_t *p_subtitle; uint8_t *p_msg; uint16_t...","GUID-B1B3B94F-2A47-4042-83D2-C565B5E5F44B.html@@@1.1.2.3.5.1.4 Functions@@@BLE_PXPM_BleDdEventHandler Handles BLE Database Discovery (BLE DD) events. BLE_PXPM_BleEventHandler Handles BLE_Stack related events. BLE_PXPM_EventRegister Registers a callback function for BLE...","GUID-B1B529F4-8C0F-4B0C-BE03-5545F0EF6DCB.html@@@2.4.4.3 Firmware Update Start operation@@@When the Firmware Update Start opcode is written to the OTACP along with image type parameter and an error condition does not occur, the Server shall start the firmware update procedure. The format of...","GUID-B1B62F3C-18EF-4B4B-AD25-94684100EB77.html@@@1.1.2.1.8.4.5 HCI_AppCmdStatusEvt@@@void HCI_AppCmdStatusEvt (uint8_t status); Application-implemented HCI command status event. Parameter Description [in] status Status of application-implemented HCI command status event. See Status of...","GUID-B1FE2BFC-9C45-4C50-B06D-A2390B83D3D3.html@@@1.1.2.1.2.3.32 GATTS_SendErrRespParams_T@@@typedef struct GATTS_SendErrRespParams_T { uint8_t reqOpcode; uint8_t errorCode; uint16_t attrHandle; } GATTS_SendErrRespParams_T; Structure for sending a GATT Error Response. Field Description...","GUID-B1FE3CD4-DD68-4C17-9E74-915C818181D5.html@@@2.6.3.1 L2CAP PSM Value (L2PSM) Characteristic@@@This characteristic is used to record PSM values of LE L2CAP CoC. Permission is read only. To initiate L2CAP CoC connection, Client can read it via Characteristic Value read operation. There is one...","GUID-B23CDBA5-1B06-4D05-894E-28A590D2F4F2.html@@@1.1.2.2.5.1.2.7 MW_AES_AesCcmEncrypt@@@uint16_t MW_AES_AesCcmEncrypt (MW_AES_Ctx_T * p_ctx, uint16_t length, uint8_t *p_plainText, uint8_t *p_cipherText, uint8_t *p_tag); Encrypts data using AES CCM mode. Parameter Description [in] p_ctx...","GUID-B257469C-D0EC-411B-9999-EAFE9FC267F5.html@@@1.1.2.3.2.2.1.4 ANPS supported category ID bit masks@@@#define BLE_ANPS_SUPP_CAT_SIMPLE_ALERT ( 1U &lt;&lt; 0U ) #define BLE_ANPS_SUPP_CAT_EMAIL ( 1U &lt;&lt; 1U ) #define BLE_ANPS_SUPP_CAT_NEWS ( 1U &lt;&lt; 2U ) #define BLE_ANPS_SUPP_CAT_CALL ( 1U &lt;&lt; 3U ) #define...","GUID-B26DF174-A18F-47A7-B6B0-6E0E54C0CAA9.html@@@1.1.2.1.6.2 Enums@@@BT_SYS_LogType_T Enumerates the types of HCI (Host Controller Interface) logs. BT_SYS_TraceFmt_T Enumeration for Bluetooth system trace output formats. BT_SYS_ErrCode_T Defines for error codes used in...","GUID-B27D1ADC-3D63-47FA-94C2-2CEC53DC3A71.html@@@1.1.2.1.7.3.5 BLE_DTM_StartCwTest@@@uint16_t BLE_DTM_StartCwTest (uint8_t txChannel, int8_t txPower); Starts a Continuous Wave (CW) test on a specific channel and with a specific power level. BLE_DTM_Init must be called before using...","GUID-B283F4E1-C35A-4E78-B5AE-4EEF069FB0D5.html@@@1.1.2.3.5.1.4.8 BLE_PXPM_ReadTpsTxPowerLevel@@@uint16_t BLE_PXPM_ReadTpsTxPowerLevel (uint16_t connHandle); Reads the Tx Power Level value from the Tx Power Service of a connected peer PXP Reporter device. Parameter Description [in] connHandle...","GUID-B29F97F1-322E-482C-8A4A-BB57B42C4C9A.html@@@1.1.2.2.1.4.1 BLE_DM_BleEventHandler@@@void BLE_DM_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE stack events. This function should be called when BLE events are received. Parameter Description [in] p_stackEvent Pointer to the...","GUID-B2F97739-5023-45D6-9D0C-B935040A232B.html@@@2.1.4 OTA Client Role Requirements@@@The discovery requirements for the OTA Client are defined in Table 4.1. Table4.1: Discovery Requirements for OTA Client Discovery Requirement Support in OTA Client OTA Service Discovery M OTA Service...","GUID-B334BCFF-1797-4E79-AC47-0E585E3F4C4A.html@@@1.1.2.3.7.2.4.7 BLE_TRSPS_BleEventHandler@@@void BLE_TRSPS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called by the application when BLE stack events occur. Parameter Description [in]...","GUID-B36EE1E9-1E66-4E0D-AE40-5D3E1A717AD3.html@@@1.1.2.1.3.1.2 L2CAP credit-based connection response result codes@@@#define BLE_L2CAP_RES_CONN_SUCCESSFUL 0x0000 #define BLE_L2CAP_RES_CONN_SPSM_NOT_SUPPORTED 0x0002 #define BLE_L2CAP_RES_CONN_NO_RESOURCES 0x0004 #define BLE_L2CAP_RES_CONN_INSUFF_AUTHENTICATION 0x0005...","GUID-B3CE38C2-3D69-4AC3-9483-3835F88E7AF5.html@@@1.1.2.1.1.4.2 BLE_GAP_ClearExtAdvSet@@@uint16_t BLE_GAP_ClearExtAdvSet ( void ); Removes all existing advertising sets. This API is part of the extended advertising feature. It is disallowed if any legacy advertising feature API has been...","GUID-B3CEFEB1-0C49-4DDD-BCDB-934BED95A81B.html@@@1.1.2.1.2.3.31 GATTS_HandleValueParams_T@@@typedef struct GATTS_HandleValueParams_T { uint16_t charHandle; uint16_t charLength; uint8_t charValue[BLE_ATT_MAX_MTU_LEN - ATT_HANDLE_VALUE_HEADER_SIZE]; uint8_t sendType; }...","GUID-B3E98A55-D2E3-4A88-B461-39BF1CD5C279.html@@@1.1.2.1.1.1.6 Advertising options@@@#define BLE_GAP_ADV_OPTION_STORE_PARAMS 0x00 #define BLE_GAP_ADV_OPTION_LOAD_PARAMS 0x01 Defines the advertising option. Macro Description BLE_GAP_ADV_OPTION_STORE_PARAMS Store advertising parameters...","GUID-B3FE0262-269B-4E27-8C6F-8E92BFDB9915.html@@@1.1.2.1.1.1.48 Received data status@@@#define BLE_GAP_DATA_STATUS_COMPLETE 0x00 #define BLE_GAP_DATA_STATUS_MORE_DATA 0x01 #define BLE_GAP_DATA_STATUS_DATA_TRUNCATED 0x02 Defines the status of received data in a BLE operation. Macro...","GUID-B42E7CCF-FE5A-4C19-A1B3-95D841B54514.html@@@1.1.2.1.1.3.12 BLE_GAP_Event_T@@@typedef struct BLE_GAP_Event_T { BLE_GAP_EventId_T eventId; BLE_GAP_EventField_T eventField; } BLE_GAP_Event_T; BLE GAP callback event structure. Field Description eventId Identifier for the BLE GAP...","GUID-B43992FC-413D-4B42-A202-5D372625EB13.html@@@1.1.2.2.5.2.1 Defines@@@Flash types Defines the type of flash memory used during DFU. Maximum block length Defines the maximum length of a data block during DFU. Maximum image size Defines the maximum allowable size for a...","GUID-B4719471-451D-40FD-B34E-286746D960EA.html@@@2.5.1.5 Byte Transmission Order@@@All characteristics used with this service shall be transmitted with the least significant octet first (i.e., little endian). The least significant octet is identified in the characteristic...","GUID-B4A018ED-CB34-4D52-A7F9-3E7808C43BF8.html@@@1.1.2.1.4.4 Functions@@@BLE_SMP_AcceptDebugKey Accepts the use of the BLE SMP debug key during the pairing procedure. BLE_SMP_AcceptPairingRequest Accepts a pairing request. BLE_SMP_Config Configures SMP pairing parameters...","GUID-B51CB84B-C796-47F2-B083-EB2F0302AC33.html@@@1.1.1.4 BLE PTA@@@PIC32CX-BZs family Three-Wire PTA Coexistence Design...","GUID-B57AA8FD-E0DF-4115-A02E-2D4D3FA33E7C.html@@@1.1.2.1.2.5.7 Sending a Handle Value Indication@@@Example demonstrating how to send a Handle Value Indication...","GUID-B58671F6-428D-41C2-9E52-C8723DD02F0F.html@@@1.1.2.1.7.1.1 Continuous wave (CW) channel range@@@#define BLE_DTM_CW_CHANNEL_MIN 0x00 #define BLE_DTM_CW_CHANNEL_MAX 0x4E Defines the channel range for Continuous Wave (CW) testing during DTM. Macro Description BLE_DTM_CW_CHANNEL_MIN Minimum channel...","GUID-B5A604E6-5EAF-4D47-9382-D82C181FB7D5.html@@@1.1.2.1.1.4.7 BLE_GAP_CreateConnectionCancel@@@uint16_t BLE_GAP_CreateConnectionCancel ( void ); Cancels the ongoing BLE connection creation process. BLE_GAP_EVT_CONNECTED is generated with a corresponding status code when the cancellation is...","GUID-B5CA4E6C-4575-4818-A249-B17B233369D0.html@@@1.1.2.1.3.1 Defines@@@L2CAP connection parameter update result codes Defines the result codes for L2CAP connection parameter update responses. L2CAP credit-based connection response result codes Defines the result codes...","GUID-B5DE3C47-7631-4EAA-A704-B773A89EFDA6.html@@@1.1.2.1.1.3.23 BLE_GAP_EvtEncInfoRequest_T@@@typedef struct BLE_GAP_EvtEncInfoRequest_T { uint16_t connHandle; } BLE_GAP_EvtEncInfoRequest_T; Structure for BLE_GAP_EVT_ENC_INFO_REQUEST event. Field Description connHandle Connection handle...","GUID-B5E6DE93-E562-47A6-94CC-0519B84AC613.html@@@1.1.2.2.4.5.3 Configure Characteristics of Remote GATT Service@@@Example demonstrating how to configure a GATT service after discovery...","GUID-B618E691-D651-4F26-92FE-A2DF6A69A93F.html@@@1.1.2.1.6.3.4 BT_SYS_LogEvent_T@@@typedef struct BT_SYS_LogEvent_T { uint16_t logType; uint16_t logId; uint16_t paramsLength; uint16_t payloadLength; uint8_t *p_logPayload; uint8_t *p_returnParams; } BT_SYS_LogEvent_T; Structure for a...","GUID-B637E773-6EE0-4DD3-805B-BFEDD608724F.html@@@2.2.2.2 Role/Service Relationships@@@The following diagram illustrates the relationships between service and profile roles. A Transparent Server shall instantiate the Transparent Service [1] . As shown above, a higher layer specification...","GUID-B6870242-2E8B-4919-B74D-F61748BF0B4B.html@@@1.1.2.1.1.1.58 Status definitions@@@#define GAP_STATUS_SUCCESS 0x00 #define GAP_STATUS_UNKNOWN_HCI_COMMAND 0x01 #define GAP_STATUS_UNKNOWN_CONNECTION_IDENTIFIER 0x02 #define GAP_STATUS_HARDWARE_FAILURE 0x03 #define...","GUID-B7003CC9-6E00-4BD8-AB12-231EDFB19BFF.html@@@1.1.2.2.4.3.5 BLE_SCM_EvtConfigured_T@@@typedef struct BLE_SCM_EvtConfigured_T { uint16_t connHandle; } BLE_SCM_EvtConfigured_T; Structure for BLE_SCM_EVT_CONFIGURED event. Field Description connHandle Connection handle associated with this...","GUID-B72A2CBC-04F8-45B6-90B0-A10E48589898.html@@@1.1.2.3.5.1.3.3 BLE_PXPM_DescList_T@@@typedef struct BLE_PXPM_DescList_T { uint8_t totalNum; BLE_PXPM_DescInfo_T descInfo[BLE_PXPM_DESC_MAX_NUM]; } BLE_PXPM_DescList_T; Structure representing a descriptor list. Field Description totalNum...","GUID-B780FD08-A101-4686-A604-9AF23DB222E0.html@@@1.1.2.1.3.5 Functions@@@BLE_L2CAP_CbAddCredits Sends L2CAP flow control credits to the peer device. BLE_L2CAP_CbConnReq Issues a L2CAP credit-based connection request to establish an L2CAP channel. BLE_L2CAP_CbDeregisterSpsm...","GUID-B8614936-340F-4568-89D2-C18EF5AFDD89.html@@@1.1.2.1.1.4.57 BLE_GAP_SetPathLossReportingEnable@@@uint16_t BLE_GAP_SetPathLossReportingEnable (uint16_t connHandle, bool enable); Enables or disables path loss reporting for a specific connection. This command should be used only after the...","GUID-B96E5D19-4AD5-466F-B57D-EC436C3F3EEE.html@@@1.1.2.1.1.3.13 BLE_GAP_EventField_T@@@typedef union { BLE_GAP_EvtConnect_T evtConnect; BLE_GAP_EvtDisconnect_T evtDisconnect; BLE_GAP_EvtConnParamUpdateParams_T evtConnParamUpdate; BLE_GAP_EvtEncryptStatus_T evtEncryptStatus...","GUID-BA2BC6BC-702A-4F48-991E-B751B3B24876.html@@@1.1.2.1.3.5.3 BLE_L2CAP_CbDeregisterSpsm@@@uint16_t BLE_L2CAP_CbDeregisterSpsm (uint16_t spsm); Deregisters an SPSM (Simplified Protocol/Service Multiplexer). This function should be called to release resources associated with an unused...","GUID-BA5A6C7B-04C8-4EDA-BA72-C1F0B4ECEEE8.html@@@1.1.2.2.4.3.4 BLE_SCM_EvtBondedCharInfo_T@@@typedef struct BLE_SCM_EvtBondedCharInfo_T { uint16_t connHandle; BLE_DD_CharInfo_T charInfo[BLE_SCM_GATT_DISC_CHAR_NUM]; } BLE_SCM_EvtBondedCharInfo_T; Structure for BLE_SCM_EVT_BONDED_CHAR_INFO...","GUID-BA6A814B-1A91-449E-AAEE-8383D80F1EE2.html@@@1.1.2.2.1.4.10 BLE_DM_Init@@@void BLE_DM_Init ( void ); Initializes the BLE_DM module. Return value Description true Initialization of BLE_DM module was successful. false Initialization of BLE_DM module failed...","GUID-BA8E441E-CF0C-46B4-870D-6EAE2B686CE8.html@@@1.1.2.1.1.4.75 BLE_GAP_WriteAuthPayloadTimeout@@@uint16_t BLE_GAP_WriteAuthPayloadTimeout (uint16_t connHandle, uint16_t authPayloadTo); Sets the authenticated payload timeout parameter for a BLE connection. This configuration determines when the LE...","GUID-BAFFE9A8-1698-484E-8D84-BA8428399B77.html@@@1.1.2.3.5.1.4.1 BLE_PXPM_BleDdEventHandler@@@void BLE_PXPM_BleDdEventHandler (BLE_DD_Event_T *p_event); Handles BLE Database Discovery (BLE DD) events. This function should be called when BLE DD events occur. Parameter Description [in] p_event...","GUID-BB082A8A-2656-4904-8533-DA3527F7EB4E.html@@@1.1.2.1.1.3.14 BLE_GAP_EvtAdvCompl_T@@@typedef struct BLE_GAP_EvtAdvCompl_T { uint8_t status; }BLE_GAP_EvtAdvCompl_T; Structure for BLE_GAP_EVT_ADV_COMPL event. Field Description status Status of the deep sleep advertising completion. See...","GUID-BBA2DBED-5E70-4577-B974-444913341A2A.html@@@2.5.1.2 Service Dependency@@@This service is not dependent upon any other services...","GUID-BC52472F-FBF3-43EE-A491-FCEBA2CB0368.html@@@2.3.5 Connection Establishment Procedures@@@...","GUID-BC983682-FD07-4264-B1B3-3E0FD9764702.html@@@1.1.2.3.3.1.3.8 BLE_HOGPS_SendMouseButtonInputReport@@@uint16_t BLE_HOGPS_SendMouseButtonInputReport (uint16_t connHandle, uint8_t buttons, int8_t wheel, int8_t acPan); Sends a HID mouse button input report. This function transmits a report indicating the...","GUID-BCAAB1F7-7FDB-4329-9496-25B53F843820.html@@@1.1.2.1.2.1.6 Characteristic properties@@@#define ATT_PROP_BROADCAST 0x01 #define ATT_PROP_READ 0x02 #define ATT_PROP_WRITE_CMD 0x04 #define ATT_PROP_WRITE_REQ 0x08 #define ATT_PROP_NOTIFY 0x10 #define ATT_PROP_INDICATE 0x20 #define...","GUID-BCDDE166-F3AD-498B-9900-257827609467.html@@@1.1.2.1 BLE Stack@@@Generic Access Profile (GAP) Generic Attribute Profile (GATT) Logical Link Control and Adaptation Protocol (L2CAP) Security Manager Protocol (SMP) STACK BLE System BLE Direct Test Mode Host Controller...","GUID-BCF0C2C0-BD5D-4538-9BC1-B50223A49FF5.html@@@1.1.2.1.6.4.8 BT_SYS_Init@@@bool BT_SYS_Init ( void *p_reqQueueHandle, void *p_osalApiList, BT_SYS_Option_T *p_option, BT_SYS_Cfg_T *p_cfg); Initialize Bluetooth system. Parameter Description [in] p_reqQueueHandle Handle to the...","GUID-BD256D1E-A211-4A51-9B0B-E12B1C72E342.html@@@1.1.2.2.4.5 Massage Sequence Chart@@@Initialize the Service Change Manager Module Retrieve Characteristic Handles for Remote GATT Service Configure Characteristics of Remote GATT Service Manage Service Change Status on Remote Device...","GUID-BD356891-C48E-4AB0-BF3B-B0954AAE384F.html@@@1.1.2.2.4.4.4 BLE_SCM_Init@@@uint16_t BLE_SCM_Init ( void ); Initializes the BLE Service Change Module (BLE_SCM). This module is necessary when GATT client functionality is supported and it is required to manage service change...","GUID-BD89389A-32A5-4C44-A16A-C1B5BBA360CD.html@@@1.1.2.1.1.4.21 BLE_GAP_GetDeviceName@@@uint16_t BLE_GAP_GetDeviceName (uint8_t *p_len, uint8_t *p_deviceName); Retrieves the local device name along with its length. Parameter Description [out] p_len Pointer to the length of the device...","GUID-BDAC0DE4-96D2-439A-98E5-05361781C424.html@@@1.1.2.1.3.3.8 BLE_L2CAP_EvtConnParamUpdateReq_T@@@typedef struct BLE_L2CAP_EvtConnParamUpdateReq_T { uint16_t connHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_L2CAP_EvtConnParamUpdateReq_T; Structure...","GUID-BDD03582-926A-4C99-9E2F-30A03B9A7BC3.html@@@1.1.2.3.3.1.3.11 BLE_HOGPS_SetBootKeyboardOutputReport@@@uint16_t BLE_HOGPS_SetBootKeyboardOutputReport (uint8_t ledValue); Sets the output report for a HID boot keyboard. This function updates the LED status indicators on a HID boot keyboard, such as Num...","GUID-BDD7FC7C-AB05-4D62-9134-37DBE28C1A7C.html@@@1.1.2.3.5.2.3.2 BLE_PXPR_EventCb_T@@@typedef void (*BLE_PXPR_EventCb_T)(BLE_PXPR_Event_T *p_event); Type definition for the callback function used by the BLE PXP Reporter. Parameter Description [in] p_event Pointer to the event structure...","GUID-BDDEA869-EBE5-49E2-B97A-CD3D3BD71E42.html@@@1.1.2.2.3.4.4 BLE_DD_RestartServicesDiscovery@@@uint16_t BLE_DD_RestartServicesDiscovery (uint16_t connHandle); Restarts the database discovery process for a specific connection. This function should be called when the remote services have changed...","GUID-BDEB1D88-52CC-42E2-AA49-89B9BA4DBDAE.html@@@2 BLE Document@@@...","GUID-BE31794F-DD69-4FD8-97FD-3AB4A7A05D88.html@@@1.1.2.1.6.4.4 BT_SYS_EnterSleepMode@@@bool BT_SYS_EnterSleepMode (uint32_t ulRtcFrequency, uint32_t ulRtcCurrentCnt); Request BT enter sleep mode. Parameter Description [in] ulRtcFrequency RTC frequency. [in] ulRtcCurrentCnt RTC current...","GUID-BE63AD0B-809E-416E-A9C4-D1B2AB20A4CA.html@@@1.1.2.3.5.2 Proximity Profile Reporter Role@@@Provides a interface for the BLE Proximity Profile Reporter. Enumerations Structures Functions...","GUID-BE98FBCE-9CCB-4A87-99D0-133883769EAA.html@@@1.1.2.1.1.4.3 BLE_GAP_ConfigureBuildInService@@@uint16_t BLE_GAP_ConfigureBuildInService (BLE_GAP_ServiceOption_T *p_serviceOptions); Configures the built-in Generic Access Service for a BLE device. This function allows customization of optional...","GUID-BEC7F2C4-56F1-46A9-A4D9-86715D02AB55.html@@@1.1.2.2.1.4.9 BLE_DM_GetPairedDeviceList@@@void BLE_DM_GetPairedDeviceList (uint8_t *p_devId, uint8_t *p_devCnt); Retrieves the list of device IDs for all paired devices. Parameter Description [out] p_devId Pointer to the buffer to store the...","GUID-BED30231-A6D1-49C7-90B4-A69ACCC3C771.html@@@1.1.2.3.7.1.3.1 BLE_TRSPC_Event_T@@@typedef struct BLE_TRSPC_Event_T { BLE_TRSPC_EventId_T eventId; BLE_TRSPC_EventField_T eventField; } BLE_TRSPC_Event_T; BLE Transparent profile client callback event. Field Description eventId...","GUID-BEFD9660-EBED-44C2-A651-A730D8307A81.html@@@2.2.5 Connection Establishment Procedures@@@Connection establishment requirements may be defined by the higher layer specification...","GUID-BF37E09D-AC19-4A35-B4A3-9FEE1F454BBD.html@@@1.1.2.1.2.3.33 GATTS_SendReadByTypeRespParams_T@@@typedef struct GATTS_SendReadByTypeRespParams_T { uint16_t allPairsLength; uint8_t eachPairLength; uint8_t attrDataList[BLE_ATT_MAX_MTU_LEN - ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; }...","GUID-BF48F213-1A51-4A54-94B0-8976A08E97CF.html@@@1.1.2.1.1.1.12 Data status for extended advertising reports@@@#define BLE_GAP_EXT_ADV_RPT_DATA_COMPLETE 0x00 #define BLE_GAP_EXT_ADV_RPT_DATA_MORE 0x01 #define BLE_GAP_EXT_ADV_RPT_DATA_TRUNCATED 0x02 Defines the data status for extended advertising reports...","GUID-BF863523-4068-4E2B-8E14-B3FD983180C9.html@@@1.1.2.3.3.1 HID Over GATT Pofile Server Role@@@Provides the interface for the BLE HID over GATT profile server (HOPGS). Enumerations Structures Functions...","GUID-BF94EE96-0A7E-403B-AA57-3FD09B8240D6.html@@@1.1.2.1.3.3.4 BLE_L2CAP_EvtCbConnFailInd_T@@@typedef struct BLE_L2CAP_EvtCbConnFailInd_T { uint16_t connHandle; uint16_t spsm; uint16_t result; } BLE_L2CAP_EvtCbConnFailInd_T; Structure for BLE_L2CAP_EVT_CB_CONN_FAIL_IND event. Field Description...","GUID-BFC3ECC0-6528-4151-8BDB-B3C3AAA5A477.html@@@1.1.2.1.1.4.27 BLE_GAP_ReadChannelMap@@@uint16_t BLE_GAP_ReadChannelMap (uint16_t connHandle, uint8_t *p_map); Retrieves the channel map for the specific connection. Parameter Description [in] connHandle Connection handle associated with...","GUID-C056A2CF-1E57-4229-B9F2-835FBF22B85E.html@@@1.1.2.3.7.1.4 Functions@@@BLE_TRSPC_BleDdEventHandler Handles BLE Database Discovery (BLE_DD) events. BLE_TRSPC_BleEventHandler Handles BLE_Stack events. BLE_TRSPC_EventRegister Registers a callback function for BLE...","GUID-C0BF88CD-CBF9-4EA1-AC28-B1CFC0D13BE4.html@@@1.1.2.1.3.2 Enums@@@BLE_L2CAP_EventId_T Enumeration of L2CAP events delivered to the application from the BLE Stack...","GUID-C0E6327C-DD7F-44CC-BA7D-4BD661843C54.html@@@1.1.2.3.2.1.4.11 BLE_ANPC_WriteAncp@@@uint16_t BLE_ANPC_WriteAncp (uint16_t connHandle, uint8_t cmdId, uint8_t catId); Sends a command to the Alert Notification Control Point. Parameter Description [in] connHandle The connection handle to...","GUID-C10A27AA-C99A-48B5-8B1B-D76249EE2172.html@@@1.1.2.1.2.1.13 GATT Header size@@@#define ATT_HANDLE_VALUE_HEADER_SIZE 3 #define ATT_WRITE_HEADER_SIZE 3 #define ATT_READ_RESP_HEADER_SIZE 1 #define ATT_WRITE_RESP_HEADER_SIZE 5 #define ATT_FIND_INFO_RESP_HEADER_SIZE 2 #define...","GUID-C11241E1-5A96-4825-ABA7-B4045381B602.html@@@1.1.2.3.6.1.1 Defines@@@TRCBPS definition aggregation Defines BLE Transparent Credit Based Profile parameters. TRCBPS unassigned L2CAP ID Defines the value for an unassigned L2CAP ID. TRCBPS vendor opcodes Defines...","GUID-C14BCBFE-5169-4BDB-A2F9-7B09FB4DB3F7.html@@@2.6 Microchip Transparent Credit Based Service v1.0@@@The Service is used for Transparent Credit Based Profile to establish one or more LE L2CAP connection oriented channels (L2CAP CoC) that intended for higher layer application burst data exchange...","GUID-C14ECD97-4A78-4B92-B449-24D6B2C8B845.html@@@1.1.2.1.1.3.49 BLE_GAP_ScanFilterName_T@@@typedef struct BLE_GAP_ScanFilterName_T { uint8_t nameLen; uint8_t targetName[BLE_GAP_SCAN_NAME_MAX_LEN]; } BLE_GAP_ScanFilterName_T; Structure for configuring a name filte in BLE GAP scanning. Field...","GUID-C20C1A2F-B3E0-40EC-B591-D78B88023896.html@@@1.1.2.1.4.3.9 BLE_SMP_EvtInputPasskeyReq_T@@@typedef struct BLE_SMP_EvtInputPasskeyReq_T { uint16_t connHandle; bool keypress; } BLE_SMP_EvtInputPasskeyReq_T; Structure for BLE_SMP_EVT_INPUT_PASSKEY_REQUEST event. Field Description connHandle...","GUID-C2C07744-E951-4565-83DD-240DDA245648.html@@@1.1.2.3.2.2.3 Structures@@@BLE_ANPS_Event_T BLE Alert Notification profile callback event. BLE_ANPS_EventCb_T BLE Alert Notification profile server callback type. BLE_ANPS_EventField_T Union of BLE Alert Notification profile...","GUID-C2D0BC60-12AE-4E97-B920-59F12C00CF32.html@@@1.1.2.1.1.1.44 PHY settings for extended advertising reports@@@#define BLE_GAP_EXT_ADV_RPT_PHY_NO 0x00 #define BLE_GAP_EXT_ADV_RPT_PHY_1M 0x01 #define BLE_GAP_EXT_ADV_RPT_PHY_2M 0x02 #define BLE_GAP_EXT_ADV_RPT_PHY_CODED 0x03 Defines the PHY settings for extended...","GUID-C30C1FEB-9433-4747-9FD6-F438BF66BDD3.html@@@1.1.2.3.2.1.2 Enums@@@BLE_ANPC_EventId_T Enumeration for BLE Alert Notification Profile callback events...","GUID-C30E1348-8DF2-4AA6-9F1C-7F3D6EB12FC3.html@@@1.1.2.3.4.1.1.1 OTAPC file type definitions@@@#define BLE_OTAPC_IMG_FILE_TYPE_EMB_STACK ( 0x01U ) #define BLE_OTAPC_IMG_FILE_TYPE_APP ( 0x02U ) #define BLE_OTAPC_IMG_FILE_TYPE_EXT ( 0x03U ) Defines the types of files used in OTA updates. Macro...","GUID-C35721F1-C7BA-41E0-8385-5332C466D116.html@@@1.1.2.1.3.1.1 L2CAP connection parameter update result codes@@@#define BLE_L2CAP_CONN_PARAMS_ACCEPT 0x0000 #define BLE_L2CAP_CONN_PARAMS_REJECT 0x0001 Defines the result codes for L2CAP connection parameter update responses. Macro Description...","GUID-C37E4357-B8CD-4529-B75C-894F0E0AF675.html@@@1.1.2.1.3.1.8 L2CAP permission definitions@@@#define BLE_L2CAP_PERMISSION_NONE 0x00 #define BLE_L2CAP_PERMISSION_AUTHEN 0x01 #define BLE_L2CAP_PERMISSION_ENC 0x02 #define BLE_L2CAP_PERMISSION_AUTHEN_SC 0x03 Defines the permission levels for...","GUID-C41BBA13-1362-4737-B70B-29B79D2756CF.html@@@1.1.2.1.2.4.2 GATTC_DiscoverAllDescriptors@@@uint16_t GATTC_DiscoverAllDescriptors (uint16_t connHandle, uint16_t startHandle, uint16_t endHandle); Initiates the discovery of all descriptors with a specific UUID within a handle range. This...","GUID-C42238DE-1E33-484D-B253-43B3E31B1C6A.html@@@1.1.2.3.7.2.4.2 BLE_TRSPS_GetDataLength@@@void BLE_TRSPS_GetDataLength (uint16_t connHandle, uint16_t *p_dataLength); Retrieves the length of data queued for transmission. Parameter Description [in] connHandle Connection handle associated...","GUID-C453B939-7A47-4A91-99F9-E29EA9EB5A35.html@@@1.1.2.1.2.5.11 Discovering Relationships@@@Example demonstrating how to find included services...","GUID-C47D9B93-7E08-4C04-86FF-82284EC8D341.html@@@1.1.2.1.2.5.2 Handling Peer Reads of Characteristic Values@@@Example demonstrating peer reads of characteristic values (Handled by BLE library). \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating peer reads of characteristic values (Handled by Application). Authorization...","GUID-C4CD2E0E-D9CB-4ACA-B4C9-32863ED54BE5.html@@@1.1.2.1.4.5.7 SMP Pairing Failure Procedure@@@Example demonstrating SMP sending &quot;Pairing Failed: Encryption Key Size&quot; \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating SMP sending &quot;Pairing Failed: Authentication Requirements&quot; \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating SMP...","GUID-C51D1353-E69E-4450-8552-D29862FB5537.html@@@1.1.2.3.5.1.4.4 BLE_PXPM_GetCharList@@@uint16_t BLE_PXPM_GetCharList (uint16_t connHandle, uint16_t svcUuid, uint16_t charUuid, BLE_PXPM_CharList_T *p_charList); Retrieves information about the characteristic UUID of the Proximity service...","GUID-C54B1D51-1D47-4E64-ACB9-49C71B434083.html@@@1.1.2.1.2.4.21 GATTS_SendReadByTypeResponse@@@uint16_t GATTS_SendReadByTypeResponse (uint16_t connHandle, GATTS_SendReadByTypeRespParams_T *p_respParams); Sends a Read By Type response from the GATT Server. This function should be called in...","GUID-C54E2AB4-4FC0-412D-AA43-44DEA2206942.html@@@1.1.2.3.7.1.1 Defines@@@TRSPC downlink status definition Defines the status of the BLE transparent service downlink. TRSPC uplink status definition Defines the status of the BLE transparent service uplink. TRSPC maximum...","GUID-C5BA3C0D-2085-423B-8A08-A7584D0C9FC9.html@@@1.1.2.1.1.3.21 BLE_GAP_EvtDirectAdvReport_T@@@typedef struct BLE_GAP_EvtDirectAdvReport_T { uint8_t numReports; uint8_t eventType; BLE_GAP_Addr_T addr; BLE_GAP_Addr_T directAddr; int8_t rssi; }BLE_GAP_EvtDirectAdvReport_T; Structure for...","GUID-C600EA8B-9204-4F57-9ED8-8DA4231F9862.html@@@1.1.2.1.4.4.15 BLE_SMP_RejectSecRequest@@@uint16_t BLE_SMP_RejectSecRequest (uint16_t connHandle); Rejects a security request from the peer device. This function should be invoked in response to the BLE_SMP_EVT_SECURITY_REQUEST event when the...","GUID-C60DD37D-6F86-4815-BC99-4982D9E1798A.html@@@2.1.2.2 Role/Service Relationships@@@OTA Client shall be a GATT Client and GAP Central role and OTA Server shall be a GATT Server and GAP peripheral role. The following diagram illustrates the relationships between service and profile...","GUID-C614297D-134E-4223-AF9A-077F301AA8BA.html@@@1.1.2.2.5.2.2 Structures@@@MW_DFU_Info_T Structure for DFU (Device Firmware Update) information...","GUID-C69501D6-287B-4F15-9316-7855F23B0D23.html@@@1.1.2.3.7.2.1 Defines@@@TRSPS maximum connection number Defines the maximum number of concurrent connections. TRSPS status Defines the status of the BLE Transparent Service...","GUID-C6F62FC5-90B7-4A91-9115-793A8BBC03FE.html@@@2.2.4.4.2 Transparent Down-Link Data (TDD) Characteristic@@@The Transparent Client shall perform a Write Command or Write Request with a Characteristic Value to Transparent Downlink Characteristic on Transparent Server through this channel...","GUID-C75B8076-4847-4D0D-AFF2-8664ABD5E58E.html@@@2.3.1.1 Profile Dependencies@@@This profile requires the Generic Attribute Profile (GATT) and LE L2CAP connection-oriented channels (L2CAP CoC) with flow control using a credit based scheme for L2CAP data...","GUID-C7627C14-126E-4A0D-8719-8B364D58795A.html@@@1.1.2.3.1.1.3.8 BLE_ANCS_EvtDiscComplete_T@@@typedef struct BLE_ANCS_EvtDiscComplete_T { uint16_t connHandle; }BLE_ANCS_EvtDiscComplete_T; Structure for the BLE_ANCS_EVT_DISC_COMPLETE_IND event. Field Description connHandle Handle of the BLE...","GUID-C7C4E9FC-6F6B-4154-8796-3C0034274B25.html@@@1.1.2.1.1.4.47 BLE_GAP_SetExtAdvCodingScheme@@@uint16_t BLE_GAP_SetExtAdvCodingScheme (uint8_t codingScheme); Sets the preferred PHY coding scheme for extended advertising. This function configures the coding scheme used for the PHY layer in...","GUID-C830ACF8-9D71-4464-9F54-7C54FF81A8AA.html@@@1.1.2.3.3.1.3.5 BLE_HOGPS_SendBootKeyboardInputReport@@@uint16_t BLE_HOGPS_SendBootKeyboardInputReport (uint16_t connHandle, uint8_t *p_keyCodeArray); Sends a HID boot keyboard input report. This function transmits a keyboard input report in the boot...","GUID-C898AFC4-8B4D-4879-9DE2-194E410BCD26.html@@@2.5.1.3 Bluetooth Specification Release Compatibility@@@This specification is compatible with Bluetooth Core Specification 4.0 or later version of the Core Specification [1]...","GUID-C8DD6C6C-3761-4A96-A4C0-D3B36A32E027.html@@@1.1.2.3.2.1.4.10 BLE_ANPC_ReadSuppUnreadAlertCat@@@uint16_t BLE_ANPC_ReadSuppUnreadAlertCat (uint16_t connHandle); Requests the value of the Supported Unread Alert Category from the server. Parameter Description [in] connHandle The connection handle...","GUID-C8F32CCA-496F-4EE7-807A-A1713FE4070E.html@@@2.1.1.1 Profile Dependencies@@@This profile requires the Generic Attribute Profile (GATT)...","GUID-C8FB81BE-FF15-4251-9D25-C3E43755141D.html@@@1.1.2.1.6.3.7 BT_SYS_Option_T@@@typedef struct BT_SYS_Option_T { uint32_t cmnMemSize; uint8_t *p_cmnMemAddr; uint32_t *p_sramVecorTable; uint8_t hciMode: 1 ; uint32_t deFeatMask; } BT_SYS_Option_T; Structure for Bluetooth system...","GUID-C93131AB-BA76-40A8-9B31-9A66B3B1C5B4.html@@@2.4.3.1 OTA Feature@@@The OTA Feature characteristic is used to describe the support feature of the Server. Requirements for this characteristic are defined in Table 3.1 . The structure of the OTA Feature characteristic is...","GUID-C94B253D-3257-49C6-A238-D850793263D5.html@@@1.1.2.3.3.1.2.9 BLE_HOGPS_EvtReportWrite_T@@@typedef struct BLE_HOGPS_EvtReportWrite_T { uint16_t connHandle; uint16_t length; uint16_t offset; uint8_t reportId; uint8_t *p_data; } BLE_HOGPS_EvtReportWrite_T; Structure for...","GUID-C95A8964-45AE-4444-BB79-C83588C60C2A.html@@@1.1.2.1.1.4.24 BLE_GAP_Init@@@uint16_t BLE_GAP_Init ( void ); Initializes the BLE GAP main module. Return value Description MBA_RES_SUCCESS Successfully initializes the BLE GAP main module. MBA_RES_FAIL Fail to initializes BLE GAP...","GUID-C9625B9D-B7F8-4BF6-99B4-013A076B31B9.html@@@2.2.3.1 Additional Requirements For Low Energy Transport@@@This section describes additional Transparent Server requirements beyond those defined in the Transparent Service when using this profile over Low Energy transport...","GUID-CA512CD8-44CF-4D12-B6F5-E721B612ABA8.html@@@1.1.2.1.2.5.5 Handling Peer Writes of Long Characteristic Values@@@Example demonstrating peer writes of long characteristic value (Response handled by BLE library). \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating peer writes of long characteristic value (Response handled by...","GUID-CA7054CC-8C23-4561-BD41-1AC9F085FF70.html@@@1.1.2.3.2.2.4.4 BLE_ANPS_BleEventHandler@@@void BLE_ANPS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-CA9CC4D6-A5FB-4168-9A8C-4A940EA04D2B.html@@@1.1.2.1.1.1.45 PHY types@@@#define BLE_GAP_PHY_TYPE_LE_1M 0x01 #define BLE_GAP_PHY_TYPE_LE_2M 0x02 #define BLE_GAP_PHY_TYPE_LE_CODED 0x03 Defines the PHY type for BLE connections. Macro Description BLE_GAP_PHY_TYPE_LE_1M...","GUID-CAD5BDB8-258D-4C64-ADCA-E9FE274CD75D.html@@@1.1.2.3.3.1.3.4 BLE_HOGPS_SendBatteryLevel@@@uint16_t BLE_HOGPS_SendBatteryLevel (uint16_t connHandle); Sends the battery level of a HID device using the BLE Battery Service. Parameter Description [in] connHandle The connection handle associated...","GUID-CB548428-A46D-43EA-9047-32BC79F54282.html@@@1.1.2.3.5.1.3 Structures@@@BLE_PXPM_CharList_T Structure representing a characteristic list. BLE_PXPM_DescInfo_T Structure representing descriptor information. BLE_PXPM_DescList_T Structure representing a descriptor list...","GUID-CB67D650-E5C5-4473-81E8-00F92CE347EC.html@@@2.3.4.2 Service Discovery@@@The Transparent Credit Based Client shall discover the service in Transparent Credit Based Server by performing primary service discovery, the Client shall use either the GATT Discover All Primary...","GUID-CB959743-88EA-4FEB-9F7C-B0DB6172C897.html@@@1.1.2.3.7.3.4 Transparent Profile Data Exchange Procedure - Client Role@@@Example demonstrating data exchange over the data pipe of the Transparent Profile client role, where the data is transmitted from the client role. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating data exchange over...","GUID-CBD2048D-EC5E-42EC-AFBD-F8FE175CF70C.html@@@2.2.4 Transparent Client Role Requirements@@@Table4.1 describes the discovery requirements for a Transparent Client. Table4.1 Discovery Requirements for Transparent Client. Discovery Requirement Support in Transparent Client Transparent Service...","GUID-CBF298F4-008A-4DA8-80A8-95750D39CFDA.html@@@1.1.2.3.1.1.3.9 BLE_ANCS_EvtErrAttrBufInd_T@@@typedef struct { uint16_t connHandle; BLE_ANCS_NtfyAttrId_T attrId; uint16_t len; } BLE_ANCS_EvtErrAttrBufInd_T; Structure for the BLE_ANCS_EVT_ERR_ATTR_BUF_IND event. Field Description connHandle...","GUID-CC1B3141-5BBC-438E-A918-B7BD42C2F3CA.html@@@1.1.2.2.3.3 Structures@@@BLE_DD_CharInfo_T Structure for information about a specific BLE characteristic. BLE_DD_CharList_T Structure for a list of characteristics associated with a BLE connection. BLE_DD_Config_T Structure...","GUID-CC2FD31E-12C5-4087-A59C-644BB3DAC7FB.html@@@1.1.2.1.4.4.3 BLE_SMP_Config@@@uint16_t BLE_SMP_Config (BLE_SMP_Config_T * p_config); Configures SMP pairing parameters. Man-In-The-Middle (MITM) protection is requested if ioCapability is set to anything other than...","GUID-CC6C348D-E5DA-4D88-88C9-9531FBA4F0DA.html@@@1.1.1.4.2 PTA Signal Timing vs Coexistence Scenarios@@@Scenario 1: Wi-Fi device grants BT device\u2019s request. T1: BT device raises the request by asserting BT_ACTIVE signal and sets BT_PRIORITY level before BT RF active. T2: BT device checks WLAN_ACTIVE...","GUID-CC7E06B9-494F-4110-8F00-9C17167BAB2F.html@@@1.1.2.2.3.2.1 BLE_DD_EventId_T@@@typedef enum BLE_DD_EventId_T { BLE_DD_EVT_DISC_COMPLETE, BLE_DD_EVT_SEC_REQUIRED, BLE_DD_EVT_CONNECTED, BLE_DD_EVT_DISCONNECTED, }BLE_DD_EventId_T; Enumeration of BLE Device Discovery (BLE_DD) module...","GUID-CCD354D1-8BC0-4E12-8D32-1C74D3B6A480.html@@@1.1.2.1.1.1.52 Scan filter length@@@#define BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN 16 #define BLE_GAP_SCAN_MSD_MAX_LEN 16 #define BLE_GAP_SCAN_NAME_MAX_LEN 16 Defines the maximum length of various scan filter fields. Macro Description...","GUID-CCF5442F-D2CB-4A44-8047-8D9CC65EA3F3.html@@@1.1.2.2.2.1.1 BLE log types@@@#define BLE_LOG_TYPE_HCI_COMMAND 0x01 #define BLE_LOG_TYPE_HCI_ACL_TX 0x02 #define BLE_LOG_TYPE_HCI_ACL_RX 0x03 #define BLE_LOG_TYPE_HCI_EVENT 0x04 Defines various BLE log types used for debugging and...","GUID-CD0A5835-8F94-4102-86A2-4B3D35934CBA.html@@@1.1.2.3.6.1.4.1 BLE_TRCBPS_BleEventHandler@@@void BLE_TRCBPS_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE Stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-CD65211F-8D7E-4B35-A235-738A7022ACC5.html@@@1.1.2.1.2.4.22 GATTS_SendReadResponse@@@uint16_t GATTS_SendReadResponse (uint16_t connHandle, GATTS_SendReadRespParams_T *p_respParams); Sends a Read or Read Blob response to a GATT client. The type of response (Read or Read Blob) is...","GUID-CD9627FF-5B0A-44D5-822F-60C2FC7BBC70.html@@@1.1.2.1.1.3.16 BLE_GAP_EvtAdvSetTerminated_T@@@typedef struct BLE_GAP_EvtAdvSetTerminated_T { uint8_t status; uint8_t advHandle; uint16_t connHandle; uint8_t numComplExtAdvEvents; }BLE_GAP_EvtAdvSetTerminated_T; Structure for...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CDD4F087-F513-4C1E-AB82-3F6425060658.html@@@1.1.2.1.2.3.29 GATTS_CccdSetting_T@@@typedef struct GATTS_CccdSetting_T { uint16_t attrHandle; uint16_t acceptableValue; } GATTS_CccdSetting_T; Structure for Client Characteristic Configuration Descriptor (CCCD). Field Description...","GUID-CE29A58F-AB42-450A-9454-BA1809FA0041.html@@@1.1.2.3.1.1 Apple Notification Center Service Notification Consumer Role@@@Provides the interface for the BLE Apple Notification Center Service (ANCS) Profile Consumer. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-CE2B0F4F-6C2F-465A-9BD8-E19A69BA91EC.html@@@2.5.3.3.2.2 Uplink Credit Based Flow Control (UCBFC)@@@The procedure is used by a Transparent Client to enable Uplink Credit Based Flow Control on the Transparent Server. Once it is enabled, Server role can only send data to Client while the credit count...","GUID-CE597F34-2DD2-44C8-9BD3-A6E75D6457F9.html@@@1.1.2.1.5.1.1 Error code definitions@@@#define MBA_RES_SUCCESS 0x0000 #define MBA_RES_FAIL 0x0001 #define MBA_RES_OOM 0x0002 #define MBA_RES_INVALID_PARA 0x0003 #define MBA_RES_NO_RESOURCE 0x0004 #define MBA_RES_BAD_STATE 0x0005 #define...","GUID-CE77F893-372A-4645-94AC-FF202093B7C6.html@@@1.1.2.1.2.3.8 GATT_EvtDiscPrimServByUuidResp_T@@@typedef struct GATT_EvtDiscPrimServByUuidResp_T { uint16_t connHandle; uint16_t handleInfoLength; uint8_t handleInfo[BLE_ATT_MAX_MTU_LEN-ATT_FIND_BY_TYPE_RESP_HEADER_SIZE]; uint8_t procedureStatus; }...","GUID-CEB5CDCB-3FAF-42D4-8687-1554DC4E8239.html@@@1.1.2.1.3.3.2 BLE_L2CAP_EventField_T@@@typedef union { BLE_L2CAP_EvtConnParamUpdateReq_T evtConnParamUpdateReq; BLE_L2CAP_EvtConnParamUpdateRsp_T evtConnParamUpdateRsp; BLE_L2CAP_EvtCbConnInd_T evtCbConnInd; BLE_L2CAP_EvtCbConnFailInd_T...","GUID-CEBD5561-6E25-4EDA-8C16-B8E569D5BC4B.html@@@1.1.2.3.6.1.4.4 BLE_TRCBPS_EventRegister@@@void BLE_TRCBPS_EventRegister (BLE_TRCBP_EventCb_T bleTrcbpHandler); Register a callback for BLE Transparent Credit Based profile events. Parameter Description [in] bleTrcbpHandler Client callback...","GUID-CF032020-D7F1-46CD-AEB5-7029A8F92B46.html@@@1.1.2.1.6.1.4 Trace mask@@@#define BT_SYS_TRACE_INFO_LL_H 1 #define BT_SYS_TRACE_INFO_LL_L ( 1 &lt;&lt; 1 ) #define BT_SYS_TRACE_INFO_HOST ( 1 &lt;&lt; 2 ) Defines the trace mask for different levels of logging information. Macro...","GUID-CF0CCA76-505A-4703-82A8-D08C962F1C34.html@@@1.1.2.3.5.1.4.10 BLE_PXPM_WriteLlsAlertLevel@@@uint16_t BLE_PXPM_WriteLlsAlertLevel (uint16_t connHandle, BLE_PXPM_AlertLevel_T level); Writes the Alert Level value to the Link Loss Service of a connected peer PXP Reporter device. Parameter...","GUID-CF1FC3F6-C175-4494-BDA8-FD7CB8C56DF4.html@@@1.1.2.3.7.2.4.8 BLE_TRSPS_ChangeUuids@@@void BLE_TRSPS_ChangeUuids (BLE_TRSPS_Uuids_T *p_bleTranServUuids); Change UUIDs of transparent service and characteristics. Parameter Description [in] p_bleTranServUuids Pointer to the UUIDs see...","GUID-CF28C997-C5F3-4878-BC11-1EA05C401A35.html@@@1.1.2.1.1.4.66 BLE_GAP_SetScanningFilter@@@uint16_t BLE_GAP_SetScanningFilter (BLE_GAP_ScanFilterConfig_T *p_param); Sets the scanning filter parameters to filter received advertising or scan response PDUs based on specific data types. There...","GUID-CF652FF4-6E48-4AFE-98C2-AF0B4F1E2DFE.html@@@1.1.2.3.7.2.3 Structures@@@BLE_TRSPS_Event_T BLE Transparent profile server callback event. BLE_TRSPS_EventCb_T Callback type for BLE Transparent profile server events. BLE_TRSPS_EventField_T Union of BLE Transparent profile...","GUID-CF84C030-E5AB-4D71-B6EB-E828AD7A6289.html@@@1.1.2.3.2.1.3.14 BLE_ANPC_EvtWriteUnreadAlertRspInd_T@@@typedef struct BLE_ANPC_EvtWriteUnreadAlertRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteUnreadAlertRspInd_T; Structure for the BLE_ANPC_EVT_WRITE_UNREAD_ALERT_NTFY_RSP_IND...","GUID-CF8ACEE4-3047-44D4-AD1F-CAC8D5CDFBA9.html@@@2.1.6 Security Considerations@@@To secure OTA procedure, LE Secure Connection with MITM procedure is recommend strongly...","GUID-D04793EF-E4AB-45B3-9E4C-3CC105A6FFE1.html@@@1.1.2.3.7.2.3.7 BLE_TRSPS_EvtTxStatus_T@@@typedef struct BLE_TRSPS_EvtTxStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPS_EvtTxStatus_T; Structure for the BLE_TRSPS_EVT_TX_STATUS event. Field Description connHandle Connection handle...","GUID-D0A4134B-02B2-4D64-9803-BAE2952D727A.html@@@1.1.2.3.6.1.3 Structures@@@BLE_TRCBP_EventCb_T Callback type for BLE Transparent Credit Based Profile events. BLE_TRCBPS_Event_T BLE Transparent Credit Based profile callback event. BLE_TRCBPS_EventField_T The union of BLE...","GUID-D1093D0F-FEED-4585-90D3-CFBB87FE1839.html@@@1.1.1.2 Using the BLE Software@@@Application shall be able to get the events from BLE Stack if the callback event is registered. And it is strongly recommend application shall not handle the event directly. Because timing is critical...","GUID-D109FEA1-B4F3-42C4-AEF4-F503AD868A81.html@@@1.1.2.1.3.3.7 BLE_L2CAP_EvtCbSduInd_T@@@typedef struct BLE_L2CAP_EvtCbSduInd_T { uint8_t leL2capId; uint16_t length; uint8_t payload[BLE_L2CAP_MAX_PDU_SIZE]; uint8_t frames; } BLE_L2CAP_EvtCbSduInd_T; Structure for BLE_L2CAP_EVT_CB_SDU_IND...","GUID-D1182423-6715-45E3-A493-4F35824FB08C.html@@@1.1.2.3.1.1.3.10 BLE_ANCS_EvtErrInd_T@@@typedef struct { uint16_t connHandle; uint8_t errCode; } BLE_ANCS_EvtErrInd_T; Structure for the BLE_ANCS_EVT_ERR_IND event. Field Description connHandle Connection handle associated with this...","GUID-D2024E25-E55C-430A-9AC9-073B824BF734.html@@@1.1.2.3.4.2.1.4 OTAPS supported features@@@#define BLE_OTAPS_FEATURE_SUPP_IMG_TYPE (BLE_OTAPS_IMG_TYPE_FW) #define BLE_OTAPS_FEATURE_FW_EXT_FEATURE (BLE_OTAPS_FW_FEATURE_MASK1) Defines features supported by the BLE OTA Profile. Macro...","GUID-D22AA056-0DD5-4087-90F0-393F89EB5136.html@@@1.1.2.1.1.3.15 BLE_GAP_EvtAdvReport_T@@@typedef struct BLE_GAP_EvtAdvReport_T { uint8_t eventType; BLE_GAP_Addr_T addr; uint8_t length; uint8_t advData[BLE_GAP_ADV_MAX_LENGTH]; int8_t rssi; } BLE_GAP_EvtAdvReport_T; Structure for...","GUID-D235316A-5434-4ADA-AEF5-10D073D0126B.html@@@1.1.2.1.1.4 Functions@@@BLE_GAP_AdvInit Initializes the BLE GAP legacy advertising module. BLE_GAP_ClearExtAdvSet Removes all existing advertising sets. BLE_GAP_ConfigureBuildInService Configures the built-in Generic Access...","GUID-D25D96E9-A942-4250-A118-278D2D9A6960.html@@@1.1.2.3.5.2.3.4 BLE_PXPR_Event_T@@@typedef struct BLE_PXPR_Event_T { BLE_PXPR_EventId_T eventId; BLE_PXPR_EventField_T eventField; } BLE_PXPR_Event_T; BLE Proximity Profile Reporter callback event structure. Field Description eventId...","GUID-D296A6C3-081D-44BE-83DA-C0D85CBBF021.html@@@1.1.2.3.2.1.3.10 BLE_ANPC_EvtSuppUnreadAlertCatInd_T@@@typedef struct BLE_ANPC_EvtSuppUnreadAlertCatInd_T { uint16_t connHandle; uint16_t category; }BLE_ANPC_EvtSuppUnreadAlertCatInd_T; Structure for the BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND event...","GUID-D2AF6178-DF0B-4C78-AAB0-CF237AD11F13.html@@@1.1.2.1.1.4.28 BLE_GAP_ReadFactoryTxPowerLevel@@@uint16_t BLE_GAP_ReadFactoryTxPowerLevel (int8_t *p_minTxPower, int8_t *p_maxTxPower); Reads the maximum and minimum factory RF transmit power levels. (Unit: dBm) Parameter Description [out]...","GUID-D2DE9EB9-EDE7-4EAA-BDEB-54B4C67569C7.html@@@2.3.4.4 TRCBS Characteristics@@@...","GUID-D35416CB-25AD-41BF-8713-1BD19835E552.html@@@1.1.2.2.1 Device Manager (DM)@@@Manages BLE security and paired device information. Defines Enumerations Structures Functions Message Sequence Chart...","GUID-D3650197-F74C-4A32-8E21-3A6C19B8356C.html@@@1.1.2.1.1.1.22 Fragment preference for extended advertising data@@@#define BLE_GAP_EXT_ADV_DATA_FRAG_ALL 0x00 #define BLE_GAP_EXT_ADV_DATA_FRAG_MIN 0x01 Defines the preference on fragmenting extended advertising data. Macro Description BLE_GAP_EXT_ADV_DATA_FRAG_ALL...","GUID-D3929D68-EC15-44E3-AA75-348DD334A8E5.html@@@1.1.2.1.2.3.11 GATT_EvtError_T@@@typedef struct GATT_EvtError_T { uint16_t connHandle; uint8_t reqOpcode; uint16_t attrHandle; uint8_t errCode; } GATT_EvtError_T; Structure for GATTC_EVT_ERROR_RESP event. Field Description connHandle...","GUID-D3A2D715-B0F3-47E8-A247-060B1C329BDA.html@@@2.6.5 References@@@[1] Bluetooth Core Specification v4.0 or later version of the Core Specification. [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers...","GUID-D3C56C79-3C4C-45A4-8AD6-5AC12C62EFD9.html@@@1.1.2.1.3.3 Structures@@@BLE_L2CAP_Event_T BLE L2CAP callback event structure. BLE_L2CAP_EventField_T Union of BLE L2CAP callback event data types. BLE_L2CAP_EvtCbAddCreditsInd_T Structure for BLE_L2CAP_EVT_CB_ADD_CREDITS_IND...","GUID-D3CBB475-83FB-4E95-9E45-9861A41F3EA4.html@@@1.1.2.1.1.1.2 Address types@@@#define BLE_GAP_ADDR_TYPE_PUBLIC 0x00 #define BLE_GAP_ADDR_TYPE_RANDOM_STATIC 0x01 #define BLE_GAP_ADDR_TYPE_RANDOM_RESOLVABLE 0x02 #define BLE_GAP_ADDR_TYPE_RANDOM_NON_RESOLVABLE 0x03 Defines the...","GUID-D3EFF233-58F7-4ED3-8798-B652FEE6A51F.html@@@2.1.4.3 Characteristic Discovery@@@This section defines characteristic discovery procedures for the OTA Client...","GUID-D44E8233-A7C0-4004-A080-02E8BDEB9023.html@@@1.1.2.1.1.4.70 BLE_GAP_SubrateRequest@@@uint16_t BLE_GAP_SubrateRequest (uint16_t connHandle, BLE_GAP_SubrateParams_T *p_subrateParams); Request a change to the subrating factor and/or other parameters. This command should be used only...","GUID-D48255CA-7475-4040-8269-C535B60EE906.html@@@1.1.2.1.1.1.47 Privacy modes@@@#define BLE_GAP_PRIVACY_MODE_NETWORK 0x00 #define BLE_GAP_PRIVACY_MODE_DEVICE 0x01 #define BLE_GAP_PRIVACY_MODE_OFF 0xFF Defines the privacy modes. Macro Description BLE_GAP_PRIVACY_MODE_NETWORK...","GUID-D4DCEC5A-75DB-42EF-8860-548A52706D1C.html@@@1.1.2.3.4.1.3.6 BLE_OTAPC_EvtFeatureInd_T@@@typedef struct BLE_OTAPC_EvtFeatureInd_T { uint16_t connHandle; uint8_t suppImgType; uint8_t fwExtFeaure; } BLE_OTAPC_EvtFeatureInd_T; Structure for the BLE_OTAPC_EVT_FEATURE_IND event. Field...","GUID-D502C854-A56A-4C91-AEE9-7EB13698003A.html@@@1.1.2.1.1.3.48 BLE_GAP_ScanFilterMsd_T@@@typedef struct BLE_GAP_ScanFilterMsd_T { uint8_t companyId[ 2 ]; uint8_t msdLen; uint8_t msd[BLE_GAP_SCAN_MSD_MAX_LEN]; } BLE_GAP_ScanFilterMsd_T; Structure for configuring a manufacturer-specific...","GUID-D5B163EC-52A0-4A29-A953-A1EECD50547D.html@@@1.1.2.3.6.1.3.3 BLE_TRCBPS_EventField_T@@@typedef union BLE_TRCBPS_EventField_T { BLE_TRCBPS_EvtConnStatus_T connStatus; BLE_TRCBPS_EvtReceiveData_T onReceiveData; BLE_TRCBPS_EvtVendorCmd_T onVendorCmd; } BLE_TRCBPS_EventField_T; The union of...","GUID-D5CBD727-2E3C-400E-B8CB-F9ABD16EFA60.html@@@1.1.2.1.4.4.16 BLE_SMP_ScOobDataReply@@@uint16_t BLE_SMP_ScOobDataReply (uint16_t connHandle, uint8_t *p_confirm, uint8_t *p_rand); Sends OOB data for LE Secure Connections pairing in response to an OOB data request. This function should be...","GUID-D5CD2A08-1105-4909-90D3-63ACEBD9F57F.html@@@1.1.2.1.4.2 Enums@@@BLE_SMP_EventId_T Enumeration type for BLE SMP (Security Manager Protocol) callback events...","GUID-D6EB373F-D4E2-4D89-907C-7D16A9CD2A25.html@@@1.1.2.3.4.1.3.3 BLE_OTAPC_EventField_T@@@typedef union { BLE_OTAPC_EvtSecReq_T evtSecReq; BLE_OTAPC_EvtConnectInd_T evtConnectInd; BLE_OTAPC_EvtFeatureInd_T evtFeatureInd; BLE_OTAPC_EvtReqRspInd_T evtReqRspInd; BLE_OTAPC_EvtStartRspInd_T...","GUID-D7171CF9-FE57-42A4-9B9B-DFC0E115E0A2.html@@@1.1.2.3.3.1.3.2 BLE_HOGPS_EventRegister@@@void BLE_HOGPS_EventRegister (BLE_HOGPS_EventCb_T routine); Registers a callback for the BLE HID over GATT profile server role events. Parameter Description [in] routine Callback function to handle...","GUID-D770DB31-5F7D-4DB8-A40A-5569B5715B6C.html@@@2.6.1.5 Error Codes@@@This service does not define any Attribute Protocol Application Error codes...","GUID-D78BE070-5B4E-4CCC-9632-2EFCEA6703F6.html@@@1.1.2.2.3.3.2 BLE_DD_CharList_T@@@typedef struct BLE_DD_CharList_T { uint16_t connHandle; BLE_DD_CharInfo_T *p_charInfo; } BLE_DD_CharList_T; Structure for a list of characteristics associated with a BLE connection. Field Description...","GUID-D7C8F88C-7350-4144-8556-B24D0563AA90.html@@@2.4.2 Service@@@Declaration There shall be only one instance of the OTAS in a device. The OTAS shall be instantiated as a \u00ABPrimary Service\u00BB. The service Universally Unique Identifier (UUID) value shall be set to...","GUID-D7E9A6E4-C32A-48D5-B323-AED7A851B816.html@@@1.1.2.3.5.2.4.5 BLE_PXPR_SetTxPowerLevel@@@void BLE_PXPR_SetTxPowerLevel (int8_t level); Sets the Transmission Power Level for the Tx Power Service. Parameter Description [in] level The desired Tx Power Level to be set...","GUID-D83EFB4F-BD5D-49C4-9C63-BA6BC53830E6.html@@@1.1.2.3.5.1.3.9 BLE_PXPM_EvtLlsAlertLvWriteRspInd_T@@@typedef struct BLE_PXPM_EvtLlsAlertLvWriteRspInd_T { uint16_t connHandle; uint16_t errCode; } BLE_PXPM_EvtLlsAlertLvWriteRspInd_T; Structure for the BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND event...","GUID-D843B71D-8392-4306-944C-63C8E5D6545D.html@@@1.1.2.1.2.1.8 GATT database change state@@@#define GATT_DB_CHANGE_AWARE 0x00 #define GATT_DB_CHANGE_UNAWARE 0x01 Defines the state of the GATT server&apos;s database with respect to its awareness of changes for a specific client. Macro Description...","GUID-D85CE9C6-C7CA-4600-AB9F-93739CBF3CF4.html@@@1.1.2.1.1.4.32 BLE_GAP_RemoteConnParamsReqNegativeReply@@@uint16_t BLE_GAP_RemoteConnParamsReqNegativeReply (uint16_t connHandle, uint8_t reason); Replies to an LE remote connection parameters request event if the device rejects the remote device&apos;s request...","GUID-D8ADCAD3-294E-4E87-BA33-10F34489A4E7.html@@@1.1.2.1.2.3.4 GATT_EvtClientCccdListChange_T@@@typedef struct GATT_EvtClientCccdListChange_T { GATTS_CccdList_T *p_cccdList; uint16_t connHandle; uint8_t numOfCccd; } GATT_EvtClientCccdListChange_T; Structure for the...","GUID-D8AED317-0F8D-4EEC-8284-1FEE79D560EE.html@@@1.1.2.2.1.4.8 BLE_DM_GetPairedDevice@@@uint16_t BLE_DM_GetPairedDevice (uint8_t devId, BLE_DM_PairedDevInfo_T *p_pairedDevInfo); Retrieves information for a single paired device by device ID. Parameter Description [in] devId The device ID...","GUID-D8B59A2B-C6B7-4F68-8FC0-15269A50C3D0.html@@@1.1.2.1.6.3.9 BT_SYS_PtaEventBtPriorityCb_T@@@typedef void (*BT_SYS_PtaEventBtPriorityCb_T)(bool btPriority); Callback type for BT priority event in PTA. Parameter Description [in] btPriority Indicates the priority level of BT traffic. A value of...","GUID-D8C13BF5-98E8-4439-81F3-FC3B64637EBC.html@@@1.1.2.1.2.1.12 GATT server configuration definitions@@@#define GATTS_CONFIG_NONE 0x0000 #define GATTS_CONFIG_CACHING_SUPPORT 0x0001 Defines GATT Server configuration bits. Macro Description GATTS_CONFIG_NONE No configuration for any supported functions...","GUID-D941EEB9-7BC1-467C-9F7F-24E7F2858B30.html@@@1.1.2.1.2.4.5 GATTC_DiscoverPrimaryServiceByUUID@@@uint16_t GATTC_DiscoverPrimaryServiceByUUID (uint16_t connHandle, GATTC_DiscoverPrimaryServiceParams_T *p_discParams); Begins the discovery of primary services by UUID within a specified handle range...","GUID-D96C26E4-D2F4-47DD-8233-070CF85FA30A.html@@@1.1.2.1.1.1.33 Maximum number of skipped periodic advertising events@@@#define BLE_GAP_SYNC_SKIP_MAX 0x1F3 Defines the maximum number of periodic advertising events that can be skipped. Macro Description BLE_GAP_SYNC_SKIP_MAX Maximum number of periodic advertising events...","GUID-D9CA32DE-5CC7-41E2-8669-29F1A44D5FA5.html@@@1.1.2.1.2.3.14 GATT_EvtReadResp_T@@@typedef struct GATT_EvtReadResp_T { uint16_t connHandle; uint8_t responseType; uint16_t attrDataLength; uint8_t readValue[BLE_ATT_MAX_MTU_LEN-ATT_READ_RESP_HEADER_SIZE]; uint16_t charHandle; }...","GUID-D9D4B4DE-63DA-4ECE-A67F-D6198DB7D7F3.html@@@1.1.2.1.1.1.15 Event type of advertising reports@@@#define BLE_GAP_ADV_RPT_EVT_TYPE_ADV_IND 0x00 #define BLE_GAP_ADV_RPT_EVT_TYPE_ADV_DIRECT_IND 0x01 #define BLE_GAP_ADV_RPT_EVT_TYPE_ADV_SCAN_IND 0x02 #define BLE_GAP_ADV_RPT_EVT_TYPE_ADV_NONCONN_IND...","GUID-D9E27D1C-EFD0-4EC6-98DB-BCA32DF35164.html@@@1.1.2.3.2.1.3.12 BLE_ANPC_EvtWriteCpRspInd_T@@@typedef struct BLE_ANPC_EvtWriteCpRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteCpRspInd_T; Structure for the BLE_ANPC_EVT_WRITE_CP_RSP_IND event. Field Description connHandle...","GUID-D9F20847-7461-49A9-8884-9D7795D405AE.html@@@1.1.2.3.3.1.2.1 BLE_HOGPS_Event_T@@@typedef struct BLE_HOGPS_Event_T { BLE_HOGPS_EventId_T eventId; BLE_HOGPS_EventField_T eventField; } BLE_HOGPS_Event_T; BLE HID over GATT profile server role callback event structure. Field...","GUID-DA48F471-463C-494A-B960-DDDB0D3686D8.html@@@2.5.4 Acronyms and Abbreviations@@@Table 4.1: Acronyms and Abbreviations Acronyms and Abbreviations Meaning GATT Generic Attribute Profile LE Low Energy MTU Maximum Transmission Unit RFU Reserved for Future Use...","GUID-DAF89C49-FE01-4304-9B40-072EF9F84AD3.html@@@1.1.2.3.2.2.1 Defines@@@Category Id The definition of category id. Command definition The definition of command id. Maximum connection number The definition of Memory size. Support category mask The definition of category id...","GUID-DBACD553-8C00-4C69-885D-5A48A64D1987.html@@@2.3.4 Transparent Credit Based Client Role Requirements@@@Table 4.1 describes the discovery requirements for a Transparent Credit Based Client. Table4.1 Discovery Requirements for Transparent Credit Based Client Discovery Requirement Support in Transparent...","GUID-DBAD280B-86D4-48DE-AA60-509A7231E66F.html@@@1.1.2.1.1.3.52 BLE_GAP_ServiceOption_T@@@typedef struct BLE_GAP_ServiceOption_T { BLE_GAP_CharDeviceName_T charDeviceName; BLE_GAP_CharAppearance_T charAppearance; BLE_GAP_CharPeriPreferConnParams_T charPeriPreferConnParam...","GUID-DBC9A722-E264-4CC5-85D4-D0FBEF08C5B1.html@@@1.1.1.3.2 BLE Memory Usage for PIC32CX-BZ3@@@Introduction Optimizing memory usage is crucial for efficient BLE application development. This document provides a comprehensive guide on evaluating BLE memory usage, offing insights and best...","GUID-DBD342CD-44EF-47ED-8B4A-ABF1F466AF57.html@@@1.1.2.1.6.4.10 BT_SYS_PtaInit@@@void BT_SYS_PtaInit (BT_SYS_PtaEventBtActiveCb_T notifyBtActiveCb, BT_SYS_PtaEventBtPriorityCb_T notifyBtPriorityCb, BT_SYS_PtaGetWlanStatusCb_T getWlanActiveStatusCb); Initializes the Bluetooth (BT)...","GUID-DBD3AFD8-6BFB-4B13-A3C0-C05ADCE92BA6.html@@@2.2 Microchip Transparent Profile v1.1@@@This profile defines fundamental requirements to connect and interact with Transparent-Channels intended for consumer to exchange control and data between Transparent Client and Transparent Server...","GUID-DC2BAB3C-1EAE-4F5B-80D5-AFEDEB43B1B8.html@@@1.1.1.4.3 PTA Hardware Information@@@Below 3 dedicate GPIOs are assigned as PTA Pins once PTA feature is enabled: PTA Pin function GPIO Pin on PIC32CX-BZ2 GPIO Pin on PIC32CX-BZ3 BT_ACTIVE PA14 PA3 BT_PRIORITY PA13 PA9 WLAN_ACTIVE PB0...","GUID-DC4C008D-4069-4F60-AC2A-13B829422DB8.html@@@1.1.2.1.1.4.62 BLE_GAP_SetPeriAdvRxEnable@@@uint16_t BLE_GAP_SetPeriAdvRxEnable (uint16_t syncHandle, bool enable); Enables or disables reports for the periodic advertising train identified by the &quot;syncHandle&quot;. This API is part of the extended...","GUID-DC53B896-5FF5-48C2-B9B7-4CA16B37B193.html@@@1.1.2.2.5.2 Device Firmware Update (DFU)@@@Defines the API for the Device Firmware Update (DFU). Defines Structures Functions...","GUID-DC73AC27-EA5D-4A8B-AAE4-D88920E2E478.html@@@2.5.1 Introduction@@@The Transparent Service is used for Transparent Profile Client and Server roles for upper layer application burst data exchange with Credit Based flow control...","GUID-DCD672EA-85EE-4D05-AD09-2C0A9973ECB7.html@@@1.1.2.1.1.3.24 BLE_GAP_EvtEncryptStatus_T@@@typedef struct BLE_GAP_EvtEncryptStatus_T { uint16_t connHandle; uint8_t status; } BLE_GAP_EvtEncryptStatus_T; Structure for BLE_GAP_EVT_ENCRYPT_STATUS event. Field Description connHandle Connection...","GUID-DD3CFF83-C9EC-4321-9EC2-3EFED48837C8.html@@@1.1.2.1.2.5.10 Discovering Characteristic Descriptors@@@Example demonstrating how to discover of all characteristic descriptors...","GUID-DD97EFDE-AE46-4212-B307-B409DFF1AE50.html@@@1.1.2.1.4.4.12 BLE_SMP_PasskeyNegativeReply@@@uint16_t BLE_SMP_PasskeyNegativeReply (uint16_t connHandle); Indicates inability to provide a passkey in response to a request. Call this in response to passkey BLE_SMP_EVT_INPUT_PASSKEY_REQUEST or...","GUID-DD9C9FD7-34EB-4636-8E95-2B72521AC371.html@@@1.1.2.3.4.2.3.7 BLE_OTAPS_EvtCompleteInd_T@@@typedef struct BLE_OTAPS_EvtCompleteInd_T { bool errStatus; } BLE_OTAPS_EvtCompleteInd_T; Structure for the BLE_OTAPS_EVT_COMPLETE_IND event. Field Description errStatus Error status of the update...","GUID-DDACB06B-D561-41CB-86EB-E457D3B3E020.html@@@1.1.2.1.4.5 Message Sequence Chart@@@SMP Legacy Pairing in The GAP Central Role Procedure SMP Legacy Pairing in the GAP Peripheral Role Procedure SMP LESC Pairing in the GAP Central Role Procedure SMP LESC Pairing in the GAP Peripheral...","GUID-DDB288B9-9143-46AA-B4A0-953739170194.html@@@2.4.3.4 OTA Data Behavior@@@Client write the specified data to server via the OTA Data characteristic after issuing the dedicated operation in OTA Control Point characteristic. Server shall notify the result of the OTA Data...","GUID-DDC28B40-5EA2-414F-B1F5-F53B48684F71.html@@@1.1.2.1.1.3.37 BLE_GAP_ExtAdvParams_T@@@typedef struct BLE_GAP_ExtAdvParams_T { uint8_t advHandle; uint16_t evtProperies; uint32_t priIntervalMin; uint32_t priIntervalMax; uint8_t priChannelMap; BLE_GAP_Addr_T peerAddr; uint8_t...","GUID-DDD0FC5F-7776-407D-BF60-B8A840CAA848.html@@@1.1.2.3.5.2.4.2 BLE_PXPR_EventRegister@@@void BLE_PXPR_EventRegister (BLE_PXPR_EventCb_T routine); Registers a callback function for BLE PXP Reporter events. Parameter Description [in] routine The function to be called when a PXP Reporter...","GUID-DE48F068-43AC-41A0-AA71-336C50EDC7F9.html@@@1.1.2.1.2.1.5 Characteristic extended properties@@@#define RELIABLE_WRITE 0x0001 #define WRITABLE_AUXILIARIES 0x0002 Defines the Characteristic Extended Properties bit field. Macro Description RELIABLE_WRITE If set, reliable writes to the...","GUID-DEABEAA2-F2F7-49DC-B163-D450D7CC95D5.html@@@1.1.2.3.2.1.3.7 BLE_ANPC_EvtDiscComplete_T@@@typedef struct BLE_ANPC_EvtDiscComplete_T { uint16_t connHandle; uint16_t ansStartHandle; uint16_t ansEndHandle; }BLE_ANPC_EvtDiscComplete_T; Structure for the BLE_ANPC_EVT_DISC_COMPLETE_IND event...","GUID-DED439C8-C87E-46CC-97A4-4161BF292ECC.html@@@2.1.3 OTA Server Role Requirements@@@The OTA Server shall instantiate one OTA Services [1] . A higher layer specification may impose additional requirements on the service declaration of the OTA Service (e.g., \u00ABPrimary Service\u00BB) as well...","GUID-DF1B2E6C-F04F-4366-8379-3DA6B4F1F764.html@@@1.1.2.1.1.1.5 Advertising interval range@@@#define BLE_GAP_ADV_INTERVAL_MIN 0x0020 #define BLE_GAP_ADV_INTERVAL_MAX 0x4000 Defines the range for advertising intervals in units of 0.625 ms. The default value is 0x0800 (1.28 seconds). Macro...","GUID-DF6FBE00-4B82-49D1-AF5E-8F8DA2CB1C00.html@@@1.1.2.1.2.3.9 GATT_EvtDiscPrimServResp_T@@@typedef struct GATT_EvtDiscPrimServResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_GROUP_RESP_HEADER_SIZE]; uint8_t...","GUID-DFB32A56-F63A-4CFD-8C40-41C7F7D6E244.html@@@1.1.2.1.1.1.24 Maximum advertising data length@@@#define BLE_GAP_ADV_MAX_LENGTH 0x1F Defines the maximum length of advertising data in bytes. Macro Description BLE_GAP_ADV_MAX_LENGTH Maximum length of advertising data in bytes (31 bytes)...","GUID-DFBCBE4D-2E2C-4162-947B-30CDF6F3ADCB.html@@@1.1.2.3.7 Transparent Profile (TRP)@@@Provides the interface for the Transparent Credit Based Profile. See Microchip Transparent Profile in detail Transparent Profile Client Role Transparent Profile Server Role Message Sequence Chart...","GUID-DFD84D38-F365-444F-B01D-BED59DC12918.html@@@1.1.2.1.3.5.1 BLE_L2CAP_CbAddCredits@@@uint16_t BLE_L2CAP_CbAddCredits (uint8_t leL2capId, uint16_t credits); Sends L2CAP flow control credits to the peer device. Credits should be returned to the peer device after receiving data to ensure...","GUID-DFE1CA7F-A3A4-45E7-8C93-8074C4AC5D05.html@@@1.1.1 BLE Software Specification@@@Key Features Bluetooth 5.2 compliant single-mode Bluetooth Low Energy protocol stack (BLE_Stack) Maximum to 6 BLE connections concurrently Configurable GAP roles of Peripheral, Central, Advertiser and...","GUID-E036F038-9556-4640-A277-570194EFBEC6.html@@@1.1.2.3.7.1.3 Structures@@@BLE_TRSPC_Event_T BLE Transparent profile client callback event. BLE_TRSPC_EventCb_T Callback type for BLE Transparent profile client events. BLE_TRSPC_EventField_T The union of BLE Transparent...","GUID-E05F98C1-D6B6-42D2-8EDE-F679AC9624A3.html@@@1.1.2.3.5.2.2 Enums@@@BLE_PXPR_AlertLevel_T Enumeration for BLE Proximity Profile Reporter (PXP Reporter) alert levels. BLE_PXPR_EventId_T Enumeration for BLE PXP Reporter callback event identifiers...","GUID-E08FD508-909A-4FCA-A509-362D4AE9EF35.html@@@1.1.2.1.1.3.19 BLE_GAP_EvtConnParamUpdateParams_T@@@typedef struct BLE_GAP_EvtConnParamUpdateParams_T { uint16_t connHandle; uint8_t status; BLE_GAP_ConnParams_T connParam; } BLE_GAP_EvtConnParamUpdateParams_T; Structure for...","GUID-E0AFFD6E-7D2F-41A5-A63C-E8538BACF501.html@@@1.1.2.3.7.2.3.3 BLE_TRSPS_EventField_T@@@typedef union { BLE_TRSPS_EvtCtrlStatus_T onCtrlStatus; BLE_TRSPS_EvtTxStatus_T onTxStatus; BLE_TRSPS_EvtCbfcEnabled_T onCbfcEnabled; BLE_TRSPS_EvtReceiveData_T onReceiveData; BLE_TRSPS_EvtVendorCmd_T...","GUID-E0B59267-4640-49DE-997C-C2890FAF1D35.html@@@1.1.2.3.5.2.4.1 BLE_PXPR_BleEventHandler@@@void BLE_PXPR_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE Stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-E0F8E15F-13C1-4511-B8A2-C7D35B85D4A8.html@@@1.1.2.1.8.4.3 HCI_Cmd@@@void HCI_Cmd (uint16_t length, uint8_t *p_packet); HCI command. Parameter Description [in] length The length of HCI command packet. [in] p_packet Pointer to HCI command packet...","GUID-E11AE2CA-F894-4496-87D2-BDB4B2A97424.html@@@1.1.2.3.2.1.4.2 BLE_ANPC_BleEventHandler@@@void BLE_ANPC_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE_Stack events. This function should be called when BLE stack events occur. Parameter Description [in] p_stackEvent Pointer to...","GUID-E1656FBC-A781-49E5-8026-4CED9C9DC2F9.html@@@1.1.2.1.3.5.6 BLE_L2CAP_CbPauseAuthorization@@@uint16_t BLE_L2CAP_CbPauseAuthorization (uint16_t spsm, bool enable); Pauses or resumes authorization for a specific SPSM (Simplified Protocol/Service Multiplexer). By default, all SPSMs are...","GUID-E186343E-9DB5-4912-BB1E-89838219A818.html@@@1.1.2.1.1.4.40 BLE_GAP_SetChannelMap@@@uint16_t BLE_GAP_SetChannelMap (uint8_t *p_map); Sets local channel map. If not called, the status of all 37 channels defaults to unknown. The application should call this API within 10 seconds of...","GUID-E1BC09E6-3BB1-47B9-9EE7-F29F07D1CEF0.html@@@1.1.2.2.1.4.7 BLE_DM_GetFilterAcceptList@@@uint16_t BLE_DM_GetFilterAcceptList (uint8_t *p_devCnt, BLE_GAP_Addr_T *p_addr); Retrieves the filter accept list. Parameter Description [out] p_devCnt Pointer to the variable to store the number of...","GUID-E20796D3-223D-4A8A-8C39-A8370F5DA048.html@@@1.1.2.1.3.5.2 BLE_L2CAP_CbConnReq@@@uint16_t BLE_L2CAP_CbConnReq (uint16_t connHandle, uint16_t spsm); Issues a L2CAP credit-based connection request to establish an L2CAP channel. Before calling this API, BLE_L2CAP_CbRegisterSpsm must...","GUID-E2791444-A9AC-46EE-8F77-984A2E708218.html@@@1.1.2.3.1.1.4.3 BLE_ANCS_EventRegister@@@void BLE_ANCS_EventRegister (BLE_ANCS_EventCb_T bleAncsHandler); Registers a callback function for BLE ANCS events. Parameter Description [in] bleAncsHandler The function to be called when an ANCS...","GUID-E2F81023-B198-4263-A123-9225588A0E6E.html@@@1.1.2.1.2.1 Defines@@@ATT error codes Defines ATT (Attribute Protocol) error codes used in BLE communication. ATT opcodes Defines ATT (Attribute Protocol) opcodes used in BLE communication. Attribute permissions Defines...","GUID-E3210C26-2A7D-47E2-9822-3CA93B7A2984.html@@@1.1.2.1.1.3.46 BLE_GAP_ResolvingListParams_T@@@typedef struct BLE_GAP_ResolvingListParams_T { BLE_GAP_Addr_T peerIdAddr; uint8_t peerIrk[ 16 ]; uint8_t localIrk[ 16 ]; uint8_t privacyMode; } BLE_GAP_ResolvingListParams_T; Structure for configuring...","GUID-E33EFAFB-96F6-40D2-89B8-D36720590C60.html@@@1.1.2.1.6.4.13 BT_SYS_RfSuspendReq@@@uint8_t BT_SYS_RfSuspendReq (uint8_t enable); Request to suspend the Bluetooth RF functionality. Parameter Description [in] enable Set to true to suspend RF; otherwise set flase. Return value...","GUID-E372FDDA-8BB8-4E63-8C1F-0D531DA0F0B0.html@@@1.1.2.3.7.1.2 Enums@@@BLE_TRSPC_EventId_T Enumeration of BLE Transparent Profile callback event types...","GUID-E37EED0D-259A-496E-927B-2B3CB7981257.html@@@2.6.1.4 Byte Transmission Order@@@All characteristics used with this service shall be transmitted with the least significant octet first (i.e., little endian). The least significant octet is identified in the characteristic...","GUID-E3B28D5E-279E-48ED-A989-4BF908B59108.html@@@1.1.2.3.3.1.2 Structures@@@BLE_HOGPS_Event_T BLE HID over GATT profile server role callback event structure. BLE_HOGPS_EventCb_T Callback type for BLE HID over GATT profile server role events. BLE_HOGPS_EventField_T Union of...","GUID-E3B2CF7A-905C-47C8-BE51-1EF34878C3FF.html@@@1.1.2.2.1.5.2 Handling BLE_DM Filter Accept List@@@Example demonstrating the process of adding all paired devices to the BLE_DM Filter Accept List. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating the process of adding selected paired devices to the BLE_DM Filter...","GUID-E3B712E2-FE12-4FB1-A224-14F4140079A3.html@@@1.1.2.1.2.3.28 GATTS_CccdList_T@@@typedef struct GATTS_CccdList_T { uint16_t attrHandle; uint16_t cccdValue; } GATTS_CccdList_T; List of CCCD values for multiple characteristics. Field Description attrHandle Handle of the CCCD...","GUID-E472573D-B1A5-4AF4-8F96-6B04F71731C4.html@@@1.1.2.2.2.2 Structures@@@BLE_LOG_EventCb_T Callback type for BLE logging events...","GUID-E4A4DBC6-91C0-4AD0-9489-99E0315F0290.html@@@1.1.2.2.3.3.8 BLE_DD_EventCb_T@@@typedef void (*BLE_DD_EventCb_T)(BLE_DD_Event_T *p_event); Callback type for BLE_DD events. Parameter Description [in] p_event Pointer to the event structure containing event details. See...","GUID-E4CDA4EF-87F0-4278-8A48-2F7CAADEC1BD.html@@@1.1.2.2.1.4.13 BLE_DM_SetResolvingList@@@uint16_t BLE_DM_SetResolvingList (uint8_t devCnt, uint8_t const *p_devId, uint8_t const * p_privacyMode); Sets the resolving list. Parameter Description [in] devCnt The number of devices to add to the...","GUID-E57F3A91-7E63-48EC-A085-CDDE428151E1.html@@@2.6.3.2 Transparent Credit Based Control Point (TRCBCP) Characteristic@@@The structure of TCP characteristic is defined as below. To ensure the successful operation, this Client Characteristic Configuration Descriptor (CCCD) of Transparent Credit Based Control Point...","GUID-E5A17468-D9AF-4281-A788-D73E6D33FD63.html@@@1.1.2.1.2.1.9 Execute write flags@@@#define GATT_EXEC_WRITE_FLAG_CANCEL_ALL 0x00 #define GATT_EXEC_WRITE_FLAG_WRITE 0x01 #define GATT_EXEC_WRITE_FLAG_INTERNAL_CANCEL 0x02 Defines the flags for Execute Write Request operations. Macro...","GUID-E5AA6086-7348-4499-9F10-E79ABD17A39D.html@@@1.1.2.3.4.3.2 Over The Air Profile Client Role Procedure@@@Example demonstrating the initialization process. Example demonstrating the feature retrieval process. Example demonstrating the firmware update request process. Example demonstrating the firmware...","GUID-E64B9893-602B-4A8E-9F6C-0767278B5A4A.html@@@1.1.2.1.8.3.1 HCI_EventCb_T@@@typedef bool (*HCI_EventCb_T)(uint16_t length, uint8_t *p_packet); HCI callback type. This callback function sends HCI events to the application...","GUID-E702811D-F3DC-48DC-8100-C9FF9905C395.html@@@2.5.3.1.1 Transparent Uplink Data Characteristic Behavior@@@Once the Client Characteristic Configuration Descriptor of Transparent Uplink Characteristic is enabled by Client, Server can notify a Characteristic Value to Client without any Attribute Protocol...","GUID-E71074E7-3D68-4CA7-8655-B2AA22C14AED.html@@@1.1.2.1.1.3.5 BLE_GAP_CharDeviceName_T@@@typedef struct BLE_GAP_CharDeviceName_T { bool enableWriteProperty; } BLE_GAP_CharDeviceName_T; Structure for the Device Name characteristic with write property configuration. Field Description...","GUID-E74B211A-16DD-4A91-AE64-DB7E43F10048.html@@@1.1.2.3.2.2.4.6 BLE_ANPS_SendUnreadAlertStat@@@uint16_t BLE_ANPS_SendUnreadAlertStat (uint16_t connHandle, uint8_t catId, uint8_t unreadCnt); Sends an unread alert status notification to a connected peer device. Parameter Description [in]...","GUID-E795EF95-213E-4537-8149-B05025540E32.html@@@1.1.2.1.1.3.25 BLE_GAP_EvtExtAdvReport_T@@@typedef struct BLE_GAP_EvtExtAdvReport_T { uint8_t eventType; uint8_t dataStatus; BLE_GAP_Addr_T addr; uint8_t priPhy; uint8_t secPhy; uint8_t sid; int8_t txPower; int8_t rssi; uint16_t...","GUID-E7AC4E95-70D0-42F2-BAAA-4C15ACABC2F3.html@@@1.1.2.3.5.1.2.1 BLE_PXPM_AlertLevel_T@@@typedef enum BLE_PXPM_AlertLevel_T { BLE_PXPM_ALERT_LEVEL_NO = 0x00U , BLE_PXPM_ALERT_LEVEL_MILD = 0x01U , BLE_PXPM_ALERT_LEVEL_HIGH = 0x02U , } BLE_PXPM_AlertLevel_T; Alert levels for BLE Proximity...","GUID-E7BDB201-281C-4B13-9938-83422FDAFAFF.html@@@1.1.2.1.1.3.39 BLE_GAP_ExtCreateConnPhy_T@@@typedef struct BLE_GAP_ExtCreateConnPhy_T { BLE_GAP_ExtCreateConnParams_T le1mPhy; BLE_GAP_ExtCreateConnParams_T le2mPhy; BLE_GAP_ExtCreateConnParams_T leCodedPhy; }BLE_GAP_ExtCreateConnPhy_T...","GUID-E7F605CC-EA38-45BF-BD03-CA6D1A93BE50.html@@@1.1.2.3.4.2.3.2 BLE_OTAPS_EventField_T@@@typedef union { BLE_OTAPS_EvtUpdateReq_T evtUpdateReq; BLE_OTAPS_EvtStartInd_T evtStartInd; BLE_OTAPS_EvtUpdatingInd_T evtUpdatingInd; BLE_OTAPS_EvtCompleteInd_T evtCompleteInd; }...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E8652964-0152-4981-8A5A-A130D6B25E25.html@@@1.1.2.1.2.4.20 GATTS_SendHandleValue@@@uint16_t GATTS_SendHandleValue (uint16_t connHandle, GATTS_HandleValueParams_T *p_hvParams); Sends a Handle Value Notification or Indication to a GATT client. The type of message sent (notification or...","GUID-E90309B9-B8BE-48A5-B12F-170E390C42E7.html@@@1.1.2.1.1.4.38 BLE_GAP_SetAdvParams@@@uint16_t BLE_GAP_SetAdvParams (BLE_GAP_AdvParams_T *p_advParams); Sets advertising parameters. This command shall not be issued when advertising is enabled. This API belongs to legacy advertising...","GUID-E96DC763-5493-45A1-9002-64822242E6E9.html@@@1.1.2.3.2.1.4.1 BLE_ANPC_BleDdEventHandler@@@void BLE_ANPC_BleDdEventHandler (BLE_DD_Event_T *p_event); Handles BLE Database Discovery (BLE_DD) events. This function should be called when BLE_DD events occur. Parameter Description [in] p_event...","GUID-E98A07E1-AB35-4D3D-B408-251AB8127825.html@@@1.1.2.1.4.1 Defines@@@Confirm result Defines user confirmation results for pairing. IO capability Defines SMP io (Input/Output) capabilities. Key flags Defines flags indicating the validity of remote keys. Keypress...","GUID-E9C6EA61-8950-4E86-A18D-A7E28ED8D58E.html@@@1.1.2.3.6.1.3.1 BLE_TRCBP_EventCb_T@@@typedef void (*BLE_TRCBP_EventCb_T)(BLE_TRCBPS_Event_T *p_event); Callback type for BLE Transparent Credit Based Profile events. This callback function is invoked to handle events from the BLE...","GUID-EA4E512E-AD02-4409-A344-DD0F2DBE2270.html@@@1.1.2.1.1.1.67 LE Coded PHY options@@@#define BLE_GAP_CODED_PHY_HOST_NO_PREFERRED ( 0x00U ) #define BLE_GAP_CODED_PHY_HOST_PREFER_S2 ( 0x01U ) #define BLE_GAP_CODED_PHY_HOST_PREFER_S8 ( 0x02U ) #define BLE_GAP_CODED_PHY_HOST_REQUIRE_S2 (...","GUID-EA9FDAA1-442A-44F2-BC42-B61DF752A7B5.html@@@1.1.2.2.4.4.2 BLE_SCM_BleEventHandler@@@void BLE_SCM_BleEventHandler (STACK_Event_T *p_stackEvent); Handles BLE stack events. This function must be called for each BLE event that occurs to ensure proper operation of the BLE_SCM. Parameter...","GUID-EAAE0DDB-EBEC-493D-98DB-21037F1C06C6.html@@@1.1.2.3.1.1.2 Enums@@@BLE_ANCS_ActionId_T Identifiers for possible actions on iOS notifications. BLE_ANCS_CategoryId_T Identifiers for categories of iOS notifications. BLE_ANCS_EventId_T Event identifiers for BLE ANCS...","GUID-EAF054B2-80EE-4739-80F4-7830F504B27B.html@@@1.1.2.3.4.1 Microchip OTA Profile Client Role@@@Provides the interface for the BLE OTA Profile Client. Defines Enumerations Structures Functions...","GUID-EB156AF7-5BFF-42DA-97CC-F1BAC1DE0D22.html@@@1.1.2.1.1.5.7 GAP Periodic Advertising and Synchronization Procedure@@@Example demonstrating the initiation of periodic advertising Example demonstrating the modification of periodic advertising data while periodic advertising is enabled Example...","GUID-EB1E705F-2D75-4BD1-95EB-590F7A6DAF89.html@@@1.1.2.2.5.2.1.3 Flash types@@@#define MW_DFU_FLASH_INTERNAL 0x01 #define MW_DFU_FLASH_EXTERNAL 0x03 Defines the type of flash memory used during DFU. Macro Description MW_DFU_FLASH_INTERNAL Identifier for DFU operations on...","GUID-EB223986-E623-4BDC-8F35-3754CB25BD40.html@@@1.1.2.3.4.1.4.1 BLE_OTAPC_BleDdEventHandler@@@void BLE_OTAPC_BleDdEventHandler (BLE_DD_Event_T *p_event); Handless BLE Database Discovery (BLE_DD) middleware events. This function should be called when BLE_DD events occur. Parameter Description...","GUID-EB2A1AAA-DD57-4C0A-8D42-06B47EE75319.html@@@1.1.2.2.4.3.2 BLE_SCM_EventCb_T@@@typedef void (*BLE_SCM_EventCb_T)(BLE_SCM_Event_T *p_event); Callback type for BLE_SCM events. This callback function is used to send BLE_SCM events to the application. Parameter Description [in]...","GUID-EB3BB9F6-BD3C-4159-AFD5-6875A54609AE.html@@@1.1.2.1.2.5.6 Sending a Handle Value Notification@@@Example demonstrating how to send a Handle Value Notification...","GUID-EB503CA0-ADDB-40B6-85E2-DA4D752231B5.html@@@1.1.2.1.1.4.36 BLE_GAP_SetAdvData@@@uint16_t BLE_GAP_SetAdvData (BLE_GAP_AdvDataParams_T *p_advData); Sets advertising data from the input &quot;p_advData&quot;. If advertising is currently enabled, the new data will be used in subsequent...","GUID-EB6C643C-FB44-412C-9742-09C9D86C5663.html@@@1.1.2.3.3.1.3.3 BLE_HOGPS_Init@@@uint16_t BLE_HOGPS_Init ( void ); Initializes the BLE HID over GATT profile server role. Return value Description MBA_RES_SUCCESS The initialization was successful. MBA_RES_FAIL The initialization...","GUID-EB7B51F8-E729-483F-96B3-D614C6D56AC0.html@@@1.1.2.1.1.3.2 BLE_GAP_AdvDataParams_T@@@typedef struct BLE_GAP_AdvDataParams_T { uint8_t advLen; uint8_t advData[BLE_GAP_ADV_MAX_LENGTH]; } BLE_GAP_AdvDataParams_T; Structure for configuring advertising data. Field Description advLen Length...","GUID-EBCB9824-5628-413E-8F03-5BFFD9052C0B.html@@@1.1.2.1.2.4.28 GATTS_UpdateEncDataKeyMatl@@@uint16_t GATTS_UpdateEncDataKeyMatl (uint16_t connHandle, uint8_t *p_key, uint8_t *p_iv); Updates the new encrypted data key material for a GATT client. Parameter Description [in] connHandle...","GUID-EBCF07C3-D168-488F-8566-35F2B8247CC8.html@@@1.1.2.1.1.5.5 GAP PHY Update Procedure@@@Example demonstrating the central device initiating a PHY update procedure, triggered by the peer device Example demonstrating the central device initiating a PHY update procedure, triggered...","GUID-EC150A1E-BE2C-4D64-9E65-E0C916721C24.html@@@1.1.2.1.1.3.30 BLE_GAP_EvtPhyUpdate_T@@@typedef struct BLE_GAP_EvtPhyUpdate_T { uint16_t connHandle; uint8_t status; uint8_t txPhy; uint8_t rxPhy; }BLE_GAP_EvtPhyUpdate_T; Structure for BLE_GAP_EVT_PHY_UPDATE event. Field Description...","GUID-EC15A075-E242-42DD-8E5A-738EB3C8CD49.html@@@1.1.2.3.4.1.3 Structures@@@BLE_OTAPC_Event_T BLE OTA profile callback event structure. BLE_OTAPC_EventCb_T Callback type for BLE OTA (Over-The-Air) profile events. BLE_OTAPC_EventField_T Union of BLE OTA profile callback event...","GUID-EC76D2B4-D7A9-430C-A3AE-AFE5B8D1BC3F.html@@@2.1.4.4 Service Characteristics@@@This section contains characteristics and behavior that are defined in the OTA procedures...","GUID-EC775209-0B45-4AD8-AEDA-73E8D99548C9.html@@@1.1.1.4.5 Appendix 1: Two implementations of BT_PRIORITY signal@@@Static Priority Design : It is either high or low during BT_ACTIVE asserted for Tx or Rx operation. Time-Shared Priority Design : It is either high or low for a typical 20 \u00B5s duration after BT_ACTIVE...","GUID-ECB87FD6-90D4-43FA-B6EB-E518F4E60998.html@@@1.1.2.1.1.4.29 BLE_GAP_ReadPhy@@@uint16_t BLE_GAP_ReadPhy (uint16_t connHandle, uint8_t *p_txPhy, uint8_t *p_rxPhy); Reads the current transmitter PHY and receiver PHY on the specified connection. Parameter Description [in]...","GUID-ECE27B97-8EA4-412F-9E73-83DD2201E6AB.html@@@1.1.2.1.1.4.33 BLE_GAP_RemoteConnParamsReqReply@@@uint16_t BLE_GAP_RemoteConnParamsReqReply (uint16_t connHandle, BLE_GAP_ConnParams_T *p_connParams); Replies to an LE remote connection parameters request event if the device accepts the remote...","GUID-ECF6667D-37E2-4ABC-A1F7-1F478F592632.html@@@1.1.2.1.2.3.25 GATTC_WriteParams_T@@@typedef struct GATTC_WriteParams_T { uint16_t charHandle; uint16_t charLength; uint8_t charValue[BLE_ATT_MAX_MTU_LEN - ATT_WRITE_HEADER_SIZE]; uint8_t writeType; uint16_t valueOffset; uint8_t flags; }...","GUID-ED356ED3-F65A-4B88-B6F9-126A2CD2632B.html@@@1.1.2.1.4.3.10 BLE_SMP_EvtInputScOobData_T@@@typedef struct BLE_SMP_EvtInputScOobData_T { uint16_t connHandle; } BLE_SMP_EvtInputScOobData_T; Structure for BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST event. Field Description connHandle Connection...","GUID-ED7895AF-7144-4B3A-94C7-8382A504AC04.html@@@1.1.2.3.7.1.4.8 BLE_TRSPC_SendVendorCommand@@@uint16_t BLE_TRSPC_SendVendorCommand (uint16_t connHandle, uint8_t commandID, uint8_t commandLength, uint8_t *p_commandPayload); Sends a vendor-specific command over the BLE connection. Parameter...","GUID-ED9B43CD-CA61-493A-A1A1-08FC51907A92.html@@@1.1.2.1.2.4.14 GATTS_ConfigureBuildInService@@@uint16_t GATTS_ConfigureBuildInService (GATTS_GattServiceOptions_T *p_gattServiceOptions); Configures the built-in GATT service. This function allows enabling or disabling the optional &quot;GATT Service&quot...","GUID-EDA4A5F4-7295-4171-B84F-6806D22A050A.html@@@1.1.2.2.3.3.3 BLE_DD_Config_T@@@typedef struct BLE_DD_Config_T { unsigned int waitForSecurity: 1 ; unsigned int initDiscInCentral: 1 ; unsigned int initDiscInPeripheral: 1 ; unsigned int disableConnectedDisc: 1 ; unsigned int...","GUID-EE4B3AAA-E8CE-4C5E-B442-B4916FE11C43.html@@@1.1.2.1.4.4.1 BLE_SMP_AcceptDebugKey@@@uint16_t BLE_SMP_AcceptDebugKey ( void ); Accepts the use of the BLE SMP debug key during the pairing procedure. Invoking this function will prohibit the use of BLE_SMP_EnableDebugMode . Return value...","GUID-EE92BEC2-BE01-427D-9F26-EDC6B82187AE.html@@@1.1.2.1.1.3.54 BLE_GAP_SyncSetDev_T@@@typedef struct BLE_GAP_SyncSetDev_T { BLE_GAP_Addr_T advAddr; uint8_t advSid; }BLE_GAP_SyncSetDev_T; Structure for configuring synchronization device parameters. Field Description advAddr Advertiser...","GUID-EEC87BE4-9397-4DE3-B2A3-A61C788AA4DE.html@@@1.1.2.3.2.1.3 Structures@@@BLE_ANPC_CharList_T Structure representing the characteristic list. BLE_ANPC_DescInfo_T Structure representing descriptor information. BLE_ANPC_DescList_T Structure representing the descriptor list...","GUID-EF18ADE6-A58A-4BAE-87EC-4B213E7F0858.html@@@1.1.2.3.3.1.2.7 BLE_HOGPS_EvtHostSuspendExit_T@@@typedef struct BLE_HOGPS_EvtHostSuspendExit_T { uint16_t connHandle; } BLE_HOGPS_EvtHostSuspendExit_T; Structure for BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND event. Field Description connHandle The...","GUID-EF27C809-6827-4593-880E-F74C3B3CACC3.html@@@1.1.2.2.5.2.3.1 MW_DFU_Config@@@uint16_t MW_DFU_Config (MW_DFU_Info_T *p_dfuInfo); Configures the device information for the Device Firmware Update (DFU) process. Parameter Description [in] p_dfuInfo Pointer to the structure...","GUID-EF3C2DEB-43F8-4387-9DBE-25B3282EEDC1.html@@@1.1.2.3.2.1.1 Defines@@@ANPC category identifiers Defines the category identifiers. ANPC command definitions Defines the ANPC commands. ANPC error codes Defines error code for ANPC. ANPC maximum descriptor count Defines the...","GUID-EF5FEC6C-4355-4A0A-9679-479982D680D3.html@@@1.1.2.1.1.3.47 BLE_GAP_ScanFilterConfig_T@@@typedef struct BLE_GAP_ScanFilterConfig_T { uint8_t nameFilterEnable : 1 ; uint8_t svcDataFilterEnable : 1 ; uint8_t msdFilterEnable : 1 ; BLE_GAP_ScanFilterName_T nameFilter...","GUID-EFFD47A0-9C99-451C-91F9-8C5744DF135E.html@@@1.1.2.3.2.1.3.1 BLE_ANPC_CharList_T@@@typedef struct BLE_ANPC_CharList_T { uint16_t attrHandle; uint8_t property; uint16_t charHandle; }BLE_ANPC_CharList_T; Structure representing the characteristic list. Field Description attrHandle...","GUID-F01EB0D5-B6A8-4A3A-91B0-26EA8CB86EC2.html@@@1.1.2.3.5.2.2.2 BLE_PXPR_EventId_T@@@typedef enum BLE_PXPR_EventId_T { BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND = 0x00U , BLE_PXPR_EVT_IAS_ALERT_LEVEL_WRITE_IND, BLE_PXPR_EVT_ERR_UNSPECIFIED_IND }BLE_PXPR_EventId_T; Enumeration for BLE PXP...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F05E3FE5-5CC2-4C03-AF92-28FEA6D7A61A.html@@@1.1.2.3.1.1.2.1 BLE_ANCS_ActionId_T@@@typedef enum BLE_ANCS_ActionId_T { BLE_ANCS_ACTION_ID_POSITIVE = 0 , BLE_ANCS_ACTION_ID_NEGATIVE, BLE_ANCS_ACTION_ID_MAX } BLE_ANCS_ActionId_T; Identifiers for possible actions on iOS notifications...","GUID-F0817153-2496-48D4-AC97-ACA4F0A737FB.html@@@1.1.2.1.7.2.1 BLE_DTM_TransmitterTestParams_T@@@typedef struct BLE_DTM_TransmitterTestParams_T { uint8_t txChannel; uint8_t testDataLen; uint8_t packetPayload; uint8_t phy; int8_t transmitPowerLevel; } BLE_DTM_TransmitterTestParams_T; Structure for...","GUID-F088B24A-A76B-4DC5-8573-6D88B1467985.html@@@1.1.2.1.2.4.25 GATTS_SetPreferredMtu@@@uint16_t GATTS_SetPreferredMtu (uint16_t preferredMtuPeriph, uint16_t preferredMtuCentral); Configures the preferred ATT MTU size for the GATT Server. By default, BLE_ATT_MAX_MTU_LEN is used to...","GUID-F10F9672-17B3-445B-9673-F6E73BFCA3C0.html@@@1.1.2.3.4.1.1.4 OTAPC image type definitions@@@#define BLE_OTAPC_IMG_TYPE_FW ( 1U &lt;&lt; 0U ) Defines different types of OTA (Over the Air) Programming Client images. Macro Description BLE_OTAPC_IMG_TYPE_FW Firmaware image type...","GUID-F16C2879-AA63-4A0A-A77C-BD2455FC1940.html@@@1.1.2.3.6.1.4.3 BLE_TRCBPS_DisconnectReq@@@uint16_t BLE_TRCBPS_DisconnectReq (uint16_t connHandle); Issue an L2CAP CoC disconnect request for a TRCBP Data pipe. Parameter Description [in] connHandle Connection handle. Return value Description...","GUID-F19B8DC2-01F2-4723-9719-D0081069C2AB.html@@@1.1.2.2.3.5.1 Register Service Information for Discovery@@@Example demonstrating how to initialize and register a discovered service with the BLE_DD module...","GUID-F1E48042-92F7-49F3-8566-D2E80B39AE1C.html@@@1.1.2.3.3.1.2.5 BLE_HOGPS_EvtBootReportWrite_T@@@typedef struct BLE_HOGPS_EvtBootReportWrite_T { uint16_t connHandle; uint16_t length; uint16_t offset; uint8_t *p_data; } BLE_HOGPS_EvtBootReportWrite_T; Structure for...","GUID-F1E7AEA2-26F2-4D04-BA61-EA9998D482BF.html@@@1.1.2.1.1.1.57 Scan window@@@#define BLE_GAP_SCAN_WINDOW_MIN 0x0004 #define BLE_GAP_SCAN_WINDOW_MAX 0x4000 Defines the range of LE scan windows. The window is specified in units of 0.625 ms. Macro Description...","GUID-F20333E5-D745-4CE3-A651-8FC5525194ED.html@@@1.1.2.1.1.1.35 Maximum periodic advertising fragment data length@@@#define BLE_GAP_PERIODIC_ADV_FRAGMENT_MAX_LENGTH 0xF7 Defines the maximum data length for a single fragment of periodic advertising data. Macro Description BLE_GAP_PERIODIC_ADV_FRAGMENT_MAX_LENGTH...","GUID-F2B79C4B-C9B0-4E6E-8BCB-27F5C6A822DA.html@@@1.1.2.3.7.2.4 Functions@@@BLE_TRSPS_EventRegister Registers a callback function for BLE Transparent Profile server events. BLE_TRSPS_GetDataLength Retrieves the length of data queued for transmission. BLE_TRSPS_GetData...","GUID-F3137FC1-4C33-4502-8E80-74C16C90018A.html@@@2.2.3.1.1 Manufacturer Specific Data or Service Data AD Types@@@While the Transparent Client in the GAP Discoverable Mode, the Transparent Server might include the Manufacturer Specific Data or Service Data defined in [3] AD type field of the advertising data...","GUID-F3177CD0-E008-4DCD-AA8E-40F6DC495A8A.html@@@1.1.2.3.4.2.2.1 BLE_OTAPS_EventId_T@@@typedef enum BLE_OTAPS_EventId_T { BLE_OTAPS_EVT_UPDATE_REQ, BLE_OTAPS_EVT_START_IND, BLE_OTAPS_EVT_UPDATING_IND, BLE_OTAPS_EVT_UPDATING_REQ, BLE_OTAPS_EVT_COMPLETE_IND, BLE_OTAPS_EVT_RESET_IND...","GUID-F3A64F93-484B-4FA8-819B-B7D666E67511.html@@@1.1.2.2.4.3.7 BLE_SCM_EvtServiceChange_T@@@typedef struct BLE_SCM_EvtServiceChange_T { uint16_t connHandle; uint16_t scStartHandle; uint16_t scEndHandle; } BLE_SCM_EvtServiceChange_T; Structure for BLE_SCM_EVT_SVC_CHANGE event. Field...","GUID-F3CA1786-71DD-4134-AF43-D997F385EC0A.html@@@1.1.2.3.4.1.4.4 BLE_OTAPC_EventRegister@@@void BLE_OTAPC_EventRegister (BLE_OTAPC_EventCb_T bleOtapcRoutine); Registers a callback function for the BLE OTA profile client events. Parameter Description [in] bleOtapcRoutine The callback...","GUID-F3DCBB1F-B83D-4098-A52E-83A12439BB9F.html@@@1.1.2.1.2.4.8 GATTC_Init@@@uint16_t GATTC_Init (uint16_t configuration); Initialize the GATT Client module. The GATT Server must be initialized before this module. Parameter Description [in] configuration A bit-field...","GUID-F410F32F-5787-4B0A-93AB-2EBF3F2E811F.html@@@2.3.4.3 Characteristic Discovery@@@As required by GATT, the Client shall be tolerant of additional optional characteristics in the service records of services used with this profile. When a characteristic that can be indicated or...","GUID-F432743F-660B-43C4-8C64-E04070480B51.html@@@1.1.2.1.8.2.1 HCI_CmdCbId_T@@@typedef enum HCI_CmdCbId_T { HCI_CMD_RESET, HCI_CMD_CUSTOM }HCI_CmdCbId_T; Type of HCI command that application implement. Enumerator Description HCI_CMD_RESET HCI Reset Command. HCI_CMD_CUSTOM HCI...","GUID-F51ECE98-1134-4AC3-81B6-8740A8476F15.html@@@2.4.4.1 Response Code operation@@@The Response Code operation is used by server to notify the result of operation issued from client. The OTACP Response Code is variable length and the format is defined in Table 4.1. Table 4.1...","GUID-F5762AE4-DAC6-4A98-B46E-0FAFD2E158CD.html@@@1.1.2.1.1.4.15 BLE_GAP_ExtAdvInit@@@uint16_t BLE_GAP_ExtAdvInit ( void ); Initializes the BLE GAP extended advertising module. BLE_GAP_AdvInit must be called prior to enabling this module. Return value Description MBA_RES_SUCCESS...","GUID-F57E9E28-014E-423E-87AD-5920EEF317A5.html@@@1.1.2.1.2.4.24 GATTS_ServiceChanged@@@uint16_t GATTS_ServiceChanged ( void ); Enables the service change indication and notifies clients about changes to the service table. This function should be called after services have been added or...","GUID-F5833D7B-8F50-4922-AFA5-1D144CB8F4F0.html@@@1.1.2.1.6.3.10 BT_SYS_PtaGetWlanStatusCb_T@@@typedef bool (*BT_SYS_PtaGetWlanStatusCb_T)( void ); Callback type for retrieving WLAN active status in PTA. Parameter Description true Indicates that WLAN is currently active. false Indicates that...","GUID-F5A27160-65F1-4CF8-ACB1-237AC4B3F956.html@@@2.2.4.5 Transparent Procedures@@@The transparent procedures provide the standard methods by using the features of the Transparent Service [1] . Table 4.5 shows the transparent procedure requirements of this profile: Table 4.5...","GUID-F5D6C300-ED66-4729-9875-0B01264BC5EA.html@@@1.1.2.1.1.4.56 BLE_GAP_SetLocalPrivacy@@@uint16_t BLE_GAP_SetLocalPrivacy (bool enable, BLE_GAP_LocalPrivacyParams_T *p_privacyParams); Configures privacy parameters. Local Privacy settings cannot be changed while advertising, scanning, or...","GUID-F5E6B406-90BB-40EA-925B-D0467D3A06F2.html@@@1.1.2.1.1.4.51 BLE_GAP_SetExtScanningEnable@@@uint16_t BLE_GAP_SetExtScanningEnable (uint8_t mode, BLE_GAP_ExtScanningEnable_T *p_enable); Enables or disables extended scanning. If scanning is already enabled and this API is called with &apos;enable&apos...","GUID-F64F1EB2-BF94-400B-919D-9260690EF1D8.html@@@1.1.2.3.4.3.1 Over The Air Profile Server Role Procedure@@@Example demonstrating the initialization process. Example demonstrating the firmware update request process. Example demonstrating the firmware update start process. Example demonstrating the firmware...","GUID-F6D48068-EBA0-425F-8502-413E95E3ABC0.html@@@1.1.2.1.8.1 HCI Defines@@@Status of HCI event Status of HCI event...","GUID-F6E3FA78-163A-4D0F-A49E-A898D0FB995F.html@@@1.1.2.2.3.4.1 BLE_DD_BleEventHandler@@@void BLE_DD_BleEventHandler (BLE_DD_Config_T *p_config, STACK_Event_T *p_stackEvent); Handles BLE events by passing them to the BLE Device Discovery (BLE_DD) module. This function must be called for...","GUID-F6E60391-56F0-46B8-A383-2A674277A894.html@@@1.1.2.1.1.2 Enums@@@BLE_GAP_EventId_T Enumeration of GAP events delivered to application from BLE Stack...","GUID-F72D05E4-7B2D-4795-8E0A-94C61C66CFFF.html@@@1.1.2.3.2.2.3.4 BLE_ANPS_EvtAncpWriteInd_T@@@typedef struct BLE_ANPS_EvtAncpWriteInd_T { uint16_t connHandle; uint8_t cmdId; uint8_t catId; }BLE_ANPS_EvtAncpWriteInd_T; Structure for the BLE_ANPS_EVT_ANCP_WRITE_IND event. Field Description...","GUID-F76D628B-DB74-4992-A1DE-61A2FCCE2AB3.html@@@2.4.1.5 Byte Transmission Order@@@All characteristics used with this service shall be transmitted with the least significant octet first (i.e., little endian). The least significant octet is identified in the characteristic...","GUID-F77975AB-08AC-4056-A8CC-2624E401FCE0.html@@@1.1.2.1.1.4.46 BLE_GAP_SetDevToPeriAdvList@@@uint16_t BLE_GAP_SetDevToPeriAdvList (uint8_t num, BLE_GAP_SyncSetDev_T *p_syncSetDev); Adds one or more devices to the Periodic Advertiser list. Parameter Description [in] num Number of devices to be...","GUID-F8994C4E-EF19-4841-A2A1-D92A86AF9821.html@@@2.3.2.2 Role/Service Relationships@@@The following diagram illustrates the relationships between service and profile roles. A Transparent Credit Based Server shall instantiate the Transparent Credit Based Service (TRCBS) [1] . As shown...","GUID-F92B291D-63DD-4919-97C7-67826454E955.html@@@1.1.2.3.2.1.3.8 BLE_ANPC_EvtNewAlertInd_T@@@typedef struct BLE_ANPC_EvtNewAlertInd_T { uint16_t connHandle; uint8_t categoryId; uint8_t numOfNewAlert; uint16_t receivedLength; uint8_t *p_receivedValue; }BLE_ANPC_EvtNewAlertInd_T; Structure for...","GUID-F94687EA-DFF0-424A-A1B5-E8A5D1282A4C.html@@@1.1.2.1.3.1.10 L2CAP SPSM dynamic range@@@#define BLE_L2CAP_SPSM_DYNAMIC_MIN 0x0080 #define BLE_L2CAP_SPSM_DYNAMIC_MAX 0x00ff Defines the range for Simplified Protocol/Service Multiplexer (SPSM) values used in dynamic allocation. Macro...","GUID-F9473BB2-15E4-4CD2-98FF-9B9F158A16E1.html@@@1.1.2.3.4.2.3.1 BLE_OTAPS_EventCb_T@@@typedef void (*BLE_OTAPS_EventCb_T)(BLE_OTAPS_Event_T *p_event); Type definition for the BLE OTA profile event callback function. This callback function is used to send BLE OTA profile evenvts to the...","GUID-F96A0912-4F34-4B51-B19D-9D985FFD3ED0.html@@@1.1.2.3.6.1.4.9 BLE_TRCBPS_SendData@@@uint16_t BLE_TRCBPS_SendData (uint16_t connHandle, uint16_t len, uint8_t *p_data); Send data through the BLE Transparent Credit Based Profile Data pipe. Parameter Description [in] connHandle...","GUID-F970E2B9-F1A5-4AD4-9AFE-7560E6800B32.html@@@1.1.2.3.5.2.3 Structures@@@BLE_PXPR_EventField_T Union of BLE Proximity Profile Reporter callback event data types. BLE_PXPR_EventCb_T Type definition for the callback function used by the BLE PXP Reporter...","GUID-F9863DBB-EB8B-44A5-BC4F-37ECE5F61362.html@@@1.1.2.1.1.3.4 BLE_GAP_CharAppearance_T@@@typedef struct BLE_GAP_CharAppearance_T { uint16_t appearance; } BLE_GAP_CharAppearance_T; Structure for the Appearance characteristic containing the appearance value. Field Description appearance...","GUID-F9AB5FF3-9059-497C-9F6C-E68EF7C0CD49.html@@@1.1.2.3.6.1.1.3 TRCBPS vendor opcodes@@@#define BLE_TRCBPS_VENDOR_OPCODE_MIN ( 0x20U ) #define BLE_TRCBPS_VENDOR_OPCODE_MAX ( 0xFFU ) Defines vendor-specific command opcodes for the control channel of the BLE Transparent Credit-Based...","GUID-F9ADA7E5-D2F4-4AC7-B70F-57DF32F96756.html@@@1.1.2.1.1.3.11 BLE_GAP_CreateSync_T@@@typedef struct BLE_GAP_CreateSync_T { uint8_t options; uint8_t advSid; BLE_GAP_Addr_T advAddr; uint16_t skip; uint16_t syncTimeout; }BLE_GAP_CreateSync_T; Structure for creating synchronization with...","GUID-FA02313D-B212-4821-9D59-6032A7231126.html@@@1.1.2.1.2.4.12 GATTC_Write@@@uint16_t GATTC_Write (uint16_t connHandle, GATTC_WriteParams_T *p_writeParams); Initiates a write operation from the GATT Client to the GATT Server. Use this API to write a Characteristic Value or a...","GUID-FA186D8B-2D1E-448A-B617-68765880B0A0.html@@@1.1.2.3.1.1.1 Defines@@@ANCS error codes Defines error code for ANCS. ANCS attribute lengths Defines maximum lengths of various decoded attributes...","GUID-FA1AB790-BF05-4FBA-B346-9D4CB88158DB.html@@@2.4.4 OTA Control Operations@@@...","GUID-FA20A03C-0530-4F57-9579-5F0F093A89E7.html@@@1.1.2.1.2.3.13 GATT_EvtRead_T@@@typedef struct GATT_EvtRead_T { uint16_t connHandle; uint16_t attrHandle; uint8_t readType; uint16_t readOffset; } GATT_EvtRead_T; Structure for GATTS_EVT_READ event. Field Description connHandle...","GUID-FA222120-9EA4-4795-BA34-5E71E8A528FF.html@@@1.1.2.3.1.1.2.4 BLE_ANCS_NtfyAttrId_T@@@typedef enum BLE_ANCS_NtfyAttrId_T { BLE_ANCS_NTFY_ATTR_ID_APP_IDENTIFIER = 0 , BLE_ANCS_NTFY_ATTR_ID_TITLE, BLE_ANCS_NTFY_ATTR_ID_SUBTITLE, BLE_ANCS_NTFY_ATTR_ID_MESSAGE...","GUID-FA4ACECC-5F62-43F1-8D67-FFCF66A0E232.html@@@1.1.2.3.4.1.3.2 BLE_OTAPC_EventCb_T@@@typedef void (*BLE_OTAPC_EventCb_T)(BLE_OTAPC_Event_T *p_event); Callback type for BLE OTA (Over-The-Air) profile events. This callback function is used to forward BLE OTA profile events to the...","GUID-FAB28CA7-88E0-4F93-9D84-05D49E547EE8.html@@@1.1.2.1.3.3.3 BLE_L2CAP_EvtCbAddCreditsInd_T@@@typedef struct BLE_L2CAP_EvtCbAddCreditsInd_T { uint8_t leL2capId; uint16_t credits; } BLE_L2CAP_EvtCbAddCreditsInd_T; Structure for BLE_L2CAP_EVT_CB_ADD_CREDITS_IND event. Field Description leL2capId...","GUID-FAE1946F-5351-4A48-A484-55B3ACF77278.html@@@1.1.2.1.3.3.6 BLE_L2CAP_EvtCbDiscInd_T@@@typedef struct BLE_L2CAP_EvtCbDiscInd_T { uint8_t leL2capId; } BLE_L2CAP_EvtCbDiscInd_T; Structure for BLE_L2CAP_EVT_CB_DISC_IND event. Field Description leL2capId Identifier for the L2CAP session...","GUID-FAE65EA8-602E-4A67-B015-ED5EACBDBFC0.html@@@1.1.2.1.2.4.13 GATTS_AddService@@@uint16_t GATTS_AddService (GATTS_Service_T *p_service, uint8_t numAttributes); Registers a service with the GATT server. The start handle of the service being registered must be greater than...","GUID-FB01DD07-7334-4AC6-A5F3-4918D4B2EA88.html@@@1.1.2.1.1.1.23 Initiator filter policies@@@#define BLE_GAP_INIT_FP_FAL_NOT_USED 0x00 #define BLE_GAP_INIT_FP_FAL_USED 0x01 Defines the initiator filter policies. Macro Description BLE_GAP_INIT_FP_FAL_NOT_USED Filter Accept List is not used for...","GUID-FB39E13F-2D4C-4EBC-808D-A11E179590FF.html@@@1.1.2.2.5.1.2.5 MW_AES_CcmEncryptInit@@@uint16_t MW_AES_CcmEncryptInit (MW_AES_Ctx_T * p_ctx, uint8_t *p_aesKey, uint8_t *p_nonce, uint8_t nonceSz, uint8_t tagSz, uint8_t *p_aad, uint16_t aadSz, uint16_t dataSz); Initializes AES CCM...","GUID-FB430BFE-A9A9-473D-A588-1240BBD25ADD.html@@@1.1.2.1.1.1 Defines@@@Address length Defines the maximum length of a Bluetooth address. Address types Defines the different types of BLE device addresses. Advertising channels Defines the advertising channel indices that...","GUID-FB5CD0DF-1607-4F63-8A54-D68A0AFE0EE4.html@@@1.1.2.1.7.3.1 BLE_DTM_EndTest@@@uint16_t BLE_DTM_EndTest (uint16_t *p_packetCount, int8_t *p_avgRssi); Stops any ongoing test. BLE_DTM_Init must be called before using this function. Parameter Description [out] p_packetCount Pointer...","GUID-FB6853A4-4CF2-4C56-9BF8-F617610066E1.html@@@1.1.2.3.3.1.3.7 BLE_HOGPS_SendKeyboardInputReport@@@uint16_t BLE_HOGPS_SendKeyboardInputReport (uint16_t connHandle, uint8_t *p_keyCodeArray); Sends a HID keyboard input report. This function transmits a report containing keyboard keypress information...","GUID-FBBB616D-45B7-4D5A-BD0A-C931F07DB126.html@@@2.2.4.3 Characteristic Discovery@@@As required by GATT, the Transparent Client shall be tolerant of additional optional characteristics in the service records of services used with this profile. When a characteristic which can be...","GUID-FBC5CD0B-E002-441A-95B2-67D5D52D0E56.html@@@1.1.2.1.2.4.23 GATTS_SendWriteResponse@@@uint16_t GATTS_SendWriteResponse (uint16_t connHandle, GATTS_SendWriteRespParams_T *p_respParams); Sends a write response from the GATT Server. This function sends a response for write, prepare write...","GUID-FBCEBC40-FB7A-4329-A779-7AB225D71C2D.html@@@1.1.2.1.3.1.7 L2CAP minimum MTU size@@@#define BLE_L2CAP_MIN_MTU_SIZE 23 Defines the minimum size for the L2CAP Maximum Transmission Unit (MTU) in bytes. Macro Description BLE_L2CAP_MIN_MTU_SIZE Minimum size of a L2CAP MTU in bytes...","GUID-FC15B860-F5C7-42CE-B4C2-46DB9BA8F6EC.html@@@1.1.2.1.4.3.19 BLE_SMP_SecKeys_T@@@typedef struct BLE_SMP_SecKeys_T { BLE_SMP_EncInfo_T encInfo; BLE_SMP_IdInfo_T idInfo; BLE_SMP_SignInfo_T signInfo; }BLE_SMP_SecKeys_T; Structure for storing various security keys. Field Description...","GUID-FCBE286E-6955-4E6A-B673-29657A32D2FC.html@@@1.1.2.3.6.2.3 Transparent Credit Based Profile Disconnection Procedure@@@Example demonstrating client-initiated disconnection of the Transparent Credit Based Profile. \u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 Example demonstrating server-initiated disconnection of the Transparent Credit Based Profile...","GUID-FCD9FB33-76F7-47F9-87FF-C19DF80C6059.html@@@1.1.2.3.2.1.1.3 ANPC error codes@@@#define BLE_ANPC_ERRCODE_COMMAND_NOT_SUPPORTTED ( 0xA0 ) Defines error code for ANPC. Macro Description BLE_ANPC_ERRCODE_COMMAND_NOT_SUPPORTTED Error code for unsupported command...","GUID-FCF16D82-15AC-49C3-B122-5A3B9DE4D5BD.html@@@1.1.2.3.4.1.3.9 BLE_OTAPC_EvtSecReq_T@@@typedef struct BLE_OTAPC_EvtSecReq_T { uint16_t connHandle; } BLE_OTAPC_EvtSecReq_T; Structure for the BLE_OTAPC_EVT_SEC_REQ event. Field Description connHandle Connection handle associated with this...","GUID-FD162E73-7074-4A35-BB46-74304A11C6C2.html@@@1.1.2.3.1.1.3.2 BLE_ANCS_DecodeAppAttrs_T@@@typedef struct BLE_ANCS_DecodeAppAttrs_T { uint8_t appId[BLE_ANCS_MAX_APPID_LEN]; uint8_t displayName[BLE_ANCS_MAX_APP_NAME_LEN]; } BLE_ANCS_DecodeAppAttrs_T; Structure containing information about...","GUID-FD421446-446E-4881-8545-936E69D4C93F.html@@@1.1.2.1.1.6.1 Categories of advertising APIs and events@@@The BLE LIB supports both legacy and extended advertising features. Since there are usage limitations defined by specification, the following tables list the legacy and extended advertising APIs and...","GUID-FD5A0CCB-124F-4D6D-B097-CE2626264B39.html@@@1.1.2.1.3.5.4 BLE_L2CAP_CbDiscReq@@@uint16_t BLE_L2CAP_CbDiscReq (uint8_t leL2capId); Issues a disconnect request for a credit-based connection channel. BLE_L2CAP_EVT_CB_DISC_IND is generated when a credit-based connection is...","GUID-FD615864-C2E2-4192-B2B6-691FFEE66F14.html@@@2.5.1.4 GATT Sub-Procedure Requirements@@@Requirements in this section represent a minimum set of requirements for a Server. Other GATT sub-procedures may be used if supported by both Client and Server. Table 1.1 summarizes additional GATT...","GUID-FD719156-DDEB-4935-A0CA-4CA9F0E129E8.html@@@1.1.2.1.1.1.54 Scan interval@@@#define BLE_GAP_SCAN_INTERVAL_MIN 0x0004 #define BLE_GAP_SCAN_INTERVAL_MAX 0x4000 Defines the range of LE scan intervals. The interval is specified in units of 0.625 ms. Macro Description...","GUID-FD79424A-5369-4CD7-9C75-0A398A514CFD.html@@@2.5.1.6 Error Codes@@@This service does not define any Attribute Protocol Application Error codes...","GUID-FD81F8BB-E2F8-4A41-91C6-A21E275FDD7B.html@@@1.1.2.3.1.1.3.6 BLE_ANCS_EventField_T@@@typedef union { BLE_ANCS_EvtDiscComplete_T evtDiscComplete; BLE_ANCS_EvtErrAttrBufInd_T evtErrAttrBufInd; BLE_ANCS_EvtErrRecomposeBufInd_T evtErrRecomposeBufInd; BLE_ANCS_EvtNtfyInd_T evtNtfyInd...","GUID-FDA471C1-3CC0-4E6D-91B8-9AC2EA1C1B9D.html@@@1.1.2.3.7.2.1.1 TRSPS maximum connection number@@@#define BLE_TRSPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR Defines the maximum number of concurrent connections. Macro Description BLE_TRSPS_MAX_CONN_NBR Maximum number of concurrent connections supported by...","GUID-FDB86148-19DF-47D0-B174-285483F431B3.html@@@1.1.2.1.4.3.6 BLE_SMP_EvtDisplayPasskeyReq_T@@@typedef struct BLE_SMP_EvtDisplayPasskeyReq_T { uint16_t connHandle; } BLE_SMP_EvtDisplayPasskeyReq_T; Structure for BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST event. Field Description connHandle Connection...","GUID-FEDCF493-9E2C-4689-B3FF-68292CB0F002.html@@@1.1.2.3.4.1.2 Enums@@@BLE_OTAPC_EventId_T Enumeration for BLE OTA profile callback events...","GUID-FF3E6D1B-03E4-465F-AF9E-B78443B28545.html@@@1.1.2.3.4.1.3.5 BLE_OTAPC_EvtConnectInd_T@@@typedef struct BLE_OTAPC_EvtConnectInd_T { uint16_t connHandle; } BLE_OTAPC_EvtConnectInd_T; Structure for the BLE_OTAPC_EVT_CONNECT_IND event. Field Description connHandle Connection handle...","cshelp.html@@@Context Sensitive Help@@@..."];
