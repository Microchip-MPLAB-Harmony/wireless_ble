var SearchFiles = ["GUID-1DE7F398-A485-4143-964B-2CB21E5F4B26.html","GUID-CFC8AE9F-F620-4D4D-9665-E08FFE0763EB.html","GUID-222749FE-01C5-43B6-A5C7-CD82B3FC7F5F.html","GUID-94489357-3C47-427B-84D1-73FC2ACC68FA.html",
							"GUID-94489357-3C47-427B-84D1-73FC2ACC68FA.html",
							"GUID-94489357-3C47-427B-84D1-73FC2ACC68FA.html",
							"GUID-94489357-3C47-427B-84D1-73FC2ACC68FA.html",
							"GUID-94489357-3C47-427B-84D1-73FC2ACC68FA.html",
							"GUID-9FB92A59-EC4A-4262-888E-E0B0651D0F34.html",
							"GUID-9227C855-DF4C-4541-9FE1-2608FF954E43.html","GUID-D5EE0E9F-016B-40BD-842B-1AE3B215DFE7.html","GUID-803DA8F9-04B4-421C-98AD-A68481F6AAF3.html","GUID-9781CD29-3C4B-41EE-8F98-355D2AA99482.html","GUID-5227CE98-4CCF-42B1-836D-B7F76470926E.html",
							"GUID-5227CE98-4CCF-42B1-836D-B7F76470926E.html",
							"GUID-5227CE98-4CCF-42B1-836D-B7F76470926E.html",
							"GUID-5227CE98-4CCF-42B1-836D-B7F76470926E.html",
							"GUID-ED5D88C1-E103-4686-876B-894A0EFE7BEA.html",
							"GUID-ED5D88C1-E103-4686-876B-894A0EFE7BEA.html",
							"GUID-ED5D88C1-E103-4686-876B-894A0EFE7BEA.html",
							"GUID-ED5D88C1-E103-4686-876B-894A0EFE7BEA.html",
							"GUID-65913859-C4F9-4AC9-9D7A-95E9FE9A3FAE.html",
							"GUID-65913859-C4F9-4AC9-9D7A-95E9FE9A3FAE.html",
							"GUID-65913859-C4F9-4AC9-9D7A-95E9FE9A3FAE.html",
							"GUID-65913859-C4F9-4AC9-9D7A-95E9FE9A3FAE.html",
							"GUID-9246E9D3-3AE7-46E9-BFED-C6B3F27B89C0.html",
							"GUID-9246E9D3-3AE7-46E9-BFED-C6B3F27B89C0.html",
							"GUID-9246E9D3-3AE7-46E9-BFED-C6B3F27B89C0.html",
							"GUID-9246E9D3-3AE7-46E9-BFED-C6B3F27B89C0.html",
							"GUID-B7FF758F-FF01-4A43-96BB-8F24898AC83A.html",
							"GUID-B7FF758F-FF01-4A43-96BB-8F24898AC83A.html",
							"GUID-B7FF758F-FF01-4A43-96BB-8F24898AC83A.html",
							"GUID-B7FF758F-FF01-4A43-96BB-8F24898AC83A.html",
							"GUID-4210AAC9-B1E4-444C-A6A3-03A6CC5D06B8.html",
							"GUID-4210AAC9-B1E4-444C-A6A3-03A6CC5D06B8.html",
							"GUID-4210AAC9-B1E4-444C-A6A3-03A6CC5D06B8.html",
							"GUID-4210AAC9-B1E4-444C-A6A3-03A6CC5D06B8.html",
							"GUID-75159796-FD3E-4289-9B54-EFC225A21F07.html",
							"GUID-75159796-FD3E-4289-9B54-EFC225A21F07.html",
							"GUID-75159796-FD3E-4289-9B54-EFC225A21F07.html",
							"GUID-75159796-FD3E-4289-9B54-EFC225A21F07.html",
							"GUID-77FBA4E4-37C0-49BA-A82B-453AF1695A6F.html",
							"GUID-77FBA4E4-37C0-49BA-A82B-453AF1695A6F.html",
							"GUID-77FBA4E4-37C0-49BA-A82B-453AF1695A6F.html",
							"GUID-77FBA4E4-37C0-49BA-A82B-453AF1695A6F.html",
							"GUID-D125471C-5A76-4F86-ADB3-9FCF160CA3F6.html",
							"GUID-D125471C-5A76-4F86-ADB3-9FCF160CA3F6.html",
							"GUID-D125471C-5A76-4F86-ADB3-9FCF160CA3F6.html",
							"GUID-D125471C-5A76-4F86-ADB3-9FCF160CA3F6.html",
							"GUID-5ABC0266-6BD2-424C-B8AB-3024AE2E9771.html",
							"GUID-5ABC0266-6BD2-424C-B8AB-3024AE2E9771.html",
							"GUID-5ABC0266-6BD2-424C-B8AB-3024AE2E9771.html",
							"GUID-5ABC0266-6BD2-424C-B8AB-3024AE2E9771.html",
							"GUID-287F825E-EA5B-4D02-A42E-FDE1D710F29D.html",
							"GUID-287F825E-EA5B-4D02-A42E-FDE1D710F29D.html",
							"GUID-287F825E-EA5B-4D02-A42E-FDE1D710F29D.html",
							"GUID-287F825E-EA5B-4D02-A42E-FDE1D710F29D.html",
							"GUID-D073EE7F-5D72-40E1-90B3-AFD7E6251190.html",
							"GUID-D073EE7F-5D72-40E1-90B3-AFD7E6251190.html",
							"GUID-D073EE7F-5D72-40E1-90B3-AFD7E6251190.html",
							"GUID-D073EE7F-5D72-40E1-90B3-AFD7E6251190.html",
							"GUID-F75D67E7-3C78-4367-B631-7FD48F2BB36F.html",
							"GUID-F75D67E7-3C78-4367-B631-7FD48F2BB36F.html",
							"GUID-F75D67E7-3C78-4367-B631-7FD48F2BB36F.html",
							"GUID-F75D67E7-3C78-4367-B631-7FD48F2BB36F.html",
							"GUID-F467F3DB-E3E2-418A-B9D7-57F837C6ED14.html",
							"GUID-F467F3DB-E3E2-418A-B9D7-57F837C6ED14.html",
							"GUID-F467F3DB-E3E2-418A-B9D7-57F837C6ED14.html",
							"GUID-F467F3DB-E3E2-418A-B9D7-57F837C6ED14.html",
							"GUID-137E846A-1589-4675-8F85-40CF6952DAE2.html",
							"GUID-137E846A-1589-4675-8F85-40CF6952DAE2.html",
							"GUID-137E846A-1589-4675-8F85-40CF6952DAE2.html",
							"GUID-137E846A-1589-4675-8F85-40CF6952DAE2.html",
							"GUID-211529DF-B4BE-48CF-90F6-674DA06FB3AA.html",
							"GUID-211529DF-B4BE-48CF-90F6-674DA06FB3AA.html",
							"GUID-211529DF-B4BE-48CF-90F6-674DA06FB3AA.html",
							"GUID-211529DF-B4BE-48CF-90F6-674DA06FB3AA.html",
							"GUID-A9AA820A-AE86-42C0-AA6A-C14E4601FC3A.html",
							"GUID-A9AA820A-AE86-42C0-AA6A-C14E4601FC3A.html",
							"GUID-A9AA820A-AE86-42C0-AA6A-C14E4601FC3A.html",
							"GUID-A9AA820A-AE86-42C0-AA6A-C14E4601FC3A.html",
							"GUID-38B81AE2-8A4B-4299-A15A-3188F9ECFCCB.html",
							"GUID-38B81AE2-8A4B-4299-A15A-3188F9ECFCCB.html",
							"GUID-38B81AE2-8A4B-4299-A15A-3188F9ECFCCB.html",
							"GUID-38B81AE2-8A4B-4299-A15A-3188F9ECFCCB.html",
							"GUID-D1727B19-D672-430F-B676-CA0A13328459.html",
							"GUID-D1727B19-D672-430F-B676-CA0A13328459.html",
							"GUID-D1727B19-D672-430F-B676-CA0A13328459.html",
							"GUID-D1727B19-D672-430F-B676-CA0A13328459.html",
							"GUID-02960201-36D8-4EDF-B29B-9C2AE1AAE636.html",
							"GUID-02960201-36D8-4EDF-B29B-9C2AE1AAE636.html",
							"GUID-02960201-36D8-4EDF-B29B-9C2AE1AAE636.html",
							"GUID-02960201-36D8-4EDF-B29B-9C2AE1AAE636.html",
							"GUID-9A760E1E-6773-414D-81F6-21AC574440D4.html",
							"GUID-9A760E1E-6773-414D-81F6-21AC574440D4.html",
							"GUID-9A760E1E-6773-414D-81F6-21AC574440D4.html",
							"GUID-9A760E1E-6773-414D-81F6-21AC574440D4.html",
							"GUID-2F260089-BD42-42F8-A2E0-94CAC5BA6A7C.html",
							"GUID-2F260089-BD42-42F8-A2E0-94CAC5BA6A7C.html",
							"GUID-2F260089-BD42-42F8-A2E0-94CAC5BA6A7C.html",
							"GUID-2F260089-BD42-42F8-A2E0-94CAC5BA6A7C.html",
							"GUID-11B15DBE-8783-4F2E-A56D-A2D55D359AB9.html",
							"GUID-11B15DBE-8783-4F2E-A56D-A2D55D359AB9.html",
							"GUID-11B15DBE-8783-4F2E-A56D-A2D55D359AB9.html",
							"GUID-11B15DBE-8783-4F2E-A56D-A2D55D359AB9.html",
							"GUID-4D05CBBF-8E4B-49B8-A1F1-D37781265701.html",
							"GUID-4D05CBBF-8E4B-49B8-A1F1-D37781265701.html",
							"GUID-4D05CBBF-8E4B-49B8-A1F1-D37781265701.html",
							"GUID-4D05CBBF-8E4B-49B8-A1F1-D37781265701.html",
							"GUID-1E8B41D5-7783-46F2-AD0F-B5013B9B85E3.html",
							"GUID-1E8B41D5-7783-46F2-AD0F-B5013B9B85E3.html",
							"GUID-1E8B41D5-7783-46F2-AD0F-B5013B9B85E3.html",
							"GUID-1E8B41D5-7783-46F2-AD0F-B5013B9B85E3.html",
							"GUID-22841F13-0C1E-45D6-92B9-482CF1CE964E.html",
							"GUID-22841F13-0C1E-45D6-92B9-482CF1CE964E.html",
							"GUID-22841F13-0C1E-45D6-92B9-482CF1CE964E.html",
							"GUID-22841F13-0C1E-45D6-92B9-482CF1CE964E.html",
							"GUID-FEB67452-1661-464C-A87F-684B2A692AA2.html",
							"GUID-FEB67452-1661-464C-A87F-684B2A692AA2.html",
							"GUID-FEB67452-1661-464C-A87F-684B2A692AA2.html",
							"GUID-FEB67452-1661-464C-A87F-684B2A692AA2.html",
							"GUID-109A4C82-A383-4BA8-8F76-6B104EC027D7.html",
							"GUID-109A4C82-A383-4BA8-8F76-6B104EC027D7.html",
							"GUID-109A4C82-A383-4BA8-8F76-6B104EC027D7.html",
							"GUID-109A4C82-A383-4BA8-8F76-6B104EC027D7.html",
							"GUID-4E590634-81F9-410A-9AAE-CE46E3D2FDB3.html",
							"GUID-4E590634-81F9-410A-9AAE-CE46E3D2FDB3.html",
							"GUID-4E590634-81F9-410A-9AAE-CE46E3D2FDB3.html",
							"GUID-4E590634-81F9-410A-9AAE-CE46E3D2FDB3.html",
							"GUID-D6D5C379-9EF8-479D-9876-8EB5E0D80C76.html",
							"GUID-D6D5C379-9EF8-479D-9876-8EB5E0D80C76.html",
							"GUID-D6D5C379-9EF8-479D-9876-8EB5E0D80C76.html",
							"GUID-D6D5C379-9EF8-479D-9876-8EB5E0D80C76.html",
							"GUID-B17ABA8D-3332-4FE6-8073-F5B99C0DECD7.html",
							"GUID-B17ABA8D-3332-4FE6-8073-F5B99C0DECD7.html",
							"GUID-B17ABA8D-3332-4FE6-8073-F5B99C0DECD7.html",
							"GUID-B17ABA8D-3332-4FE6-8073-F5B99C0DECD7.html",
							"GUID-549FBB04-5D87-4DBC-A89A-D42484219FD9.html",
							"GUID-549FBB04-5D87-4DBC-A89A-D42484219FD9.html",
							"GUID-549FBB04-5D87-4DBC-A89A-D42484219FD9.html",
							"GUID-549FBB04-5D87-4DBC-A89A-D42484219FD9.html",
							"GUID-CA33BD54-6372-40CE-9045-03F6CBD8B9BE.html",
							"GUID-CA33BD54-6372-40CE-9045-03F6CBD8B9BE.html",
							"GUID-CA33BD54-6372-40CE-9045-03F6CBD8B9BE.html",
							"GUID-CA33BD54-6372-40CE-9045-03F6CBD8B9BE.html",
							"GUID-BDB66CAB-6BE4-49CD-AF1A-6A6B0F0BA0E7.html",
							"GUID-BDB66CAB-6BE4-49CD-AF1A-6A6B0F0BA0E7.html",
							"GUID-BDB66CAB-6BE4-49CD-AF1A-6A6B0F0BA0E7.html",
							"GUID-BDB66CAB-6BE4-49CD-AF1A-6A6B0F0BA0E7.html",
							"GUID-948A9A73-48B2-42E4-A433-27915FAE25DD.html",
							"GUID-948A9A73-48B2-42E4-A433-27915FAE25DD.html",
							"GUID-948A9A73-48B2-42E4-A433-27915FAE25DD.html",
							"GUID-948A9A73-48B2-42E4-A433-27915FAE25DD.html",
							"GUID-5609585E-C1D0-49C8-AEC7-51A45E9E9370.html",
							"GUID-5609585E-C1D0-49C8-AEC7-51A45E9E9370.html",
							"GUID-5609585E-C1D0-49C8-AEC7-51A45E9E9370.html",
							"GUID-5609585E-C1D0-49C8-AEC7-51A45E9E9370.html",
							"GUID-F4479ED6-70C2-44A7-A4CD-980FD23D71AA.html",
							"GUID-F4479ED6-70C2-44A7-A4CD-980FD23D71AA.html",
							"GUID-F4479ED6-70C2-44A7-A4CD-980FD23D71AA.html",
							"GUID-F4479ED6-70C2-44A7-A4CD-980FD23D71AA.html",
							"GUID-7E060534-5AC3-4F33-8830-C410F4B8F2CD.html",
							"GUID-7E060534-5AC3-4F33-8830-C410F4B8F2CD.html",
							"GUID-7E060534-5AC3-4F33-8830-C410F4B8F2CD.html",
							"GUID-7E060534-5AC3-4F33-8830-C410F4B8F2CD.html",
							"GUID-D12D098A-019B-4831-921F-871C6757A8F2.html",
							"GUID-D12D098A-019B-4831-921F-871C6757A8F2.html",
							"GUID-D12D098A-019B-4831-921F-871C6757A8F2.html",
							"GUID-D12D098A-019B-4831-921F-871C6757A8F2.html",
							"GUID-7843B845-058A-4759-BC10-8DEF7B5190E7.html",
							"GUID-7843B845-058A-4759-BC10-8DEF7B5190E7.html",
							"GUID-7843B845-058A-4759-BC10-8DEF7B5190E7.html",
							"GUID-7843B845-058A-4759-BC10-8DEF7B5190E7.html",
							"GUID-A682F661-6CE0-427D-A3A8-2CE37D4A2818.html",
							"GUID-A682F661-6CE0-427D-A3A8-2CE37D4A2818.html",
							"GUID-A682F661-6CE0-427D-A3A8-2CE37D4A2818.html",
							"GUID-A682F661-6CE0-427D-A3A8-2CE37D4A2818.html",
							"GUID-F33C6774-78C4-4E78-906A-4B9DEEF61031.html",
							"GUID-F33C6774-78C4-4E78-906A-4B9DEEF61031.html",
							"GUID-F33C6774-78C4-4E78-906A-4B9DEEF61031.html",
							"GUID-F33C6774-78C4-4E78-906A-4B9DEEF61031.html",
							"GUID-0C9582BF-8469-4FF3-BB3B-A21E969B421B.html",
							"GUID-0C9582BF-8469-4FF3-BB3B-A21E969B421B.html",
							"GUID-0C9582BF-8469-4FF3-BB3B-A21E969B421B.html",
							"GUID-0C9582BF-8469-4FF3-BB3B-A21E969B421B.html",
							"GUID-3539A8AA-7029-4450-B077-5B732D664B49.html",
							"GUID-3539A8AA-7029-4450-B077-5B732D664B49.html",
							"GUID-3539A8AA-7029-4450-B077-5B732D664B49.html",
							"GUID-3539A8AA-7029-4450-B077-5B732D664B49.html",
							"GUID-A3A5085C-6B31-4A37-B61F-C84A11889F56.html",
							"GUID-A3A5085C-6B31-4A37-B61F-C84A11889F56.html",
							"GUID-A3A5085C-6B31-4A37-B61F-C84A11889F56.html",
							"GUID-A3A5085C-6B31-4A37-B61F-C84A11889F56.html",
							"GUID-F3489352-E969-49C3-8489-002752EF27F4.html",
							"GUID-F3489352-E969-49C3-8489-002752EF27F4.html",
							"GUID-F3489352-E969-49C3-8489-002752EF27F4.html",
							"GUID-F3489352-E969-49C3-8489-002752EF27F4.html",
							"GUID-EA8DD4FC-2DA5-413F-A5E4-4A95753E227C.html",
							"GUID-EA8DD4FC-2DA5-413F-A5E4-4A95753E227C.html",
							"GUID-EA8DD4FC-2DA5-413F-A5E4-4A95753E227C.html",
							"GUID-EA8DD4FC-2DA5-413F-A5E4-4A95753E227C.html",
							"GUID-8216BBBA-3AF3-493C-8EE5-5675C0B9C769.html",
							"GUID-8216BBBA-3AF3-493C-8EE5-5675C0B9C769.html",
							"GUID-8216BBBA-3AF3-493C-8EE5-5675C0B9C769.html",
							"GUID-8216BBBA-3AF3-493C-8EE5-5675C0B9C769.html",
							"GUID-B3FA4A15-5596-4AA7-BC86-26C22B80966A.html",
							"GUID-B3FA4A15-5596-4AA7-BC86-26C22B80966A.html",
							"GUID-B3FA4A15-5596-4AA7-BC86-26C22B80966A.html",
							"GUID-B3FA4A15-5596-4AA7-BC86-26C22B80966A.html",
							"GUID-B6D465F0-2F2D-428A-99BB-1D90DF3D5EFD.html",
							"GUID-B6D465F0-2F2D-428A-99BB-1D90DF3D5EFD.html",
							"GUID-B6D465F0-2F2D-428A-99BB-1D90DF3D5EFD.html",
							"GUID-B6D465F0-2F2D-428A-99BB-1D90DF3D5EFD.html",
							"GUID-479BE39B-3899-4437-A493-6F92604F64FB.html",
							"GUID-479BE39B-3899-4437-A493-6F92604F64FB.html",
							"GUID-479BE39B-3899-4437-A493-6F92604F64FB.html",
							"GUID-479BE39B-3899-4437-A493-6F92604F64FB.html",
							"GUID-EABF91D3-8F80-4F9B-9A82-64AED3AC1DA0.html",
							"GUID-EABF91D3-8F80-4F9B-9A82-64AED3AC1DA0.html",
							"GUID-EABF91D3-8F80-4F9B-9A82-64AED3AC1DA0.html",
							"GUID-EABF91D3-8F80-4F9B-9A82-64AED3AC1DA0.html",
							"GUID-5F91B9BC-EF22-411B-9A8A-549CC564550C.html",
							"GUID-5F91B9BC-EF22-411B-9A8A-549CC564550C.html",
							"GUID-5F91B9BC-EF22-411B-9A8A-549CC564550C.html",
							"GUID-5F91B9BC-EF22-411B-9A8A-549CC564550C.html",
							"GUID-F5EF94C8-7EF9-4674-AF16-103C1552EB5C.html",
							"GUID-F5EF94C8-7EF9-4674-AF16-103C1552EB5C.html",
							"GUID-F5EF94C8-7EF9-4674-AF16-103C1552EB5C.html",
							"GUID-F5EF94C8-7EF9-4674-AF16-103C1552EB5C.html",
							"GUID-E1089965-CD90-4A15-97BA-CF73180F2D1E.html",
							"GUID-E1089965-CD90-4A15-97BA-CF73180F2D1E.html",
							"GUID-E1089965-CD90-4A15-97BA-CF73180F2D1E.html",
							"GUID-E1089965-CD90-4A15-97BA-CF73180F2D1E.html",
							"GUID-60D569E9-7DB5-461E-BE14-3253A3D17DBB.html",
							"GUID-60D569E9-7DB5-461E-BE14-3253A3D17DBB.html",
							"GUID-60D569E9-7DB5-461E-BE14-3253A3D17DBB.html",
							"GUID-60D569E9-7DB5-461E-BE14-3253A3D17DBB.html",
							"GUID-2BE0DC64-65A6-4780-B9E7-82C465FD183C.html",
							"GUID-2BE0DC64-65A6-4780-B9E7-82C465FD183C.html",
							"GUID-2BE0DC64-65A6-4780-B9E7-82C465FD183C.html",
							"GUID-2BE0DC64-65A6-4780-B9E7-82C465FD183C.html",
							"GUID-2134D6D9-9339-488A-9386-3D130CCB7074.html",
							"GUID-2134D6D9-9339-488A-9386-3D130CCB7074.html",
							"GUID-2134D6D9-9339-488A-9386-3D130CCB7074.html",
							"GUID-2134D6D9-9339-488A-9386-3D130CCB7074.html",
							"GUID-926EB20E-CF11-41A7-AE40-02EF0533EA4F.html",
							"GUID-926EB20E-CF11-41A7-AE40-02EF0533EA4F.html",
							"GUID-926EB20E-CF11-41A7-AE40-02EF0533EA4F.html",
							"GUID-926EB20E-CF11-41A7-AE40-02EF0533EA4F.html",
							"GUID-A1FC1B73-D9E5-4EC9-91F2-F04EE7A5A522.html",
							"GUID-A1FC1B73-D9E5-4EC9-91F2-F04EE7A5A522.html",
							"GUID-A1FC1B73-D9E5-4EC9-91F2-F04EE7A5A522.html",
							"GUID-A1FC1B73-D9E5-4EC9-91F2-F04EE7A5A522.html",
							"GUID-33BBFEC3-6B4E-49C3-AD67-7C3036AA5D33.html",
							"GUID-33BBFEC3-6B4E-49C3-AD67-7C3036AA5D33.html",
							"GUID-33BBFEC3-6B4E-49C3-AD67-7C3036AA5D33.html",
							"GUID-33BBFEC3-6B4E-49C3-AD67-7C3036AA5D33.html",
							"GUID-B4C810AD-611A-4047-95ED-4820D83A76F2.html",
							"GUID-B4C810AD-611A-4047-95ED-4820D83A76F2.html",
							"GUID-B4C810AD-611A-4047-95ED-4820D83A76F2.html",
							"GUID-B4C810AD-611A-4047-95ED-4820D83A76F2.html",
							"GUID-706A21B2-17BC-4468-839C-04C97427E23A.html",
							"GUID-706A21B2-17BC-4468-839C-04C97427E23A.html",
							"GUID-706A21B2-17BC-4468-839C-04C97427E23A.html",
							"GUID-706A21B2-17BC-4468-839C-04C97427E23A.html",
							"GUID-80C9765D-2A0B-4D37-B051-2CB71C3BE226.html","GUID-ADCFB5AA-F06E-4ED9-9227-592A5CE40F39.html",
							"GUID-ADCFB5AA-F06E-4ED9-9227-592A5CE40F39.html",
							"GUID-ADCFB5AA-F06E-4ED9-9227-592A5CE40F39.html",
							"GUID-230368B0-FB2A-4967-A471-691387B35A9E.html","GUID-5B71FDB5-5345-4BCD-B102-6A5B5A06D284.html",
							"GUID-5B71FDB5-5345-4BCD-B102-6A5B5A06D284.html",
							"GUID-5B71FDB5-5345-4BCD-B102-6A5B5A06D284.html",
							"GUID-5B71FDB5-5345-4BCD-B102-6A5B5A06D284.html",
							"GUID-5D15C6DB-A2DC-4EE1-9397-A6CF26639487.html",
							"GUID-5D15C6DB-A2DC-4EE1-9397-A6CF26639487.html",
							"GUID-5D15C6DB-A2DC-4EE1-9397-A6CF26639487.html",
							"GUID-5D15C6DB-A2DC-4EE1-9397-A6CF26639487.html",
							"GUID-2DECEDC0-4E63-4998-8AFD-FE309AE95637.html",
							"GUID-2DECEDC0-4E63-4998-8AFD-FE309AE95637.html",
							"GUID-2DECEDC0-4E63-4998-8AFD-FE309AE95637.html",
							"GUID-2DECEDC0-4E63-4998-8AFD-FE309AE95637.html",
							"GUID-4597EBB6-7466-43FA-938B-F1CB146D52E9.html",
							"GUID-4597EBB6-7466-43FA-938B-F1CB146D52E9.html",
							"GUID-4597EBB6-7466-43FA-938B-F1CB146D52E9.html",
							"GUID-4597EBB6-7466-43FA-938B-F1CB146D52E9.html",
							"GUID-08A4BC00-5DC2-41AC-BBA4-834671358C68.html",
							"GUID-08A4BC00-5DC2-41AC-BBA4-834671358C68.html",
							"GUID-08A4BC00-5DC2-41AC-BBA4-834671358C68.html",
							"GUID-08A4BC00-5DC2-41AC-BBA4-834671358C68.html",
							"GUID-A58BBAEA-AAFF-4C51-ABF1-120EECB240FA.html",
							"GUID-A58BBAEA-AAFF-4C51-ABF1-120EECB240FA.html",
							"GUID-A58BBAEA-AAFF-4C51-ABF1-120EECB240FA.html",
							"GUID-A58BBAEA-AAFF-4C51-ABF1-120EECB240FA.html",
							"GUID-E210D053-5A6C-4E6F-8FAF-807AA8E75B98.html",
							"GUID-E210D053-5A6C-4E6F-8FAF-807AA8E75B98.html",
							"GUID-E210D053-5A6C-4E6F-8FAF-807AA8E75B98.html",
							"GUID-E210D053-5A6C-4E6F-8FAF-807AA8E75B98.html",
							"GUID-0F7411E2-184C-445C-8816-C8CBE16AEC51.html",
							"GUID-0F7411E2-184C-445C-8816-C8CBE16AEC51.html",
							"GUID-0F7411E2-184C-445C-8816-C8CBE16AEC51.html",
							"GUID-0F7411E2-184C-445C-8816-C8CBE16AEC51.html",
							"GUID-1EB98FD4-8A43-41F8-A54B-A73E2D99C0AF.html",
							"GUID-1EB98FD4-8A43-41F8-A54B-A73E2D99C0AF.html",
							"GUID-1EB98FD4-8A43-41F8-A54B-A73E2D99C0AF.html",
							"GUID-1EB98FD4-8A43-41F8-A54B-A73E2D99C0AF.html",
							"GUID-C66A00F9-4CA9-4FF7-BD54-851848665DDD.html",
							"GUID-C66A00F9-4CA9-4FF7-BD54-851848665DDD.html",
							"GUID-C66A00F9-4CA9-4FF7-BD54-851848665DDD.html",
							"GUID-C66A00F9-4CA9-4FF7-BD54-851848665DDD.html",
							"GUID-E13684D5-376D-4CA6-82D4-5A5218F1A8EB.html",
							"GUID-E13684D5-376D-4CA6-82D4-5A5218F1A8EB.html",
							"GUID-E13684D5-376D-4CA6-82D4-5A5218F1A8EB.html",
							"GUID-E13684D5-376D-4CA6-82D4-5A5218F1A8EB.html",
							"GUID-54AA20AC-CB4E-411A-A4B5-2F05CA4BD89F.html",
							"GUID-54AA20AC-CB4E-411A-A4B5-2F05CA4BD89F.html",
							"GUID-54AA20AC-CB4E-411A-A4B5-2F05CA4BD89F.html",
							"GUID-54AA20AC-CB4E-411A-A4B5-2F05CA4BD89F.html",
							"GUID-386E57A5-2117-4B00-A21B-C6AF1C2840F7.html",
							"GUID-386E57A5-2117-4B00-A21B-C6AF1C2840F7.html",
							"GUID-386E57A5-2117-4B00-A21B-C6AF1C2840F7.html",
							"GUID-386E57A5-2117-4B00-A21B-C6AF1C2840F7.html",
							"GUID-B5D2CD38-2685-4C00-AF72-B5B70E4AF0E5.html",
							"GUID-B5D2CD38-2685-4C00-AF72-B5B70E4AF0E5.html",
							"GUID-B5D2CD38-2685-4C00-AF72-B5B70E4AF0E5.html",
							"GUID-B5D2CD38-2685-4C00-AF72-B5B70E4AF0E5.html",
							"GUID-17D13553-82D8-47BD-B39B-1E6BD3428CBF.html",
							"GUID-17D13553-82D8-47BD-B39B-1E6BD3428CBF.html",
							"GUID-17D13553-82D8-47BD-B39B-1E6BD3428CBF.html",
							"GUID-17D13553-82D8-47BD-B39B-1E6BD3428CBF.html",
							"GUID-4C985581-7FBE-48BC-A815-1178C3173F64.html",
							"GUID-4C985581-7FBE-48BC-A815-1178C3173F64.html",
							"GUID-4C985581-7FBE-48BC-A815-1178C3173F64.html",
							"GUID-4C985581-7FBE-48BC-A815-1178C3173F64.html",
							"GUID-55337ABD-8270-4DFB-A215-64165314F53F.html",
							"GUID-55337ABD-8270-4DFB-A215-64165314F53F.html",
							"GUID-55337ABD-8270-4DFB-A215-64165314F53F.html",
							"GUID-55337ABD-8270-4DFB-A215-64165314F53F.html",
							"GUID-7E1F0AA2-BF30-47F1-93A9-7AD7E929340D.html",
							"GUID-7E1F0AA2-BF30-47F1-93A9-7AD7E929340D.html",
							"GUID-7E1F0AA2-BF30-47F1-93A9-7AD7E929340D.html",
							"GUID-7E1F0AA2-BF30-47F1-93A9-7AD7E929340D.html",
							"GUID-350E2D86-917E-46F5-A27B-5B7B6CD0E740.html",
							"GUID-350E2D86-917E-46F5-A27B-5B7B6CD0E740.html",
							"GUID-350E2D86-917E-46F5-A27B-5B7B6CD0E740.html",
							"GUID-350E2D86-917E-46F5-A27B-5B7B6CD0E740.html",
							"GUID-48E2E234-B4A0-49AA-A47F-CF7DC384547F.html",
							"GUID-48E2E234-B4A0-49AA-A47F-CF7DC384547F.html",
							"GUID-48E2E234-B4A0-49AA-A47F-CF7DC384547F.html",
							"GUID-48E2E234-B4A0-49AA-A47F-CF7DC384547F.html",
							"GUID-FF1D1C5A-DAC3-4F2F-AB46-3A796657A0EA.html",
							"GUID-FF1D1C5A-DAC3-4F2F-AB46-3A796657A0EA.html",
							"GUID-FF1D1C5A-DAC3-4F2F-AB46-3A796657A0EA.html",
							"GUID-FF1D1C5A-DAC3-4F2F-AB46-3A796657A0EA.html",
							"GUID-B16DD6F5-6244-4EA7-A150-47D9193DC875.html",
							"GUID-B16DD6F5-6244-4EA7-A150-47D9193DC875.html",
							"GUID-B16DD6F5-6244-4EA7-A150-47D9193DC875.html",
							"GUID-B16DD6F5-6244-4EA7-A150-47D9193DC875.html",
							"GUID-502CC449-E705-43E0-8F5B-C75E7D635B6D.html",
							"GUID-502CC449-E705-43E0-8F5B-C75E7D635B6D.html",
							"GUID-502CC449-E705-43E0-8F5B-C75E7D635B6D.html",
							"GUID-502CC449-E705-43E0-8F5B-C75E7D635B6D.html",
							"GUID-18188A91-010D-49FC-B9A1-5C9A227DC09E.html",
							"GUID-18188A91-010D-49FC-B9A1-5C9A227DC09E.html",
							"GUID-18188A91-010D-49FC-B9A1-5C9A227DC09E.html",
							"GUID-18188A91-010D-49FC-B9A1-5C9A227DC09E.html",
							"GUID-01A09C07-8775-47C5-ABC7-C9A54B34E4B5.html",
							"GUID-01A09C07-8775-47C5-ABC7-C9A54B34E4B5.html",
							"GUID-01A09C07-8775-47C5-ABC7-C9A54B34E4B5.html",
							"GUID-01A09C07-8775-47C5-ABC7-C9A54B34E4B5.html",
							"GUID-B046D58E-A9AB-4EB5-9D08-7CB8E6064D68.html",
							"GUID-B046D58E-A9AB-4EB5-9D08-7CB8E6064D68.html",
							"GUID-B046D58E-A9AB-4EB5-9D08-7CB8E6064D68.html",
							"GUID-B046D58E-A9AB-4EB5-9D08-7CB8E6064D68.html",
							"GUID-8038B28A-3E82-4188-877C-CF1E17CFF695.html",
							"GUID-8038B28A-3E82-4188-877C-CF1E17CFF695.html",
							"GUID-8038B28A-3E82-4188-877C-CF1E17CFF695.html",
							"GUID-8038B28A-3E82-4188-877C-CF1E17CFF695.html",
							"GUID-F5207E96-1B43-4751-BF5B-C1592BE75A72.html",
							"GUID-F5207E96-1B43-4751-BF5B-C1592BE75A72.html",
							"GUID-F5207E96-1B43-4751-BF5B-C1592BE75A72.html",
							"GUID-F5207E96-1B43-4751-BF5B-C1592BE75A72.html",
							"GUID-45875F52-95A3-4845-BEBA-E029198E9941.html",
							"GUID-45875F52-95A3-4845-BEBA-E029198E9941.html",
							"GUID-45875F52-95A3-4845-BEBA-E029198E9941.html",
							"GUID-45875F52-95A3-4845-BEBA-E029198E9941.html",
							"GUID-2C724ED6-CDD6-4C34-B6B4-A23AF82E9B5C.html",
							"GUID-2C724ED6-CDD6-4C34-B6B4-A23AF82E9B5C.html",
							"GUID-2C724ED6-CDD6-4C34-B6B4-A23AF82E9B5C.html",
							"GUID-2C724ED6-CDD6-4C34-B6B4-A23AF82E9B5C.html",
							"GUID-E3A99701-8888-4242-8F49-AE79B537ECB3.html",
							"GUID-E3A99701-8888-4242-8F49-AE79B537ECB3.html",
							"GUID-E3A99701-8888-4242-8F49-AE79B537ECB3.html",
							"GUID-E3A99701-8888-4242-8F49-AE79B537ECB3.html",
							"GUID-F3FA9FA8-F54B-4770-93C2-6DFD5AB8D05A.html",
							"GUID-F3FA9FA8-F54B-4770-93C2-6DFD5AB8D05A.html",
							"GUID-F3FA9FA8-F54B-4770-93C2-6DFD5AB8D05A.html",
							"GUID-F3FA9FA8-F54B-4770-93C2-6DFD5AB8D05A.html",
							"GUID-DEE00CA7-607C-4AF4-AC97-134521915B07.html",
							"GUID-DEE00CA7-607C-4AF4-AC97-134521915B07.html",
							"GUID-DEE00CA7-607C-4AF4-AC97-134521915B07.html",
							"GUID-DEE00CA7-607C-4AF4-AC97-134521915B07.html",
							"GUID-0C5017F4-1910-4115-B45B-B55FCAE0835D.html",
							"GUID-0C5017F4-1910-4115-B45B-B55FCAE0835D.html",
							"GUID-0C5017F4-1910-4115-B45B-B55FCAE0835D.html",
							"GUID-0C5017F4-1910-4115-B45B-B55FCAE0835D.html",
							"GUID-2097985F-000D-47A4-8329-8B05E9C17226.html",
							"GUID-2097985F-000D-47A4-8329-8B05E9C17226.html",
							"GUID-2097985F-000D-47A4-8329-8B05E9C17226.html",
							"GUID-2097985F-000D-47A4-8329-8B05E9C17226.html",
							"GUID-A8BACB10-45B1-41BF-A1CC-7B530793C8EE.html",
							"GUID-A8BACB10-45B1-41BF-A1CC-7B530793C8EE.html",
							"GUID-A8BACB10-45B1-41BF-A1CC-7B530793C8EE.html",
							"GUID-A8BACB10-45B1-41BF-A1CC-7B530793C8EE.html",
							"GUID-C3065A23-6B7C-4822-9AE8-6ECE3287BDD3.html",
							"GUID-C3065A23-6B7C-4822-9AE8-6ECE3287BDD3.html",
							"GUID-C3065A23-6B7C-4822-9AE8-6ECE3287BDD3.html",
							"GUID-C3065A23-6B7C-4822-9AE8-6ECE3287BDD3.html",
							"GUID-67CF043E-7F00-4B38-B885-F26E017AC7A2.html",
							"GUID-67CF043E-7F00-4B38-B885-F26E017AC7A2.html",
							"GUID-67CF043E-7F00-4B38-B885-F26E017AC7A2.html",
							"GUID-67CF043E-7F00-4B38-B885-F26E017AC7A2.html",
							"GUID-FE86BC3A-2103-4744-B10C-F6928B891D6F.html",
							"GUID-FE86BC3A-2103-4744-B10C-F6928B891D6F.html",
							"GUID-FE86BC3A-2103-4744-B10C-F6928B891D6F.html",
							"GUID-FE86BC3A-2103-4744-B10C-F6928B891D6F.html",
							"GUID-4912BEF1-34A3-4906-BAC4-4209909DDC57.html",
							"GUID-4912BEF1-34A3-4906-BAC4-4209909DDC57.html",
							"GUID-4912BEF1-34A3-4906-BAC4-4209909DDC57.html",
							"GUID-4912BEF1-34A3-4906-BAC4-4209909DDC57.html",
							"GUID-4FFCD389-DB9F-4529-A669-B0BF83C9517D.html",
							"GUID-4FFCD389-DB9F-4529-A669-B0BF83C9517D.html",
							"GUID-4FFCD389-DB9F-4529-A669-B0BF83C9517D.html",
							"GUID-4FFCD389-DB9F-4529-A669-B0BF83C9517D.html",
							"GUID-2976F9E6-16CC-4436-A470-2D9601E97CC6.html",
							"GUID-2976F9E6-16CC-4436-A470-2D9601E97CC6.html",
							"GUID-2976F9E6-16CC-4436-A470-2D9601E97CC6.html",
							"GUID-2976F9E6-16CC-4436-A470-2D9601E97CC6.html",
							"GUID-ED949D2B-8D61-4BA5-927B-961C9020544B.html",
							"GUID-ED949D2B-8D61-4BA5-927B-961C9020544B.html",
							"GUID-ED949D2B-8D61-4BA5-927B-961C9020544B.html",
							"GUID-ED949D2B-8D61-4BA5-927B-961C9020544B.html",
							"GUID-524C207A-0EC6-4A2C-8F49-9A6C802061F1.html",
							"GUID-524C207A-0EC6-4A2C-8F49-9A6C802061F1.html",
							"GUID-524C207A-0EC6-4A2C-8F49-9A6C802061F1.html",
							"GUID-524C207A-0EC6-4A2C-8F49-9A6C802061F1.html",
							"GUID-93C98C8C-3EB3-4DA6-85EE-93A971D01E56.html",
							"GUID-93C98C8C-3EB3-4DA6-85EE-93A971D01E56.html",
							"GUID-93C98C8C-3EB3-4DA6-85EE-93A971D01E56.html",
							"GUID-93C98C8C-3EB3-4DA6-85EE-93A971D01E56.html",
							"GUID-2D2F1C6D-95E7-416D-9F1B-905DCECE13A5.html",
							"GUID-2D2F1C6D-95E7-416D-9F1B-905DCECE13A5.html",
							"GUID-2D2F1C6D-95E7-416D-9F1B-905DCECE13A5.html",
							"GUID-2D2F1C6D-95E7-416D-9F1B-905DCECE13A5.html",
							"GUID-2FCE5C2A-FAF0-464A-88A9-C44E9E3974FD.html",
							"GUID-2FCE5C2A-FAF0-464A-88A9-C44E9E3974FD.html",
							"GUID-2FCE5C2A-FAF0-464A-88A9-C44E9E3974FD.html",
							"GUID-2FCE5C2A-FAF0-464A-88A9-C44E9E3974FD.html",
							"GUID-9A169F28-A192-4004-8C85-85E45EE5933A.html",
							"GUID-9A169F28-A192-4004-8C85-85E45EE5933A.html",
							"GUID-9A169F28-A192-4004-8C85-85E45EE5933A.html",
							"GUID-9A169F28-A192-4004-8C85-85E45EE5933A.html",
							"GUID-996CFF3B-74B3-4D58-B746-CA578F9B36E6.html",
							"GUID-996CFF3B-74B3-4D58-B746-CA578F9B36E6.html",
							"GUID-996CFF3B-74B3-4D58-B746-CA578F9B36E6.html",
							"GUID-996CFF3B-74B3-4D58-B746-CA578F9B36E6.html",
							"GUID-24F829FB-DF38-485B-918A-0B967B1761DD.html",
							"GUID-24F829FB-DF38-485B-918A-0B967B1761DD.html",
							"GUID-24F829FB-DF38-485B-918A-0B967B1761DD.html",
							"GUID-24F829FB-DF38-485B-918A-0B967B1761DD.html",
							"GUID-0DD261BF-40D6-42CD-8806-9B93D259D1CC.html","GUID-00582C15-26DA-41D8-8125-1FDD13BCF632.html",
							"GUID-00582C15-26DA-41D8-8125-1FDD13BCF632.html",
							"GUID-00582C15-26DA-41D8-8125-1FDD13BCF632.html",
							"GUID-00582C15-26DA-41D8-8125-1FDD13BCF632.html",
							"GUID-46CB6BC5-4409-41DB-A54E-43D5CF2FB689.html",
							"GUID-46CB6BC5-4409-41DB-A54E-43D5CF2FB689.html",
							"GUID-46CB6BC5-4409-41DB-A54E-43D5CF2FB689.html",
							"GUID-46CB6BC5-4409-41DB-A54E-43D5CF2FB689.html",
							"GUID-46CB6BC5-4409-41DB-A54E-43D5CF2FB689.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-DA8C2496-F252-4A1A-9B8F-C9CBB72C3E33.html",
							"GUID-981AAE26-0FF5-4B8A-A64E-C9F81959B9FE.html",
							"GUID-981AAE26-0FF5-4B8A-A64E-C9F81959B9FE.html",
							"GUID-981AAE26-0FF5-4B8A-A64E-C9F81959B9FE.html",
							"GUID-981AAE26-0FF5-4B8A-A64E-C9F81959B9FE.html",
							"GUID-2E7D76A2-9859-4BE6-BB76-BA61AC49A280.html",
							"GUID-2E7D76A2-9859-4BE6-BB76-BA61AC49A280.html",
							"GUID-2E7D76A2-9859-4BE6-BB76-BA61AC49A280.html",
							"GUID-2E7D76A2-9859-4BE6-BB76-BA61AC49A280.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-36614049-39A7-4198-8C91-2316E2FE90BD.html",
							"GUID-A5EAD06D-6DD0-45CB-9FA8-786612553BFF.html",
							"GUID-A5EAD06D-6DD0-45CB-9FA8-786612553BFF.html",
							"GUID-A5EAD06D-6DD0-45CB-9FA8-786612553BFF.html",
							"GUID-A5EAD06D-6DD0-45CB-9FA8-786612553BFF.html",
							"GUID-A5EAD06D-6DD0-45CB-9FA8-786612553BFF.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-19848F3A-AC20-4003-82FC-E7D075207A5F.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-70A68465-DCAB-4EF9-B1DE-AE0DDAFAE7C3.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-135E7E40-916D-4AAA-9190-46D2FB06AFEC.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-8EA5A7AE-F67D-4BEA-A37A-76866E1CDDEF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-64952A5C-AB9A-4CC6-ABD4-952A116A70CF.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-A5630009-2757-43DF-96C1-7961181B3142.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-295544E7-DEEA-4CD3-A134-293F7563A608.html",
							"GUID-D2DBC15F-67D6-431E-9D69-DAE11D195641.html",
							"GUID-D2DBC15F-67D6-431E-9D69-DAE11D195641.html",
							"GUID-D2DBC15F-67D6-431E-9D69-DAE11D195641.html",
							"GUID-D2DBC15F-67D6-431E-9D69-DAE11D195641.html",
							"GUID-D2DBC15F-67D6-431E-9D69-DAE11D195641.html",
							"GUID-1D93B356-4D00-4B85-8531-B18964792C05.html",
							"GUID-1D93B356-4D00-4B85-8531-B18964792C05.html",
							"GUID-1D93B356-4D00-4B85-8531-B18964792C05.html",
							"GUID-1D93B356-4D00-4B85-8531-B18964792C05.html",
							"GUID-1D93B356-4D00-4B85-8531-B18964792C05.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-9A50C4A9-869F-479C-B03D-679848B4C27A.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-44D7F81A-66AC-4675-B160-B927F73DDB95.html",
							"GUID-794734ED-F273-43DD-9746-8E00C084D635.html",
							"GUID-794734ED-F273-43DD-9746-8E00C084D635.html",
							"GUID-794734ED-F273-43DD-9746-8E00C084D635.html",
							"GUID-794734ED-F273-43DD-9746-8E00C084D635.html",
							"GUID-794734ED-F273-43DD-9746-8E00C084D635.html",
							"GUID-80CD7156-C67F-4213-9241-CD1837E59532.html",
							"GUID-80CD7156-C67F-4213-9241-CD1837E59532.html",
							"GUID-80CD7156-C67F-4213-9241-CD1837E59532.html",
							"GUID-80CD7156-C67F-4213-9241-CD1837E59532.html",
							"GUID-80CD7156-C67F-4213-9241-CD1837E59532.html",
							"GUID-FF8D9775-277B-41B8-A3FC-F48961002B9F.html",
							"GUID-FF8D9775-277B-41B8-A3FC-F48961002B9F.html",
							"GUID-FF8D9775-277B-41B8-A3FC-F48961002B9F.html",
							"GUID-FF8D9775-277B-41B8-A3FC-F48961002B9F.html",
							"GUID-FF8D9775-277B-41B8-A3FC-F48961002B9F.html",
							"GUID-88611683-FD9C-418C-9C61-8ECDF5BB50A4.html",
							"GUID-88611683-FD9C-418C-9C61-8ECDF5BB50A4.html",
							"GUID-88611683-FD9C-418C-9C61-8ECDF5BB50A4.html",
							"GUID-88611683-FD9C-418C-9C61-8ECDF5BB50A4.html",
							"GUID-88611683-FD9C-418C-9C61-8ECDF5BB50A4.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-7E7944E0-4DCF-4981-9370-1A66E6B1CB54.html",
							"GUID-F7C681CB-E487-4823-B261-CF6FB209611C.html",
							"GUID-F7C681CB-E487-4823-B261-CF6FB209611C.html",
							"GUID-F7C681CB-E487-4823-B261-CF6FB209611C.html",
							"GUID-F7C681CB-E487-4823-B261-CF6FB209611C.html",
							"GUID-C9EB9250-301A-4F4B-A0ED-72D06DD09FB4.html",
							"GUID-C9EB9250-301A-4F4B-A0ED-72D06DD09FB4.html",
							"GUID-C9EB9250-301A-4F4B-A0ED-72D06DD09FB4.html",
							"GUID-C9EB9250-301A-4F4B-A0ED-72D06DD09FB4.html",
							"GUID-C9EB9250-301A-4F4B-A0ED-72D06DD09FB4.html",
							"GUID-4EF14495-F27D-41FD-92CA-10CC3C5D5A88.html",
							"GUID-4EF14495-F27D-41FD-92CA-10CC3C5D5A88.html",
							"GUID-4EF14495-F27D-41FD-92CA-10CC3C5D5A88.html",
							"GUID-4EF14495-F27D-41FD-92CA-10CC3C5D5A88.html",
							"GUID-4EF14495-F27D-41FD-92CA-10CC3C5D5A88.html",
							"GUID-8FC7C55C-5FCD-4B88-AE1D-1765F512086C.html",
							"GUID-8FC7C55C-5FCD-4B88-AE1D-1765F512086C.html",
							"GUID-8FC7C55C-5FCD-4B88-AE1D-1765F512086C.html",
							"GUID-8FC7C55C-5FCD-4B88-AE1D-1765F512086C.html",
							"GUID-8FC7C55C-5FCD-4B88-AE1D-1765F512086C.html",
							"GUID-280A16C5-81B6-4348-994C-F527ED47DEF4.html",
							"GUID-280A16C5-81B6-4348-994C-F527ED47DEF4.html",
							"GUID-280A16C5-81B6-4348-994C-F527ED47DEF4.html",
							"GUID-280A16C5-81B6-4348-994C-F527ED47DEF4.html",
							"GUID-280A16C5-81B6-4348-994C-F527ED47DEF4.html",
							"GUID-E88AB64E-8F3E-47FE-B414-49BBE5D5BB30.html",
							"GUID-E88AB64E-8F3E-47FE-B414-49BBE5D5BB30.html",
							"GUID-E88AB64E-8F3E-47FE-B414-49BBE5D5BB30.html",
							"GUID-E88AB64E-8F3E-47FE-B414-49BBE5D5BB30.html",
							"GUID-E88AB64E-8F3E-47FE-B414-49BBE5D5BB30.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-9201A66B-3435-483C-AFEC-463BCA070D82.html",
							"GUID-1C35D546-1A81-4936-A1DE-3E3CE18C6254.html",
							"GUID-1C35D546-1A81-4936-A1DE-3E3CE18C6254.html",
							"GUID-1C35D546-1A81-4936-A1DE-3E3CE18C6254.html",
							"GUID-1C35D546-1A81-4936-A1DE-3E3CE18C6254.html",
							"GUID-1C35D546-1A81-4936-A1DE-3E3CE18C6254.html",
							"GUID-3F9C46E9-BE54-4A08-8525-594F4057FDE9.html",
							"GUID-3F9C46E9-BE54-4A08-8525-594F4057FDE9.html",
							"GUID-3F9C46E9-BE54-4A08-8525-594F4057FDE9.html",
							"GUID-3F9C46E9-BE54-4A08-8525-594F4057FDE9.html",
							"GUID-3F9C46E9-BE54-4A08-8525-594F4057FDE9.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-DE921D7F-C4C9-45EC-94E4-8E9B5098A6F5.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-C5438A74-78F3-47AB-AAE4-05EFEFC91E0F.html",
							"GUID-EABB24B0-3356-4103-A083-EB3A2F4DF22E.html",
							"GUID-EABB24B0-3356-4103-A083-EB3A2F4DF22E.html",
							"GUID-EABB24B0-3356-4103-A083-EB3A2F4DF22E.html",
							"GUID-EABB24B0-3356-4103-A083-EB3A2F4DF22E.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-35A9EDA8-6DC5-43C9-ADAB-B50E1078F0E7.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C4D5F735-FEC4-4FA5-A778-C997D5A536AE.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-C83EA34F-BB67-4EBB-96B0-0A200E76770A.html",
							"GUID-CD761D6B-DC72-47EF-9723-0495DCEA00E8.html",
							"GUID-CD761D6B-DC72-47EF-9723-0495DCEA00E8.html",
							"GUID-CD761D6B-DC72-47EF-9723-0495DCEA00E8.html",
							"GUID-CD761D6B-DC72-47EF-9723-0495DCEA00E8.html",
							"GUID-CD761D6B-DC72-47EF-9723-0495DCEA00E8.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-92EFF27C-A294-4BE6-A06D-471648ECCA01.html",
							"GUID-6272A50B-261C-479C-80BA-47D38867B41D.html",
							"GUID-6272A50B-261C-479C-80BA-47D38867B41D.html",
							"GUID-6272A50B-261C-479C-80BA-47D38867B41D.html",
							"GUID-6272A50B-261C-479C-80BA-47D38867B41D.html",
							"GUID-6272A50B-261C-479C-80BA-47D38867B41D.html",
							"GUID-FC4C943C-D5AD-4587-B082-29BF6F8529D4.html",
							"GUID-FC4C943C-D5AD-4587-B082-29BF6F8529D4.html",
							"GUID-FC4C943C-D5AD-4587-B082-29BF6F8529D4.html",
							"GUID-FC4C943C-D5AD-4587-B082-29BF6F8529D4.html",
							"GUID-FC4C943C-D5AD-4587-B082-29BF6F8529D4.html",
							"GUID-422DBE9E-D0F0-4EAC-A32C-44F0B599299C.html",
							"GUID-422DBE9E-D0F0-4EAC-A32C-44F0B599299C.html",
							"GUID-422DBE9E-D0F0-4EAC-A32C-44F0B599299C.html",
							"GUID-422DBE9E-D0F0-4EAC-A32C-44F0B599299C.html",
							"GUID-422DBE9E-D0F0-4EAC-A32C-44F0B599299C.html",
							"GUID-51095B8E-6E01-441F-8687-E4B40F685DD0.html",
							"GUID-51095B8E-6E01-441F-8687-E4B40F685DD0.html",
							"GUID-51095B8E-6E01-441F-8687-E4B40F685DD0.html",
							"GUID-51095B8E-6E01-441F-8687-E4B40F685DD0.html",
							"GUID-51095B8E-6E01-441F-8687-E4B40F685DD0.html",
							"GUID-4775FB1F-56B7-4F38-88E0-F9E4C3E94B42.html",
							"GUID-4775FB1F-56B7-4F38-88E0-F9E4C3E94B42.html",
							"GUID-4775FB1F-56B7-4F38-88E0-F9E4C3E94B42.html",
							"GUID-4775FB1F-56B7-4F38-88E0-F9E4C3E94B42.html",
							"GUID-4775FB1F-56B7-4F38-88E0-F9E4C3E94B42.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-2E52589D-613E-4430-B22D-3B85B241189D.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-7A3D48A5-2A6D-4ED6-83A9-E96533A28AE2.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-C2E0A54A-62B0-436C-8BCB-0070E1D7D57C.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-D6C5A741-6975-488F-A6AB-B54889B7EBFC.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-47D715B3-9D90-493D-A1FC-3010EBD7D3F8.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-6BD05B3D-1F02-46F8-9FFA-B94383AEE5EC.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-3D1D07A2-FE07-4594-BF5C-CF1C45D3A160.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-6E4D1D65-A172-472F-93C2-2E9DD9A74722.html",
							"GUID-B43413A3-078B-45B8-9A06-F8692645F63C.html",
							"GUID-B43413A3-078B-45B8-9A06-F8692645F63C.html",
							"GUID-B43413A3-078B-45B8-9A06-F8692645F63C.html",
							"GUID-B43413A3-078B-45B8-9A06-F8692645F63C.html",
							"GUID-B43413A3-078B-45B8-9A06-F8692645F63C.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-2AB06D4A-477E-447D-A34F-D254F75AA3A3.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-E798674A-8717-4BE0-8AC9-0C8876817917.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-44CA8158-61F9-45E2-A980-27FD4A209CB1.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-F0C99001-1029-491F-BD5B-D7BDF1A476B5.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-187636C4-6855-4418-BD03-AB10F1795D5A.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-035F288E-9FAB-49C8-B0E1-97BA7315A527.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-A4BB35F0-FF5A-42A5-8846-772BE5ACCD50.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-DC09F875-E685-4BC8-85AF-6631A69136F8.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-E3774ECB-AF5C-4B20-BC48-B7A05E4394C3.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-C172D5DC-BD97-4B6C-8C70-8061250C13E7.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EDC312C8-B2AC-4FD9-B044-5A875B72EF82.html",
							"GUID-EC5C62BD-A736-41A7-A679-562C6588186B.html",
							"GUID-EC5C62BD-A736-41A7-A679-562C6588186B.html",
							"GUID-EC5C62BD-A736-41A7-A679-562C6588186B.html",
							"GUID-EC5C62BD-A736-41A7-A679-562C6588186B.html",
							"GUID-EC5C62BD-A736-41A7-A679-562C6588186B.html",
							"GUID-9313F520-6EF3-4B78-96C9-3858977D528E.html",
							"GUID-9313F520-6EF3-4B78-96C9-3858977D528E.html",
							"GUID-9313F520-6EF3-4B78-96C9-3858977D528E.html",
							"GUID-9313F520-6EF3-4B78-96C9-3858977D528E.html",
							"GUID-9313F520-6EF3-4B78-96C9-3858977D528E.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-F1475F98-F649-4454-9426-B85C4757AB81.html",
							"GUID-6FEAC1F7-AF0B-4A44-9950-1D6ADB7B6078.html",
							"GUID-6FEAC1F7-AF0B-4A44-9950-1D6ADB7B6078.html",
							"GUID-6FEAC1F7-AF0B-4A44-9950-1D6ADB7B6078.html",
							"GUID-6FEAC1F7-AF0B-4A44-9950-1D6ADB7B6078.html",
							"GUID-6FEAC1F7-AF0B-4A44-9950-1D6ADB7B6078.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-74A21003-D737-4B84-B533-400069906620.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-3E4BCC96-F7CD-44CF-B0C9-D09B3575B88A.html",
							"GUID-30D405B5-0472-4B35-AD01-4DDF330F3091.html","GUID-ECA6FE2B-F190-4B83-BE71-3C1EBE08DC1A.html","GUID-BD042650-0A67-4402-BDEA-43D6E4962FDB.html","GUID-A44D9007-0B8F-4EB5-9AA0-AAD18B6B6704.html","GUID-2358CD76-71AC-4697-BC54-9673C26DBEF8.html","GUID-DA1AC6A0-7739-4BD3-8CE3-23E6CC382B94.html","GUID-49D2E598-1686-4A82-928F-D04F7CE72849.html","GUID-0E8E9443-0EF6-4645-9E49-039D00DAFDD0.html","GUID-3AAB4DF8-CFD7-488F-A6EB-DB834CFB62E9.html","GUID-6250C306-2D62-4631-A4F9-616BBCCC48AC.html",
							"GUID-6250C306-2D62-4631-A4F9-616BBCCC48AC.html",
							"GUID-6250C306-2D62-4631-A4F9-616BBCCC48AC.html",
							"GUID-6250C306-2D62-4631-A4F9-616BBCCC48AC.html",
							"GUID-C9ED3545-DE2A-4EB7-8CE5-87ED5F266D74.html",
							"GUID-68F36419-BE17-4BBA-AC40-950ED8B4956A.html","GUID-F7CF3BA1-36B6-40A6-9257-19D4863812CA.html","GUID-DF065B2A-A0F7-4C47-9C32-E9DAAD615479.html",
							"GUID-DF065B2A-A0F7-4C47-9C32-E9DAAD615479.html",
							"GUID-DF065B2A-A0F7-4C47-9C32-E9DAAD615479.html",
							"GUID-DF065B2A-A0F7-4C47-9C32-E9DAAD615479.html",
							"GUID-0B817A0F-1AA2-42B6-B93A-41A883437B34.html",
							"GUID-0B817A0F-1AA2-42B6-B93A-41A883437B34.html",
							"GUID-0B817A0F-1AA2-42B6-B93A-41A883437B34.html",
							"GUID-0B817A0F-1AA2-42B6-B93A-41A883437B34.html",
							"GUID-D147991D-9826-4854-8566-A8EA7BE31159.html",
							"GUID-D147991D-9826-4854-8566-A8EA7BE31159.html",
							"GUID-D147991D-9826-4854-8566-A8EA7BE31159.html",
							"GUID-D147991D-9826-4854-8566-A8EA7BE31159.html",
							"GUID-C17EB9D8-56A4-42DE-BB36-DBB302B23C5F.html",
							"GUID-C17EB9D8-56A4-42DE-BB36-DBB302B23C5F.html",
							"GUID-C17EB9D8-56A4-42DE-BB36-DBB302B23C5F.html",
							"GUID-C17EB9D8-56A4-42DE-BB36-DBB302B23C5F.html",
							"GUID-ADCD2988-C88C-4139-93C9-BC07CAADBB89.html",
							"GUID-ADCD2988-C88C-4139-93C9-BC07CAADBB89.html",
							"GUID-ADCD2988-C88C-4139-93C9-BC07CAADBB89.html",
							"GUID-ADCD2988-C88C-4139-93C9-BC07CAADBB89.html",
							"GUID-C8760792-8A0C-4A74-AAD3-88DACDB666EB.html",
							"GUID-C8760792-8A0C-4A74-AAD3-88DACDB666EB.html",
							"GUID-C8760792-8A0C-4A74-AAD3-88DACDB666EB.html",
							"GUID-C8760792-8A0C-4A74-AAD3-88DACDB666EB.html",
							"GUID-DA453640-EE40-4E70-BCF5-52C3E6D86067.html",
							"GUID-DA453640-EE40-4E70-BCF5-52C3E6D86067.html",
							"GUID-DA453640-EE40-4E70-BCF5-52C3E6D86067.html",
							"GUID-DA453640-EE40-4E70-BCF5-52C3E6D86067.html",
							"GUID-BFF584FB-C563-4D8C-8770-ECC616BEBE1C.html",
							"GUID-BFF584FB-C563-4D8C-8770-ECC616BEBE1C.html",
							"GUID-BFF584FB-C563-4D8C-8770-ECC616BEBE1C.html",
							"GUID-BFF584FB-C563-4D8C-8770-ECC616BEBE1C.html",
							"GUID-7BF1A469-FF25-4B96-A00D-37950A19F64B.html",
							"GUID-7BF1A469-FF25-4B96-A00D-37950A19F64B.html",
							"GUID-7BF1A469-FF25-4B96-A00D-37950A19F64B.html",
							"GUID-7BF1A469-FF25-4B96-A00D-37950A19F64B.html",
							"GUID-CFCEB3D4-39E4-48A5-AC88-38CAF7E2D92F.html",
							"GUID-CFCEB3D4-39E4-48A5-AC88-38CAF7E2D92F.html",
							"GUID-CFCEB3D4-39E4-48A5-AC88-38CAF7E2D92F.html",
							"GUID-CFCEB3D4-39E4-48A5-AC88-38CAF7E2D92F.html",
							"GUID-779F698C-5BB2-4867-8B62-E6BFC9EEB9BB.html",
							"GUID-779F698C-5BB2-4867-8B62-E6BFC9EEB9BB.html",
							"GUID-779F698C-5BB2-4867-8B62-E6BFC9EEB9BB.html",
							"GUID-779F698C-5BB2-4867-8B62-E6BFC9EEB9BB.html",
							"GUID-C77398F0-F757-4879-8505-6D7D6A49A901.html",
							"GUID-C77398F0-F757-4879-8505-6D7D6A49A901.html",
							"GUID-C77398F0-F757-4879-8505-6D7D6A49A901.html",
							"GUID-C77398F0-F757-4879-8505-6D7D6A49A901.html",
							"GUID-6C42FDF7-8049-42C6-869F-D3034A3AFACE.html",
							"GUID-6C42FDF7-8049-42C6-869F-D3034A3AFACE.html",
							"GUID-6C42FDF7-8049-42C6-869F-D3034A3AFACE.html",
							"GUID-6C42FDF7-8049-42C6-869F-D3034A3AFACE.html",
							"GUID-4411CE90-AAB4-4A06-AF8F-829C402C6F93.html",
							"GUID-4411CE90-AAB4-4A06-AF8F-829C402C6F93.html",
							"GUID-4411CE90-AAB4-4A06-AF8F-829C402C6F93.html",
							"GUID-4411CE90-AAB4-4A06-AF8F-829C402C6F93.html",
							"GUID-14DD90E5-3708-4A5D-9B5E-16DEE8404708.html",
							"GUID-14DD90E5-3708-4A5D-9B5E-16DEE8404708.html",
							"GUID-14DD90E5-3708-4A5D-9B5E-16DEE8404708.html",
							"GUID-14DD90E5-3708-4A5D-9B5E-16DEE8404708.html",
							"GUID-EBB04E28-2F7B-4DCA-B435-54B0F855531E.html",
							"GUID-EBB04E28-2F7B-4DCA-B435-54B0F855531E.html",
							"GUID-EBB04E28-2F7B-4DCA-B435-54B0F855531E.html",
							"GUID-EBB04E28-2F7B-4DCA-B435-54B0F855531E.html",
							"GUID-78FECE22-2320-4806-A2BA-E6745713B058.html",
							"GUID-78FECE22-2320-4806-A2BA-E6745713B058.html",
							"GUID-78FECE22-2320-4806-A2BA-E6745713B058.html",
							"GUID-78FECE22-2320-4806-A2BA-E6745713B058.html",
							"GUID-78FECE22-2320-4806-A2BA-E6745713B058.html",
							"GUID-9BD44B68-1DF0-497B-8AF2-AF07BD9BB2A9.html",
							"GUID-9BD44B68-1DF0-497B-8AF2-AF07BD9BB2A9.html",
							"GUID-9BD44B68-1DF0-497B-8AF2-AF07BD9BB2A9.html",
							"GUID-9BD44B68-1DF0-497B-8AF2-AF07BD9BB2A9.html",
							"GUID-9BD44B68-1DF0-497B-8AF2-AF07BD9BB2A9.html",
							"GUID-60FB96F3-4D77-4D0A-B04C-78F8D41A1E6E.html",
							"GUID-60FB96F3-4D77-4D0A-B04C-78F8D41A1E6E.html",
							"GUID-60FB96F3-4D77-4D0A-B04C-78F8D41A1E6E.html",
							"GUID-60FB96F3-4D77-4D0A-B04C-78F8D41A1E6E.html",
							"GUID-EEB11BD0-70C3-4883-B180-40EE234FAF7B.html",
							"GUID-EEB11BD0-70C3-4883-B180-40EE234FAF7B.html",
							"GUID-EEB11BD0-70C3-4883-B180-40EE234FAF7B.html",
							"GUID-EEB11BD0-70C3-4883-B180-40EE234FAF7B.html",
							"GUID-EEB11BD0-70C3-4883-B180-40EE234FAF7B.html",
							"GUID-1F9302A7-7B95-4768-BEC4-53FEE62E6450.html",
							"GUID-1F9302A7-7B95-4768-BEC4-53FEE62E6450.html",
							"GUID-1F9302A7-7B95-4768-BEC4-53FEE62E6450.html",
							"GUID-1F9302A7-7B95-4768-BEC4-53FEE62E6450.html",
							"GUID-7BB4BE61-0E3D-4EB6-B590-42A9456AB31A.html",
							"GUID-7BB4BE61-0E3D-4EB6-B590-42A9456AB31A.html",
							"GUID-7BB4BE61-0E3D-4EB6-B590-42A9456AB31A.html",
							"GUID-7BB4BE61-0E3D-4EB6-B590-42A9456AB31A.html",
							"GUID-5A753849-5CF6-48B2-B1B4-CC7F048C0177.html",
							"GUID-5A753849-5CF6-48B2-B1B4-CC7F048C0177.html",
							"GUID-5A753849-5CF6-48B2-B1B4-CC7F048C0177.html",
							"GUID-5A753849-5CF6-48B2-B1B4-CC7F048C0177.html",
							"GUID-2B55C883-C711-4385-97CC-6AAD2846F47B.html","GUID-506F6039-E62F-4121-8CA8-2335BAF7EFB6.html",
							"GUID-506F6039-E62F-4121-8CA8-2335BAF7EFB6.html",
							"GUID-506F6039-E62F-4121-8CA8-2335BAF7EFB6.html",
							"GUID-506F6039-E62F-4121-8CA8-2335BAF7EFB6.html",
							"GUID-033AEAE3-56F0-4C38-99A5-6315F4885209.html","GUID-D11F4152-45FA-4E63-AFDF-D5C1AEB8E5E6.html",
							"GUID-D11F4152-45FA-4E63-AFDF-D5C1AEB8E5E6.html",
							"GUID-D11F4152-45FA-4E63-AFDF-D5C1AEB8E5E6.html",
							"GUID-D11F4152-45FA-4E63-AFDF-D5C1AEB8E5E6.html",
							"GUID-3DA0711E-E223-4452-8B75-8789AA9C9712.html",
							"GUID-3DA0711E-E223-4452-8B75-8789AA9C9712.html",
							"GUID-3DA0711E-E223-4452-8B75-8789AA9C9712.html",
							"GUID-3DA0711E-E223-4452-8B75-8789AA9C9712.html",
							"GUID-615F25EC-5A34-496D-A41E-AE128DDCBC42.html",
							"GUID-615F25EC-5A34-496D-A41E-AE128DDCBC42.html",
							"GUID-615F25EC-5A34-496D-A41E-AE128DDCBC42.html",
							"GUID-615F25EC-5A34-496D-A41E-AE128DDCBC42.html",
							"GUID-BDF09F41-242A-4901-893B-F43D0FEEE5A1.html",
							"GUID-BDF09F41-242A-4901-893B-F43D0FEEE5A1.html",
							"GUID-BDF09F41-242A-4901-893B-F43D0FEEE5A1.html",
							"GUID-BDF09F41-242A-4901-893B-F43D0FEEE5A1.html",
							"GUID-5770A032-5C05-4593-951A-682DF783223A.html",
							"GUID-5770A032-5C05-4593-951A-682DF783223A.html",
							"GUID-5770A032-5C05-4593-951A-682DF783223A.html",
							"GUID-5770A032-5C05-4593-951A-682DF783223A.html",
							"GUID-760F1BD1-79F3-4B6A-8D69-014AF388CABA.html",
							"GUID-760F1BD1-79F3-4B6A-8D69-014AF388CABA.html",
							"GUID-760F1BD1-79F3-4B6A-8D69-014AF388CABA.html",
							"GUID-760F1BD1-79F3-4B6A-8D69-014AF388CABA.html",
							"GUID-BCB5F15D-9C2E-400D-B5F3-2B1542AD2153.html",
							"GUID-BCB5F15D-9C2E-400D-B5F3-2B1542AD2153.html",
							"GUID-BCB5F15D-9C2E-400D-B5F3-2B1542AD2153.html",
							"GUID-BCB5F15D-9C2E-400D-B5F3-2B1542AD2153.html",
							"GUID-1E8F3C7E-026E-4CCD-BFCD-DC99ADBB12D2.html",
							"GUID-1E8F3C7E-026E-4CCD-BFCD-DC99ADBB12D2.html",
							"GUID-1E8F3C7E-026E-4CCD-BFCD-DC99ADBB12D2.html",
							"GUID-1E8F3C7E-026E-4CCD-BFCD-DC99ADBB12D2.html",
							"GUID-575E8FAF-F4CB-421B-B3B2-7FCFDBC0C76C.html",
							"GUID-575E8FAF-F4CB-421B-B3B2-7FCFDBC0C76C.html",
							"GUID-575E8FAF-F4CB-421B-B3B2-7FCFDBC0C76C.html",
							"GUID-575E8FAF-F4CB-421B-B3B2-7FCFDBC0C76C.html",
							"GUID-DB2A97D3-6D82-4E96-9B90-D6954203405E.html",
							"GUID-DB2A97D3-6D82-4E96-9B90-D6954203405E.html",
							"GUID-DB2A97D3-6D82-4E96-9B90-D6954203405E.html",
							"GUID-DB2A97D3-6D82-4E96-9B90-D6954203405E.html",
							"GUID-1BA26AB0-1AC9-4D2F-A763-D5AEA6B04C89.html",
							"GUID-1BA26AB0-1AC9-4D2F-A763-D5AEA6B04C89.html",
							"GUID-1BA26AB0-1AC9-4D2F-A763-D5AEA6B04C89.html",
							"GUID-1BA26AB0-1AC9-4D2F-A763-D5AEA6B04C89.html",
							"GUID-FCCBC381-8923-4822-928B-A54B109BA0BA.html",
							"GUID-FCCBC381-8923-4822-928B-A54B109BA0BA.html",
							"GUID-FCCBC381-8923-4822-928B-A54B109BA0BA.html",
							"GUID-FCCBC381-8923-4822-928B-A54B109BA0BA.html",
							"GUID-E48B51DA-4FFD-4AE6-8F03-080379D19D93.html",
							"GUID-E48B51DA-4FFD-4AE6-8F03-080379D19D93.html",
							"GUID-E48B51DA-4FFD-4AE6-8F03-080379D19D93.html",
							"GUID-E48B51DA-4FFD-4AE6-8F03-080379D19D93.html",
							"GUID-A0F42189-6882-4045-B384-7FBD2B14458F.html",
							"GUID-A0F42189-6882-4045-B384-7FBD2B14458F.html",
							"GUID-A0F42189-6882-4045-B384-7FBD2B14458F.html",
							"GUID-A0F42189-6882-4045-B384-7FBD2B14458F.html",
							"GUID-F21C0A43-7CA8-47ED-BE24-78E51C8EFA06.html",
							"GUID-F21C0A43-7CA8-47ED-BE24-78E51C8EFA06.html",
							"GUID-F21C0A43-7CA8-47ED-BE24-78E51C8EFA06.html",
							"GUID-F21C0A43-7CA8-47ED-BE24-78E51C8EFA06.html",
							"GUID-F0D72116-E51B-4514-9398-72B95370C283.html",
							"GUID-F0D72116-E51B-4514-9398-72B95370C283.html",
							"GUID-F0D72116-E51B-4514-9398-72B95370C283.html",
							"GUID-F0D72116-E51B-4514-9398-72B95370C283.html",
							"GUID-18F8F054-27A7-4B66-A6D5-2588E086E901.html",
							"GUID-18F8F054-27A7-4B66-A6D5-2588E086E901.html",
							"GUID-18F8F054-27A7-4B66-A6D5-2588E086E901.html",
							"GUID-18F8F054-27A7-4B66-A6D5-2588E086E901.html",
							"GUID-7929592C-13C8-45B9-8198-E3606D539E88.html",
							"GUID-7929592C-13C8-45B9-8198-E3606D539E88.html",
							"GUID-7929592C-13C8-45B9-8198-E3606D539E88.html",
							"GUID-7929592C-13C8-45B9-8198-E3606D539E88.html",
							"GUID-05B681F6-B354-40C7-874A-2BF12EDCE725.html",
							"GUID-05B681F6-B354-40C7-874A-2BF12EDCE725.html",
							"GUID-05B681F6-B354-40C7-874A-2BF12EDCE725.html",
							"GUID-05B681F6-B354-40C7-874A-2BF12EDCE725.html",
							"GUID-D538A5DA-CD81-463E-9F1A-C824165226F7.html",
							"GUID-D538A5DA-CD81-463E-9F1A-C824165226F7.html",
							"GUID-D538A5DA-CD81-463E-9F1A-C824165226F7.html",
							"GUID-D538A5DA-CD81-463E-9F1A-C824165226F7.html",
							"GUID-60EFEE53-D048-4B93-8756-81D514067B0E.html",
							"GUID-60EFEE53-D048-4B93-8756-81D514067B0E.html",
							"GUID-60EFEE53-D048-4B93-8756-81D514067B0E.html",
							"GUID-60EFEE53-D048-4B93-8756-81D514067B0E.html",
							"GUID-D8FF1B1A-D8FD-4A8A-B08B-777287026454.html",
							"GUID-D8FF1B1A-D8FD-4A8A-B08B-777287026454.html",
							"GUID-D8FF1B1A-D8FD-4A8A-B08B-777287026454.html",
							"GUID-D8FF1B1A-D8FD-4A8A-B08B-777287026454.html",
							"GUID-6D132F09-07C6-4FC7-9615-AD09D5CD1A9E.html",
							"GUID-6D132F09-07C6-4FC7-9615-AD09D5CD1A9E.html",
							"GUID-6D132F09-07C6-4FC7-9615-AD09D5CD1A9E.html",
							"GUID-6D132F09-07C6-4FC7-9615-AD09D5CD1A9E.html",
							"GUID-2D95DF00-4758-4DCE-8562-F6A1A150A365.html",
							"GUID-2D95DF00-4758-4DCE-8562-F6A1A150A365.html",
							"GUID-2D95DF00-4758-4DCE-8562-F6A1A150A365.html",
							"GUID-2D95DF00-4758-4DCE-8562-F6A1A150A365.html",
							"GUID-B662F62C-F524-46C3-BC2A-9B33578A961B.html",
							"GUID-B662F62C-F524-46C3-BC2A-9B33578A961B.html",
							"GUID-B662F62C-F524-46C3-BC2A-9B33578A961B.html",
							"GUID-B662F62C-F524-46C3-BC2A-9B33578A961B.html",
							"GUID-A9CEB8AC-CAD0-45C1-ACB3-486FDF0CB383.html",
							"GUID-A9CEB8AC-CAD0-45C1-ACB3-486FDF0CB383.html",
							"GUID-A9CEB8AC-CAD0-45C1-ACB3-486FDF0CB383.html",
							"GUID-A9CEB8AC-CAD0-45C1-ACB3-486FDF0CB383.html",
							"GUID-EE252C97-F8C2-42D4-871D-B2C9B658E77D.html",
							"GUID-EE252C97-F8C2-42D4-871D-B2C9B658E77D.html",
							"GUID-EE252C97-F8C2-42D4-871D-B2C9B658E77D.html",
							"GUID-EE252C97-F8C2-42D4-871D-B2C9B658E77D.html",
							"GUID-48409FD6-7AC0-422C-9230-42980741D051.html",
							"GUID-48409FD6-7AC0-422C-9230-42980741D051.html",
							"GUID-48409FD6-7AC0-422C-9230-42980741D051.html",
							"GUID-48409FD6-7AC0-422C-9230-42980741D051.html",
							"GUID-5A9BB560-B872-4F58-9FA7-02458F901C55.html",
							"GUID-5A9BB560-B872-4F58-9FA7-02458F901C55.html",
							"GUID-5A9BB560-B872-4F58-9FA7-02458F901C55.html",
							"GUID-5A9BB560-B872-4F58-9FA7-02458F901C55.html",
							"GUID-3731E8AB-171C-4192-9D52-2012DB5797FC.html",
							"GUID-3731E8AB-171C-4192-9D52-2012DB5797FC.html",
							"GUID-3731E8AB-171C-4192-9D52-2012DB5797FC.html",
							"GUID-3731E8AB-171C-4192-9D52-2012DB5797FC.html",
							"GUID-5279946A-A9EC-4311-B391-78064A9D52A0.html",
							"GUID-5279946A-A9EC-4311-B391-78064A9D52A0.html",
							"GUID-5279946A-A9EC-4311-B391-78064A9D52A0.html",
							"GUID-5279946A-A9EC-4311-B391-78064A9D52A0.html",
							"GUID-47570001-86E5-4323-B176-20FF4ECC88A9.html",
							"GUID-47570001-86E5-4323-B176-20FF4ECC88A9.html",
							"GUID-47570001-86E5-4323-B176-20FF4ECC88A9.html",
							"GUID-47570001-86E5-4323-B176-20FF4ECC88A9.html",
							"GUID-A87D0B6C-416A-4312-8B27-DEF9456BED70.html",
							"GUID-A87D0B6C-416A-4312-8B27-DEF9456BED70.html",
							"GUID-A87D0B6C-416A-4312-8B27-DEF9456BED70.html",
							"GUID-A87D0B6C-416A-4312-8B27-DEF9456BED70.html",
							"GUID-DE4383BE-5A48-44EE-8955-214FCAA7E621.html",
							"GUID-DE4383BE-5A48-44EE-8955-214FCAA7E621.html",
							"GUID-DE4383BE-5A48-44EE-8955-214FCAA7E621.html",
							"GUID-DE4383BE-5A48-44EE-8955-214FCAA7E621.html",
							"GUID-CD73F78E-AA39-4978-9020-7143E417F741.html",
							"GUID-CD73F78E-AA39-4978-9020-7143E417F741.html",
							"GUID-CD73F78E-AA39-4978-9020-7143E417F741.html",
							"GUID-CD73F78E-AA39-4978-9020-7143E417F741.html",
							"GUID-2C0CF1FA-B4E9-4999-9A93-45A167861CC8.html","GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-4AA93539-3651-4DB4-AD08-36C6C449F0EF.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-99CA5307-4370-40FC-B5F1-3055E8A764EC.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-6A9EDF8A-A437-465A-9F95-7416A2ACAAB5.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-CB7F78C9-6A76-46BA-A8E5-41CE6BC73D40.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-2209401C-BB58-4BFA-B086-8270F1F5EEC8.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-96B3ED22-42BD-47B3-9995-004BF2E2F3A4.html",
							"GUID-97001BBA-DF1A-498F-A84A-5F299C074A2B.html",
							"GUID-97001BBA-DF1A-498F-A84A-5F299C074A2B.html",
							"GUID-97001BBA-DF1A-498F-A84A-5F299C074A2B.html",
							"GUID-97001BBA-DF1A-498F-A84A-5F299C074A2B.html",
							"GUID-97001BBA-DF1A-498F-A84A-5F299C074A2B.html",
							"GUID-D079C138-07D1-4444-A8C1-C3F25EEA41D1.html",
							"GUID-D079C138-07D1-4444-A8C1-C3F25EEA41D1.html",
							"GUID-D079C138-07D1-4444-A8C1-C3F25EEA41D1.html",
							"GUID-D079C138-07D1-4444-A8C1-C3F25EEA41D1.html",
							"GUID-D079C138-07D1-4444-A8C1-C3F25EEA41D1.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-27844A4B-0D89-4769-A666-2AA16CD5AF8B.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-BE9F4702-94BB-4CCF-A8B4-C871D0534A2F.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-C568757F-10D1-4038-A2EC-20C4995B60D6.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-5B45C49F-ACB8-458B-8D3A-70D0F16F80C8.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-2207F7F0-2D09-483B-B30F-DBB5645E3838.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-0D79B6E8-79C4-45CE-8768-BB088DFCDE6B.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-B273ED4D-A74A-42E4-AAD8-F439823EE6EE.html",
							"GUID-39C93744-0F01-4578-B457-C080F6557CF2.html",
							"GUID-39C93744-0F01-4578-B457-C080F6557CF2.html",
							"GUID-39C93744-0F01-4578-B457-C080F6557CF2.html",
							"GUID-39C93744-0F01-4578-B457-C080F6557CF2.html",
							"GUID-39C93744-0F01-4578-B457-C080F6557CF2.html",
							"GUID-27B3974A-245E-43BF-9BC5-74CCE794E17C.html",
							"GUID-27B3974A-245E-43BF-9BC5-74CCE794E17C.html",
							"GUID-27B3974A-245E-43BF-9BC5-74CCE794E17C.html",
							"GUID-27B3974A-245E-43BF-9BC5-74CCE794E17C.html",
							"GUID-27B3974A-245E-43BF-9BC5-74CCE794E17C.html",
							"GUID-CCDD6F9E-D7A3-4013-8EFC-594372E7A093.html",
							"GUID-CCDD6F9E-D7A3-4013-8EFC-594372E7A093.html",
							"GUID-CCDD6F9E-D7A3-4013-8EFC-594372E7A093.html",
							"GUID-CCDD6F9E-D7A3-4013-8EFC-594372E7A093.html",
							"GUID-CCDD6F9E-D7A3-4013-8EFC-594372E7A093.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-70F913E0-2E50-420B-9097-2F40CBFB01C2.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-1954BB33-D389-4DF8-96F8-479D1EEB3A2D.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-89186210-434F-406C-B3B9-058AC433C5BD.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-9E37D9A7-0407-45A9-AA4E-882535325B21.html",
							"GUID-76AD1631-D3AC-4EA9-915F-B4FD7E805477.html",
							"GUID-76AD1631-D3AC-4EA9-915F-B4FD7E805477.html",
							"GUID-76AD1631-D3AC-4EA9-915F-B4FD7E805477.html",
							"GUID-76AD1631-D3AC-4EA9-915F-B4FD7E805477.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-8C811011-E334-4F53-A3A3-A8D50D460163.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-47F37577-A61C-4DAB-A8CA-F56548A9804C.html",
							"GUID-F222E22D-493E-4F16-8480-6F7AAD168EB9.html","GUID-58E7375E-3E3E-422B-9409-00227DB255DF.html","GUID-9E26CBDD-2773-4BF0-AD0D-7EF0D54B86E9.html","GUID-6EE092EF-3A5C-43A8-8198-412C7C697490.html","GUID-F0DE7EF9-CE88-4BF5-AEFE-FBFEF6C21196.html","GUID-00D86280-4AF3-443E-B401-08DE47B4A817.html","GUID-4352CA60-B09A-4632-A523-DB0E0EDA0569.html","GUID-663DEFD6-D39A-42F2-AB4E-0BC5B96E0F88.html","GUID-F5DCF72D-86AA-470F-B0EE-E1A317AFBA9C.html","GUID-6F626455-1D43-42CA-B8D1-95196127F1E7.html","GUID-5FB701DC-952A-48D5-8C9C-6298B25573DF.html","GUID-A04857C4-3371-45BE-A50F-73B87640E917.html","GUID-D9E1D8EF-855A-4FCD-B4A2-0F07392A6FF8.html","GUID-28147A3F-5083-48E3-97F0-2D2C69A41224.html","GUID-D496074C-14A3-4BD2-82CD-1BED7717BFAA.html","GUID-744A6E79-9576-4DD2-9D74-AD535FC83544.html","GUID-7272130C-8E6E-4A7D-AC55-E3F748492C71.html","GUID-2BE53DF1-3F4A-47AF-8F8F-B70F855A9A9B.html","GUID-AC63CD9D-49A9-43C4-9C19-26FB8461730B.html","GUID-565156DB-69EB-46D5-863E-7A7329456648.html","GUID-A3D7C013-8FEB-4B16-926B-85A2FFEE3FDC.html",
							"GUID-A3D7C013-8FEB-4B16-926B-85A2FFEE3FDC.html",
							"GUID-A3D7C013-8FEB-4B16-926B-85A2FFEE3FDC.html",
							"GUID-A3D7C013-8FEB-4B16-926B-85A2FFEE3FDC.html",
							"GUID-0DE9C2E4-57BE-459B-BCDA-804CB87A0587.html",
							"GUID-0DE9C2E4-57BE-459B-BCDA-804CB87A0587.html",
							"GUID-0DE9C2E4-57BE-459B-BCDA-804CB87A0587.html",
							"GUID-0DE9C2E4-57BE-459B-BCDA-804CB87A0587.html",
							"GUID-0312A22C-3A8E-4AFC-B30E-ADC57841FDDD.html",
							"GUID-0312A22C-3A8E-4AFC-B30E-ADC57841FDDD.html",
							"GUID-0312A22C-3A8E-4AFC-B30E-ADC57841FDDD.html",
							"GUID-0312A22C-3A8E-4AFC-B30E-ADC57841FDDD.html",
							"GUID-3D335B11-7A29-4B17-A1DE-DF88BF0D7775.html",
							"GUID-3D335B11-7A29-4B17-A1DE-DF88BF0D7775.html",
							"GUID-3D335B11-7A29-4B17-A1DE-DF88BF0D7775.html",
							"GUID-3D335B11-7A29-4B17-A1DE-DF88BF0D7775.html",
							"GUID-16A21455-F516-4100-A40F-0BF482CD6427.html",
							"GUID-16A21455-F516-4100-A40F-0BF482CD6427.html",
							"GUID-16A21455-F516-4100-A40F-0BF482CD6427.html",
							"GUID-16A21455-F516-4100-A40F-0BF482CD6427.html",
							"GUID-85566BFD-E776-4955-9FBF-F5992F78AF36.html",
							"GUID-85566BFD-E776-4955-9FBF-F5992F78AF36.html",
							"GUID-85566BFD-E776-4955-9FBF-F5992F78AF36.html",
							"GUID-85566BFD-E776-4955-9FBF-F5992F78AF36.html",
							"GUID-3D3DAB4D-5FC8-4CAA-BE96-E93529DDD62E.html",
							"GUID-3D3DAB4D-5FC8-4CAA-BE96-E93529DDD62E.html",
							"GUID-3D3DAB4D-5FC8-4CAA-BE96-E93529DDD62E.html",
							"GUID-3D3DAB4D-5FC8-4CAA-BE96-E93529DDD62E.html",
							"GUID-FBAA7B37-37A8-4DAC-8CE8-BD431738030C.html",
							"GUID-FBAA7B37-37A8-4DAC-8CE8-BD431738030C.html",
							"GUID-FBAA7B37-37A8-4DAC-8CE8-BD431738030C.html",
							"GUID-FBAA7B37-37A8-4DAC-8CE8-BD431738030C.html",
							"GUID-EA934C03-B32A-4AA2-942F-7DF2EECC1C89.html",
							"GUID-EA934C03-B32A-4AA2-942F-7DF2EECC1C89.html",
							"GUID-EA934C03-B32A-4AA2-942F-7DF2EECC1C89.html",
							"GUID-EA934C03-B32A-4AA2-942F-7DF2EECC1C89.html",
							"GUID-9A3A86AC-4326-4951-91DA-05D646B2880A.html",
							"GUID-9A3A86AC-4326-4951-91DA-05D646B2880A.html",
							"GUID-9A3A86AC-4326-4951-91DA-05D646B2880A.html",
							"GUID-9A3A86AC-4326-4951-91DA-05D646B2880A.html",
							"GUID-A7968286-51F8-4FDE-A365-703C7A9F3391.html","GUID-08754DED-539F-4A79-819A-92C50CC7F476.html",
							"GUID-08754DED-539F-4A79-819A-92C50CC7F476.html",
							"GUID-08754DED-539F-4A79-819A-92C50CC7F476.html",
							"GUID-06D6B68D-2F13-4AF3-9054-4592F7B9DAED.html","GUID-C32B05F2-F4C5-410D-99E4-5B57FFAAC314.html",
							"GUID-C32B05F2-F4C5-410D-99E4-5B57FFAAC314.html",
							"GUID-C32B05F2-F4C5-410D-99E4-5B57FFAAC314.html",
							"GUID-C32B05F2-F4C5-410D-99E4-5B57FFAAC314.html",
							"GUID-0FB34A10-3739-4D56-ACCE-171E00C9AF95.html",
							"GUID-0FB34A10-3739-4D56-ACCE-171E00C9AF95.html",
							"GUID-0FB34A10-3739-4D56-ACCE-171E00C9AF95.html",
							"GUID-0FB34A10-3739-4D56-ACCE-171E00C9AF95.html",
							"GUID-0032E928-6491-42A7-AE71-D5100978F0FF.html",
							"GUID-0032E928-6491-42A7-AE71-D5100978F0FF.html",
							"GUID-0032E928-6491-42A7-AE71-D5100978F0FF.html",
							"GUID-0032E928-6491-42A7-AE71-D5100978F0FF.html",
							"GUID-B983D1FA-F401-4922-AD88-4B16DC80D90B.html",
							"GUID-B983D1FA-F401-4922-AD88-4B16DC80D90B.html",
							"GUID-B983D1FA-F401-4922-AD88-4B16DC80D90B.html",
							"GUID-B983D1FA-F401-4922-AD88-4B16DC80D90B.html",
							"GUID-CCB775A1-6DAD-4557-86A5-F990182C48DF.html",
							"GUID-CCB775A1-6DAD-4557-86A5-F990182C48DF.html",
							"GUID-CCB775A1-6DAD-4557-86A5-F990182C48DF.html",
							"GUID-CCB775A1-6DAD-4557-86A5-F990182C48DF.html",
							"GUID-3F724019-1086-44AE-B652-9F0C344CE5A4.html",
							"GUID-3F724019-1086-44AE-B652-9F0C344CE5A4.html",
							"GUID-3F724019-1086-44AE-B652-9F0C344CE5A4.html",
							"GUID-3F724019-1086-44AE-B652-9F0C344CE5A4.html",
							"GUID-449737F1-DD6B-42FC-899A-678331FFF309.html",
							"GUID-449737F1-DD6B-42FC-899A-678331FFF309.html",
							"GUID-449737F1-DD6B-42FC-899A-678331FFF309.html",
							"GUID-449737F1-DD6B-42FC-899A-678331FFF309.html",
							"GUID-07A95D48-6AF6-4341-9925-7130B775D353.html",
							"GUID-07A95D48-6AF6-4341-9925-7130B775D353.html",
							"GUID-07A95D48-6AF6-4341-9925-7130B775D353.html",
							"GUID-07A95D48-6AF6-4341-9925-7130B775D353.html",
							"GUID-BB73E763-764B-4C1E-8661-113754518D9F.html",
							"GUID-BB73E763-764B-4C1E-8661-113754518D9F.html",
							"GUID-BB73E763-764B-4C1E-8661-113754518D9F.html",
							"GUID-BB73E763-764B-4C1E-8661-113754518D9F.html",
							"GUID-69398391-77B0-42FC-BD75-DA6ACFD647FD.html","GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-4EC81BF3-ECD0-4C1F-8289-11CE1E77164A.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-C5F52D69-1230-4918-9DD1-55F4C8A93919.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-2E0BE7AA-C07D-4E37-8C47-10AA2CF067A5.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-B4A0FB8D-3068-42DD-AD63-2643CA22C029.html",
							"GUID-F957828B-8C4E-4603-AE21-3798C244699C.html",
							"GUID-F957828B-8C4E-4603-AE21-3798C244699C.html",
							"GUID-F957828B-8C4E-4603-AE21-3798C244699C.html",
							"GUID-F957828B-8C4E-4603-AE21-3798C244699C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-6FA97726-84F5-49C2-8F60-98D2716A5B9C.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-F926F893-B243-4000-9C9E-5BABB0E8D8CC.html",
							"GUID-C83A963B-3DB7-4230-ACDA-E61F19B47ACC.html",
							"GUID-C83A963B-3DB7-4230-ACDA-E61F19B47ACC.html",
							"GUID-C83A963B-3DB7-4230-ACDA-E61F19B47ACC.html",
							"GUID-C83A963B-3DB7-4230-ACDA-E61F19B47ACC.html",
							"GUID-C83A963B-3DB7-4230-ACDA-E61F19B47ACC.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-59C45C90-FB47-406A-80C4-6FAAFB6134AB.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-79FCDA86-AC40-4080-8871-3D7FFEDB5383.html",
							"GUID-3BF97A62-1318-41A7-8F9D-E5845E0E8C2A.html",
							"GUID-3BF97A62-1318-41A7-8F9D-E5845E0E8C2A.html",
							"GUID-3BF97A62-1318-41A7-8F9D-E5845E0E8C2A.html",
							"GUID-3BF97A62-1318-41A7-8F9D-E5845E0E8C2A.html",
							"GUID-E43CD7B5-B5AE-4019-A8AB-501B2100EB2E.html","GUID-C0E89E8B-9221-4464-82E7-8D2B06424380.html","GUID-8949AA60-12E7-47A0-AE83-0C0D42124F2B.html","GUID-9E9A14DE-97C6-4905-ABF0-BFF3A4BE5F02.html","GUID-8C116D0F-C421-409F-9AB8-6CF140580F8B.html","GUID-76A1E229-6E51-461A-8EFC-347DDD946307.html",
							"GUID-76A1E229-6E51-461A-8EFC-347DDD946307.html",
							"GUID-76A1E229-6E51-461A-8EFC-347DDD946307.html",
							"GUID-76A1E229-6E51-461A-8EFC-347DDD946307.html",
							"GUID-805B05C3-A591-4CB9-B131-C5600D129ECD.html",
							"GUID-805B05C3-A591-4CB9-B131-C5600D129ECD.html",
							"GUID-805B05C3-A591-4CB9-B131-C5600D129ECD.html",
							"GUID-805B05C3-A591-4CB9-B131-C5600D129ECD.html",
							"GUID-FB234243-2896-4D24-AD0B-EAAA85551C4D.html",
							"GUID-FB234243-2896-4D24-AD0B-EAAA85551C4D.html",
							"GUID-FB234243-2896-4D24-AD0B-EAAA85551C4D.html",
							"GUID-FB234243-2896-4D24-AD0B-EAAA85551C4D.html",
							"GUID-A3107AB3-7CF4-4B0E-9D44-1C68B02E9A01.html",
							"GUID-A3107AB3-7CF4-4B0E-9D44-1C68B02E9A01.html",
							"GUID-A3107AB3-7CF4-4B0E-9D44-1C68B02E9A01.html",
							"GUID-A3107AB3-7CF4-4B0E-9D44-1C68B02E9A01.html",
							"GUID-D078B321-B4BA-40A7-9598-C8618E672EC4.html",
							"GUID-D078B321-B4BA-40A7-9598-C8618E672EC4.html",
							"GUID-D078B321-B4BA-40A7-9598-C8618E672EC4.html",
							"GUID-D078B321-B4BA-40A7-9598-C8618E672EC4.html",
							"GUID-18C06DA4-1B84-4764-8D8B-2AF416ADE471.html",
							"GUID-18C06DA4-1B84-4764-8D8B-2AF416ADE471.html",
							"GUID-18C06DA4-1B84-4764-8D8B-2AF416ADE471.html",
							"GUID-18C06DA4-1B84-4764-8D8B-2AF416ADE471.html",
							"GUID-18C06DA4-1B84-4764-8D8B-2AF416ADE471.html",
							"GUID-2D7C0D3E-F026-4F79-85C2-2AA6937498AE.html",
							"GUID-2D7C0D3E-F026-4F79-85C2-2AA6937498AE.html",
							"GUID-2D7C0D3E-F026-4F79-85C2-2AA6937498AE.html",
							"GUID-2D7C0D3E-F026-4F79-85C2-2AA6937498AE.html",
							"GUID-1AA48446-81ED-4E0D-A92A-E94629AE1C82.html","GUID-DA3C91C3-3ACA-4850-B469-FDF748DD2D87.html",
							"GUID-DA3C91C3-3ACA-4850-B469-FDF748DD2D87.html",
							"GUID-DA3C91C3-3ACA-4850-B469-FDF748DD2D87.html",
							"GUID-32B57AF4-FA13-419A-852F-73C4E0457A07.html","GUID-813F45B3-EEDA-4FC9-B61B-6C8E550EC7CB.html",
							"GUID-813F45B3-EEDA-4FC9-B61B-6C8E550EC7CB.html",
							"GUID-813F45B3-EEDA-4FC9-B61B-6C8E550EC7CB.html",
							"GUID-813F45B3-EEDA-4FC9-B61B-6C8E550EC7CB.html",
							"GUID-E6525AA6-8DD9-4BB5-B58E-A79C8775ECDC.html",
							"GUID-E6525AA6-8DD9-4BB5-B58E-A79C8775ECDC.html",
							"GUID-E6525AA6-8DD9-4BB5-B58E-A79C8775ECDC.html",
							"GUID-E6525AA6-8DD9-4BB5-B58E-A79C8775ECDC.html",
							"GUID-33EF2D17-CB4B-444F-80DF-1411198F4DC2.html",
							"GUID-33EF2D17-CB4B-444F-80DF-1411198F4DC2.html",
							"GUID-33EF2D17-CB4B-444F-80DF-1411198F4DC2.html",
							"GUID-33EF2D17-CB4B-444F-80DF-1411198F4DC2.html",
							"GUID-7C19BA9C-CE3F-4A1E-8873-C1CEB1B73D88.html",
							"GUID-7C19BA9C-CE3F-4A1E-8873-C1CEB1B73D88.html",
							"GUID-7C19BA9C-CE3F-4A1E-8873-C1CEB1B73D88.html",
							"GUID-7C19BA9C-CE3F-4A1E-8873-C1CEB1B73D88.html",
							"GUID-5A1B5F63-8623-4072-A189-83EB2D298CCC.html",
							"GUID-5A1B5F63-8623-4072-A189-83EB2D298CCC.html",
							"GUID-5A1B5F63-8623-4072-A189-83EB2D298CCC.html",
							"GUID-5A1B5F63-8623-4072-A189-83EB2D298CCC.html",
							"GUID-449B27B3-B2CB-4972-8775-914526A98C41.html",
							"GUID-449B27B3-B2CB-4972-8775-914526A98C41.html",
							"GUID-449B27B3-B2CB-4972-8775-914526A98C41.html",
							"GUID-449B27B3-B2CB-4972-8775-914526A98C41.html",
							"GUID-021A932F-25DC-45AF-AFD4-9E36697FC7C3.html",
							"GUID-021A932F-25DC-45AF-AFD4-9E36697FC7C3.html",
							"GUID-021A932F-25DC-45AF-AFD4-9E36697FC7C3.html",
							"GUID-021A932F-25DC-45AF-AFD4-9E36697FC7C3.html",
							"GUID-906B1D99-D71E-4F31-BF51-F39E35121AED.html",
							"GUID-906B1D99-D71E-4F31-BF51-F39E35121AED.html",
							"GUID-906B1D99-D71E-4F31-BF51-F39E35121AED.html",
							"GUID-906B1D99-D71E-4F31-BF51-F39E35121AED.html",
							"GUID-E6E1E5CE-5FA9-41DA-88AC-CFF9FF4BF96D.html",
							"GUID-E6E1E5CE-5FA9-41DA-88AC-CFF9FF4BF96D.html",
							"GUID-E6E1E5CE-5FA9-41DA-88AC-CFF9FF4BF96D.html",
							"GUID-E6E1E5CE-5FA9-41DA-88AC-CFF9FF4BF96D.html",
							"GUID-E3CFA2EA-B215-40E0-A309-B78B89D0C94D.html",
							"GUID-E3CFA2EA-B215-40E0-A309-B78B89D0C94D.html",
							"GUID-E3CFA2EA-B215-40E0-A309-B78B89D0C94D.html",
							"GUID-E3CFA2EA-B215-40E0-A309-B78B89D0C94D.html",
							"GUID-FC3A0847-D5F3-4E67-B9D9-DB47AB7F5D1A.html",
							"GUID-FC3A0847-D5F3-4E67-B9D9-DB47AB7F5D1A.html",
							"GUID-FC3A0847-D5F3-4E67-B9D9-DB47AB7F5D1A.html",
							"GUID-FC3A0847-D5F3-4E67-B9D9-DB47AB7F5D1A.html",
							"GUID-922D7495-1416-497C-BDE2-B2D3D86CDC0C.html",
							"GUID-922D7495-1416-497C-BDE2-B2D3D86CDC0C.html",
							"GUID-922D7495-1416-497C-BDE2-B2D3D86CDC0C.html",
							"GUID-922D7495-1416-497C-BDE2-B2D3D86CDC0C.html",
							"GUID-25D32CF6-2EE5-4968-935D-3987C63824F6.html",
							"GUID-25D32CF6-2EE5-4968-935D-3987C63824F6.html",
							"GUID-25D32CF6-2EE5-4968-935D-3987C63824F6.html",
							"GUID-25D32CF6-2EE5-4968-935D-3987C63824F6.html",
							"GUID-22237605-780A-45D3-969E-7E7AA78E9CFD.html",
							"GUID-22237605-780A-45D3-969E-7E7AA78E9CFD.html",
							"GUID-22237605-780A-45D3-969E-7E7AA78E9CFD.html",
							"GUID-22237605-780A-45D3-969E-7E7AA78E9CFD.html",
							"GUID-46E1439B-0ED7-49B5-94FB-06B47F5715AC.html",
							"GUID-46E1439B-0ED7-49B5-94FB-06B47F5715AC.html",
							"GUID-46E1439B-0ED7-49B5-94FB-06B47F5715AC.html",
							"GUID-46E1439B-0ED7-49B5-94FB-06B47F5715AC.html",
							"GUID-86544813-5AE5-4C38-BFD4-0C2C4D3BD7A8.html",
							"GUID-86544813-5AE5-4C38-BFD4-0C2C4D3BD7A8.html",
							"GUID-86544813-5AE5-4C38-BFD4-0C2C4D3BD7A8.html",
							"GUID-86544813-5AE5-4C38-BFD4-0C2C4D3BD7A8.html",
							"GUID-CF89C436-BFFD-4EDB-96E3-F1B78F108F65.html",
							"GUID-CF89C436-BFFD-4EDB-96E3-F1B78F108F65.html",
							"GUID-CF89C436-BFFD-4EDB-96E3-F1B78F108F65.html",
							"GUID-CF89C436-BFFD-4EDB-96E3-F1B78F108F65.html",
							"GUID-31EFA20E-AA7F-4246-AC76-D05BABEDE63D.html",
							"GUID-31EFA20E-AA7F-4246-AC76-D05BABEDE63D.html",
							"GUID-31EFA20E-AA7F-4246-AC76-D05BABEDE63D.html",
							"GUID-31EFA20E-AA7F-4246-AC76-D05BABEDE63D.html",
							"GUID-76444E97-00B7-4E9F-8BAF-72A35B04399D.html",
							"GUID-76444E97-00B7-4E9F-8BAF-72A35B04399D.html",
							"GUID-76444E97-00B7-4E9F-8BAF-72A35B04399D.html",
							"GUID-76444E97-00B7-4E9F-8BAF-72A35B04399D.html",
							"GUID-35D20575-B617-4336-AD23-FF93337F4382.html",
							"GUID-35D20575-B617-4336-AD23-FF93337F4382.html",
							"GUID-35D20575-B617-4336-AD23-FF93337F4382.html",
							"GUID-35D20575-B617-4336-AD23-FF93337F4382.html",
							"GUID-9CB8F27C-7921-4D62-8EBB-A41DD9F9D4D4.html","GUID-1EC19C3B-EC4F-43A1-9ECF-2F6400D4B65F.html",
							"GUID-1EC19C3B-EC4F-43A1-9ECF-2F6400D4B65F.html",
							"GUID-1EC19C3B-EC4F-43A1-9ECF-2F6400D4B65F.html",
							"GUID-1EC19C3B-EC4F-43A1-9ECF-2F6400D4B65F.html",
							"GUID-1EC19C3B-EC4F-43A1-9ECF-2F6400D4B65F.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-8078D361-D852-49FD-9869-5B5A386EAA99.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-EB5E8584-CD41-4E4A-99A8-826F3E47610A.html",
							"GUID-3ECEE352-858E-43C7-B2DD-09DC2AC5E665.html",
							"GUID-3ECEE352-858E-43C7-B2DD-09DC2AC5E665.html",
							"GUID-3ECEE352-858E-43C7-B2DD-09DC2AC5E665.html",
							"GUID-3ECEE352-858E-43C7-B2DD-09DC2AC5E665.html",
							"GUID-3ECEE352-858E-43C7-B2DD-09DC2AC5E665.html",
							"GUID-C3635D6A-0584-41B8-BD01-46299A79766A.html",
							"GUID-C3635D6A-0584-41B8-BD01-46299A79766A.html",
							"GUID-C3635D6A-0584-41B8-BD01-46299A79766A.html",
							"GUID-C3635D6A-0584-41B8-BD01-46299A79766A.html",
							"GUID-C3635D6A-0584-41B8-BD01-46299A79766A.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-8B9C14EF-F190-4499-A650-417986D718E2.html",
							"GUID-C59C841B-36F6-4EA9-AB20-DAF109C0EE09.html",
							"GUID-C59C841B-36F6-4EA9-AB20-DAF109C0EE09.html",
							"GUID-C59C841B-36F6-4EA9-AB20-DAF109C0EE09.html",
							"GUID-C59C841B-36F6-4EA9-AB20-DAF109C0EE09.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-8F2CEAE0-3C28-4A9B-8A69-166F2E5F2B67.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-DE4C319B-5ABC-417B-A86A-9E97050B4D1B.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-B99A5512-3B29-45B4-81E1-523E377F050A.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-9AA3A711-526A-4494-A4FB-2852612A27BD.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-637C51AA-E8C7-4807-9870-90884C6B19D4.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-76DE5FAC-EFDF-4A89-B9AA-3B406D9D5ECA.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-3AE9327E-DE9F-4D39-BC29-8B88540CC72D.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-78370786-946A-4509-9283-3E6A53B12A3E.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-869D5D0C-8A8A-4522-8581-AC361E6EED50.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-5561E14B-0648-49F1-935D-DEEC073DFF0A.html",
							"GUID-D0C13598-2B10-4D13-B20A-8FE097B7D2FC.html","GUID-489DE0D0-E3D7-4B1A-B776-3A9C86BB01BF.html","GUID-5DA8EE19-9E1A-4642-B2D1-C78DE03EBB6D.html","GUID-ED1849F3-9FE1-4A77-A8F6-06ADBC586BD2.html","GUID-77FD37F0-8285-4D2F-B70A-33CBF12305A9.html","GUID-9FE61F23-F2FC-48F7-AC33-8C7D9AB8C92E.html","GUID-FDC67FAE-247D-40B6-BFE7-28F50BF39738.html","GUID-19EE6314-D30F-4464-B073-9A686CD12956.html","GUID-0D91D610-DAD1-4B1D-9AA7-5578DB846151.html","GUID-C2EF8391-974A-4DAA-A59E-B0AD599179CB.html","GUID-38FC317C-E6C8-42B8-87C6-5C1BB64470E1.html",
							"GUID-38FC317C-E6C8-42B8-87C6-5C1BB64470E1.html",
							"GUID-38FC317C-E6C8-42B8-87C6-5C1BB64470E1.html",
							"GUID-38FC317C-E6C8-42B8-87C6-5C1BB64470E1.html",
							"GUID-FF653E32-C484-4067-8FCE-3EAFB2E2FD23.html","GUID-250D7E0B-1694-469B-86AF-FD114D976DD3.html",
							"GUID-250D7E0B-1694-469B-86AF-FD114D976DD3.html",
							"GUID-250D7E0B-1694-469B-86AF-FD114D976DD3.html",
							"GUID-8A054633-589D-4E84-8D63-46AA8C718053.html","GUID-7D4B4619-0088-47EB-9D17-E58AF6F9A92D.html",
							"GUID-7D4B4619-0088-47EB-9D17-E58AF6F9A92D.html",
							"GUID-7D4B4619-0088-47EB-9D17-E58AF6F9A92D.html",
							"GUID-7D4B4619-0088-47EB-9D17-E58AF6F9A92D.html",
							"GUID-CB86B75E-FE04-41DF-8456-C1BA7DDBE80F.html",
							"GUID-CB86B75E-FE04-41DF-8456-C1BA7DDBE80F.html",
							"GUID-CB86B75E-FE04-41DF-8456-C1BA7DDBE80F.html",
							"GUID-E32692C4-5F12-48DC-95DA-F8E4C25589D8.html","GUID-E07C38D5-A4A3-436F-B8CA-33C3491DD12C.html",
							"GUID-E07C38D5-A4A3-436F-B8CA-33C3491DD12C.html",
							"GUID-E07C38D5-A4A3-436F-B8CA-33C3491DD12C.html",
							"GUID-E07C38D5-A4A3-436F-B8CA-33C3491DD12C.html",
							"GUID-061C8DC9-61EB-48A6-85AD-83288398576C.html","GUID-11E36C17-332C-493E-85E7-F1083B960F0F.html","GUID-BBAA5BA0-B61A-402A-BC7F-FA287D4103F1.html",
							"GUID-BBAA5BA0-B61A-402A-BC7F-FA287D4103F1.html",
							"GUID-BBAA5BA0-B61A-402A-BC7F-FA287D4103F1.html",
							"GUID-BBAA5BA0-B61A-402A-BC7F-FA287D4103F1.html",
							"GUID-CB065F01-98A0-4CC3-9687-4A309D344E6A.html",
							"GUID-CB065F01-98A0-4CC3-9687-4A309D344E6A.html",
							"GUID-CB065F01-98A0-4CC3-9687-4A309D344E6A.html",
							"GUID-CB065F01-98A0-4CC3-9687-4A309D344E6A.html",
							"GUID-7D3B184F-37C8-494D-B415-C4FE08A36C1E.html",
							"GUID-7D3B184F-37C8-494D-B415-C4FE08A36C1E.html",
							"GUID-7D3B184F-37C8-494D-B415-C4FE08A36C1E.html",
							"GUID-7D3B184F-37C8-494D-B415-C4FE08A36C1E.html",
							"GUID-F248741C-40D3-461D-A77B-1B0E64AC9AFF.html","GUID-429F6A52-7445-4362-B03A-84F9EAE89878.html",
							"GUID-429F6A52-7445-4362-B03A-84F9EAE89878.html",
							"GUID-429F6A52-7445-4362-B03A-84F9EAE89878.html",
							"GUID-2E5A432D-3327-49F3-86C5-ED32E0EE0630.html","GUID-3831075E-FD41-4C5B-851C-F284FD30D6CA.html",
							"GUID-3831075E-FD41-4C5B-851C-F284FD30D6CA.html",
							"GUID-3831075E-FD41-4C5B-851C-F284FD30D6CA.html",
							"GUID-3831075E-FD41-4C5B-851C-F284FD30D6CA.html",
							"GUID-1AD2312F-9177-4591-866D-1665F2E0C19D.html",
							"GUID-1AD2312F-9177-4591-866D-1665F2E0C19D.html",
							"GUID-1AD2312F-9177-4591-866D-1665F2E0C19D.html",
							"GUID-1AD2312F-9177-4591-866D-1665F2E0C19D.html",
							"GUID-06535ED7-EBFB-40E5-89CB-7F339A664FE5.html",
							"GUID-06535ED7-EBFB-40E5-89CB-7F339A664FE5.html",
							"GUID-06535ED7-EBFB-40E5-89CB-7F339A664FE5.html",
							"GUID-E7870D64-6261-49AC-851A-8CD4FDD88C9B.html",
							"GUID-E7870D64-6261-49AC-851A-8CD4FDD88C9B.html",
							"GUID-E7870D64-6261-49AC-851A-8CD4FDD88C9B.html",
							"GUID-E7870D64-6261-49AC-851A-8CD4FDD88C9B.html",
							"GUID-DC5CA8C9-70F0-4101-BE19-9B77D60B1549.html",
							"GUID-DC5CA8C9-70F0-4101-BE19-9B77D60B1549.html",
							"GUID-DC5CA8C9-70F0-4101-BE19-9B77D60B1549.html",
							"GUID-BCD34C15-EAC6-45F0-97B7-E2EBA942CFEE.html","GUID-A4AC16B3-8D15-4B54-B5C0-107EE553265C.html",
							"GUID-A4AC16B3-8D15-4B54-B5C0-107EE553265C.html",
							"GUID-A4AC16B3-8D15-4B54-B5C0-107EE553265C.html",
							"GUID-A4AC16B3-8D15-4B54-B5C0-107EE553265C.html",
							"GUID-708FDB69-CD95-42FC-B560-34F6BDE26061.html",
							"GUID-708FDB69-CD95-42FC-B560-34F6BDE26061.html",
							"GUID-708FDB69-CD95-42FC-B560-34F6BDE26061.html",
							"GUID-708FDB69-CD95-42FC-B560-34F6BDE26061.html",
							"GUID-708FDB69-CD95-42FC-B560-34F6BDE26061.html",
							"GUID-CFD21637-A89E-4818-8DC1-E7549F907BD2.html",
							"GUID-CFD21637-A89E-4818-8DC1-E7549F907BD2.html",
							"GUID-CFD21637-A89E-4818-8DC1-E7549F907BD2.html",
							"GUID-CFD21637-A89E-4818-8DC1-E7549F907BD2.html",
							"GUID-71E09A9F-8ACA-4A89-899C-3E4AB636ADD5.html",
							"GUID-71E09A9F-8ACA-4A89-899C-3E4AB636ADD5.html",
							"GUID-71E09A9F-8ACA-4A89-899C-3E4AB636ADD5.html",
							"GUID-71E09A9F-8ACA-4A89-899C-3E4AB636ADD5.html",
							"GUID-71E09A9F-8ACA-4A89-899C-3E4AB636ADD5.html",
							"GUID-37BF6B8C-D4FC-46EC-92B9-4A33D8D389A0.html",
							"GUID-37BF6B8C-D4FC-46EC-92B9-4A33D8D389A0.html",
							"GUID-37BF6B8C-D4FC-46EC-92B9-4A33D8D389A0.html",
							"GUID-37BF6B8C-D4FC-46EC-92B9-4A33D8D389A0.html",
							"GUID-8A3A624B-040C-4F8C-81A8-B0EAB4DFCFC3.html",
							"GUID-8A3A624B-040C-4F8C-81A8-B0EAB4DFCFC3.html",
							"GUID-8A3A624B-040C-4F8C-81A8-B0EAB4DFCFC3.html",
							"GUID-8A3A624B-040C-4F8C-81A8-B0EAB4DFCFC3.html",
							"GUID-8A3A624B-040C-4F8C-81A8-B0EAB4DFCFC3.html",
							"GUID-283B3D03-88D9-4AF3-932C-3626CD842046.html",
							"GUID-283B3D03-88D9-4AF3-932C-3626CD842046.html",
							"GUID-283B3D03-88D9-4AF3-932C-3626CD842046.html",
							"GUID-283B3D03-88D9-4AF3-932C-3626CD842046.html",
							"GUID-BF00D53F-7EF1-475D-95AA-DCA05EC6F2EB.html",
							"GUID-BF00D53F-7EF1-475D-95AA-DCA05EC6F2EB.html",
							"GUID-BF00D53F-7EF1-475D-95AA-DCA05EC6F2EB.html",
							"GUID-BF00D53F-7EF1-475D-95AA-DCA05EC6F2EB.html",
							"GUID-AD5BEAC0-DBAF-4F58-A1A4-DF0A4A4E4A48.html",
							"GUID-AD5BEAC0-DBAF-4F58-A1A4-DF0A4A4E4A48.html",
							"GUID-AD5BEAC0-DBAF-4F58-A1A4-DF0A4A4E4A48.html",
							"GUID-AD5BEAC0-DBAF-4F58-A1A4-DF0A4A4E4A48.html",
							"GUID-11CFB628-F70B-46D2-9EA2-1D51840F1A78.html",
							"GUID-11CFB628-F70B-46D2-9EA2-1D51840F1A78.html",
							"GUID-11CFB628-F70B-46D2-9EA2-1D51840F1A78.html",
							"GUID-11CFB628-F70B-46D2-9EA2-1D51840F1A78.html",
							"GUID-11CFB628-F70B-46D2-9EA2-1D51840F1A78.html",
							"GUID-44ECFEFE-406D-4DA7-BEED-4F6C8997A521.html",
							"GUID-44ECFEFE-406D-4DA7-BEED-4F6C8997A521.html",
							"GUID-44ECFEFE-406D-4DA7-BEED-4F6C8997A521.html",
							"GUID-44ECFEFE-406D-4DA7-BEED-4F6C8997A521.html",
							"GUID-8EEA5E4E-40B5-4FBE-BA55-36ABB7C4E32E.html",
							"GUID-8EEA5E4E-40B5-4FBE-BA55-36ABB7C4E32E.html",
							"GUID-8EEA5E4E-40B5-4FBE-BA55-36ABB7C4E32E.html",
							"GUID-8EEA5E4E-40B5-4FBE-BA55-36ABB7C4E32E.html",
							"GUID-A383B91A-CD0E-48B6-9C9F-879838FC7176.html","GUID-423950D3-AD18-4758-99A0-1632E63D9A62.html","GUID-232551B8-4CB8-42F0-86EF-517265EABD34.html",
							"GUID-232551B8-4CB8-42F0-86EF-517265EABD34.html",
							"GUID-232551B8-4CB8-42F0-86EF-517265EABD34.html",
							"GUID-232551B8-4CB8-42F0-86EF-517265EABD34.html",
							"GUID-60BC186A-6C5A-4ABE-B0F9-391C4B40CC18.html",
							"GUID-60BC186A-6C5A-4ABE-B0F9-391C4B40CC18.html",
							"GUID-60BC186A-6C5A-4ABE-B0F9-391C4B40CC18.html",
							"GUID-60BC186A-6C5A-4ABE-B0F9-391C4B40CC18.html",
							"GUID-E48F2A0F-67E0-4999-BCCC-FD8784F524A8.html",
							"GUID-E48F2A0F-67E0-4999-BCCC-FD8784F524A8.html",
							"GUID-E48F2A0F-67E0-4999-BCCC-FD8784F524A8.html",
							"GUID-E48F2A0F-67E0-4999-BCCC-FD8784F524A8.html",
							"GUID-80C46DBA-4FC8-49C3-94EA-755829267AD7.html",
							"GUID-80C46DBA-4FC8-49C3-94EA-755829267AD7.html",
							"GUID-80C46DBA-4FC8-49C3-94EA-755829267AD7.html",
							"GUID-80C46DBA-4FC8-49C3-94EA-755829267AD7.html",
							"GUID-2315B065-4B7A-421C-AC55-122168E3624B.html",
							"GUID-2315B065-4B7A-421C-AC55-122168E3624B.html",
							"GUID-2315B065-4B7A-421C-AC55-122168E3624B.html",
							"GUID-2315B065-4B7A-421C-AC55-122168E3624B.html",
							"GUID-50743802-BA64-42E4-991B-53974AC62A77.html","GUID-E172CBE4-3E38-4F18-9B0E-1D6E5E8EB797.html",
							"GUID-E172CBE4-3E38-4F18-9B0E-1D6E5E8EB797.html",
							"GUID-E172CBE4-3E38-4F18-9B0E-1D6E5E8EB797.html",
							"GUID-E172CBE4-3E38-4F18-9B0E-1D6E5E8EB797.html",
							"GUID-965015D2-EDE8-4792-85DF-17B7B0E47E36.html","GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-CE54FC3A-74F7-44D6-A32D-CFDF7185FA44.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3D6BCFB6-DB5A-4615-A6FC-3D8746D33035.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-3B54258E-9018-4398-8E8A-97974D884A7D.html",
							"GUID-21714A75-A3D2-41AE-AF6B-7AB79CE96BAE.html",
							"GUID-21714A75-A3D2-41AE-AF6B-7AB79CE96BAE.html",
							"GUID-21714A75-A3D2-41AE-AF6B-7AB79CE96BAE.html",
							"GUID-21714A75-A3D2-41AE-AF6B-7AB79CE96BAE.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-E99A7550-1E76-4088-9433-755990BD0CD2.html",
							"GUID-A6B58211-FA46-4EF1-8495-71E376A41BB5.html",
							"GUID-A6B58211-FA46-4EF1-8495-71E376A41BB5.html",
							"GUID-A6B58211-FA46-4EF1-8495-71E376A41BB5.html",
							"GUID-A6B58211-FA46-4EF1-8495-71E376A41BB5.html",
							"GUID-A6B58211-FA46-4EF1-8495-71E376A41BB5.html",
							"GUID-DFAFDD89-A546-4A13-8D70-FE2468958DEC.html","GUID-6252D889-CF34-48B9-9875-902727D90DFF.html","GUID-5CB4FCDE-4F05-4A94-8CF6-BA811DC696D3.html","GUID-2038C870-72E8-4B95-BD46-F5E89532DF0F.html",
							"GUID-2038C870-72E8-4B95-BD46-F5E89532DF0F.html",
							"GUID-2038C870-72E8-4B95-BD46-F5E89532DF0F.html",
							"GUID-2038C870-72E8-4B95-BD46-F5E89532DF0F.html",
							"GUID-9BAF9121-0D45-4E86-B62E-FC8734BCECB2.html",
							"GUID-9BAF9121-0D45-4E86-B62E-FC8734BCECB2.html",
							"GUID-9BAF9121-0D45-4E86-B62E-FC8734BCECB2.html",
							"GUID-9BAF9121-0D45-4E86-B62E-FC8734BCECB2.html",
							"GUID-463DD6C6-3197-4A4A-B3DC-ED686F5342D4.html",
							"GUID-463DD6C6-3197-4A4A-B3DC-ED686F5342D4.html",
							"GUID-463DD6C6-3197-4A4A-B3DC-ED686F5342D4.html",
							"GUID-463DD6C6-3197-4A4A-B3DC-ED686F5342D4.html",
							"GUID-EB4D4567-9AD4-4B35-BF33-33F04F358471.html",
							"GUID-EB4D4567-9AD4-4B35-BF33-33F04F358471.html",
							"GUID-EB4D4567-9AD4-4B35-BF33-33F04F358471.html",
							"GUID-EB4D4567-9AD4-4B35-BF33-33F04F358471.html",
							"GUID-23BBD580-2D33-4506-AAF7-97F7C2EBC436.html",
							"GUID-23BBD580-2D33-4506-AAF7-97F7C2EBC436.html",
							"GUID-23BBD580-2D33-4506-AAF7-97F7C2EBC436.html",
							"GUID-23BBD580-2D33-4506-AAF7-97F7C2EBC436.html",
							"GUID-730288F6-3858-4D97-AAB3-6AA21295106F.html","GUID-65F57110-C2EB-4489-BF68-33BCBDD490B1.html",
							"GUID-65F57110-C2EB-4489-BF68-33BCBDD490B1.html",
							"GUID-65F57110-C2EB-4489-BF68-33BCBDD490B1.html",
							"GUID-E13B9F98-7A79-4432-9405-BDC4164B24A5.html",
							"GUID-E13B9F98-7A79-4432-9405-BDC4164B24A5.html",
							"GUID-E13B9F98-7A79-4432-9405-BDC4164B24A5.html",
							"GUID-E5E92890-D6CE-4B37-AD56-B4D84D746B1B.html","GUID-66C74F48-5805-44E3-A7AF-780B98EFB1FF.html",
							"GUID-66C74F48-5805-44E3-A7AF-780B98EFB1FF.html",
							"GUID-66C74F48-5805-44E3-A7AF-780B98EFB1FF.html",
							"GUID-66C74F48-5805-44E3-A7AF-780B98EFB1FF.html",
							"GUID-22C5DDD7-8788-4F92-8296-4C2AF81765B1.html",
							"GUID-22C5DDD7-8788-4F92-8296-4C2AF81765B1.html",
							"GUID-22C5DDD7-8788-4F92-8296-4C2AF81765B1.html",
							"GUID-22C5DDD7-8788-4F92-8296-4C2AF81765B1.html",
							"GUID-03AE7BE6-C5E4-42F7-958D-49CE07961EA4.html",
							"GUID-03AE7BE6-C5E4-42F7-958D-49CE07961EA4.html",
							"GUID-03AE7BE6-C5E4-42F7-958D-49CE07961EA4.html",
							"GUID-03AE7BE6-C5E4-42F7-958D-49CE07961EA4.html",
							"GUID-FC409981-C6BE-4FBD-989E-250BD6C34E2C.html",
							"GUID-FC409981-C6BE-4FBD-989E-250BD6C34E2C.html",
							"GUID-FC409981-C6BE-4FBD-989E-250BD6C34E2C.html",
							"GUID-FC409981-C6BE-4FBD-989E-250BD6C34E2C.html",
							"GUID-22294B6D-CAE0-45D6-A575-A8A9729485A1.html",
							"GUID-22294B6D-CAE0-45D6-A575-A8A9729485A1.html",
							"GUID-22294B6D-CAE0-45D6-A575-A8A9729485A1.html",
							"GUID-A26F4543-1383-442A-94FE-C62D27166B01.html",
							"GUID-A26F4543-1383-442A-94FE-C62D27166B01.html",
							"GUID-A26F4543-1383-442A-94FE-C62D27166B01.html",
							"GUID-A26F4543-1383-442A-94FE-C62D27166B01.html",
							"GUID-042F18C3-0E27-4773-9E32-B896B54D58B0.html",
							"GUID-042F18C3-0E27-4773-9E32-B896B54D58B0.html",
							"GUID-042F18C3-0E27-4773-9E32-B896B54D58B0.html",
							"GUID-042F18C3-0E27-4773-9E32-B896B54D58B0.html",
							"GUID-8C403F76-7253-4111-A068-5CC927AC0F20.html",
							"GUID-8C403F76-7253-4111-A068-5CC927AC0F20.html",
							"GUID-8C403F76-7253-4111-A068-5CC927AC0F20.html",
							"GUID-8C403F76-7253-4111-A068-5CC927AC0F20.html",
							"GUID-22C211D5-4C9B-4E9D-8E7A-C7D1F72C268D.html",
							"GUID-22C211D5-4C9B-4E9D-8E7A-C7D1F72C268D.html",
							"GUID-22C211D5-4C9B-4E9D-8E7A-C7D1F72C268D.html",
							"GUID-22C211D5-4C9B-4E9D-8E7A-C7D1F72C268D.html",
							"GUID-0E382A98-AD4D-4EF5-8DD7-0F1DAECA431F.html",
							"GUID-0E382A98-AD4D-4EF5-8DD7-0F1DAECA431F.html",
							"GUID-0E382A98-AD4D-4EF5-8DD7-0F1DAECA431F.html",
							"GUID-0E382A98-AD4D-4EF5-8DD7-0F1DAECA431F.html",
							"GUID-800A2FAD-BA38-4F83-8DC4-CAB00ECDD31A.html",
							"GUID-800A2FAD-BA38-4F83-8DC4-CAB00ECDD31A.html",
							"GUID-800A2FAD-BA38-4F83-8DC4-CAB00ECDD31A.html",
							"GUID-800A2FAD-BA38-4F83-8DC4-CAB00ECDD31A.html",
							"GUID-C213A095-3AE2-4E42-8DA7-443CE189EE4C.html","GUID-EB309CD0-E33B-4921-92C2-A73E4B16D02F.html",
							"GUID-EB309CD0-E33B-4921-92C2-A73E4B16D02F.html",
							"GUID-EB309CD0-E33B-4921-92C2-A73E4B16D02F.html",
							"GUID-EB309CD0-E33B-4921-92C2-A73E4B16D02F.html",
							"GUID-EB309CD0-E33B-4921-92C2-A73E4B16D02F.html",
							"GUID-C9002401-CB18-47A6-8B11-B5A827EA9F37.html",
							"GUID-C9002401-CB18-47A6-8B11-B5A827EA9F37.html",
							"GUID-C9002401-CB18-47A6-8B11-B5A827EA9F37.html",
							"GUID-C9002401-CB18-47A6-8B11-B5A827EA9F37.html",
							"GUID-C9002401-CB18-47A6-8B11-B5A827EA9F37.html",
							"GUID-2D00947A-7154-4BC4-91B7-B9404092A539.html",
							"GUID-2D00947A-7154-4BC4-91B7-B9404092A539.html",
							"GUID-2D00947A-7154-4BC4-91B7-B9404092A539.html",
							"GUID-2D00947A-7154-4BC4-91B7-B9404092A539.html",
							"GUID-2D00947A-7154-4BC4-91B7-B9404092A539.html",
							"GUID-BCE1034B-9F4A-4D8C-9152-6F5BC07D25A9.html",
							"GUID-BCE1034B-9F4A-4D8C-9152-6F5BC07D25A9.html",
							"GUID-BCE1034B-9F4A-4D8C-9152-6F5BC07D25A9.html",
							"GUID-BCE1034B-9F4A-4D8C-9152-6F5BC07D25A9.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-8DA72F10-17FB-47CE-A62F-1296542ED28F.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-759BB851-8E1C-40DF-AA4F-446F1D0992B9.html",
							"GUID-B84CC692-8ED1-49E7-A7AC-C8D688833395.html",
							"GUID-B84CC692-8ED1-49E7-A7AC-C8D688833395.html",
							"GUID-B84CC692-8ED1-49E7-A7AC-C8D688833395.html",
							"GUID-B84CC692-8ED1-49E7-A7AC-C8D688833395.html",
							"GUID-B84CC692-8ED1-49E7-A7AC-C8D688833395.html",
							"GUID-8C21DAC8-5FAF-406C-950D-086C2C21DE18.html",
							"GUID-8C21DAC8-5FAF-406C-950D-086C2C21DE18.html",
							"GUID-8C21DAC8-5FAF-406C-950D-086C2C21DE18.html",
							"GUID-8C21DAC8-5FAF-406C-950D-086C2C21DE18.html",
							"GUID-8C21DAC8-5FAF-406C-950D-086C2C21DE18.html",
							"GUID-5D19D08C-5C98-45D5-BDFD-ACB2D4106A03.html",
							"GUID-5D19D08C-5C98-45D5-BDFD-ACB2D4106A03.html",
							"GUID-5D19D08C-5C98-45D5-BDFD-ACB2D4106A03.html",
							"GUID-5D19D08C-5C98-45D5-BDFD-ACB2D4106A03.html",
							"GUID-804A7D49-9BDA-4BFF-825F-1ADE2A4AF511.html",
							"GUID-804A7D49-9BDA-4BFF-825F-1ADE2A4AF511.html",
							"GUID-804A7D49-9BDA-4BFF-825F-1ADE2A4AF511.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-3322EF04-D6FF-404A-AC21-A5EE3292F83D.html",
							"GUID-E0D2E683-BA44-4C30-A7E5-8AF68C6BC531.html",
							"GUID-E0D2E683-BA44-4C30-A7E5-8AF68C6BC531.html",
							"GUID-E0D2E683-BA44-4C30-A7E5-8AF68C6BC531.html",
							"GUID-E0D2E683-BA44-4C30-A7E5-8AF68C6BC531.html",
							"GUID-E0D2E683-BA44-4C30-A7E5-8AF68C6BC531.html",
							"GUID-8B0D2C40-DC3C-4BC6-9DB1-5C52AD38E024.html",
							"GUID-8B0D2C40-DC3C-4BC6-9DB1-5C52AD38E024.html",
							"GUID-8B0D2C40-DC3C-4BC6-9DB1-5C52AD38E024.html",
							"GUID-8B0D2C40-DC3C-4BC6-9DB1-5C52AD38E024.html",
							"GUID-8B0D2C40-DC3C-4BC6-9DB1-5C52AD38E024.html",
							"GUID-268D2099-1541-4334-B54F-4C46FBD9A391.html","GUID-52F285DA-AE39-40B2-A432-3232E8337966.html","GUID-CDE7B1AB-A960-4352-A8AC-E299E30CCAFC.html","GUID-2A09BA33-0F90-493B-A5CA-AC1EC70DA7B3.html","GUID-044FC045-6D62-49E4-AB5F-F7F7EF06F50F.html","GUID-EE337600-5EFC-43E1-BE46-228B381B8839.html","GUID-EEE1ED5D-098D-478B-BC1D-621CBF4641BB.html","GUID-654D5ACE-F64F-4D92-8675-41DB4B465DB1.html",
							"GUID-654D5ACE-F64F-4D92-8675-41DB4B465DB1.html",
							"GUID-654D5ACE-F64F-4D92-8675-41DB4B465DB1.html",
							"GUID-654D5ACE-F64F-4D92-8675-41DB4B465DB1.html",
							"GUID-FDE2FF00-C7B3-4400-8915-2529E317E0CD.html","GUID-4B21B8A5-FF4B-4AEF-BE9A-654413D0D62A.html",
							"GUID-4B21B8A5-FF4B-4AEF-BE9A-654413D0D62A.html",
							"GUID-4B21B8A5-FF4B-4AEF-BE9A-654413D0D62A.html",
							"GUID-CCF32615-08E2-4A52-9222-5A7609465885.html","GUID-17B96B97-661C-4A45-9A8A-6C0B7C9F7C6C.html",
							"GUID-17B96B97-661C-4A45-9A8A-6C0B7C9F7C6C.html",
							"GUID-17B96B97-661C-4A45-9A8A-6C0B7C9F7C6C.html",
							"GUID-17B96B97-661C-4A45-9A8A-6C0B7C9F7C6C.html",
							"GUID-EAC2AB6A-7AD8-48F9-811D-20526DA0BA0C.html",
							"GUID-EAC2AB6A-7AD8-48F9-811D-20526DA0BA0C.html",
							"GUID-EAC2AB6A-7AD8-48F9-811D-20526DA0BA0C.html",
							"GUID-EAC2AB6A-7AD8-48F9-811D-20526DA0BA0C.html",
							"GUID-5ADDD804-7943-416A-B204-A56CE836B9C3.html","GUID-6E358623-718A-4EF1-A0DA-56291E9C356B.html","GUID-D6E9E1AC-7075-475E-9DCC-E16734BB9C03.html",
							"GUID-D6E9E1AC-7075-475E-9DCC-E16734BB9C03.html",
							"GUID-D6E9E1AC-7075-475E-9DCC-E16734BB9C03.html",
							"GUID-D6E9E1AC-7075-475E-9DCC-E16734BB9C03.html",
							"GUID-5A572AA0-94F1-406A-889D-1E2333D91928.html",
							"GUID-5A572AA0-94F1-406A-889D-1E2333D91928.html",
							"GUID-5A572AA0-94F1-406A-889D-1E2333D91928.html",
							"GUID-5A572AA0-94F1-406A-889D-1E2333D91928.html",
							"GUID-4EBBCE5A-862A-44DF-9CD8-45990595F014.html","GUID-45B8E598-9414-432D-9F5F-52044CCDE39E.html",
							"GUID-45B8E598-9414-432D-9F5F-52044CCDE39E.html",
							"GUID-45B8E598-9414-432D-9F5F-52044CCDE39E.html",
							"GUID-B7B198D6-037B-468B-9A14-943F83191073.html","GUID-503A7BC5-9FF2-406D-968D-44012D71088F.html",
							"GUID-503A7BC5-9FF2-406D-968D-44012D71088F.html",
							"GUID-503A7BC5-9FF2-406D-968D-44012D71088F.html",
							"GUID-503A7BC5-9FF2-406D-968D-44012D71088F.html",
							"GUID-62D2D2EB-A3FE-4B15-A168-B16462C9A0B9.html",
							"GUID-62D2D2EB-A3FE-4B15-A168-B16462C9A0B9.html",
							"GUID-62D2D2EB-A3FE-4B15-A168-B16462C9A0B9.html",
							"GUID-62D2D2EB-A3FE-4B15-A168-B16462C9A0B9.html",
							"GUID-0CEBE01F-6108-4607-856C-EE7D58219502.html",
							"GUID-0CEBE01F-6108-4607-856C-EE7D58219502.html",
							"GUID-0CEBE01F-6108-4607-856C-EE7D58219502.html",
							"GUID-0CEBE01F-6108-4607-856C-EE7D58219502.html",
							"GUID-42F880B9-CF4D-4190-BC93-93F242739AE0.html",
							"GUID-42F880B9-CF4D-4190-BC93-93F242739AE0.html",
							"GUID-42F880B9-CF4D-4190-BC93-93F242739AE0.html",
							"GUID-42F880B9-CF4D-4190-BC93-93F242739AE0.html",
							"GUID-EADF116E-6E9D-4E6A-9FA1-EA423D36DBFF.html",
							"GUID-EADF116E-6E9D-4E6A-9FA1-EA423D36DBFF.html",
							"GUID-EADF116E-6E9D-4E6A-9FA1-EA423D36DBFF.html",
							"GUID-EADF116E-6E9D-4E6A-9FA1-EA423D36DBFF.html",
							"GUID-121BE69F-090F-4F57-9CEF-E1A764B3DE0C.html",
							"GUID-121BE69F-090F-4F57-9CEF-E1A764B3DE0C.html",
							"GUID-121BE69F-090F-4F57-9CEF-E1A764B3DE0C.html",
							"GUID-121BE69F-090F-4F57-9CEF-E1A764B3DE0C.html",
							"GUID-0461AE6B-15ED-41B5-ABB4-D218C6151699.html",
							"GUID-0461AE6B-15ED-41B5-ABB4-D218C6151699.html",
							"GUID-0461AE6B-15ED-41B5-ABB4-D218C6151699.html",
							"GUID-5006DF1F-94D5-4A22-AEE5-BFBCBB7A0C3F.html",
							"GUID-5006DF1F-94D5-4A22-AEE5-BFBCBB7A0C3F.html",
							"GUID-5006DF1F-94D5-4A22-AEE5-BFBCBB7A0C3F.html",
							"GUID-5006DF1F-94D5-4A22-AEE5-BFBCBB7A0C3F.html",
							"GUID-F917DB22-71CE-42FD-B7A0-20A65850591C.html",
							"GUID-F917DB22-71CE-42FD-B7A0-20A65850591C.html",
							"GUID-F917DB22-71CE-42FD-B7A0-20A65850591C.html",
							"GUID-F917DB22-71CE-42FD-B7A0-20A65850591C.html",
							"GUID-20CC2F35-165C-47A6-9841-0631A367015B.html",
							"GUID-20CC2F35-165C-47A6-9841-0631A367015B.html",
							"GUID-20CC2F35-165C-47A6-9841-0631A367015B.html",
							"GUID-20CC2F35-165C-47A6-9841-0631A367015B.html",
							"GUID-11CC1C4F-A580-4B29-9BB6-F27A0C44C874.html",
							"GUID-11CC1C4F-A580-4B29-9BB6-F27A0C44C874.html",
							"GUID-11CC1C4F-A580-4B29-9BB6-F27A0C44C874.html",
							"GUID-11CC1C4F-A580-4B29-9BB6-F27A0C44C874.html",
							"GUID-6488A4B4-BB09-41AC-B396-5D766060FF03.html",
							"GUID-6488A4B4-BB09-41AC-B396-5D766060FF03.html",
							"GUID-6488A4B4-BB09-41AC-B396-5D766060FF03.html",
							"GUID-6488A4B4-BB09-41AC-B396-5D766060FF03.html",
							"GUID-1FCC6916-764B-44EA-9DC2-BBC5DE39C89C.html","GUID-65B6A963-BFCD-4212-BEAB-EFC98A57242B.html",
							"GUID-65B6A963-BFCD-4212-BEAB-EFC98A57242B.html",
							"GUID-65B6A963-BFCD-4212-BEAB-EFC98A57242B.html",
							"GUID-65B6A963-BFCD-4212-BEAB-EFC98A57242B.html",
							"GUID-65B6A963-BFCD-4212-BEAB-EFC98A57242B.html",
							"GUID-37E968E2-A415-4AB0-8580-17C3C854A1C0.html",
							"GUID-37E968E2-A415-4AB0-8580-17C3C854A1C0.html",
							"GUID-37E968E2-A415-4AB0-8580-17C3C854A1C0.html",
							"GUID-37E968E2-A415-4AB0-8580-17C3C854A1C0.html",
							"GUID-37E968E2-A415-4AB0-8580-17C3C854A1C0.html",
							"GUID-A36826A7-B611-402D-B63C-5895CB05B2B3.html",
							"GUID-A36826A7-B611-402D-B63C-5895CB05B2B3.html",
							"GUID-A36826A7-B611-402D-B63C-5895CB05B2B3.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-090ACE7D-EC08-47FC-BEE7-3955866E49FB.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-7DE0E85D-3345-4F72-A52F-8B398F0E7432.html",
							"GUID-92488830-E17D-4AA1-9A3C-BEC23C905D64.html","GUID-4CF7FB55-9254-4CDA-94B7-135B4AD78E9F.html","GUID-E0AC62DF-D2AC-47DE-B97F-B5B1B67F35BF.html","GUID-F74D1940-B5FC-46F1-8541-11D634AFC86C.html","GUID-9EFF15C2-C7BB-457A-862D-003CF3CBAD25.html","GUID-97B49E98-556B-4AC7-B2D9-88CBC8558B92.html","GUID-405D46F6-1884-4E34-89B2-3D61F6958AF9.html","GUID-3C2E452F-B37D-4B93-BA45-2570A1724358.html",
							"GUID-3C2E452F-B37D-4B93-BA45-2570A1724358.html",
							"GUID-3C2E452F-B37D-4B93-BA45-2570A1724358.html",
							"GUID-3C2E452F-B37D-4B93-BA45-2570A1724358.html",
							"GUID-8D0FF4F8-B90C-48A6-80FF-2663857F8009.html","GUID-CFF6FA0B-8B74-4311-AA62-C04061423A98.html",
							"GUID-CFF6FA0B-8B74-4311-AA62-C04061423A98.html",
							"GUID-CFF6FA0B-8B74-4311-AA62-C04061423A98.html",
							"GUID-3783C6B6-D61B-4B5A-B558-E749DFE943E2.html","GUID-4CC88468-046C-4A5F-AD55-7ACF19A60E66.html",
							"GUID-4CC88468-046C-4A5F-AD55-7ACF19A60E66.html",
							"GUID-4CC88468-046C-4A5F-AD55-7ACF19A60E66.html",
							"GUID-4CC88468-046C-4A5F-AD55-7ACF19A60E66.html",
							"GUID-7DFD9457-2F26-47CF-9F7D-2A4CF8D2BBC3.html",
							"GUID-7DFD9457-2F26-47CF-9F7D-2A4CF8D2BBC3.html",
							"GUID-7DFD9457-2F26-47CF-9F7D-2A4CF8D2BBC3.html",
							"GUID-4FF947E5-DA86-46A2-A8B0-51ACC11CCF6B.html",
							"GUID-4FF947E5-DA86-46A2-A8B0-51ACC11CCF6B.html",
							"GUID-4FF947E5-DA86-46A2-A8B0-51ACC11CCF6B.html",
							"GUID-4FF947E5-DA86-46A2-A8B0-51ACC11CCF6B.html",
							"GUID-7DD89124-DA61-4A24-96E8-24FD5B16BA72.html",
							"GUID-7DD89124-DA61-4A24-96E8-24FD5B16BA72.html",
							"GUID-7DD89124-DA61-4A24-96E8-24FD5B16BA72.html",
							"GUID-7DD89124-DA61-4A24-96E8-24FD5B16BA72.html",
							"GUID-EB23CCFB-CFC4-4DFA-A4C1-1E75554BAE27.html",
							"GUID-EB23CCFB-CFC4-4DFA-A4C1-1E75554BAE27.html",
							"GUID-EB23CCFB-CFC4-4DFA-A4C1-1E75554BAE27.html",
							"GUID-EB23CCFB-CFC4-4DFA-A4C1-1E75554BAE27.html",
							"GUID-A9C446DD-DBBD-45BF-9214-C563A69B8E9E.html",
							"GUID-A9C446DD-DBBD-45BF-9214-C563A69B8E9E.html",
							"GUID-A9C446DD-DBBD-45BF-9214-C563A69B8E9E.html",
							"GUID-A9C446DD-DBBD-45BF-9214-C563A69B8E9E.html",
							"GUID-B2CB1EEE-31A7-45D2-BDE0-3EDC249DFF26.html",
							"GUID-B2CB1EEE-31A7-45D2-BDE0-3EDC249DFF26.html",
							"GUID-B2CB1EEE-31A7-45D2-BDE0-3EDC249DFF26.html",
							"GUID-B2CB1EEE-31A7-45D2-BDE0-3EDC249DFF26.html",
							"GUID-0F246B53-0B75-4B62-B20D-872C3E430FA8.html","GUID-E2A56E34-1870-4AF3-9F6A-ADB088800E67.html",
							"GUID-E2A56E34-1870-4AF3-9F6A-ADB088800E67.html",
							"GUID-E2A56E34-1870-4AF3-9F6A-ADB088800E67.html",
							"GUID-E2A56E34-1870-4AF3-9F6A-ADB088800E67.html",
							"GUID-E2A56E34-1870-4AF3-9F6A-ADB088800E67.html",
							"GUID-8E2C4E3E-2ED3-43D6-84FC-8B70081A6594.html",
							"GUID-8E2C4E3E-2ED3-43D6-84FC-8B70081A6594.html",
							"GUID-8E2C4E3E-2ED3-43D6-84FC-8B70081A6594.html",
							"GUID-8E2C4E3E-2ED3-43D6-84FC-8B70081A6594.html",
							"GUID-8E2C4E3E-2ED3-43D6-84FC-8B70081A6594.html",
							"GUID-5BE1EA9C-FD74-44BD-8D9D-655EC44AA5EC.html",
							"GUID-5BE1EA9C-FD74-44BD-8D9D-655EC44AA5EC.html",
							"GUID-5BE1EA9C-FD74-44BD-8D9D-655EC44AA5EC.html",
							"GUID-5BE1EA9C-FD74-44BD-8D9D-655EC44AA5EC.html",
							"GUID-5BE1EA9C-FD74-44BD-8D9D-655EC44AA5EC.html",
							"GUID-C8C022C8-E66A-44FC-A0DF-E76BDBFA0ECD.html",
							"GUID-C8C022C8-E66A-44FC-A0DF-E76BDBFA0ECD.html",
							"GUID-C8C022C8-E66A-44FC-A0DF-E76BDBFA0ECD.html",
							"GUID-C8C022C8-E66A-44FC-A0DF-E76BDBFA0ECD.html",
							"GUID-C9CA36CE-1EB7-4164-9055-175F5DC4E3A0.html",
							"GUID-C9CA36CE-1EB7-4164-9055-175F5DC4E3A0.html",
							"GUID-C9CA36CE-1EB7-4164-9055-175F5DC4E3A0.html",
							"GUID-C9CA36CE-1EB7-4164-9055-175F5DC4E3A0.html",
							"GUID-C9CA36CE-1EB7-4164-9055-175F5DC4E3A0.html",
							"GUID-7259983A-3268-4DAC-AB10-C7A606CD01E9.html","GUID-65967C50-9CF5-4B4C-A700-208763A3A0F2.html","GUID-7E24975E-8BAB-49D2-9775-60A4E996AC1D.html","GUID-A8694536-0FB9-488D-93F0-2CCAD167803A.html","GUID-14EA8784-CC14-4296-9B70-A72CA6779DAE.html","GUID-C97C1B2B-9414-432A-9BD7-11C488BA4F65.html","GUID-17C45D3A-4EF4-4A95-A26B-537316951787.html","GUID-3FFCFF65-A6F1-4599-B34E-CAF44D7E9054.html","GUID-A97A3D7F-DBAD-42AA-8A4E-655862668781.html",
							"GUID-A97A3D7F-DBAD-42AA-8A4E-655862668781.html",
							"GUID-A97A3D7F-DBAD-42AA-8A4E-655862668781.html",
							"GUID-A97A3D7F-DBAD-42AA-8A4E-655862668781.html",
							"GUID-7FC973F4-BA55-4004-99B9-01546388C1E5.html",
							"GUID-7FC973F4-BA55-4004-99B9-01546388C1E5.html",
							"GUID-7FC973F4-BA55-4004-99B9-01546388C1E5.html",
							"GUID-7FC973F4-BA55-4004-99B9-01546388C1E5.html",
							"GUID-AF928E17-DE4E-4DC7-916B-DA0213A603CF.html","GUID-D0D70D82-48B9-4FDE-8289-BA6D47D727A7.html",
							"GUID-D0D70D82-48B9-4FDE-8289-BA6D47D727A7.html",
							"GUID-D0D70D82-48B9-4FDE-8289-BA6D47D727A7.html",
							"GUID-D0D70D82-48B9-4FDE-8289-BA6D47D727A7.html",
							"GUID-B1BD071D-9DA2-4C1B-8D22-E7909F11135C.html","GUID-CFA4B263-62FF-43E0-AB78-769675DF4E42.html",
							"GUID-CFA4B263-62FF-43E0-AB78-769675DF4E42.html",
							"GUID-CFA4B263-62FF-43E0-AB78-769675DF4E42.html",
							"GUID-CFA4B263-62FF-43E0-AB78-769675DF4E42.html",
							"GUID-CFA4B263-62FF-43E0-AB78-769675DF4E42.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E5B32073-303E-47A7-9134-8BAE34E7A4C9.html",
							"GUID-E2C11DB8-EA66-43C5-B0DF-FC0712A8BFE1.html",
							"GUID-E2C11DB8-EA66-43C5-B0DF-FC0712A8BFE1.html",
							"GUID-E2C11DB8-EA66-43C5-B0DF-FC0712A8BFE1.html",
							"GUID-E2C11DB8-EA66-43C5-B0DF-FC0712A8BFE1.html",
							"GUID-D00264CB-69C6-4B5C-A7DC-6B2644AA660E.html",
							"GUID-D00264CB-69C6-4B5C-A7DC-6B2644AA660E.html",
							"GUID-D00264CB-69C6-4B5C-A7DC-6B2644AA660E.html",
							"GUID-D00264CB-69C6-4B5C-A7DC-6B2644AA660E.html",
							"GUID-D00264CB-69C6-4B5C-A7DC-6B2644AA660E.html",
							"GUID-A7DDE9E2-3D4D-46CD-A27B-8A90BCC16D8A.html","GUID-B48387BB-5B67-4C8C-953F-253DCEFFD48B.html","GUID-1D0F82FC-4CBE-44C4-BD3D-80C0E5A55022.html","GUID-F42E97B2-50CB-42D3-86DB-8A3CDD992D8C.html","GUID-857A9743-B541-44CF-A45D-5715D805448F.html",
							"GUID-857A9743-B541-44CF-A45D-5715D805448F.html",
							"GUID-857A9743-B541-44CF-A45D-5715D805448F.html",
							"GUID-857A9743-B541-44CF-A45D-5715D805448F.html",
							"GUID-43C0B245-A412-48EC-94C0-05BD03F59630.html","GUID-1E41F8DE-5222-40C1-AD5F-26D992F36956.html",
							"GUID-1E41F8DE-5222-40C1-AD5F-26D992F36956.html",
							"GUID-1E41F8DE-5222-40C1-AD5F-26D992F36956.html",
							"GUID-680A03F2-FC7F-46A0-BC82-199CFC5DD31E.html",
							"GUID-680A03F2-FC7F-46A0-BC82-199CFC5DD31E.html",
							"GUID-680A03F2-FC7F-46A0-BC82-199CFC5DD31E.html",
							"GUID-09E4D761-E240-4D15-8065-2AB976C30FAB.html",
							"GUID-09E4D761-E240-4D15-8065-2AB976C30FAB.html",
							"GUID-09E4D761-E240-4D15-8065-2AB976C30FAB.html",
							"GUID-CFE9631F-009B-4D70-961C-C8B42144134B.html",
							"GUID-CFE9631F-009B-4D70-961C-C8B42144134B.html",
							"GUID-CFE9631F-009B-4D70-961C-C8B42144134B.html",
							"GUID-A2656700-B0A1-443C-903C-42AE1A0A1AD8.html","GUID-7A2DD24E-1D34-4109-9307-A581A7B17F89.html",
							"GUID-7A2DD24E-1D34-4109-9307-A581A7B17F89.html",
							"GUID-7A2DD24E-1D34-4109-9307-A581A7B17F89.html",
							"GUID-7A2DD24E-1D34-4109-9307-A581A7B17F89.html",
							"GUID-D042A3BB-FDEF-4E21-9EAE-42452A3D7A03.html",
							"GUID-D042A3BB-FDEF-4E21-9EAE-42452A3D7A03.html",
							"GUID-D042A3BB-FDEF-4E21-9EAE-42452A3D7A03.html",
							"GUID-D042A3BB-FDEF-4E21-9EAE-42452A3D7A03.html",
							"GUID-27098747-2104-40BC-807E-4DE7DB6E8E51.html",
							"GUID-27098747-2104-40BC-807E-4DE7DB6E8E51.html",
							"GUID-27098747-2104-40BC-807E-4DE7DB6E8E51.html",
							"GUID-27098747-2104-40BC-807E-4DE7DB6E8E51.html",
							"GUID-F3B5D900-F73A-45F3-80E8-03B67527032B.html",
							"GUID-F3B5D900-F73A-45F3-80E8-03B67527032B.html",
							"GUID-F3B5D900-F73A-45F3-80E8-03B67527032B.html",
							"GUID-F3B5D900-F73A-45F3-80E8-03B67527032B.html",
							"GUID-185B66D2-3C5E-4470-8666-F1900C280153.html",
							"GUID-185B66D2-3C5E-4470-8666-F1900C280153.html",
							"GUID-185B66D2-3C5E-4470-8666-F1900C280153.html",
							"GUID-CDACD609-2FB6-49C1-BA3F-DB3F31FE7727.html",
							"GUID-CDACD609-2FB6-49C1-BA3F-DB3F31FE7727.html",
							"GUID-CDACD609-2FB6-49C1-BA3F-DB3F31FE7727.html",
							"GUID-CDACD609-2FB6-49C1-BA3F-DB3F31FE7727.html",
							"GUID-E84BE9EF-A296-4046-B947-B54780D61A8A.html",
							"GUID-E84BE9EF-A296-4046-B947-B54780D61A8A.html",
							"GUID-E84BE9EF-A296-4046-B947-B54780D61A8A.html",
							"GUID-E84BE9EF-A296-4046-B947-B54780D61A8A.html",
							"GUID-9A23939D-C6E9-45D4-A28A-0002A6ED5EBA.html",
							"GUID-9A23939D-C6E9-45D4-A28A-0002A6ED5EBA.html",
							"GUID-9A23939D-C6E9-45D4-A28A-0002A6ED5EBA.html",
							"GUID-9A23939D-C6E9-45D4-A28A-0002A6ED5EBA.html",
							"GUID-2C1DE184-82C7-4A2A-9B2E-1ED5A1CC1887.html",
							"GUID-2C1DE184-82C7-4A2A-9B2E-1ED5A1CC1887.html",
							"GUID-2C1DE184-82C7-4A2A-9B2E-1ED5A1CC1887.html",
							"GUID-2C1DE184-82C7-4A2A-9B2E-1ED5A1CC1887.html",
							"GUID-37883EDD-12BF-47E9-AE27-6A32D99C0429.html",
							"GUID-37883EDD-12BF-47E9-AE27-6A32D99C0429.html",
							"GUID-37883EDD-12BF-47E9-AE27-6A32D99C0429.html",
							"GUID-37883EDD-12BF-47E9-AE27-6A32D99C0429.html",
							"GUID-4971C3FC-0FC8-435C-AA8C-3D9B5328D187.html",
							"GUID-4971C3FC-0FC8-435C-AA8C-3D9B5328D187.html",
							"GUID-4971C3FC-0FC8-435C-AA8C-3D9B5328D187.html",
							"GUID-4971C3FC-0FC8-435C-AA8C-3D9B5328D187.html",
							"GUID-F507DE95-6F46-4702-B280-B6E5682CF41A.html",
							"GUID-F507DE95-6F46-4702-B280-B6E5682CF41A.html",
							"GUID-F507DE95-6F46-4702-B280-B6E5682CF41A.html",
							"GUID-F507DE95-6F46-4702-B280-B6E5682CF41A.html",
							"GUID-CE61027D-7F1C-4B1B-A947-835179F5934D.html",
							"GUID-CE61027D-7F1C-4B1B-A947-835179F5934D.html",
							"GUID-CE61027D-7F1C-4B1B-A947-835179F5934D.html",
							"GUID-CE61027D-7F1C-4B1B-A947-835179F5934D.html",
							"GUID-64B0B4DE-551B-4F39-9D56-784803AA4277.html",
							"GUID-64B0B4DE-551B-4F39-9D56-784803AA4277.html",
							"GUID-64B0B4DE-551B-4F39-9D56-784803AA4277.html",
							"GUID-64B0B4DE-551B-4F39-9D56-784803AA4277.html",
							"GUID-1986696F-023D-4DD6-86D6-1D32A8DDAA6F.html","GUID-90C12E1B-2AA0-4B71-841F-B24EEDB098B1.html",
							"GUID-90C12E1B-2AA0-4B71-841F-B24EEDB098B1.html",
							"GUID-90C12E1B-2AA0-4B71-841F-B24EEDB098B1.html",
							"GUID-90C12E1B-2AA0-4B71-841F-B24EEDB098B1.html",
							"GUID-4DFEB536-E582-4677-8200-C811A586D750.html",
							"GUID-4DFEB536-E582-4677-8200-C811A586D750.html",
							"GUID-4DFEB536-E582-4677-8200-C811A586D750.html",
							"GUID-4DFEB536-E582-4677-8200-C811A586D750.html",
							"GUID-84199CD7-E971-4E97-A776-4FF84D8F7339.html",
							"GUID-84199CD7-E971-4E97-A776-4FF84D8F7339.html",
							"GUID-84199CD7-E971-4E97-A776-4FF84D8F7339.html",
							"GUID-84199CD7-E971-4E97-A776-4FF84D8F7339.html",
							"GUID-D3401AA2-1AD5-41D2-8C7D-C90E520CEDE5.html",
							"GUID-D3401AA2-1AD5-41D2-8C7D-C90E520CEDE5.html",
							"GUID-D3401AA2-1AD5-41D2-8C7D-C90E520CEDE5.html",
							"GUID-D3401AA2-1AD5-41D2-8C7D-C90E520CEDE5.html",
							"GUID-D3401AA2-1AD5-41D2-8C7D-C90E520CEDE5.html",
							"GUID-78946C92-8C56-4FC6-B188-F85D5E667BB9.html",
							"GUID-78946C92-8C56-4FC6-B188-F85D5E667BB9.html",
							"GUID-78946C92-8C56-4FC6-B188-F85D5E667BB9.html",
							"GUID-78946C92-8C56-4FC6-B188-F85D5E667BB9.html",
							"GUID-78946C92-8C56-4FC6-B188-F85D5E667BB9.html",
							"GUID-56D609CB-DF54-41CF-816B-399A3DB6984E.html",
							"GUID-56D609CB-DF54-41CF-816B-399A3DB6984E.html",
							"GUID-56D609CB-DF54-41CF-816B-399A3DB6984E.html",
							"GUID-56D609CB-DF54-41CF-816B-399A3DB6984E.html",
							"GUID-B3E64470-D4CF-4EA3-9BBC-C596198F0EEF.html",
							"GUID-B3E64470-D4CF-4EA3-9BBC-C596198F0EEF.html",
							"GUID-B3E64470-D4CF-4EA3-9BBC-C596198F0EEF.html",
							"GUID-B3E64470-D4CF-4EA3-9BBC-C596198F0EEF.html",
							"GUID-B3E64470-D4CF-4EA3-9BBC-C596198F0EEF.html",
							"GUID-9CABC051-15AF-4019-A312-51AA0DBE2B98.html","GUID-7186FE07-8012-4B6E-BFB8-596F87E09B22.html","GUID-58C2E4E3-24D0-44BB-9EA8-3F381237F37A.html","GUID-570F7538-C8C6-4C55-AF3F-EC331C1D2CF4.html",
							"GUID-570F7538-C8C6-4C55-AF3F-EC331C1D2CF4.html",
							"GUID-570F7538-C8C6-4C55-AF3F-EC331C1D2CF4.html",
							"GUID-570F7538-C8C6-4C55-AF3F-EC331C1D2CF4.html",
							"GUID-D70D2342-E57B-4B59-B0A8-73F44543AC37.html",
							"GUID-D70D2342-E57B-4B59-B0A8-73F44543AC37.html",
							"GUID-D70D2342-E57B-4B59-B0A8-73F44543AC37.html",
							"GUID-D70D2342-E57B-4B59-B0A8-73F44543AC37.html",
							"GUID-EFEF900B-78C9-4E5F-BF35-54594972E667.html",
							"GUID-EFEF900B-78C9-4E5F-BF35-54594972E667.html",
							"GUID-EFEF900B-78C9-4E5F-BF35-54594972E667.html",
							"GUID-EFEF900B-78C9-4E5F-BF35-54594972E667.html",
							"GUID-A98C04B1-FF68-4A04-8EE2-7F678C83A224.html",
							"GUID-A98C04B1-FF68-4A04-8EE2-7F678C83A224.html",
							"GUID-A98C04B1-FF68-4A04-8EE2-7F678C83A224.html",
							"GUID-A98C04B1-FF68-4A04-8EE2-7F678C83A224.html",
							"GUID-4C3C06C2-F2C8-405D-B8B4-5A5023C4853E.html","GUID-6B001FFC-2FB3-4121-BBE3-7C382205F26C.html",
							"GUID-6B001FFC-2FB3-4121-BBE3-7C382205F26C.html",
							"GUID-6B001FFC-2FB3-4121-BBE3-7C382205F26C.html",
							"GUID-4E49A4DF-FDD3-40FC-801F-BF51C85F516A.html","GUID-BA3EFD7F-05A8-41A2-9A3F-10C9F5CE0747.html",
							"GUID-BA3EFD7F-05A8-41A2-9A3F-10C9F5CE0747.html",
							"GUID-BA3EFD7F-05A8-41A2-9A3F-10C9F5CE0747.html",
							"GUID-BA3EFD7F-05A8-41A2-9A3F-10C9F5CE0747.html",
							"GUID-302482E4-4581-41BF-8C06-20FE2BCC572C.html",
							"GUID-302482E4-4581-41BF-8C06-20FE2BCC572C.html",
							"GUID-302482E4-4581-41BF-8C06-20FE2BCC572C.html",
							"GUID-C4CE823A-D098-4BB1-8286-65C15C347520.html",
							"GUID-C4CE823A-D098-4BB1-8286-65C15C347520.html",
							"GUID-C4CE823A-D098-4BB1-8286-65C15C347520.html",
							"GUID-C4CE823A-D098-4BB1-8286-65C15C347520.html",
							"GUID-487BE00B-6E53-4C37-B9E3-C1B0B062A49F.html",
							"GUID-487BE00B-6E53-4C37-B9E3-C1B0B062A49F.html",
							"GUID-487BE00B-6E53-4C37-B9E3-C1B0B062A49F.html",
							"GUID-487BE00B-6E53-4C37-B9E3-C1B0B062A49F.html",
							"GUID-A315C59D-4AE9-4C4F-B43F-2D0A714648C8.html",
							"GUID-A315C59D-4AE9-4C4F-B43F-2D0A714648C8.html",
							"GUID-A315C59D-4AE9-4C4F-B43F-2D0A714648C8.html",
							"GUID-A315C59D-4AE9-4C4F-B43F-2D0A714648C8.html",
							"GUID-4C17F912-3794-488A-866B-D5DA00B10C7B.html",
							"GUID-4C17F912-3794-488A-866B-D5DA00B10C7B.html",
							"GUID-4C17F912-3794-488A-866B-D5DA00B10C7B.html",
							"GUID-4C17F912-3794-488A-866B-D5DA00B10C7B.html",
							"GUID-543AECC4-F7BD-480D-8054-DB08E1B49AB3.html",
							"GUID-543AECC4-F7BD-480D-8054-DB08E1B49AB3.html",
							"GUID-543AECC4-F7BD-480D-8054-DB08E1B49AB3.html",
							"GUID-543AECC4-F7BD-480D-8054-DB08E1B49AB3.html",
							"GUID-491CCFA9-F38F-47F8-9742-B51EDAD0ADF8.html",
							"GUID-491CCFA9-F38F-47F8-9742-B51EDAD0ADF8.html",
							"GUID-491CCFA9-F38F-47F8-9742-B51EDAD0ADF8.html",
							"GUID-491CCFA9-F38F-47F8-9742-B51EDAD0ADF8.html",
							"GUID-D955256B-E321-40C6-AFCC-3C88874899A9.html",
							"GUID-D955256B-E321-40C6-AFCC-3C88874899A9.html",
							"GUID-D955256B-E321-40C6-AFCC-3C88874899A9.html",
							"GUID-D955256B-E321-40C6-AFCC-3C88874899A9.html",
							"GUID-1ACA08AA-AB67-4644-80D4-D8D4182C0422.html",
							"GUID-1ACA08AA-AB67-4644-80D4-D8D4182C0422.html",
							"GUID-1ACA08AA-AB67-4644-80D4-D8D4182C0422.html",
							"GUID-1ACA08AA-AB67-4644-80D4-D8D4182C0422.html",
							"GUID-5B2AE580-84A4-4A73-92AE-B8DB97324BE2.html",
							"GUID-5B2AE580-84A4-4A73-92AE-B8DB97324BE2.html",
							"GUID-5B2AE580-84A4-4A73-92AE-B8DB97324BE2.html",
							"GUID-5B2AE580-84A4-4A73-92AE-B8DB97324BE2.html",
							"GUID-5028AA06-788A-4B7E-B273-018FF2507CA1.html","GUID-9CA0E8E2-FEB0-4C78-A862-067D84B24443.html",
							"GUID-9CA0E8E2-FEB0-4C78-A862-067D84B24443.html",
							"GUID-9CA0E8E2-FEB0-4C78-A862-067D84B24443.html",
							"GUID-9CA0E8E2-FEB0-4C78-A862-067D84B24443.html",
							"GUID-D624535C-7803-403E-AA3D-6A230FE6AF5F.html",
							"GUID-D624535C-7803-403E-AA3D-6A230FE6AF5F.html",
							"GUID-D624535C-7803-403E-AA3D-6A230FE6AF5F.html",
							"GUID-D624535C-7803-403E-AA3D-6A230FE6AF5F.html",
							"GUID-5AA4E835-F792-449A-AAC5-6B53D35D8A83.html",
							"GUID-5AA4E835-F792-449A-AAC5-6B53D35D8A83.html",
							"GUID-5AA4E835-F792-449A-AAC5-6B53D35D8A83.html",
							"GUID-5AA4E835-F792-449A-AAC5-6B53D35D8A83.html",
							"GUID-5AA4E835-F792-449A-AAC5-6B53D35D8A83.html",
							"GUID-CA9CD92B-6B48-497E-A41F-FBC0A4DC7FA7.html",
							"GUID-CA9CD92B-6B48-497E-A41F-FBC0A4DC7FA7.html",
							"GUID-CA9CD92B-6B48-497E-A41F-FBC0A4DC7FA7.html",
							"GUID-CA9CD92B-6B48-497E-A41F-FBC0A4DC7FA7.html",
							"GUID-CA9CD92B-6B48-497E-A41F-FBC0A4DC7FA7.html",
							"GUID-B830D06F-F52B-47A9-8AED-C8F33E59248A.html",
							"GUID-B830D06F-F52B-47A9-8AED-C8F33E59248A.html",
							"GUID-B830D06F-F52B-47A9-8AED-C8F33E59248A.html",
							"GUID-B830D06F-F52B-47A9-8AED-C8F33E59248A.html",
							"GUID-A1E8095B-2B08-4F36-A738-8A5274871A20.html",
							"GUID-A1E8095B-2B08-4F36-A738-8A5274871A20.html",
							"GUID-A1E8095B-2B08-4F36-A738-8A5274871A20.html",
							"GUID-A1E8095B-2B08-4F36-A738-8A5274871A20.html",
							"GUID-DF06C6C6-CB2F-45BD-A6DB-9E160D95705C.html",
							"GUID-DF06C6C6-CB2F-45BD-A6DB-9E160D95705C.html",
							"GUID-DF06C6C6-CB2F-45BD-A6DB-9E160D95705C.html",
							"GUID-DF06C6C6-CB2F-45BD-A6DB-9E160D95705C.html",
							"GUID-DF06C6C6-CB2F-45BD-A6DB-9E160D95705C.html",
							"GUID-50804D52-E33F-4AEC-9B1A-C95170A68765.html",
							"GUID-50804D52-E33F-4AEC-9B1A-C95170A68765.html",
							"GUID-50804D52-E33F-4AEC-9B1A-C95170A68765.html",
							"GUID-50804D52-E33F-4AEC-9B1A-C95170A68765.html",
							"GUID-4FF422E1-9BE7-484C-903E-52D2BDD14A7A.html",
							"GUID-4FF422E1-9BE7-484C-903E-52D2BDD14A7A.html",
							"GUID-4FF422E1-9BE7-484C-903E-52D2BDD14A7A.html",
							"GUID-4FF422E1-9BE7-484C-903E-52D2BDD14A7A.html",
							"GUID-4FF422E1-9BE7-484C-903E-52D2BDD14A7A.html",
							"GUID-EACFC936-99A6-47FD-A41B-9880BDA2745A.html","GUID-4B2D354D-5C6F-4C03-A5C2-1EF1B1D1449B.html","GUID-C2119D96-407C-4F6F-8BE2-F491FE84218B.html",
							"GUID-C2119D96-407C-4F6F-8BE2-F491FE84218B.html",
							"GUID-C2119D96-407C-4F6F-8BE2-F491FE84218B.html",
							"GUID-C2119D96-407C-4F6F-8BE2-F491FE84218B.html",
							"GUID-911BADE8-F247-4255-BD0C-F34416C57963.html",
							"GUID-911BADE8-F247-4255-BD0C-F34416C57963.html",
							"GUID-911BADE8-F247-4255-BD0C-F34416C57963.html",
							"GUID-911BADE8-F247-4255-BD0C-F34416C57963.html",
							"GUID-33289C2B-BE14-444B-BEEC-3B4CE82D3C7A.html",
							"GUID-33289C2B-BE14-444B-BEEC-3B4CE82D3C7A.html",
							"GUID-33289C2B-BE14-444B-BEEC-3B4CE82D3C7A.html",
							"GUID-33289C2B-BE14-444B-BEEC-3B4CE82D3C7A.html",
							"GUID-A55FDA30-DEB1-47D2-8921-78636268C680.html",
							"GUID-A55FDA30-DEB1-47D2-8921-78636268C680.html",
							"GUID-A55FDA30-DEB1-47D2-8921-78636268C680.html",
							"GUID-A55FDA30-DEB1-47D2-8921-78636268C680.html",
							"GUID-04F6077B-67D7-4083-8F9C-F3C80C3246A8.html","GUID-652F4248-7986-49C9-B618-081627A19E74.html",
							"GUID-652F4248-7986-49C9-B618-081627A19E74.html",
							"GUID-652F4248-7986-49C9-B618-081627A19E74.html",
							"GUID-658D6517-5292-4E3D-91AD-09EE3CB53554.html","GUID-1142A307-5C02-4EE2-85A0-E7436290EFB8.html",
							"GUID-1142A307-5C02-4EE2-85A0-E7436290EFB8.html",
							"GUID-1142A307-5C02-4EE2-85A0-E7436290EFB8.html",
							"GUID-1142A307-5C02-4EE2-85A0-E7436290EFB8.html",
							"GUID-8CB649CE-C768-4FC7-BBC3-871C78AECA73.html",
							"GUID-8CB649CE-C768-4FC7-BBC3-871C78AECA73.html",
							"GUID-8CB649CE-C768-4FC7-BBC3-871C78AECA73.html",
							"GUID-999811AF-00AC-418B-9949-114F1E140637.html",
							"GUID-999811AF-00AC-418B-9949-114F1E140637.html",
							"GUID-999811AF-00AC-418B-9949-114F1E140637.html",
							"GUID-999811AF-00AC-418B-9949-114F1E140637.html",
							"GUID-9CBECF2E-C07A-456E-8F78-24B329D32BBA.html",
							"GUID-9CBECF2E-C07A-456E-8F78-24B329D32BBA.html",
							"GUID-9CBECF2E-C07A-456E-8F78-24B329D32BBA.html",
							"GUID-9CBECF2E-C07A-456E-8F78-24B329D32BBA.html",
							"GUID-37FC87C4-D5D7-4E4F-B857-934E83BC1494.html","GUID-57F989EC-D61A-4071-B56D-1264AF15C3EE.html",
							"GUID-57F989EC-D61A-4071-B56D-1264AF15C3EE.html",
							"GUID-57F989EC-D61A-4071-B56D-1264AF15C3EE.html",
							"GUID-57F989EC-D61A-4071-B56D-1264AF15C3EE.html",
							"GUID-57F989EC-D61A-4071-B56D-1264AF15C3EE.html",
							"GUID-F5AFAF39-9D7D-44AC-A48F-88E629F6122E.html",
							"GUID-F5AFAF39-9D7D-44AC-A48F-88E629F6122E.html",
							"GUID-F5AFAF39-9D7D-44AC-A48F-88E629F6122E.html",
							"GUID-F5AFAF39-9D7D-44AC-A48F-88E629F6122E.html",
							"GUID-EEFDBCB4-28D4-4424-92ED-D5837EAB64D5.html",
							"GUID-EEFDBCB4-28D4-4424-92ED-D5837EAB64D5.html",
							"GUID-EEFDBCB4-28D4-4424-92ED-D5837EAB64D5.html",
							"GUID-EEFDBCB4-28D4-4424-92ED-D5837EAB64D5.html",
							"GUID-7245779A-6A2D-452F-9BD6-D160DFB9D3F1.html",
							"GUID-7245779A-6A2D-452F-9BD6-D160DFB9D3F1.html",
							"GUID-7245779A-6A2D-452F-9BD6-D160DFB9D3F1.html",
							"GUID-7245779A-6A2D-452F-9BD6-D160DFB9D3F1.html",
							"GUID-DB53614C-FF18-4455-B811-3AB82600FFE2.html",
							"GUID-DB53614C-FF18-4455-B811-3AB82600FFE2.html",
							"GUID-DB53614C-FF18-4455-B811-3AB82600FFE2.html",
							"GUID-DB53614C-FF18-4455-B811-3AB82600FFE2.html",
							"GUID-DB53614C-FF18-4455-B811-3AB82600FFE2.html",
							"GUID-DC09C897-E9C7-409C-8FFA-20A6824B1711.html",
							"GUID-DC09C897-E9C7-409C-8FFA-20A6824B1711.html",
							"GUID-DC09C897-E9C7-409C-8FFA-20A6824B1711.html",
							"GUID-DC09C897-E9C7-409C-8FFA-20A6824B1711.html",
							"GUID-DC09C897-E9C7-409C-8FFA-20A6824B1711.html",
							"GUID-CFFDC530-EE47-4711-9B8B-6BE00B9BD39F.html",
							"GUID-CFFDC530-EE47-4711-9B8B-6BE00B9BD39F.html",
							"GUID-CFFDC530-EE47-4711-9B8B-6BE00B9BD39F.html",
							"GUID-CFFDC530-EE47-4711-9B8B-6BE00B9BD39F.html",
							"GUID-CFFDC530-EE47-4711-9B8B-6BE00B9BD39F.html",
							"GUID-1D7844DD-E5E0-49C4-B5D1-3822C20C69C8.html","GUID-BC3F14FE-6227-432C-BE54-3A43B38001B1.html","GUID-C9509DA9-22B9-4905-BDD3-B79E80DE27A0.html","GUID-FD46DA44-7917-4D0D-B093-1B426A48DF54.html",
							"GUID-FD46DA44-7917-4D0D-B093-1B426A48DF54.html",
							"GUID-FD46DA44-7917-4D0D-B093-1B426A48DF54.html",
							"GUID-D9903AE5-6718-4899-A401-83925D74C336.html","GUID-68743913-F8E3-4F47-8209-ACE645E21F05.html",
							"GUID-68743913-F8E3-4F47-8209-ACE645E21F05.html",
							"GUID-68743913-F8E3-4F47-8209-ACE645E21F05.html",
							"GUID-68743913-F8E3-4F47-8209-ACE645E21F05.html",
							"GUID-216A5D6F-3BD7-436A-847D-102022314CC6.html",
							"GUID-216A5D6F-3BD7-436A-847D-102022314CC6.html",
							"GUID-216A5D6F-3BD7-436A-847D-102022314CC6.html",
							"GUID-71F27206-1BAB-4556-915F-3E5F54C0A919.html",
							"GUID-71F27206-1BAB-4556-915F-3E5F54C0A919.html",
							"GUID-71F27206-1BAB-4556-915F-3E5F54C0A919.html",
							"GUID-71F27206-1BAB-4556-915F-3E5F54C0A919.html",
							"GUID-B657D367-7C79-445B-8A3A-008E5A67B6E6.html",
							"GUID-B657D367-7C79-445B-8A3A-008E5A67B6E6.html",
							"GUID-B657D367-7C79-445B-8A3A-008E5A67B6E6.html",
							"GUID-B657D367-7C79-445B-8A3A-008E5A67B6E6.html",
							"GUID-F802DD5F-05B5-44C5-9DE1-18309F105BAD.html",
							"GUID-F802DD5F-05B5-44C5-9DE1-18309F105BAD.html",
							"GUID-F802DD5F-05B5-44C5-9DE1-18309F105BAD.html",
							"GUID-F802DD5F-05B5-44C5-9DE1-18309F105BAD.html",
							"GUID-05B7AEB0-3917-4278-B99E-70A94F01DCBD.html",
							"GUID-05B7AEB0-3917-4278-B99E-70A94F01DCBD.html",
							"GUID-05B7AEB0-3917-4278-B99E-70A94F01DCBD.html",
							"GUID-05B7AEB0-3917-4278-B99E-70A94F01DCBD.html",
							"GUID-F0B6587F-928A-4273-BBE2-CD39D75D42CB.html",
							"GUID-F0B6587F-928A-4273-BBE2-CD39D75D42CB.html",
							"GUID-F0B6587F-928A-4273-BBE2-CD39D75D42CB.html",
							"GUID-F0B6587F-928A-4273-BBE2-CD39D75D42CB.html",
							"GUID-C9132292-85E4-47C9-9646-B898F4330189.html",
							"GUID-C9132292-85E4-47C9-9646-B898F4330189.html",
							"GUID-C9132292-85E4-47C9-9646-B898F4330189.html",
							"GUID-C9132292-85E4-47C9-9646-B898F4330189.html",
							"GUID-DBBD3CA3-8895-4802-9DEB-90365CD962F1.html",
							"GUID-DBBD3CA3-8895-4802-9DEB-90365CD962F1.html",
							"GUID-DBBD3CA3-8895-4802-9DEB-90365CD962F1.html",
							"GUID-DBBD3CA3-8895-4802-9DEB-90365CD962F1.html",
							"GUID-9E702AA1-2983-4EA5-8BAD-D1D63600D31F.html","GUID-76873F21-69D1-4D0B-8CE7-7F0172478F72.html",
							"GUID-76873F21-69D1-4D0B-8CE7-7F0172478F72.html",
							"GUID-76873F21-69D1-4D0B-8CE7-7F0172478F72.html",
							"GUID-76873F21-69D1-4D0B-8CE7-7F0172478F72.html",
							"GUID-A0FB713E-E473-4F40-B2DB-11B1598F843A.html",
							"GUID-A0FB713E-E473-4F40-B2DB-11B1598F843A.html",
							"GUID-A0FB713E-E473-4F40-B2DB-11B1598F843A.html",
							"GUID-A0FB713E-E473-4F40-B2DB-11B1598F843A.html",
							"GUID-C46FCE50-BC3B-4F93-9EB3-03A09EFA7299.html",
							"GUID-C46FCE50-BC3B-4F93-9EB3-03A09EFA7299.html",
							"GUID-C46FCE50-BC3B-4F93-9EB3-03A09EFA7299.html",
							"GUID-C46FCE50-BC3B-4F93-9EB3-03A09EFA7299.html",
							"GUID-4407939E-E00E-43C1-AC6C-6C153B59F49E.html",
							"GUID-4407939E-E00E-43C1-AC6C-6C153B59F49E.html",
							"GUID-4407939E-E00E-43C1-AC6C-6C153B59F49E.html",
							"GUID-4407939E-E00E-43C1-AC6C-6C153B59F49E.html",
							"GUID-4407939E-E00E-43C1-AC6C-6C153B59F49E.html",
							"GUID-213668C3-0B6A-448A-B8A3-D988E0A1A850.html",
							"GUID-213668C3-0B6A-448A-B8A3-D988E0A1A850.html",
							"GUID-213668C3-0B6A-448A-B8A3-D988E0A1A850.html",
							"GUID-213668C3-0B6A-448A-B8A3-D988E0A1A850.html",
							"GUID-213668C3-0B6A-448A-B8A3-D988E0A1A850.html",
							"GUID-A3C82A48-FA0C-47FE-A206-5F88FEB85023.html",
							"GUID-A3C82A48-FA0C-47FE-A206-5F88FEB85023.html",
							"GUID-A3C82A48-FA0C-47FE-A206-5F88FEB85023.html",
							"GUID-A3C82A48-FA0C-47FE-A206-5F88FEB85023.html",
							"GUID-A3C82A48-FA0C-47FE-A206-5F88FEB85023.html",
							"GUID-924AF941-54AE-4B06-8D75-AF1E58BD02C4.html",
							"GUID-924AF941-54AE-4B06-8D75-AF1E58BD02C4.html",
							"GUID-924AF941-54AE-4B06-8D75-AF1E58BD02C4.html",
							"GUID-924AF941-54AE-4B06-8D75-AF1E58BD02C4.html",
							"GUID-924AF941-54AE-4B06-8D75-AF1E58BD02C4.html",
							"GUID-F9794742-5F04-41FD-8004-853B28CC6EF1.html",
							"GUID-F9794742-5F04-41FD-8004-853B28CC6EF1.html",
							"GUID-F9794742-5F04-41FD-8004-853B28CC6EF1.html",
							"GUID-F9794742-5F04-41FD-8004-853B28CC6EF1.html",
							"GUID-F9794742-5F04-41FD-8004-853B28CC6EF1.html",
							"GUID-131DEA8D-EC18-4AFE-B0D7-00832B8A24C7.html",
							"GUID-131DEA8D-EC18-4AFE-B0D7-00832B8A24C7.html",
							"GUID-131DEA8D-EC18-4AFE-B0D7-00832B8A24C7.html",
							"GUID-131DEA8D-EC18-4AFE-B0D7-00832B8A24C7.html",
							"GUID-131DEA8D-EC18-4AFE-B0D7-00832B8A24C7.html",
							"GUID-D794AE5C-C772-42FC-B386-267C092534E8.html",
							"GUID-D794AE5C-C772-42FC-B386-267C092534E8.html",
							"GUID-D794AE5C-C772-42FC-B386-267C092534E8.html",
							"GUID-D794AE5C-C772-42FC-B386-267C092534E8.html",
							"GUID-D794AE5C-C772-42FC-B386-267C092534E8.html",
							"GUID-D8B1892F-DFE8-4D85-9723-EE146B978C64.html",
							"GUID-D8B1892F-DFE8-4D85-9723-EE146B978C64.html",
							"GUID-D8B1892F-DFE8-4D85-9723-EE146B978C64.html",
							"GUID-D8B1892F-DFE8-4D85-9723-EE146B978C64.html",
							"GUID-D8B1892F-DFE8-4D85-9723-EE146B978C64.html",
							"GUID-F61E7908-A1BD-4A12-AF0C-A4480D822AD5.html",
							"GUID-F61E7908-A1BD-4A12-AF0C-A4480D822AD5.html",
							"GUID-F61E7908-A1BD-4A12-AF0C-A4480D822AD5.html",
							"GUID-F61E7908-A1BD-4A12-AF0C-A4480D822AD5.html",
							"GUID-F61E7908-A1BD-4A12-AF0C-A4480D822AD5.html",
							"GUID-230C5248-6A4D-4DE9-A83A-579C843BC565.html",
							"GUID-230C5248-6A4D-4DE9-A83A-579C843BC565.html",
							"GUID-230C5248-6A4D-4DE9-A83A-579C843BC565.html",
							"GUID-230C5248-6A4D-4DE9-A83A-579C843BC565.html",
							"GUID-230C5248-6A4D-4DE9-A83A-579C843BC565.html",
							"GUID-615880F8-6392-4103-BC29-85D9E425A9BC.html",
							"GUID-615880F8-6392-4103-BC29-85D9E425A9BC.html",
							"GUID-615880F8-6392-4103-BC29-85D9E425A9BC.html",
							"GUID-615880F8-6392-4103-BC29-85D9E425A9BC.html",
							"GUID-615880F8-6392-4103-BC29-85D9E425A9BC.html",
							"GUID-A9B965C3-EA1E-426F-9F7D-F489B9175A4C.html",
							"GUID-A9B965C3-EA1E-426F-9F7D-F489B9175A4C.html",
							"GUID-A9B965C3-EA1E-426F-9F7D-F489B9175A4C.html",
							"GUID-A9B965C3-EA1E-426F-9F7D-F489B9175A4C.html",
							"GUID-A9B965C3-EA1E-426F-9F7D-F489B9175A4C.html",
							"GUID-F51367E5-A1A0-4CC2-83B7-3228347126DE.html",
							"GUID-F51367E5-A1A0-4CC2-83B7-3228347126DE.html",
							"GUID-F51367E5-A1A0-4CC2-83B7-3228347126DE.html",
							"GUID-F51367E5-A1A0-4CC2-83B7-3228347126DE.html",
							"GUID-F51367E5-A1A0-4CC2-83B7-3228347126DE.html",
							"GUID-21DF9FC9-288A-4527-B524-21DC72997BCF.html","GUID-3344373C-B7F8-4284-91B3-8BA707CF96D0.html","GUID-0B7BF012-9A69-49E9-B460-3E8BA6BAF6F6.html","GUID-A8E46B8C-B696-4237-84E6-A2BB2EBB3083.html",
							"GUID-A8E46B8C-B696-4237-84E6-A2BB2EBB3083.html",
							"GUID-A8E46B8C-B696-4237-84E6-A2BB2EBB3083.html",
							"GUID-A8E46B8C-B696-4237-84E6-A2BB2EBB3083.html",
							"GUID-10D611FB-059E-44B0-982B-5AF73A1F3625.html",
							"GUID-10D611FB-059E-44B0-982B-5AF73A1F3625.html",
							"GUID-10D611FB-059E-44B0-982B-5AF73A1F3625.html",
							"GUID-10D611FB-059E-44B0-982B-5AF73A1F3625.html",
							"GUID-9DD5C3B1-E41C-4DC6-AF09-47F03CD01863.html",
							"GUID-9DD5C3B1-E41C-4DC6-AF09-47F03CD01863.html",
							"GUID-9DD5C3B1-E41C-4DC6-AF09-47F03CD01863.html",
							"GUID-9DD5C3B1-E41C-4DC6-AF09-47F03CD01863.html",
							"GUID-B076E9A3-8BEF-4255-AB1F-F1C9F0B910E6.html","GUID-077CD1BC-2971-434D-8292-8D749FABC643.html",
							"GUID-077CD1BC-2971-434D-8292-8D749FABC643.html",
							"GUID-077CD1BC-2971-434D-8292-8D749FABC643.html",
							"GUID-F8D41958-4513-4D79-8AF8-05E34E981007.html","GUID-DC339350-7CD7-4A83-95E6-C972DB941D9F.html",
							"GUID-DC339350-7CD7-4A83-95E6-C972DB941D9F.html",
							"GUID-DC339350-7CD7-4A83-95E6-C972DB941D9F.html",
							"GUID-DC339350-7CD7-4A83-95E6-C972DB941D9F.html",
							"GUID-3BD51273-004E-4863-B6A5-9891BB4ADD6F.html",
							"GUID-3BD51273-004E-4863-B6A5-9891BB4ADD6F.html",
							"GUID-3BD51273-004E-4863-B6A5-9891BB4ADD6F.html",
							"GUID-92DC096A-361E-485B-988B-C736F9E5B1FC.html",
							"GUID-92DC096A-361E-485B-988B-C736F9E5B1FC.html",
							"GUID-92DC096A-361E-485B-988B-C736F9E5B1FC.html",
							"GUID-92DC096A-361E-485B-988B-C736F9E5B1FC.html",
							"GUID-8B3BD5D8-904A-48D1-B138-458A09A0BE39.html",
							"GUID-8B3BD5D8-904A-48D1-B138-458A09A0BE39.html",
							"GUID-8B3BD5D8-904A-48D1-B138-458A09A0BE39.html",
							"GUID-8B3BD5D8-904A-48D1-B138-458A09A0BE39.html",
							"GUID-D2A5728F-97C0-4162-9B60-DFB36BE3E509.html",
							"GUID-D2A5728F-97C0-4162-9B60-DFB36BE3E509.html",
							"GUID-D2A5728F-97C0-4162-9B60-DFB36BE3E509.html",
							"GUID-D2A5728F-97C0-4162-9B60-DFB36BE3E509.html",
							"GUID-B1F49323-FF0B-472C-B08D-EB1698EB0451.html",
							"GUID-B1F49323-FF0B-472C-B08D-EB1698EB0451.html",
							"GUID-B1F49323-FF0B-472C-B08D-EB1698EB0451.html",
							"GUID-B1F49323-FF0B-472C-B08D-EB1698EB0451.html",
							"GUID-B14A1515-4274-467B-AAB0-50290E337798.html",
							"GUID-B14A1515-4274-467B-AAB0-50290E337798.html",
							"GUID-B14A1515-4274-467B-AAB0-50290E337798.html",
							"GUID-B14A1515-4274-467B-AAB0-50290E337798.html",
							"GUID-0D323C68-9AA6-4354-A1D8-FC3EF488CF64.html",
							"GUID-0D323C68-9AA6-4354-A1D8-FC3EF488CF64.html",
							"GUID-0D323C68-9AA6-4354-A1D8-FC3EF488CF64.html",
							"GUID-0D323C68-9AA6-4354-A1D8-FC3EF488CF64.html",
							"GUID-8218626C-2201-4A30-86A0-3CFAECD9377C.html",
							"GUID-8218626C-2201-4A30-86A0-3CFAECD9377C.html",
							"GUID-8218626C-2201-4A30-86A0-3CFAECD9377C.html",
							"GUID-8218626C-2201-4A30-86A0-3CFAECD9377C.html",
							"GUID-60CCBA0E-4232-4D5B-8B46-35B2CD246961.html",
							"GUID-60CCBA0E-4232-4D5B-8B46-35B2CD246961.html",
							"GUID-60CCBA0E-4232-4D5B-8B46-35B2CD246961.html",
							"GUID-60CCBA0E-4232-4D5B-8B46-35B2CD246961.html",
							"GUID-729E7671-DB42-4EFC-9EE0-5E353AFE1F10.html",
							"GUID-729E7671-DB42-4EFC-9EE0-5E353AFE1F10.html",
							"GUID-729E7671-DB42-4EFC-9EE0-5E353AFE1F10.html",
							"GUID-729E7671-DB42-4EFC-9EE0-5E353AFE1F10.html",
							"GUID-80B410B9-3704-4EDB-9A00-B805DADA45F9.html","GUID-DC3897EE-4376-4AA3-B18E-FA4A3DC215DF.html",
							"GUID-DC3897EE-4376-4AA3-B18E-FA4A3DC215DF.html",
							"GUID-DC3897EE-4376-4AA3-B18E-FA4A3DC215DF.html",
							"GUID-DC3897EE-4376-4AA3-B18E-FA4A3DC215DF.html",
							"GUID-0850AA02-6FC9-401D-8210-F067333022F0.html",
							"GUID-0850AA02-6FC9-401D-8210-F067333022F0.html",
							"GUID-0850AA02-6FC9-401D-8210-F067333022F0.html",
							"GUID-0850AA02-6FC9-401D-8210-F067333022F0.html",
							"GUID-5457D48F-B5A2-4989-AFDB-21442033FBA2.html",
							"GUID-5457D48F-B5A2-4989-AFDB-21442033FBA2.html",
							"GUID-5457D48F-B5A2-4989-AFDB-21442033FBA2.html",
							"GUID-5457D48F-B5A2-4989-AFDB-21442033FBA2.html",
							"GUID-5457D48F-B5A2-4989-AFDB-21442033FBA2.html",
							"GUID-5AA7D7BF-8EA8-4E62-99AC-1A834CA5D51E.html",
							"GUID-5AA7D7BF-8EA8-4E62-99AC-1A834CA5D51E.html",
							"GUID-5AA7D7BF-8EA8-4E62-99AC-1A834CA5D51E.html",
							"GUID-5AA7D7BF-8EA8-4E62-99AC-1A834CA5D51E.html",
							"GUID-87B162B6-FBC2-43A6-A682-BA51B7C7BB29.html",
							"GUID-87B162B6-FBC2-43A6-A682-BA51B7C7BB29.html",
							"GUID-87B162B6-FBC2-43A6-A682-BA51B7C7BB29.html",
							"GUID-87B162B6-FBC2-43A6-A682-BA51B7C7BB29.html",
							"GUID-87B162B6-FBC2-43A6-A682-BA51B7C7BB29.html",
							"GUID-9806FC76-0B63-4835-90DB-A7AD543B11B9.html",
							"GUID-9806FC76-0B63-4835-90DB-A7AD543B11B9.html",
							"GUID-9806FC76-0B63-4835-90DB-A7AD543B11B9.html",
							"GUID-9806FC76-0B63-4835-90DB-A7AD543B11B9.html",
							"GUID-9806FC76-0B63-4835-90DB-A7AD543B11B9.html",
							"GUID-29DBF913-7A7E-4010-85A2-9A669130B6D5.html",
							"GUID-29DBF913-7A7E-4010-85A2-9A669130B6D5.html",
							"GUID-29DBF913-7A7E-4010-85A2-9A669130B6D5.html",
							"GUID-29DBF913-7A7E-4010-85A2-9A669130B6D5.html",
							"GUID-FCED7BD4-01EB-4F63-93F1-5B6807341680.html",
							"GUID-FCED7BD4-01EB-4F63-93F1-5B6807341680.html",
							"GUID-FCED7BD4-01EB-4F63-93F1-5B6807341680.html",
							"GUID-FCED7BD4-01EB-4F63-93F1-5B6807341680.html",
							"GUID-FCED7BD4-01EB-4F63-93F1-5B6807341680.html",
							"GUID-A5AE4496-99AE-4A84-A0A1-B848300996AE.html",
							"GUID-A5AE4496-99AE-4A84-A0A1-B848300996AE.html",
							"GUID-A5AE4496-99AE-4A84-A0A1-B848300996AE.html",
							"GUID-A5AE4496-99AE-4A84-A0A1-B848300996AE.html",
							"GUID-A5AE4496-99AE-4A84-A0A1-B848300996AE.html",
							"GUID-C096302B-EB91-4753-A336-87A6A900AEB2.html",
							"GUID-C096302B-EB91-4753-A336-87A6A900AEB2.html",
							"GUID-C096302B-EB91-4753-A336-87A6A900AEB2.html",
							"GUID-C096302B-EB91-4753-A336-87A6A900AEB2.html",
							"GUID-C096302B-EB91-4753-A336-87A6A900AEB2.html",
							"GUID-399F98F0-1BDE-481D-A77A-93B5FCEB16C8.html","GUID-691106A9-A8E4-4B03-9176-419838331C22.html","GUID-351BCC79-803C-4FA0-8AFE-4C26DA2B0FD6.html",
							"GUID-351BCC79-803C-4FA0-8AFE-4C26DA2B0FD6.html",
							"GUID-351BCC79-803C-4FA0-8AFE-4C26DA2B0FD6.html",
							"GUID-351BCC79-803C-4FA0-8AFE-4C26DA2B0FD6.html",
							"GUID-EDBF52FA-9FBC-4404-A7D2-D815EFEC2BD4.html",
							"GUID-EDBF52FA-9FBC-4404-A7D2-D815EFEC2BD4.html",
							"GUID-EDBF52FA-9FBC-4404-A7D2-D815EFEC2BD4.html",
							"GUID-EDBF52FA-9FBC-4404-A7D2-D815EFEC2BD4.html",
							"GUID-69CAE3CF-8610-4E11-956A-B03DDAFD0B95.html","GUID-63B996F4-CEC1-4B2A-BDE5-37090FBFA514.html",
							"GUID-63B996F4-CEC1-4B2A-BDE5-37090FBFA514.html",
							"GUID-63B996F4-CEC1-4B2A-BDE5-37090FBFA514.html",
							"GUID-DD4DCB53-DB4E-479A-9365-B7F9312729B4.html","GUID-C2335AC4-66E1-43C9-9691-186D96945C52.html",
							"GUID-C2335AC4-66E1-43C9-9691-186D96945C52.html",
							"GUID-C2335AC4-66E1-43C9-9691-186D96945C52.html",
							"GUID-FD31E48A-F2FD-4CBD-AC98-2DE21A5FFAC2.html",
							"GUID-FD31E48A-F2FD-4CBD-AC98-2DE21A5FFAC2.html",
							"GUID-FD31E48A-F2FD-4CBD-AC98-2DE21A5FFAC2.html",
							"GUID-FD31E48A-F2FD-4CBD-AC98-2DE21A5FFAC2.html",
							"GUID-76DA4B74-9D2A-44ED-92A8-1A8A9FEDE530.html",
							"GUID-76DA4B74-9D2A-44ED-92A8-1A8A9FEDE530.html",
							"GUID-76DA4B74-9D2A-44ED-92A8-1A8A9FEDE530.html",
							"GUID-76DA4B74-9D2A-44ED-92A8-1A8A9FEDE530.html",
							"GUID-2DB64864-1151-482B-9DA9-77032E891570.html",
							"GUID-2DB64864-1151-482B-9DA9-77032E891570.html",
							"GUID-2DB64864-1151-482B-9DA9-77032E891570.html",
							"GUID-2DB64864-1151-482B-9DA9-77032E891570.html",
							"GUID-0888211F-7B6B-4EB6-88D6-EF039AA22A1E.html",
							"GUID-0888211F-7B6B-4EB6-88D6-EF039AA22A1E.html",
							"GUID-0888211F-7B6B-4EB6-88D6-EF039AA22A1E.html",
							"GUID-0888211F-7B6B-4EB6-88D6-EF039AA22A1E.html",
							"GUID-66F7A381-CFCD-4F35-AFFE-9FF065555A93.html",
							"GUID-66F7A381-CFCD-4F35-AFFE-9FF065555A93.html",
							"GUID-66F7A381-CFCD-4F35-AFFE-9FF065555A93.html",
							"GUID-66F7A381-CFCD-4F35-AFFE-9FF065555A93.html",
							"GUID-3351C450-6061-49E2-858A-0C525644E118.html",
							"GUID-3351C450-6061-49E2-858A-0C525644E118.html",
							"GUID-3351C450-6061-49E2-858A-0C525644E118.html",
							"GUID-3351C450-6061-49E2-858A-0C525644E118.html",
							"GUID-E4D21632-5244-477D-8043-8DB074760250.html",
							"GUID-E4D21632-5244-477D-8043-8DB074760250.html",
							"GUID-E4D21632-5244-477D-8043-8DB074760250.html",
							"GUID-E4D21632-5244-477D-8043-8DB074760250.html",
							"GUID-89C0CBCA-C8FA-4A2B-92BC-EFCC5F62F3F4.html","GUID-8C3DE9A5-0DDC-4225-A994-84000D1DC83D.html",
							"GUID-8C3DE9A5-0DDC-4225-A994-84000D1DC83D.html",
							"GUID-8C3DE9A5-0DDC-4225-A994-84000D1DC83D.html",
							"GUID-8C3DE9A5-0DDC-4225-A994-84000D1DC83D.html",
							"GUID-242479E0-DA5B-4055-9253-9085AF21A6A9.html",
							"GUID-242479E0-DA5B-4055-9253-9085AF21A6A9.html",
							"GUID-242479E0-DA5B-4055-9253-9085AF21A6A9.html",
							"GUID-242479E0-DA5B-4055-9253-9085AF21A6A9.html",
							"GUID-D5EC317F-2DCF-4359-B4EC-F15411307A70.html",
							"GUID-D5EC317F-2DCF-4359-B4EC-F15411307A70.html",
							"GUID-D5EC317F-2DCF-4359-B4EC-F15411307A70.html",
							"GUID-D5EC317F-2DCF-4359-B4EC-F15411307A70.html",
							"GUID-9BE31139-4256-46BA-A3B7-012BC1FB75C1.html",
							"GUID-9BE31139-4256-46BA-A3B7-012BC1FB75C1.html",
							"GUID-9BE31139-4256-46BA-A3B7-012BC1FB75C1.html",
							"GUID-9BE31139-4256-46BA-A3B7-012BC1FB75C1.html",
							"GUID-9BE31139-4256-46BA-A3B7-012BC1FB75C1.html",
							"GUID-FC64B577-64BF-4EC2-9E88-CD0EC46F2B98.html",
							"GUID-FC64B577-64BF-4EC2-9E88-CD0EC46F2B98.html",
							"GUID-FC64B577-64BF-4EC2-9E88-CD0EC46F2B98.html",
							"GUID-FC64B577-64BF-4EC2-9E88-CD0EC46F2B98.html",
							"GUID-33349555-EB21-4092-B162-4C79273D4B21.html",
							"GUID-33349555-EB21-4092-B162-4C79273D4B21.html",
							"GUID-33349555-EB21-4092-B162-4C79273D4B21.html",
							"GUID-33349555-EB21-4092-B162-4C79273D4B21.html",
							"GUID-33349555-EB21-4092-B162-4C79273D4B21.html",
							"GUID-6DD76E1C-501C-49D5-84F9-2C1C83E0E091.html",
							"GUID-6DD76E1C-501C-49D5-84F9-2C1C83E0E091.html",
							"GUID-6DD76E1C-501C-49D5-84F9-2C1C83E0E091.html",
							"GUID-6DD76E1C-501C-49D5-84F9-2C1C83E0E091.html",
							"GUID-6DD76E1C-501C-49D5-84F9-2C1C83E0E091.html",
							"GUID-13E3BFFF-AD13-46E0-89F2-8E2BEBC2DCB2.html","GUID-F515F01D-4A93-47D2-9A9F-0E6F4A7CC21E.html","GUID-3D9C0612-9901-4937-9DD5-2E9FB4284D92.html","GUID-6BC77305-74A6-40BC-B384-220004FEC7E7.html",
							"GUID-6BC77305-74A6-40BC-B384-220004FEC7E7.html",
							"GUID-6BC77305-74A6-40BC-B384-220004FEC7E7.html",
							"GUID-6BC77305-74A6-40BC-B384-220004FEC7E7.html",
							"GUID-23E767F2-8C7C-491D-9F90-9A34B3A58846.html","GUID-78253C17-CCF4-4B54-9339-25A307E7D83D.html",
							"GUID-78253C17-CCF4-4B54-9339-25A307E7D83D.html",
							"GUID-78253C17-CCF4-4B54-9339-25A307E7D83D.html",
							"GUID-82542FDE-2CB4-4B73-ADBC-FE76BDD7E6EF.html",
							"GUID-82542FDE-2CB4-4B73-ADBC-FE76BDD7E6EF.html",
							"GUID-82542FDE-2CB4-4B73-ADBC-FE76BDD7E6EF.html",
							"GUID-EA787B99-8D9F-440B-975B-19397DEE1133.html","GUID-ACB60313-8BF7-49EF-94DB-43699238BF8E.html",
							"GUID-ACB60313-8BF7-49EF-94DB-43699238BF8E.html",
							"GUID-ACB60313-8BF7-49EF-94DB-43699238BF8E.html",
							"GUID-ACB60313-8BF7-49EF-94DB-43699238BF8E.html",
							"GUID-80DF3D00-77B5-4B76-9AB3-DE64458E975B.html",
							"GUID-80DF3D00-77B5-4B76-9AB3-DE64458E975B.html",
							"GUID-80DF3D00-77B5-4B76-9AB3-DE64458E975B.html",
							"GUID-1697FB9A-B10E-40B7-9B59-8AAE72C2A540.html",
							"GUID-1697FB9A-B10E-40B7-9B59-8AAE72C2A540.html",
							"GUID-1697FB9A-B10E-40B7-9B59-8AAE72C2A540.html",
							"GUID-1697FB9A-B10E-40B7-9B59-8AAE72C2A540.html",
							"GUID-22085E52-409B-4BC2-994C-757BA5774B6C.html",
							"GUID-22085E52-409B-4BC2-994C-757BA5774B6C.html",
							"GUID-22085E52-409B-4BC2-994C-757BA5774B6C.html",
							"GUID-22085E52-409B-4BC2-994C-757BA5774B6C.html",
							"GUID-442B7CED-3027-4FC5-B29C-11A81136ED8F.html",
							"GUID-442B7CED-3027-4FC5-B29C-11A81136ED8F.html",
							"GUID-442B7CED-3027-4FC5-B29C-11A81136ED8F.html",
							"GUID-442B7CED-3027-4FC5-B29C-11A81136ED8F.html",
							"GUID-5F78080A-4130-4EDF-82EA-C512B6B1C104.html",
							"GUID-5F78080A-4130-4EDF-82EA-C512B6B1C104.html",
							"GUID-5F78080A-4130-4EDF-82EA-C512B6B1C104.html",
							"GUID-5F78080A-4130-4EDF-82EA-C512B6B1C104.html",
							"GUID-257171C3-8C69-48D8-B115-28DB3CF49A35.html",
							"GUID-257171C3-8C69-48D8-B115-28DB3CF49A35.html",
							"GUID-257171C3-8C69-48D8-B115-28DB3CF49A35.html",
							"GUID-257171C3-8C69-48D8-B115-28DB3CF49A35.html",
							"GUID-3AAC9FAC-C500-4C78-92C5-AA58FA4A7442.html","GUID-6389C39D-D203-4BB6-B3C4-C830EDF836E2.html",
							"GUID-6389C39D-D203-4BB6-B3C4-C830EDF836E2.html",
							"GUID-6389C39D-D203-4BB6-B3C4-C830EDF836E2.html",
							"GUID-6389C39D-D203-4BB6-B3C4-C830EDF836E2.html",
							"GUID-550D3147-A439-4F5E-B364-8AF44F581DBA.html",
							"GUID-550D3147-A439-4F5E-B364-8AF44F581DBA.html",
							"GUID-550D3147-A439-4F5E-B364-8AF44F581DBA.html",
							"GUID-550D3147-A439-4F5E-B364-8AF44F581DBA.html",
							"GUID-79133603-7596-4703-8F82-B5825195D3E3.html",
							"GUID-79133603-7596-4703-8F82-B5825195D3E3.html",
							"GUID-79133603-7596-4703-8F82-B5825195D3E3.html",
							"GUID-79133603-7596-4703-8F82-B5825195D3E3.html",
							"GUID-0DF8435E-0F30-4842-BC54-886DFB7E385B.html",
							"GUID-0DF8435E-0F30-4842-BC54-886DFB7E385B.html",
							"GUID-0DF8435E-0F30-4842-BC54-886DFB7E385B.html",
							"GUID-0DF8435E-0F30-4842-BC54-886DFB7E385B.html",
							"GUID-7410481B-7662-4250-A8B6-D6A3731D853E.html",
							"GUID-7410481B-7662-4250-A8B6-D6A3731D853E.html",
							"GUID-7410481B-7662-4250-A8B6-D6A3731D853E.html",
							"GUID-7410481B-7662-4250-A8B6-D6A3731D853E.html",
							"GUID-305B6179-373D-4586-8733-3CEE25FE10A8.html",
							"GUID-305B6179-373D-4586-8733-3CEE25FE10A8.html",
							"GUID-305B6179-373D-4586-8733-3CEE25FE10A8.html",
							"GUID-305B6179-373D-4586-8733-3CEE25FE10A8.html",
							"GUID-7D37FF97-C786-4024-841C-AA6F79A0F54B.html",
							"GUID-7D37FF97-C786-4024-841C-AA6F79A0F54B.html",
							"GUID-7D37FF97-C786-4024-841C-AA6F79A0F54B.html",
							"GUID-7D37FF97-C786-4024-841C-AA6F79A0F54B.html",
							"GUID-8830EEF2-01A4-427A-9EB0-0560C3F7A216.html",
							"GUID-8830EEF2-01A4-427A-9EB0-0560C3F7A216.html",
							"GUID-8830EEF2-01A4-427A-9EB0-0560C3F7A216.html",
							"GUID-8830EEF2-01A4-427A-9EB0-0560C3F7A216.html",
							"GUID-D3EF214E-CD09-4819-A798-82EC3CEC884D.html","GUID-44679D1C-A084-4AC1-A565-E47E86B867D2.html","GUID-95FA5CB8-C420-4818-BE26-76698ADFD84A.html",
							"GUID-95FA5CB8-C420-4818-BE26-76698ADFD84A.html",
							"GUID-95FA5CB8-C420-4818-BE26-76698ADFD84A.html",
							"GUID-95FA5CB8-C420-4818-BE26-76698ADFD84A.html",
							"GUID-C2F16BE8-E809-4141-961D-7E739B71C218.html","GUID-08BD9B95-4E02-4C40-AC3C-48929433890B.html",
							"GUID-08BD9B95-4E02-4C40-AC3C-48929433890B.html",
							"GUID-08BD9B95-4E02-4C40-AC3C-48929433890B.html",
							"GUID-7FECC045-859E-429B-987B-C6BB9271911A.html",
							"GUID-7FECC045-859E-429B-987B-C6BB9271911A.html",
							"GUID-7FECC045-859E-429B-987B-C6BB9271911A.html",
							"GUID-A9588F6C-1E36-4F3E-9BB7-C1BF21F919CA.html","GUID-CD6066D3-DAAC-48BB-BEBF-2A0ABD0390F8.html",
							"GUID-CD6066D3-DAAC-48BB-BEBF-2A0ABD0390F8.html",
							"GUID-CD6066D3-DAAC-48BB-BEBF-2A0ABD0390F8.html",
							"GUID-CD6066D3-DAAC-48BB-BEBF-2A0ABD0390F8.html",
							"GUID-635CFD97-733C-4F12-9653-283EEE235099.html",
							"GUID-635CFD97-733C-4F12-9653-283EEE235099.html",
							"GUID-635CFD97-733C-4F12-9653-283EEE235099.html",
							"GUID-8DD0E3D5-5EEC-4AD7-BBDB-CE6B6DBFA434.html",
							"GUID-8DD0E3D5-5EEC-4AD7-BBDB-CE6B6DBFA434.html",
							"GUID-8DD0E3D5-5EEC-4AD7-BBDB-CE6B6DBFA434.html",
							"GUID-8DD0E3D5-5EEC-4AD7-BBDB-CE6B6DBFA434.html",
							"GUID-A2340783-BE24-4963-BE5E-1E4F0C703378.html",
							"GUID-A2340783-BE24-4963-BE5E-1E4F0C703378.html",
							"GUID-A2340783-BE24-4963-BE5E-1E4F0C703378.html",
							"GUID-A2340783-BE24-4963-BE5E-1E4F0C703378.html",
							"GUID-FDDBDFAA-45A0-4F49-95DB-D4219D3D88D8.html","GUID-D7EC24BF-02DF-4582-AAE1-362A340EC078.html",
							"GUID-D7EC24BF-02DF-4582-AAE1-362A340EC078.html",
							"GUID-D7EC24BF-02DF-4582-AAE1-362A340EC078.html",
							"GUID-D7EC24BF-02DF-4582-AAE1-362A340EC078.html",
							"GUID-DC724121-E097-45DD-9FAC-B4ED7E2659F8.html",
							"GUID-DC724121-E097-45DD-9FAC-B4ED7E2659F8.html",
							"GUID-DC724121-E097-45DD-9FAC-B4ED7E2659F8.html",
							"GUID-DC724121-E097-45DD-9FAC-B4ED7E2659F8.html",
							"GUID-96471DCC-B7AA-42DD-9E25-F203BA07A64C.html",
							"GUID-96471DCC-B7AA-42DD-9E25-F203BA07A64C.html",
							"GUID-96471DCC-B7AA-42DD-9E25-F203BA07A64C.html",
							"GUID-96471DCC-B7AA-42DD-9E25-F203BA07A64C.html",
							"GUID-0493753C-1E12-45EB-A3DD-3AC427B489DD.html",
							"GUID-0493753C-1E12-45EB-A3DD-3AC427B489DD.html",
							"GUID-0493753C-1E12-45EB-A3DD-3AC427B489DD.html",
							"GUID-0493753C-1E12-45EB-A3DD-3AC427B489DD.html",
							"GUID-0493753C-1E12-45EB-A3DD-3AC427B489DD.html",
							"GUID-4CB7027E-C268-4B06-94B3-8875D7228D41.html",
							"GUID-4CB7027E-C268-4B06-94B3-8875D7228D41.html",
							"GUID-4CB7027E-C268-4B06-94B3-8875D7228D41.html",
							"GUID-4CB7027E-C268-4B06-94B3-8875D7228D41.html",
							"GUID-757672FA-34FD-4D71-9D93-1E25E342A036.html","GUID-D3763F51-25D8-4D48-8198-DCE8EC287529.html","GUID-BE8DC60B-C040-45E7-B672-E1D7E41AF693.html","GUID-0FE07287-6269-4587-BF89-D875C3FAC10E.html",
							"GUID-0FE07287-6269-4587-BF89-D875C3FAC10E.html",
							"GUID-0FE07287-6269-4587-BF89-D875C3FAC10E.html",
							"GUID-0FE07287-6269-4587-BF89-D875C3FAC10E.html",
							"GUID-B47A9963-CBCC-4C87-8DF5-07DAEE76D939.html",
							"GUID-B47A9963-CBCC-4C87-8DF5-07DAEE76D939.html",
							"GUID-B47A9963-CBCC-4C87-8DF5-07DAEE76D939.html",
							"GUID-B47A9963-CBCC-4C87-8DF5-07DAEE76D939.html",
							"GUID-1BAE8C43-5EB0-4A38-9F12-381D98D3598A.html",
							"GUID-1BAE8C43-5EB0-4A38-9F12-381D98D3598A.html",
							"GUID-1BAE8C43-5EB0-4A38-9F12-381D98D3598A.html",
							"GUID-1BAE8C43-5EB0-4A38-9F12-381D98D3598A.html",
							"GUID-B8A5602E-BBF6-403E-832C-3552714C95EC.html",
							"GUID-B8A5602E-BBF6-403E-832C-3552714C95EC.html",
							"GUID-B8A5602E-BBF6-403E-832C-3552714C95EC.html",
							"GUID-B8A5602E-BBF6-403E-832C-3552714C95EC.html",
							"GUID-CBDF7CF7-55E7-4C3B-A197-B39E7A1C3BD9.html",
							"GUID-CBDF7CF7-55E7-4C3B-A197-B39E7A1C3BD9.html",
							"GUID-CBDF7CF7-55E7-4C3B-A197-B39E7A1C3BD9.html",
							"GUID-CBDF7CF7-55E7-4C3B-A197-B39E7A1C3BD9.html",
							"GUID-01E984D8-FAD1-450E-A64C-A00C1C1EC25F.html",
							"GUID-01E984D8-FAD1-450E-A64C-A00C1C1EC25F.html",
							"GUID-01E984D8-FAD1-450E-A64C-A00C1C1EC25F.html",
							"GUID-01E984D8-FAD1-450E-A64C-A00C1C1EC25F.html",
							"GUID-9DEF50C1-043E-4AF2-B347-EB012A843637.html","GUID-50C9DF79-9ADF-485B-A49F-648B8CBC1E44.html",
							"GUID-50C9DF79-9ADF-485B-A49F-648B8CBC1E44.html",
							"GUID-50C9DF79-9ADF-485B-A49F-648B8CBC1E44.html",
							"GUID-2462B148-1BB3-4F4B-AF61-4DD6276E83F6.html",
							"GUID-2462B148-1BB3-4F4B-AF61-4DD6276E83F6.html",
							"GUID-2462B148-1BB3-4F4B-AF61-4DD6276E83F6.html",
							"GUID-C64524AB-A096-439F-822F-589F1DD85ED8.html","GUID-AE85D451-BCBC-4F2C-BA4A-0AE7DE91AACD.html",
							"GUID-AE85D451-BCBC-4F2C-BA4A-0AE7DE91AACD.html",
							"GUID-AE85D451-BCBC-4F2C-BA4A-0AE7DE91AACD.html",
							"GUID-93EAE556-5E67-43F3-97D4-D6698E4C4BB8.html",
							"GUID-93EAE556-5E67-43F3-97D4-D6698E4C4BB8.html",
							"GUID-93EAE556-5E67-43F3-97D4-D6698E4C4BB8.html",
							"GUID-93EAE556-5E67-43F3-97D4-D6698E4C4BB8.html",
							"GUID-386AC30D-82F4-4793-B026-1A5D5C2D2F6B.html",
							"GUID-386AC30D-82F4-4793-B026-1A5D5C2D2F6B.html",
							"GUID-386AC30D-82F4-4793-B026-1A5D5C2D2F6B.html",
							"GUID-386AC30D-82F4-4793-B026-1A5D5C2D2F6B.html",
							"GUID-9E108893-CC60-40F4-B0FD-4847AE8B2CDC.html",
							"GUID-9E108893-CC60-40F4-B0FD-4847AE8B2CDC.html",
							"GUID-9E108893-CC60-40F4-B0FD-4847AE8B2CDC.html",
							"GUID-9E108893-CC60-40F4-B0FD-4847AE8B2CDC.html",
							"GUID-68EFCA20-42AB-41A3-9481-C04C1FD93C58.html",
							"GUID-68EFCA20-42AB-41A3-9481-C04C1FD93C58.html",
							"GUID-68EFCA20-42AB-41A3-9481-C04C1FD93C58.html",
							"GUID-68EFCA20-42AB-41A3-9481-C04C1FD93C58.html",
							"GUID-01E3EBD3-91AE-485E-9886-00F22FD5F031.html",
							"GUID-01E3EBD3-91AE-485E-9886-00F22FD5F031.html",
							"GUID-01E3EBD3-91AE-485E-9886-00F22FD5F031.html",
							"GUID-01E3EBD3-91AE-485E-9886-00F22FD5F031.html",
							"GUID-A1E9531F-74AB-47AF-A831-F862DBD33289.html",
							"GUID-A1E9531F-74AB-47AF-A831-F862DBD33289.html",
							"GUID-A1E9531F-74AB-47AF-A831-F862DBD33289.html",
							"GUID-A1E9531F-74AB-47AF-A831-F862DBD33289.html",
							"GUID-775797D8-E962-49BA-80EA-86C4074DC647.html","GUID-7CF99903-A80D-4D70-B2BA-E4A3DA761745.html",
							"GUID-7CF99903-A80D-4D70-B2BA-E4A3DA761745.html",
							"GUID-7CF99903-A80D-4D70-B2BA-E4A3DA761745.html",
							"GUID-7CF99903-A80D-4D70-B2BA-E4A3DA761745.html",
							"GUID-033AF020-10C4-44E4-B63A-CA80ABBFDB43.html",
							"GUID-033AF020-10C4-44E4-B63A-CA80ABBFDB43.html",
							"GUID-033AF020-10C4-44E4-B63A-CA80ABBFDB43.html",
							"GUID-033AF020-10C4-44E4-B63A-CA80ABBFDB43.html",
							"GUID-033AF020-10C4-44E4-B63A-CA80ABBFDB43.html",
							"GUID-68253292-7DA5-4CFC-B427-B21B5817ABFC.html",
							"GUID-68253292-7DA5-4CFC-B427-B21B5817ABFC.html",
							"GUID-68253292-7DA5-4CFC-B427-B21B5817ABFC.html",
							"GUID-68253292-7DA5-4CFC-B427-B21B5817ABFC.html",
							"GUID-68253292-7DA5-4CFC-B427-B21B5817ABFC.html",
							"GUID-1DBED9CF-48E4-4281-AC47-89A22EA54134.html",
							"GUID-1DBED9CF-48E4-4281-AC47-89A22EA54134.html",
							"GUID-1DBED9CF-48E4-4281-AC47-89A22EA54134.html",
							"GUID-1DBED9CF-48E4-4281-AC47-89A22EA54134.html",
							"GUID-9CB2BAFE-FDF8-43EA-8E56-D058A1033570.html",
							"GUID-9CB2BAFE-FDF8-43EA-8E56-D058A1033570.html",
							"GUID-9CB2BAFE-FDF8-43EA-8E56-D058A1033570.html",
							"GUID-9CB2BAFE-FDF8-43EA-8E56-D058A1033570.html",
							"GUID-9CB2BAFE-FDF8-43EA-8E56-D058A1033570.html",
							"GUID-D30D3DE3-83A9-4109-BCEB-220F4364C915.html",
							"GUID-D30D3DE3-83A9-4109-BCEB-220F4364C915.html",
							"GUID-D30D3DE3-83A9-4109-BCEB-220F4364C915.html",
							"GUID-D30D3DE3-83A9-4109-BCEB-220F4364C915.html",
							"GUID-D30D3DE3-83A9-4109-BCEB-220F4364C915.html",
							"GUID-B4119700-59B5-4129-BDD3-6EFEEDE15DF6.html",
							"GUID-B4119700-59B5-4129-BDD3-6EFEEDE15DF6.html",
							"GUID-B4119700-59B5-4129-BDD3-6EFEEDE15DF6.html",
							"GUID-B4119700-59B5-4129-BDD3-6EFEEDE15DF6.html",
							"GUID-2F798529-2888-46DE-B957-6AB45F5CA353.html",
							"GUID-2F798529-2888-46DE-B957-6AB45F5CA353.html",
							"GUID-2F798529-2888-46DE-B957-6AB45F5CA353.html",
							"GUID-2F798529-2888-46DE-B957-6AB45F5CA353.html",
							"GUID-2F798529-2888-46DE-B957-6AB45F5CA353.html",
							"GUID-BA42E3B2-221B-4AAC-B14B-7CFD1A39CFAA.html",
							"GUID-BA42E3B2-221B-4AAC-B14B-7CFD1A39CFAA.html",
							"GUID-BA42E3B2-221B-4AAC-B14B-7CFD1A39CFAA.html",
							"GUID-BA42E3B2-221B-4AAC-B14B-7CFD1A39CFAA.html",
							"GUID-BA42E3B2-221B-4AAC-B14B-7CFD1A39CFAA.html",
							"GUID-7BFD48CD-E74E-46A7-9499-8A80D53C3EEC.html",
							"GUID-7BFD48CD-E74E-46A7-9499-8A80D53C3EEC.html",
							"GUID-7BFD48CD-E74E-46A7-9499-8A80D53C3EEC.html",
							"GUID-7BFD48CD-E74E-46A7-9499-8A80D53C3EEC.html",
							"GUID-7BFD48CD-E74E-46A7-9499-8A80D53C3EEC.html",
							"GUID-86D4C19A-D181-43E8-B97A-01AB532F2DBF.html","GUID-8740D1FC-25B7-4F36-9AB6-A49E352E29EA.html","GUID-F3838ABB-447A-4F7A-BBFC-60F3838D1DD8.html","GUID-95AFDA33-E202-461B-A5BB-9DD4B21DF3A0.html","GUID-8B3878C7-F22C-4FF9-8EB3-4F8CEB69254F.html","GUID-79A29BFC-3ADD-4324-A25D-593EBE448371.html","GUID-18190F22-CD3F-4FBC-B2FD-796145355544.html","GUID-6EDD6ECC-FF39-46BA-9B00-972ED3CD5AFC.html","GUID-1CD5D4D3-FB4C-4968-BFE1-6B2850AC5EE0.html",
							"GUID-1CD5D4D3-FB4C-4968-BFE1-6B2850AC5EE0.html",
							"GUID-1CD5D4D3-FB4C-4968-BFE1-6B2850AC5EE0.html",
							"GUID-1CD5D4D3-FB4C-4968-BFE1-6B2850AC5EE0.html",
							"GUID-F2C1395F-5B5C-4BA2-8CDB-9CA380F63A6F.html",
							"GUID-F2C1395F-5B5C-4BA2-8CDB-9CA380F63A6F.html",
							"GUID-F2C1395F-5B5C-4BA2-8CDB-9CA380F63A6F.html",
							"GUID-F2C1395F-5B5C-4BA2-8CDB-9CA380F63A6F.html",
							"GUID-60A7E067-D968-4F98-AE20-7FD178367663.html",
							"GUID-60A7E067-D968-4F98-AE20-7FD178367663.html",
							"GUID-60A7E067-D968-4F98-AE20-7FD178367663.html",
							"GUID-60A7E067-D968-4F98-AE20-7FD178367663.html",
							"GUID-064457CF-CBBD-4FB9-8FC6-4F537FDB3AD4.html","GUID-0B469A8D-8A15-488F-BAF3-4F2B7CFEA0C1.html",
							"GUID-0B469A8D-8A15-488F-BAF3-4F2B7CFEA0C1.html",
							"GUID-0B469A8D-8A15-488F-BAF3-4F2B7CFEA0C1.html",
							"GUID-567F9486-30BB-4152-A790-E3864CE0A8E3.html","GUID-2EA76FA4-062A-4C79-B764-843D742F777A.html",
							"GUID-2EA76FA4-062A-4C79-B764-843D742F777A.html",
							"GUID-2EA76FA4-062A-4C79-B764-843D742F777A.html",
							"GUID-2EA76FA4-062A-4C79-B764-843D742F777A.html",
							"GUID-DA2B8D3E-A95D-4EAA-A9E2-A8D0C336F3E9.html",
							"GUID-DA2B8D3E-A95D-4EAA-A9E2-A8D0C336F3E9.html",
							"GUID-DA2B8D3E-A95D-4EAA-A9E2-A8D0C336F3E9.html",
							"GUID-47729837-3910-4465-902E-C58A8D98680A.html",
							"GUID-47729837-3910-4465-902E-C58A8D98680A.html",
							"GUID-47729837-3910-4465-902E-C58A8D98680A.html",
							"GUID-47729837-3910-4465-902E-C58A8D98680A.html",
							"GUID-11CC101E-6888-47F7-A7D6-A43FF7315A36.html",
							"GUID-11CC101E-6888-47F7-A7D6-A43FF7315A36.html",
							"GUID-11CC101E-6888-47F7-A7D6-A43FF7315A36.html",
							"GUID-11CC101E-6888-47F7-A7D6-A43FF7315A36.html",
							"GUID-69A8EA5B-6918-4669-B516-A89473982E16.html",
							"GUID-69A8EA5B-6918-4669-B516-A89473982E16.html",
							"GUID-69A8EA5B-6918-4669-B516-A89473982E16.html",
							"GUID-69A8EA5B-6918-4669-B516-A89473982E16.html",
							"GUID-46B318DF-2896-4717-AF9F-0650AA0B8931.html",
							"GUID-46B318DF-2896-4717-AF9F-0650AA0B8931.html",
							"GUID-46B318DF-2896-4717-AF9F-0650AA0B8931.html",
							"GUID-46B318DF-2896-4717-AF9F-0650AA0B8931.html",
							"GUID-70A271BB-A73E-4A15-9A25-88337CBA35FD.html",
							"GUID-70A271BB-A73E-4A15-9A25-88337CBA35FD.html",
							"GUID-70A271BB-A73E-4A15-9A25-88337CBA35FD.html",
							"GUID-70A271BB-A73E-4A15-9A25-88337CBA35FD.html",
							"GUID-7E1233DC-2DB2-4215-A166-6741E3B5A29A.html",
							"GUID-7E1233DC-2DB2-4215-A166-6741E3B5A29A.html",
							"GUID-7E1233DC-2DB2-4215-A166-6741E3B5A29A.html",
							"GUID-7E1233DC-2DB2-4215-A166-6741E3B5A29A.html",
							"GUID-69A557FA-6773-44B9-A226-1EDDD8C08D97.html",
							"GUID-69A557FA-6773-44B9-A226-1EDDD8C08D97.html",
							"GUID-69A557FA-6773-44B9-A226-1EDDD8C08D97.html",
							"GUID-69A557FA-6773-44B9-A226-1EDDD8C08D97.html",
							"GUID-867B4F56-BB72-4ABA-9615-955A27CDA38D.html","GUID-8FC1D12F-AB57-4182-A022-646C9FBA5795.html",
							"GUID-8FC1D12F-AB57-4182-A022-646C9FBA5795.html",
							"GUID-8FC1D12F-AB57-4182-A022-646C9FBA5795.html",
							"GUID-8FC1D12F-AB57-4182-A022-646C9FBA5795.html",
							"GUID-8964EA9F-440A-4754-94F6-DD1A24D8C842.html",
							"GUID-8964EA9F-440A-4754-94F6-DD1A24D8C842.html",
							"GUID-8964EA9F-440A-4754-94F6-DD1A24D8C842.html",
							"GUID-8964EA9F-440A-4754-94F6-DD1A24D8C842.html",
							"GUID-D93315FA-97A6-4106-83E0-02CA1F3E821F.html",
							"GUID-D93315FA-97A6-4106-83E0-02CA1F3E821F.html",
							"GUID-D93315FA-97A6-4106-83E0-02CA1F3E821F.html",
							"GUID-D93315FA-97A6-4106-83E0-02CA1F3E821F.html",
							"GUID-BBE1985C-32D6-4EBE-9C29-839C48718CFE.html",
							"GUID-BBE1985C-32D6-4EBE-9C29-839C48718CFE.html",
							"GUID-BBE1985C-32D6-4EBE-9C29-839C48718CFE.html",
							"GUID-BBE1985C-32D6-4EBE-9C29-839C48718CFE.html",
							"GUID-BBE1985C-32D6-4EBE-9C29-839C48718CFE.html",
							"GUID-69086B44-F52F-43B3-93CF-FAE2D00895E0.html",
							"GUID-69086B44-F52F-43B3-93CF-FAE2D00895E0.html",
							"GUID-69086B44-F52F-43B3-93CF-FAE2D00895E0.html",
							"GUID-69086B44-F52F-43B3-93CF-FAE2D00895E0.html",
							"GUID-197E3DAE-6C5A-4ED1-A467-28A55F561FBC.html",
							"GUID-197E3DAE-6C5A-4ED1-A467-28A55F561FBC.html",
							"GUID-197E3DAE-6C5A-4ED1-A467-28A55F561FBC.html",
							"GUID-197E3DAE-6C5A-4ED1-A467-28A55F561FBC.html",
							"GUID-4106EF53-31D9-47F3-BD04-CAB4B46F0FA9.html",
							"GUID-4106EF53-31D9-47F3-BD04-CAB4B46F0FA9.html",
							"GUID-4106EF53-31D9-47F3-BD04-CAB4B46F0FA9.html",
							"GUID-4106EF53-31D9-47F3-BD04-CAB4B46F0FA9.html",
							"GUID-4106EF53-31D9-47F3-BD04-CAB4B46F0FA9.html",
							"GUID-8F8A5BBD-67A1-428E-B431-130003DC5EB7.html",
							"GUID-8F8A5BBD-67A1-428E-B431-130003DC5EB7.html",
							"GUID-8F8A5BBD-67A1-428E-B431-130003DC5EB7.html",
							"GUID-8F8A5BBD-67A1-428E-B431-130003DC5EB7.html",
							"GUID-8F8A5BBD-67A1-428E-B431-130003DC5EB7.html",
							"GUID-56047494-5C01-4FAD-82AC-E19080FBC296.html","GUID-B566440B-FA0F-43F6-84D0-E97CB18ABBC3.html","GUID-65E5AB1F-CB6E-4B69-A260-D03D05E391A5.html",
							"GUID-65E5AB1F-CB6E-4B69-A260-D03D05E391A5.html",
							"GUID-65E5AB1F-CB6E-4B69-A260-D03D05E391A5.html",
							"GUID-65E5AB1F-CB6E-4B69-A260-D03D05E391A5.html",
							"GUID-24F25B2D-77E9-45C8-BE65-22CD3277A075.html",
							"GUID-24F25B2D-77E9-45C8-BE65-22CD3277A075.html",
							"GUID-24F25B2D-77E9-45C8-BE65-22CD3277A075.html",
							"GUID-24F25B2D-77E9-45C8-BE65-22CD3277A075.html",
							"GUID-1E795FE9-93EB-48DD-9011-577E763E683C.html","GUID-1D0AD6D8-972B-4D20-89ED-354F04B1AD8B.html",
							"GUID-1D0AD6D8-972B-4D20-89ED-354F04B1AD8B.html",
							"GUID-1D0AD6D8-972B-4D20-89ED-354F04B1AD8B.html",
							"GUID-596C22F0-71C2-4FD3-9512-C8725C77BFA6.html","GUID-E8792DE9-F622-4C0E-9F55-D9A049DB1889.html",
							"GUID-E8792DE9-F622-4C0E-9F55-D9A049DB1889.html",
							"GUID-E8792DE9-F622-4C0E-9F55-D9A049DB1889.html",
							"GUID-E8792DE9-F622-4C0E-9F55-D9A049DB1889.html",
							"GUID-1183C85B-5B83-4EE9-A8EC-C76E913A1441.html",
							"GUID-1183C85B-5B83-4EE9-A8EC-C76E913A1441.html",
							"GUID-1183C85B-5B83-4EE9-A8EC-C76E913A1441.html",
							"GUID-6D41FE54-8D8D-4ECF-812A-A1E3A9DEA045.html",
							"GUID-6D41FE54-8D8D-4ECF-812A-A1E3A9DEA045.html",
							"GUID-6D41FE54-8D8D-4ECF-812A-A1E3A9DEA045.html",
							"GUID-6D41FE54-8D8D-4ECF-812A-A1E3A9DEA045.html",
							"GUID-3EF090C5-7B3C-4B8A-949E-81A2A28A3EC8.html",
							"GUID-3EF090C5-7B3C-4B8A-949E-81A2A28A3EC8.html",
							"GUID-3EF090C5-7B3C-4B8A-949E-81A2A28A3EC8.html",
							"GUID-3EF090C5-7B3C-4B8A-949E-81A2A28A3EC8.html",
							"GUID-7A5A7F96-1210-4F49-8C37-C75B6289EDF7.html",
							"GUID-7A5A7F96-1210-4F49-8C37-C75B6289EDF7.html",
							"GUID-7A5A7F96-1210-4F49-8C37-C75B6289EDF7.html",
							"GUID-7A5A7F96-1210-4F49-8C37-C75B6289EDF7.html",
							"GUID-BF758B20-94C3-4265-9FDF-589EA5C7135F.html",
							"GUID-BF758B20-94C3-4265-9FDF-589EA5C7135F.html",
							"GUID-BF758B20-94C3-4265-9FDF-589EA5C7135F.html",
							"GUID-BF758B20-94C3-4265-9FDF-589EA5C7135F.html",
							"GUID-28A99D7F-EE97-4E96-B781-F896AFDC30C6.html",
							"GUID-28A99D7F-EE97-4E96-B781-F896AFDC30C6.html",
							"GUID-28A99D7F-EE97-4E96-B781-F896AFDC30C6.html",
							"GUID-28A99D7F-EE97-4E96-B781-F896AFDC30C6.html",
							"GUID-5DF73426-7B7A-4A63-B203-6CB2354CDBF8.html",
							"GUID-5DF73426-7B7A-4A63-B203-6CB2354CDBF8.html",
							"GUID-5DF73426-7B7A-4A63-B203-6CB2354CDBF8.html",
							"GUID-5DF73426-7B7A-4A63-B203-6CB2354CDBF8.html",
							"GUID-73B2D607-928F-48BF-B42D-B912DC391509.html",
							"GUID-73B2D607-928F-48BF-B42D-B912DC391509.html",
							"GUID-73B2D607-928F-48BF-B42D-B912DC391509.html",
							"GUID-73B2D607-928F-48BF-B42D-B912DC391509.html",
							"GUID-C8623C47-6E25-4374-A93C-E1970B787393.html","GUID-AEEDE592-B95E-421B-9D98-9C7D6CEE8504.html",
							"GUID-AEEDE592-B95E-421B-9D98-9C7D6CEE8504.html",
							"GUID-AEEDE592-B95E-421B-9D98-9C7D6CEE8504.html",
							"GUID-AEEDE592-B95E-421B-9D98-9C7D6CEE8504.html",
							"GUID-C87EF930-B626-44A3-BDDC-4121B9CF0CD2.html",
							"GUID-C87EF930-B626-44A3-BDDC-4121B9CF0CD2.html",
							"GUID-C87EF930-B626-44A3-BDDC-4121B9CF0CD2.html",
							"GUID-C87EF930-B626-44A3-BDDC-4121B9CF0CD2.html",
							"GUID-1A89A248-F5A8-43C9-9A7B-75FF25B8A7AD.html",
							"GUID-1A89A248-F5A8-43C9-9A7B-75FF25B8A7AD.html",
							"GUID-1A89A248-F5A8-43C9-9A7B-75FF25B8A7AD.html",
							"GUID-1A89A248-F5A8-43C9-9A7B-75FF25B8A7AD.html",
							"GUID-1A89A248-F5A8-43C9-9A7B-75FF25B8A7AD.html",
							"GUID-3FF39078-59F5-4E02-97B0-15A0B7D1830C.html",
							"GUID-3FF39078-59F5-4E02-97B0-15A0B7D1830C.html",
							"GUID-3FF39078-59F5-4E02-97B0-15A0B7D1830C.html",
							"GUID-3FF39078-59F5-4E02-97B0-15A0B7D1830C.html",
							"GUID-3FF39078-59F5-4E02-97B0-15A0B7D1830C.html",
							"GUID-C1163C6B-13BE-4564-A239-DAAA17B1EEE9.html",
							"GUID-C1163C6B-13BE-4564-A239-DAAA17B1EEE9.html",
							"GUID-C1163C6B-13BE-4564-A239-DAAA17B1EEE9.html",
							"GUID-C1163C6B-13BE-4564-A239-DAAA17B1EEE9.html",
							"GUID-6C4F38E7-57A4-4816-9579-54AE296D3A15.html",
							"GUID-6C4F38E7-57A4-4816-9579-54AE296D3A15.html",
							"GUID-6C4F38E7-57A4-4816-9579-54AE296D3A15.html",
							"GUID-6C4F38E7-57A4-4816-9579-54AE296D3A15.html",
							"GUID-206EC674-67C1-4511-8011-C497E8CFEDE3.html",
							"GUID-206EC674-67C1-4511-8011-C497E8CFEDE3.html",
							"GUID-206EC674-67C1-4511-8011-C497E8CFEDE3.html",
							"GUID-206EC674-67C1-4511-8011-C497E8CFEDE3.html",
							"GUID-206EC674-67C1-4511-8011-C497E8CFEDE3.html",
							"GUID-C4FD863D-093A-4659-AF18-DFA0907772C2.html",
							"GUID-C4FD863D-093A-4659-AF18-DFA0907772C2.html",
							"GUID-C4FD863D-093A-4659-AF18-DFA0907772C2.html",
							"GUID-C4FD863D-093A-4659-AF18-DFA0907772C2.html",
							"GUID-3D4E2E63-0227-40ED-BBB4-0E93622C38E0.html","GUID-35F62F0B-8A12-48B4-8FAA-FA0D0A75A4C6.html","GUID-E5883429-56FB-4D1C-BAB6-D1D4D9E8109F.html","GUID-6106A3FC-FFB6-48AA-AA0B-C95FC009F182.html","GUID-2DF5C11F-B39C-4A49-8C50-33394C84CB74.html","GUID-CDDC50FD-798C-4ADB-A656-45DB70820E41.html","GUID-BDEB1D88-52CC-42E2-AA49-89B9BA4DBDAE.html","GUID-8FB2E8E4-2700-455A-8B4B-7E396CAD954D.html","GUID-5E3D4D30-01FF-450E-856D-7B5F7B91585E.html","GUID-C8F32CCA-496F-4EE7-807A-A1713FE4070E.html","GUID-5452D89C-3298-443B-A932-5DC08765C257.html","GUID-5FBAF639-F6DA-4A3C-BCC1-70EAC76AA65F.html","GUID-59BC791A-3CBC-45C0-B7E2-D1177C64453F.html","GUID-C60DD37D-6F86-4815-BC99-4982D9E1798A.html","GUID-6399D17D-61A2-45C5-984C-E13AD14E6FFA.html","GUID-DED439C8-C87E-46CC-97A4-4161BF292ECC.html","GUID-B2F97739-5023-45D6-9D0C-B935040A232B.html","GUID-08ED7CB4-9F62-4151-9E94-E0C285726C59.html","GUID-11B4AAF8-7B4B-4886-BF77-75434A49D288.html","GUID-D3EFF233-58F7-4ED3-8798-B652FEE6A51F.html","GUID-EC76D2B4-D7A9-430C-A3AE-AFE5B8D1BC3F.html","GUID-91D6F8AA-2F12-40CF-B412-CC4CDC41A3C6.html","GUID-67E481F5-EA68-4C6C-AAA3-AE4B41EB52C1.html","GUID-59329C67-A345-4700-8FE4-BAF20D3B4EBB.html","GUID-54C7E990-94F7-40DD-BD1F-A5628B538B05.html","GUID-0CDC457D-EAA3-48B9-AC02-2BEA92E23B79.html","GUID-3C858497-5BAC-4608-94D4-F56EA856A20B.html","GUID-37DD486E-D5DB-4306-9BFE-7AB8E35EB7C6.html","GUID-2D021FE6-741A-4DDE-8820-EDF3B9EBFFFC.html","GUID-6E0A284B-75C5-4CBB-9F0C-3AB355A43705.html","GUID-CF8ACEE4-3047-44D4-AD1F-CAC8D5CDFBA9.html","GUID-6BAEC72A-3B90-4224-8BA7-65CD9D51E63B.html","GUID-6B274602-B628-48D8-9345-D483824E66AC.html","GUID-DBD3AFD8-6BFB-4B13-A3C0-C05ADCE92BA6.html","GUID-20A8EAE8-A886-4CEF-84C2-5A54D13CEAF8.html","GUID-2E865D10-4434-42CB-B6C1-C97595A43906.html","GUID-4A395D10-0500-4827-A711-3045C03C7F6B.html","GUID-036D3D8F-8FDF-4287-86F9-CBC274F165A9.html","GUID-24A84FFF-24BE-46BD-99D7-955E6B76AE2A.html","GUID-B637E773-6EE0-4DD3-805B-BFEDD608724F.html","GUID-9D758EC2-E195-49F3-831E-F407CEDC6081.html","GUID-6BD82D99-7BB0-4AFA-8C32-B7D8B7AFC048.html","GUID-C9625B9D-B7F8-4BF6-99B4-013A076B31B9.html","GUID-F3137FC1-4C33-4502-8E80-74C16C90018A.html","GUID-CBD2048D-EC5E-42EC-AFBD-F8FE175CF70C.html","GUID-4458B79C-852A-49A3-9DFE-15E8C17D4A90.html","GUID-8DCC8D2C-9A9B-401A-AB29-9CD3B28E26D9.html","GUID-FBBB616D-45B7-4D5A-BD0A-C931F07DB126.html","GUID-745702A8-66B7-49B6-BB96-B70389BA7B5A.html","GUID-77D127AF-C206-49E6-97E0-2202C60ECD5E.html","GUID-25A1F34E-8F92-4D84-91C9-CF8C4E314DD4.html","GUID-C6F62FC5-90B7-4A91-9115-793A8BBC03FE.html","GUID-3310A31A-0E97-42FF-9FCB-6C6C47B45EAE.html","GUID-F5A27160-65F1-4CF8-ACB1-237AC4B3F956.html","GUID-33775B69-2ACE-4A02-8A46-4E9AD56D70E2.html","GUID-271E7C0B-FE36-4587-AAE8-C25E69170E9D.html","GUID-BEFD9660-EBED-44C2-A651-A730D8307A81.html","GUID-06A0B2A5-80E2-4A4A-95ED-0555734ACB2F.html","GUID-1232F05F-A3FA-49C3-B525-365832E44FAB.html","GUID-019FDCBD-1C56-4E89-B909-18844EDC6FD2.html","GUID-A1595ACB-6522-44A3-8CF5-5C6F04A32490.html","GUID-7FA5D113-8F0A-4615-B2C0-9A079BE4394B.html","GUID-C75B8076-4847-4D0D-AFF2-8664ABD5E58E.html","GUID-86CCF0F0-DB36-4F0D-8DD1-779FC2FA7EF5.html","GUID-6DCDDD1D-6C33-4269-A252-E1ED3EC058FC.html","GUID-051BD359-0BDE-4360-A147-DD981F8072EE.html","GUID-F8994C4E-EF19-4841-A2A1-D92A86AF9821.html","GUID-42233CC2-2806-428D-95E8-AD27D44CE5D5.html","GUID-8B0D3F24-23E4-4B6D-932F-E3FEFB0F8E96.html","GUID-2CEB9D04-3CAD-4016-B28C-39F60F651B70.html","GUID-94759142-5FF2-463A-964B-BAE774154B60.html","GUID-AACDF1D9-EC0A-42D8-94DC-2D5EF61DDBFC.html","GUID-DBACD553-8C00-4C69-885D-5A48A64D1987.html","GUID-505D3425-57BF-4681-BA7F-0DF175AD1063.html","GUID-CB67D650-E5C5-4473-81E8-00F92CE347EC.html","GUID-F410F32F-5787-4B0A-93AB-2EBF3F2E811F.html","GUID-6854D233-FE74-4634-AF20-2F770D2E2C47.html","GUID-D2DE9EB9-EDE7-4EAA-BDEB-54B4C67569C7.html","GUID-1427E5A2-3559-4624-97D1-07302093C407.html","GUID-73E29FE3-DF10-4889-BE1C-4178373563CA.html","GUID-4762260C-1D1C-4DBF-B021-57FEF443E0F4.html","GUID-BC52472F-FBF3-43EE-A491-FCEBA2CB0368.html","GUID-766EA60B-7A4E-4B99-8D8D-11E27AEED5AB.html","GUID-2BBDB66C-E29B-46F3-A149-455019BFAAC6.html","GUID-73139CE5-399C-4A7B-92C9-394C0A20A1B4.html","GUID-4B313C94-F7CE-4AF8-9A1C-064F260EAEB5.html","GUID-AA9F6190-9E01-48C5-A22A-6BC2FE3B90B6.html","GUID-ADB0AB34-DEE4-4107-8618-C3FBA1CDDDA1.html","GUID-2C8F7158-DD20-4413-93A9-69708F1F475A.html","GUID-4AB2996B-F714-4AC6-B13A-232AE4D5AEC7.html","GUID-3E801860-C4B6-4436-8EB4-7A89131B8067.html","GUID-790E181C-615F-4D06-B20B-9756FBC5D0D6.html","GUID-A32FDFB3-83E6-4EF0-A462-52A638A4F43A.html","GUID-F76D628B-DB74-4992-A1DE-61A2FCCE2AB3.html","GUID-8104EBA7-9D5B-4926-A32F-4C6A4E3603D4.html","GUID-D7C8F88C-7350-4144-8556-B24D0563AA90.html","GUID-57858D1B-EA35-40DE-9714-EBD47F6C09F8.html","GUID-C93131AB-BA76-40A8-9B31-9A66B3B1C5B4.html","GUID-6B769578-124E-42C9-8C46-29E318DDDCD2.html","GUID-1A0E77CB-C2BC-4B7F-AA7C-AF8767018F80.html","GUID-DDB288B9-9143-46AA-B4A0-953739170194.html","GUID-128EAAC3-2B0D-4B2D-90A4-052368A15F4F.html","GUID-1988C6A2-15F9-4B33-BD28-738955C58145.html","GUID-69274DAE-B0C4-4D2F-BC21-45E93B09F7A4.html","GUID-FA1AB790-BF05-4FBA-B346-9D4CB88158DB.html","GUID-F51ECE98-1134-4AC3-81B6-8740A8476F15.html","GUID-0E52EE3B-19EF-4C37-A7F0-9900A2E68C1B.html","GUID-B1B529F4-8C0F-4B0C-BE03-5545F0EF6DCB.html","GUID-ACC5119B-CA80-4F7E-9481-23DD468F7528.html","GUID-9F77307A-D3E0-4915-BC24-BBE46AE0DF2A.html","GUID-1E06207D-D195-447A-91D4-213272CEE1D9.html","GUID-7B12FFF3-B330-439C-A791-CFF6B42A3796.html","GUID-3343772E-C6A4-4195-B8E7-42568CBBDE6F.html","GUID-DC73AC27-EA5D-4A8B-AAE4-D88920E2E478.html","GUID-00442B75-722F-4DFA-A915-77A7303B1C29.html","GUID-BBA2DBED-5E70-4577-B974-444913341A2A.html","GUID-C898AFC4-8B4D-4879-9DE2-194E410BCD26.html","GUID-FD615864-C2E2-4192-B2B6-691FFEE66F14.html","GUID-B4719471-451D-40FD-B34E-286746D960EA.html","GUID-FD79424A-5369-4CD7-9C75-0A398A514CFD.html","GUID-689D93AA-77F4-4222-B593-631DF60C9F67.html","GUID-5004C7E1-58FE-4A71-9D23-E73F5CE40FEF.html","GUID-3AD21640-C301-427F-BC3B-BA0761ED3344.html","GUID-E702811D-F3DC-48DC-8100-C9FF9905C395.html","GUID-92525081-BBDA-4587-9D1A-E4455FA0B082.html","GUID-A7D140FB-84B5-4193-BC9D-7E7A8B06E8ED.html","GUID-A3A3A39F-2267-40EF-A32E-EC9EDF69665F.html","GUID-1C1D97EE-D905-4F27-844E-A72C4F5E96E0.html","GUID-7A2BC74D-E714-41F0-8201-0D183867E570.html","GUID-6EF8FAC2-3DB0-4C3B-9EBE-37F531CD4A81.html","GUID-CE2B0F4F-6C2F-465A-9BD8-E19A69BA91EC.html","GUID-DA48F471-463C-494A-B960-DDDB0D3686D8.html","GUID-41171C5F-25EA-4061-B9E2-4B95233F1E75.html","GUID-C14BCBFE-5169-4BDB-A2F9-7B09FB4DB3F7.html","GUID-0E755529-4FD2-4252-8598-8EDF707DDEC5.html","GUID-AA1659A8-C8AF-4041-8FF3-0100CDCDB8B2.html","GUID-A507AD4E-54B1-4ADA-A35B-A0F68857391D.html","GUID-43241C2D-AFCA-40B7-83A0-D5A7D15E6564.html","GUID-E37EED0D-259A-496E-927B-2B3CB7981257.html","GUID-D770DB31-5F7D-4DB8-A40A-5569B5715B6C.html","GUID-79C9108C-13DE-46A7-ADEF-F5A90F16AC1D.html","GUID-5B80F561-1E54-4BC6-9294-B3E75D35AA88.html","GUID-B1FE3CD4-DD68-4C17-9E74-915C818181D5.html","GUID-E57F3A91-7E63-48EC-A085-CDDE428151E1.html","GUID-1F181859-176C-49AB-A034-34A29131F8ED.html","GUID-48F0E981-B4AA-44DB-9786-B9430664C991.html","GUID-9F422221-4315-4037-B339-81D28932D1A7.html","GUID-D3A2D715-B0F3-47E8-A247-060B1C329BDA.html","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html","GUID-F05182E4-B102-4775-A746-1FF37F465312.html","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html","GUID-07985EED-D525-413B-AEFE-78B563328687.html","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html"];

var SearchTitles = ["BLE Software",
"PIC32CX-BZ2/WBZ45x",
"BLE Software Specification",
"Initializing the BLE Software",
"Initializing BLE Stack",
"Initializing BLE Middleware",
"Initializing BLE Profile",
"Initializing BLE Service",
"Using the BLE Software",
"BLE Software v1 0 0 API",
"BLE Stack",
"Generic Access Profile (GAP)",
"Defines",
"Address length",
"C",
"Description",
"Macro Definition",
"Address type",
"C",
"Description",
"Macro Definition",
"Advertising channel",
"C",
"Description",
"Macro Definition",
"Advertising filter policy",
"C",
"Description",
"Macro Definition",
"Advertising interval",
"C",
"Description",
"Macro Definition",
"Advertising option",
"C",
"Description",
"Macro Definition",
"Advertising SID range",
"C",
"Description",
"Macro Definition",
"Advertising type",
"C",
"Description",
"Macro Definition",
"Appearance definition",
"C",
"Description",
"Macro Definition",
"Connection parameters range",
"C",
"Description",
"Macro Definition",
"Connection roles",
"C",
"Description",
"Macro Definition",
"Data status for extended advertising report",
"C",
"Description",
"Macro Definition",
"Disconnect reason",
"C",
"Description",
"Macro Definition",
"Encryption status",
"C",
"Description",
"Macro Definition",
"Event properties of advertising report",
"C",
"Description",
"Macro Definition",
"Event type for extended advertising report",
"C",
"Description",
"Macro Definition",
"Event type of advertising report",
"C",
"Description",
"Macro Definition",
"Extended primary advertising interval",
"C",
"Description",
"Macro Definition",
"Extended scan data length",
"C",
"Description",
"Macro Definition",
"Extended scan interval",
"C",
"Description",
"Macro Definition",
"Extended scan window",
"C",
"Description",
"Macro Definition",
"Fragment preference of extended advertising data",
"C",
"Description",
"Macro Definition",
"Initiator filter policy",
"C",
"Description",
"Macro Definition",
"Maximum advertising data length",
"C",
"Description",
"Macro Definition",
"Maximum advertising handle",
"C",
"Description",
"Macro Definition",
"Maximum connection handle",
"C",
"Description",
"Macro Definition",
"Maximum connection number",
"C",
"Description",
"Macro Definition",
"Maximum device name length",
"C",
"Description",
"Macro Definition",
"Maximum extended advertising data length",
"C",
"Description",
"Macro Definition",
"Maximum extended advertising fragment data length",
"C",
"Description",
"Macro Definition",
"Maximum filter accept list number",
"C",
"Description",
"Macro Definition",
"Maximum number of skipped periodic advertising event",
"C",
"Description",
"Macro Definition",
"Maximum periodic advertising data length",
"C",
"Description",
"Macro Definition",
"Maximum periodic advertising fragment data length",
"C",
"Description",
"Macro Definition",
"Maximum resolving list number",
"C",
"Description",
"Macro Definition",
"Maximum secondary adv for extended scan",
"C",
"Description",
"Macro Definition",
"Maximum sync devices number",
"C",
"Description",
"Macro Definition",
"Operation of extended advertising data",
"C",
"Description",
"Macro Definition",
"Operation of periodic advertising data",
"C",
"Description",
"Macro Definition",
"Options for creating sync",
"C",
"Description",
"Macro Definition",
"Periodic advertising interval",
"C",
"Description",
"Macro Definition",
"PHY option for transmit and receive",
"C",
"Description",
"Macro Definition",
"PHY setting for extended advertising report",
"C",
"Description",
"Macro Definition",
"PHY type",
"C",
"Description",
"Macro Definition",
"Preferred PHY preference",
"C",
"Description",
"Macro Definition",
"Privacy mode",
"C",
"Description",
"Macro Definition",
"Property of periodic advertising",
"C",
"Description",
"Macro Definition",
"Received data status",
"C",
"Description",
"Macro Definition",
"RPA timeout",
"C",
"Description",
"Macro Definition",
"Scan channel",
"C",
"Description",
"Macro Definition",
"Scan filter duplicate option",
"C",
"Description",
"Macro Definition",
"Scan filter length",
"C",
"Description",
"Macro Definition",
"Scan filter policy",
"C",
"Description",
"Macro Definition",
"Scan interval",
"C",
"Description",
"Macro Definition",
"Scan modes",
"C",
"Description",
"Macro Definition",
"Scan type",
"C",
"Description",
"Macro Definition",
"Scan window",
"C",
"Description",
"Macro Definition",
"Status definitions",
"C",
"Description",
"Macro Definition",
"Synchronization timeout",
"C",
"Description",
"Macro Definition",
"The accuracy of the periodic advertiser's clock",
"C",
"Description",
"Macro Definition",
"Transmitter PHY type",
"C",
"Description",
"Macro Definition",
"Type of constant tone extension",
"C",
"Description",
"Macro Definition",
"TX power change reason",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_GAP_EventId_T",
"C",
"Description",
"Structures",
"BLE_GAP_Addr_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_AdvDataParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_AdvParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_CharAppearance_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_CharDeviceName_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_CharPeriPreferConnParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ConnParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_CreateConnParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_CreateSync_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtAdvCompl_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtAdvReport_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtAdvSetTerminated_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtAuthPayloadTimeout_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtConnect_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtConnParamUpdateParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtDeviceNameChanged_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtDirectAdvReport_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtDisconnect_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtEncInfoRequest_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtEncryptStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtExtAdvReport_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtPeriAdvReport_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtPeriAdvSyncEst_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtPeriAdvSyncLost_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtPhyUpdate_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtRemoteConnParamRequest_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtScanReqReceived_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtTxBufAvailable_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_EvtTxPowerReporting_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtAdvDataParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtAdvEnableParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtAdvParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtCreateConnParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtCreateConnPhy_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtScanningEnable_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtScanningParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ExtScanningPhy_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_LocalPrivacyParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_PeriAdvDataParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_PeriAdvParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ResolvingListParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ScanFilterConfig_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ScanFilterMsd_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ScanFilterName_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ScanFilterServiceData_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ScanningParams_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_ServiceOption_T",
"C",
"Description",
"Field Documentation",
"BLE_GAP_SyncSetDev_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_GAP_AdvInit",
"C",
"Description",
"Return values",
"BLE_GAP_ClearExtAdvSet",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_ConfigureBuildInService",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_ConnCentralInit",
"C",
"Description",
"Return values",
"BLE_GAP_ConnPeripheralInit",
"C",
"Description",
"Return values",
"BLE_GAP_CreateConnection",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_CreateConnectionCancel",
"C",
"Description",
"Events generated",
"Return values",
"BLE_GAP_CreateSync",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_CreateSyncCancel",
"C",
"Description",
"Note",
"Events generated",
"Return values",
"BLE_GAP_Disconnect",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_EnableEncryption",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_EnableOneTimeAdv",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_EncInfoReqNegativeReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_EncInfoReqReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_ExtAdvInit",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_ExtConnCentralInit",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_ExtCreateConnection",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_ExtScanInit",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_GetAdvAddr",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_GetDeviceAddr",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_GetDeviceName",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_GetLocalPrivacy",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_GetRssi",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_Init",
"C",
"Description",
"Return values",
"BLE_GAP_PeriodicAdvInit",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_ReadAuthPayloadTimeout",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_ReadChannelMap",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_ReadFactoryTxPowerLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_ReadPhy",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_ReadRemoteTxPowerLevel",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_ReadTxPowerLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_RemoteConnParamsReqNegativeReply",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_RemoteConnParamsReqReply",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_RemoveExtAdvSet",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_ScanInit",
"C",
"Description",
"Return values",
"BLE_GAP_SetAdvData",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetAdvEnable",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetAdvParams",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetAdvTxPowerLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetChannelMap",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetConnTxPowerLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetDefaultPhy",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetDeviceAddr",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetDeviceName",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetDevToPeriAdvList",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetExtAdvCodingScheme",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetExtAdvData",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetExtAdvEnable",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetExtAdvParams",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetExtScanningEnable",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetExtScanningParams",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetExtScanRspData",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetFilterAcceptList",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetGoldenRxPowerRange",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SetLocalPrivacy",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetPeriAdvData",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetPeriAdvEnable",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetPeriAdvParams",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetPeriAdvRxEnable",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetPhy",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetResolvingList",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetScanningEnable",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_SetScanningFilter",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetScanningParam",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetScanRspData",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_SetTxPowerReportingEnable",
"C",
"Description",
"Parameters",
"Return values",
"BLE_GAP_SyncInit",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_TerminateSync",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_GAP_TrafficUnlock",
"C",
"Description",
"Note",
"Return values",
"BLE_GAP_UpdateConnParam",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"BLE_GAP_WriteAuthPayloadTimeout",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"Message Sequence Chart",
"GAP ADV / Ext ADV procedure",
"GAP SCAN / Ext SCAN procedure",
"GAP Create Connection procedure",
"GAP Update Connection Parameter procedure",
"GAP PHY Update procedure",
"GAP Security (Encryption) procedure",
"GAP Privacy procedure",
"Notes",
"Operation of extended advertising data",
"Description",
"APIs",
"Events",
"Concept of TX power control",
"Generic Attribute Profile (GATT)",
"Defines",
"ATT error code",
"C",
"Description",
"Macro Definition",
"ATT opcodes",
"C",
"Description",
"Macro Definition",
"Attribute permission",
"C",
"Description",
"Macro Definition",
"Attribute settings",
"C",
"Description",
"Macro Definition",
"Characteristic extended property",
"C",
"Description",
"Macro Definition",
"Characteristic property",
"C",
"Description",
"Macro Definition",
"Client Characteristic Configuration definition",
"C",
"Description",
"Macro Definition",
"Database change state",
"C",
"Description",
"Macro Definition",
"Execute write flag",
"C",
"Description",
"Macro Definition",
"GATT client configuration definitions",
"C",
"Description",
"Macro Definition",
"GATT client features",
"C",
"Description",
"Macro Definition",
"GATT server configuration definitions",
"C",
"Description",
"Macro Definition",
"Header size",
"C",
"Description",
"Macro Definition",
"Maximium build-in CCCD number",
"C",
"Description",
"Macro Definition",
"Maximum UUID length",
"C",
"Description",
"Macro Definition",
"MTU length",
"C",
"Description",
"Macro Definition",
"Permission key size",
"C",
"Description",
"Note",
"Macro Definition",
"Procedure status definition",
"C",
"Description",
"Note",
"Macro Definition",
"Server Characteristic Configuration definition",
"C",
"Description",
"Macro Definition",
"Valid start attribute handle",
"C",
"Description",
"Note",
"Macro Definition",
"UUID declaration",
"C",
"Description",
"Variable Documentation",
"UUID definitions",
"C",
"Description",
"Macro Definition",
"UUID length",
"C",
"Description",
"Macro Definition",
"Enums",
"GATT_EventId_T",
"C",
"Description",
"Note",
"Structures",
"ATT_Uuid_T",
"C",
"Description",
"Field Documentation",
"GATT_Event_T",
"C",
"Description",
"Field Documentation",
"GATT_EventField_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtClientCccdListChange_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtClientFeatureChange_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtDiscCharResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtDiscDescResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtDiscPrimServByUuidResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtDiscPrimServResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtError_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtProtocolAvailable_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtRead_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtReadResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtReadUsingUuidResp_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtReceiveCfm_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtReceiveHandleValue_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtServiceChange_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtUpdateMtu_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtWrite_T",
"C",
"Description",
"Field Documentation",
"GATT_EvtWriteResp_T",
"C",
"Description",
"Field Documentation",
"GATTC_DiscoverCharacteristicByUuidParams_T",
"C",
"Description",
"Field Documentation",
"GATTC_DiscoverPrimaryServiceByUuidParams_T",
"C",
"Description",
"Field Documentation",
"GATTC_ReadByTypeParams_T",
"C",
"Description",
"Field Documentation",
"GATTC_WriteParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_Attribute_T",
"C",
"Description",
"Field Documentation",
"GATTS_BondingParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_CccdList_T",
"C",
"Description",
"Field Documentation",
"GATTS_CccdSetting_T",
"C",
"Description",
"Field Documentation",
"GATTS_GattServiceOptions_T",
"C",
"Description",
"Field Documentation",
"GATTS_HandleValueParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_SendErrRespParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_SendReadByTypeRespParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_SendReadRespParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_SendWriteRespParams_T",
"C",
"Description",
"Field Documentation",
"GATTS_Service_T",
"C",
"Description",
"Field Documentation",
"Functions",
"GATTC_DiscoverAllCharacteristics",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_DiscoverAllDescriptors",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_DiscoverAllPrimaryServices",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_DiscoverCharacteristicsByUUID",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_DiscoverPrimaryServiceByUUID",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_ExchangeMTURequest",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_HandleValueConfirm",
"C",
"Description",
"Parameters",
"Return values",
"GATTC_Init",
"C",
"Description",
"Parameters",
"Return values",
"GATTC_Read",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"GATTC_ReadUsingUUID",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTC_SetPreferredMtu",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTC_Write",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"GATTS_AddService",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_ConfigureBuildInService",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_GetHandleValue",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_Init",
"C",
"Description",
"Parameters",
"Return values",
"GATTS_RemoveService",
"C",
"Description",
"Parameters",
"Return values",
"GATTS_SendErrorResponse",
"C",
"Description",
"Parameters",
"Return values",
"GATTS_SendHandleValue",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"GATTS_SendReadByTypeResponse",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_SendReadResponse",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_SendWriteResponse",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_ServiceChanged",
"C",
"Description",
"Return values",
"GATTS_SetPreferredMtu",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"GATTS_UpdateBondingInfo",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"Message Sequence Chart",
"GATTS Service Add/Remove",
"GATTS Characteristic/Characteristic Descriptor Value Read",
"GATTS Long Characteristic/Characteristic Descriptor Value Read",
"GATTS Characteristic/Characteristic Descriptor Value Write",
"GATTS Long Characteristic/Characteristic Descriptor Value Write",
"GATTS Handle Value Notification",
"GATTS Handle Value Indication",
"GATTC Primary Services Discovery",
"GATTC Characteristics Discovery",
"GATTC Characteristic Descriptors Discovery",
"GATTC Relationship Discovery",
"GATTC Characteristic/Characteristic Descriptor Value Read",
"GATTC Read Using Characteristic UUID",
"GATTC Long Characteristic/Characteristic Descriptor Value Read",
"GATTC Characteristic/Characteristic Descriptor Value Write",
"GATTC Long Characteristic/Characteristic Descriptor Value Write",
"GATTC Handle Value Confirmation",
"Logical Link Control and Adaptation Protocol (L2CAP)",
"Defines",
"Connection parameter update result",
"C",
"Description",
"Macro Definition",
"Connection result",
"C",
"Description",
"Macro Definition",
"Credit based channel number",
"C",
"Description",
"Macro Definition",
"Maximum PDU size",
"C",
"Description",
"Macro Definition",
"Maximum SDU size",
"C",
"Description",
"Macro Definition",
"Minimum MPS size",
"C",
"Description",
"Macro Definition",
"L2CAP minimum MTU size",
"C",
"Description",
"Macro Definition",
"L2CAP permission definition",
"C",
"Description",
"Macro Definition",
"Maximum SPSM number",
"C",
"Description",
"Macro Definition",
"SPSM range",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_L2CAP_EventId_T",
"C",
"Description",
"Structures",
"BLE_L2CAP_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtCbAddCreditsInd_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtCbConnFailInd_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtCbConnInd_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtCbDiscInd_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtCbSduInd_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtConnParamUpdateReq_T",
"C",
"Description",
"Field Documentation",
"BLE_L2CAP_EvtConnParamUpdateRsp_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_L2CAP_CbAddCredits",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_L2CAP_CbConnReq",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_L2CAP_CbDeregisterSpsm",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_L2CAP_CbDiscReq",
"C",
"Description",
"Events generated",
"Parameters",
"Return values",
"BLE_L2CAP_CbInit",
"C",
"Description",
"Return values",
"BLE_L2CAP_CbPauseAuthorization",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_L2CAP_CbRegisterSpsm",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_L2CAP_CbSendSdu",
"C",
"Description",
"Parameters",
"Return values",
"BLE_L2CAP_ConnParamUpdateReq",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_L2CAP_ConnParamUpdateRsp",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_L2CAP_Init",
"C",
"Description",
"Return values",
"Message Sequence Chart",
"L2CAP CoC connection procedure",
"L2CAP Connection Parameter Update procedure",
"Security Manager Protocol (SMP)",
"Defines",
"Confirm result",
"C",
"Description",
"Macro Definition",
"IO capability",
"C",
"Description",
"Macro Definition",
"Key flags",
"C",
"Description",
"Macro Definition",
"Keypress notification type",
"C",
"Description",
"Macro Definition",
"Pairing fail reason",
"C",
"Description",
"Macro Definition",
"Pairing options",
"C",
"Description",
"Note",
"Macro Definition",
"Pairing result",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_SMP_EventId_T",
"C",
"Description",
"Structures",
"BLE_SMP_Config_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EncInfo_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtDisplayCompareValueReq_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtDisplayPasskeyReq_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtGenScOobDataDone_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtInputOobData_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtInputPasskeyReq_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtInputScOobData_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtKeypress_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtNotifyKeys_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtPairingComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtPairingReq_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_EvtSecurityReq_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_IdInfo_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_KeyList_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_PairInfo_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_SecKeys_T",
"C",
"Description",
"Field Documentation",
"BLE_SMP_SignInfo_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_SMP_AcceptDebugKey",
"C",
"Description",
"Note",
"Return values",
"BLE_SMP_AcceptPairingRequest",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_Config",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_SMP_EnableDebugMode",
"C",
"Description",
"Note",
"Return values",
"BLE_SMP_GeneratePasskey",
"C",
"Description",
"Note",
"Parameters",
"BLE_SMP_GenerateScOobData",
"C",
"Description",
"Note",
"Events generated",
"Return values",
"BLE_SMP_Init",
"C",
"Description",
"Return values",
"BLE_SMP_InitiatePairing",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_Keypress",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_SMP_NumericComparisonConfirmReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_OobDataReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_PasskeyNegativeReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_PasskeyReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_RejectPairingRequest",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_RejectSecRequest",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_SMP_ScOobDataReply",
"C",
"Description",
"Note",
"Events generated",
"Parameters",
"Return values",
"BLE_SMP_UpdateBondingInfo",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"Message Sequence Chart",
"SMP Central Legacy Pairing Procedure",
"SMP Peripheral Legacy Pairing procedure",
"SMP Central LESC Pairing Procedure",
"SMP Peripheral LESC Pairing Procedure",
"SMP Security Request Send/Receive Procedure",
"SMP Pairing Timeout Procedure",
"SMP Pairing Failure Procedure",
"STACK",
"Defines",
"Error code definitions",
"C",
"Description",
"Macro Definition",
"Enums",
"STACK_GroupId_T",
"C",
"Description",
"Structures",
"STACK_Event_T",
"C",
"Description",
"Field Documentation",
"STACK_EventCb_T",
"C",
"Description",
"Functions",
"STACK_EventRegister",
"C",
"Description",
"Parameters",
"BLE System",
"Defines",
"Length of Bluetooth address",
"C",
"Description",
"Macro Definition",
"RF Suspend Status",
"C",
"Description",
"Macro Definition",
"Trace Mask",
"C",
"Description",
"Macro Definition",
"Enums",
"BT_SYS_LogType_T",
"C",
"Description",
"Structures",
"BT_SYS_LogEvent_T",
"C",
"Description",
"Field Documentation",
"BT_SYS_Cfg_T",
"C",
"Description",
"Field Documentation",
"BT_SYS_LogCb_T",
"C",
"Description",
"BT_SYS_Option_T",
"C",
"Description",
"Field Documentation",
"BT_SYS_TraceEventCb_T",
"C",
"Description",
"Functions",
"BM_Task",
"C",
"Description",
"Parameters",
"BT_SYS_AllowSystemSleep",
"C",
"Description",
"Parameters",
"Return values",
"BT_SYS_EnterDeepSleepMode",
"C",
"Description",
"Return values",
"BT_SYS_EnterSleepMode",
"C",
"Description",
"Parameters",
"Return values",
"BT_SYS_GetSleepMode",
"C",
"Description",
"Return values",
"BT_SYS_Init",
"C",
"Description",
"Parameters",
"Return values",
"BT_SYS_LogEnable",
"C",
"Description",
"Parameters",
"BT_SYS_ReadVersion",
"C",
"Description",
"Parameters",
"BT_SYS_Ready4Idle",
"C",
"Description",
"Return values",
"BT_SYS_RfSuspendReq",
"C",
"Description",
"Parameters",
"Return values",
"BT_SYS_TraceEnable",
"C",
"Description",
"Parameters",
"BT_SYS_TraceTimeSensEnable",
"C",
"Description",
"Parameters",
"BLE Direct Test Mode",
"Defines",
"Channel range of continuous wave test",
"C",
"Description",
"Macro Definition",
"Receiver or transmitter channel",
"C",
"Description",
"Macro Definition",
"Receiver PHY type",
"C",
"Description",
"Macro Definition",
"Transmitter payload type",
"C",
"Description",
"Macro Definition",
"Transmitter PHY type",
"C",
"Description",
"Macro Definition",
"Structures",
"BLE_DTM_TransmitterTestParams_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_DTM_EndTest",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DTM_EnhancedReceiverTest",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DTM_EnhancedTransmitterTest",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DTM_Init",
"C",
"Description",
"Return values",
"BLE_DTM_StartCwTest",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DTM_StopCwTest",
"C",
"Description",
"Note",
"Return values",
"BLE Middleware",
"Device Manager (DM)",
"Defines",
"Invalid peer device ID",
"C",
"Description",
"Macro Definition",
"Maximum paired record number",
"C",
"Description",
"Macro Definition",
"Maximum filter accept list num",
"C",
"Description",
"Macro Definition",
"Maximum resolving list num",
"C",
"Description",
"Macro Definition",
"Maximum registration number",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_DM_EventId_T",
"C",
"Description",
"BLE_DM_SecurityProc_T",
"C",
"Description",
"Structures",
"BLE_DM_Config_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_ConnConfig_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_ConnParamUpdate_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_EventCb_T",
"C",
"Description",
"BLE_DM_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_EvtPairedDeviceFull_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_EvtSecurityFail_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_EvtSecurityStart_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_EvtSecuritySuccess_T",
"C",
"Description",
"Field Documentation",
"BLE_DM_PairedDevInfo_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_DM_BleEventHandler",
"C",
"Description",
"Note",
"Parameters",
"BLE_DM_Config",
"C",
"Description",
"Parameters",
"Return values",
"BLE_DM_ConnectionParameterUpdate",
"C",
"Description",
"Parameters",
"Return values",
"BLE_DM_DeleteAllPairedDevice",
"C",
"Description",
"Return values",
"BLE_DM_DeletePairedDevice",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DM_EventRegister",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DM_GetFilterAcceptList",
"C",
"Description",
"Parameters",
"Return values",
"BLE_DM_GetPairedDevice",
"C",
"Description",
"Parameters",
"Return values",
"BLE_DM_GetPairedDeviceList",
"C",
"Description",
"Parameters",
"BLE_DM_Init",
"C",
"Description",
"BLE_DM_ProceedSecurity",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DM_SetFilterAcceptList",
"C",
"Description",
"Parameters",
"Return values",
"BLE_DM_SetResolvingList",
"C",
"Description",
"Parameters",
"Return values",
"Message Sequence Chart",
"Pairing procedure",
"Filter accept list process",
"Resolving list process",
"Connection Parameters Update Procedure",
"LOG",
"Defines",
"Log type",
"C",
"Description",
"Macro Definition",
"Structures",
"BLE_LOG_EventCb_T",
"C",
"Description",
"Functions",
"BLE_LOG_EventRegister",
"C",
"Description",
"Parameters",
"BLE_LOG_StackLogHandler",
"C",
"Description",
"Parameters",
"Database Discovery (DD)",
"Defines",
"Characteristic setting",
"C",
"Description",
"Macro Definition",
"Maximum register services number",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_DD_EventId_T",
"C",
"Description",
"Structures",
"BLE_DD_CharInfo_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_CharList_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_Config_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_DiscChar_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_DiscSvc_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_EventCb_T",
"C",
"Description",
"BLE_DD_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_EvtConnect_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_EvtDisconnect_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_EvtDiscResult_T",
"C",
"Description",
"Field Documentation",
"BLE_DD_EvtSecRequire_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_DD_BleEventHandler",
"C",
"Description",
"Note",
"Parameters",
"BLE_DD_EventRegister",
"C",
"Description",
"Note",
"Parameters",
"BLE_DD_Init",
"C",
"Description",
"BLE_DD_RestartServicesDiscovery",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"BLE_DD_ServiceDiscoveryRegister",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"Message Sequence Chart",
"Register Discover Service Information For Discovery",
"Database Discovery Process",
"Configure Database Discovery Function and Disable Discovery at Run Time",
"Database Discovery with BLE_SCM in Service Change Situation",
"Service Change Manager (SCM)",
"Defines",
"Number of discovering characteristics of GATT service",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_SCM_EventId_T",
"C",
"Description",
"Structures",
"BLE_SCM_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_SCM_EventCb_T",
"C",
"Description",
"BLE_SCM_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_SCM_EvtBondedCharInfo_T",
"C",
"Description",
"Field Documentation",
"BLE_SCM_EvtConfigured_T",
"C",
"Description",
"Field Documentation",
"BLE_SCM_EvtDiscComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_SCM_EvtServiceChange_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_SCM_BleDdEventHandler",
"C",
"Description",
"Note",
"Parameters",
"BLE_SCM_BleEventHandler",
"C",
"Description",
"Note",
"Parameters",
"BLE_SCM_EventRegister",
"C",
"Description",
"Note",
"Parameters",
"BLE_SCM_Init",
"C",
"Description",
"Note",
"BLE_SCM_SetBondedCharInfo",
"C",
"Description",
"Note",
"Parameters",
"Message Sequence Chart",
"Initialize Service Change Manager module",
"Get characteristic handles of remote GATT service",
"Configure characteristic of remote GATT service",
"Manage service change status at remote",
"Utilities",
"Device Firmware Update",
"Defines",
"Maximum block len",
"C",
"Description",
"Macro Definition",
"Maximum image size",
"C",
"Description",
"Macro Definition",
"Structures",
"MW_DFU_Info_T",
"C",
"Description",
"Field Documentation",
"Functions",
"MW_DFU_Config",
"C",
"Description",
"Parameters",
"Return values",
"MW_DFU_FwImageRead",
"C",
"Description",
"Note",
"Parameters",
"Return values",
"MW_DFU_FwImageStart",
"C",
"Description",
"Return values",
"MW_DFU_FwImageUpdate",
"C",
"Description",
"Parameters",
"Return values",
"BLE Profile",
"Apple Notification Center Service (ANCS)",
"Apple Notification Center Service Notification Consumer Role",
"Defines",
"ANCS length definition",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_ANCS_ActionId_T",
"C",
"Description",
"BLE_ANCS_CategoryId_T",
"C",
"Description",
"BLE_ANCS_EventId_T",
"C",
"Description",
"BLE_ANCS_NtfyAttrId_T",
"C",
"Description",
"Structures",
"BLE_ANCS_AppAttrsMask_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_DecodeAppAttrs_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_DecodeNtfyAttrs_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EventCb_T",
"C",
"Description",
"BLE_ANCS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtAppAttrInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtDiscComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtErrAttrBufInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtErrRecomposeBufInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtNtfyAttrInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_EvtNtfyInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_NtfyAttrsMask_T",
"C",
"Description",
"Field Documentation",
"BLE_ANCS_NtfyEvtFlagMask_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_ANCS_BleDdEventHandler",
"C",
"Description",
"Parameters",
"BLE_ANCS_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_ANCS_EventRegister",
"C",
"Description",
"Parameters",
"BLE_ANCS_GetAppAttr",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANCS_GetNtfyAttr",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANCS_Init",
"C",
"Description",
"Return values",
"BLE_ANCS_PerformNtfyAction",
"C",
"Description",
"Parameters",
"Return values",
"Alert Notification Profile (ANP)",
"Alert Notification Profile Client Role",
"Defines",
"Category Id",
"C",
"Description",
"Macro Definition",
"Command definition",
"C",
"Description",
"Macro Definition",
"Error code definition",
"C",
"Description",
"Macro Definition",
"Supported category mask",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_ANPC_EventId_T",
"C",
"Description",
"Structures",
"BLE_ANPC_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EventCb_T",
"C",
"Description",
"BLE_ANPC_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtDiscComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtNewAlertInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtSuppNewAlertCatInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtSuppUnreadAlertCatInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtUnreadAlertStatInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtWriteCpRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtWriteNewAlertRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPC_EvtWriteUnreadAlertRspInd_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_ANPC_BleDdEventHandler",
"C",
"Description",
"Parameters",
"BLE_ANPC_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_ANPC_EnableNewAlertNtfy",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPC_EnableUnreadAlertNtfy",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPC_EventRegister",
"C",
"Description",
"Parameters",
"BLE_ANPC_Init",
"C",
"Description",
"Return values",
"BLE_ANPC_ReadSuppNewAlertCat",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPC_ReadSuppUnreadAlertCat",
"C",
"Description",
"Return values",
"BLE_ANPC_WriteAncp",
"C",
"Description",
"Parameters",
"Return values",
"Alert Notification Profile Server Role",
"Defines",
"Category Id",
"C",
"Description",
"Macro Definition",
"Command definition",
"C",
"Description",
"Macro Definition",
"Maximum connection number",
"C",
"Description",
"Macro Definition",
"Support category mask",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_ANPS_EventId_T",
"C",
"Description",
"Structures",
"BLE_ANPS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPS_EventCb_T",
"C",
"Description",
"BLE_ANPS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_ANPS_EvtAncpWriteInd_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_ANPS_SetSuppNewCat",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPS_EventRegister",
"C",
"Description",
"Parameters",
"BLE_ANPS_Init",
"C",
"Description",
"Return values",
"BLE_ANPS_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_ANPS_SendNewAlert",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPS_SendUnreadAlertStat",
"C",
"Description",
"Parameters",
"Return values",
"BLE_ANPS_SetSuppUnreadCat",
"C",
"Description",
"Parameters",
"Return values",
"HID Over GATT Profile",
"HID Over GATT Profile Server Role",
"Enums",
"BLE_HOGPS_EventId_T",
"C",
"Description",
"Structures",
"BLE_HOGPS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EventCb_T",
"C",
"Description",
"BLE_HOGPS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtBootModeEnter_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtBootReportWrite_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtHostSuspendEnter_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtHostSuspendExit_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtReportModeEnter_T",
"C",
"Description",
"Field Documentation",
"BLE_HOGPS_EvtReportWrite_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_HOGPS_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_HOGPS_EventRegister",
"C",
"Description",
"Parameters",
"BLE_HOGPS_Init",
"C",
"Description",
"Return values",
"BLE_HOGPS_SendBatteryLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SendBootKeyboardInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SendBootMouseInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SendKeyboardInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SendMouseButtonInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SendMouseMotionInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetBootKeyboardInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetBootKeyboardOutputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetBootMouseInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetKeyboardInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetKeyboardOutputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetMouseButtonInputReport",
"C",
"Description",
"Parameters",
"Return values",
"BLE_HOGPS_SetMouseMotionInputReport",
"C",
"Description",
"Parameters",
"Return values",
"Microchip Over The Air (OTA) Profile",
"Microchip OTA Profile Client Role",
"Defines",
"Encryption method",
"C",
"Description",
"Macro Definition",
"OTAPC image type",
"C",
"Description",
"Macro Definition",
"OTAPC result code",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_OTAPC_EventId_T",
"C",
"Description",
"Structures",
"BLE_OTAPC_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EventCb_T",
"C",
"Description",
"BLE_OTAPC_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtCompleteRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtConnectInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtFeatureInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtFragmentComplInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtReqRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtSecReq_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_EvtStartRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPC_Req_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_OTAPC_BleDdEventHandler",
"C",
"Description",
"Parameters",
"BLE_OTAPC_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_OTAPC_DeviceReset",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPC_EventRegister",
"C",
"Description",
"Parameters",
"BLE_OTAPC_FeatureDisc",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPC_FragmentDist",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPC_Init",
"C",
"Description",
"Return values",
"BLE_OTAPC_UpdateComplete",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPC_UpdateStart",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPC_UpdateRequest",
"C",
"Description",
"Parameters",
"Return values",
"Microchip OTA Profile Server Role",
"Defines",
"OTAPS image type",
"C",
"Description",
"Macro Definition",
"OTAPS supported feature",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_OTAPS_EventId_T",
"C",
"Description",
"Structures",
"BLE_OTAPS_EventCb_T",
"C",
"Description",
"BLE_OTAPS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_EvtUpdatingInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_EvtStartInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_EvtUpdateReq_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_EvtCompleteInd_T",
"C",
"Description",
"Field Documentation",
"BLE_OTAPS_DevInfo_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_OTAPS_UpdateStop",
"C",
"Description",
"Return values",
"BLE_OTAPS_EventRegister",
"C",
"Description",
"Parameters",
"BLE_OTAPS_Init",
"C",
"Description",
"Return values",
"BLE_OTAPS_SetEncrytionInfo",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPS_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_OTAPS_CompleteResponse",
"C",
"Description",
"Parameters",
"Return values",
"BLE_OTAPS_UpdateResponse",
"C",
"Description",
"Parameters",
"Return values",
"Proximity Profile (PXP)",
"Proximity Profile Monitor Role",
"Defines",
"Supported service",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_PXPM_AlertLevel_T",
"C",
"Description",
"BLE_PXPM_EventId_T",
"C",
"Description",
"Structures",
"BLE_PXPM_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPM_EventCb_T",
"C",
"Description",
"BLE_PXPM_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPM_EvtDiscComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPM_EvtLlsAlertLvInd_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPM_EvtLlsAlertLvWriteRspInd_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPM_EvtTpsTxPwrLvInd_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_PXPM_BleDdEventHandler",
"C",
"Description",
"Parameters",
"BLE_PXPM_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_PXPM_EventRegister",
"C",
"Description",
"Parameters",
"BLE_PXPM_Init",
"C",
"Description",
"Return values",
"BLE_PXPM_ReadLlsAlertLevel",
"C",
"Description",
"Parameters",
"BLE_PXPM_ReadTpsTxPowerLevel",
"C",
"Description",
"Parameters",
"BLE_PXPM_WriteIasAlertLevel",
"C",
"Description",
"Parameters",
"BLE_PXPM_WriteLlsAlertLevel",
"C",
"Description",
"Parameters",
"Proximity Profile Reporter Role",
"Defines",
"Supported service",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_PXPR_AlertLevel_T",
"C",
"Description",
"BLE_PXPR_EventId_T",
"C",
"Description",
"Structures",
"BLE_PXPR_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPR_EventCb_T",
"C",
"Description",
"BLE_PXPR_EvtAlertLevelWriteInd_T",
"C",
"Description",
"Field Documentation",
"BLE_PXPR_Event_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_PXPR_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_PXPR_EventRegister",
"C",
"Description",
"Parameters",
"BLE_PXPR_Init",
"C",
"Description",
"Return values",
"BLE_PXPR_SetLlsAlertLevel",
"C",
"Description",
"Parameters",
"Return values",
"BLE_PXPR_SetTxPowerLevel",
"C",
"Description",
"Parameters",
"Transparent Credit Based Profile (TRCBP)",
"Transparent Credit Based Profile Server Role",
"Defines",
"Definition of TRCBPS parameters",
"C",
"Description",
"Macro Definition",
"Definition of unassigned L2CAP ID",
"C",
"Description",
"Macro Definition",
"Definition of vendor opcode",
"C",
"Description",
"Macro Definition",
"Maximum buffer list",
"C",
"Description",
"Macro Definition",
"Maximum connection number",
"C",
"Description",
"Macro Definition",
"TRCPBS status",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_TRCBPS_ChanType_T",
"C",
"Description",
"BLE_TRCBPS_EventId_T",
"C",
"Description",
"Structures",
"BLE_TRCBP_EventCb_T",
"C",
"Description",
"BLE_TRCBPS_ConnPara_T",
"C",
"Description",
"Field Documentation",
"BLE_TRCBPS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_TRCBPS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_TRCBPS_EvtConnStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_TRCBPS_EvtReceiveData_T",
"C",
"Description",
"Field Documentation",
"BLE_TRCBPS_EvtVendorCmd_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_TRCBPS_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_TRCBPS_ConnReq",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_DisconnectReq",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_EventRegistration",
"C",
"Description",
"Parameters",
"BLE_TRCBPS_GetData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_GetDataLength",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_Init",
"C",
"Description",
"Return values",
"BLE_TRCBPS_QueryPsm",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_SendData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRCBPS_SendVendorCommand",
"C",
"Description",
"Parameters",
"Return values",
"Message Sequence Chart",
"Transparent Credit Based Profile initialization",
"Transparent Credit Based Profile Connection Establishment Procedure",
"Transparent Credit Based Profile Disconnection Procedure",
"Transparent Credit Based Profile Data/Vendor Command Exchange Procedure",
"Transparent Profile (TRP)",
"Transparent Profile Client Role",
"Defines",
"Definition of downlink status",
"C",
"Description",
"Macro Definition",
"Definition of uplink status",
"C",
"Description",
"Macro Definition",
"Maximum connection number",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_TRSPC_EventId_T",
"C",
"Description",
"Structures",
"BLE_TRSPC_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EventCb_T",
"C",
"Description",
"BLE_TRSPC_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtDiscComplete_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtDownlinkStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtReceiveData_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtUplinkStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtVendorCmd_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPC_EvtVendorCmdRsp_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_TRSPC_BleDdEventHandler",
"C",
"Description",
"Parameters",
"BLE_TRSPC_BleEventHandler",
"C",
"Description",
"Parameters",
"BLE_TRSPC_EventRegistration",
"C",
"Description",
"Parameters",
"BLE_TRSPC_GetData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRSPC_GetDataLength",
"C",
"Description",
"Parameters",
"BLE_TRSPC_Init",
"C",
"Description",
"Return values",
"BLE_TRSPC_SendData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRSPC_SendVendorCommand",
"C",
"Description",
"Parameters",
"Return values",
"Transparent Profile Server Role",
"Defines",
"Maximum connection number",
"C",
"Description",
"Macro Definition",
"TRSPS Status",
"C",
"Description",
"Macro Definition",
"Enums",
"BLE_TRSPS_EventId_T",
"C",
"Description",
"Structures",
"BLE_TRSPS_Event_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EventCb_T",
"C",
"Description",
"BLE_TRSPS_EventField_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EvtCbfcEnabled_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EvtCtrlStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EvtReceiveData_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EvtTxStatus_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_EvtVendorCmd_T",
"C",
"Description",
"Field Documentation",
"BLE_TRSPS_Uuids_T",
"C",
"Description",
"Field Documentation",
"Functions",
"BLE_TRSPS_GetDataLength",
"C",
"Description",
"Parameters",
"BLE_TRSPS_EventRegistration",
"C",
"Description",
"Parameters",
"BLE_TRSPS_GetData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRSPS_SendData",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRSPS_ChangeUuids",
"C",
"Description",
"Parameters",
"BLE_TRSPS_Init",
"C",
"Description",
"Return values",
"BLE_TRSPS_SendVendorCommand",
"C",
"Description",
"Parameters",
"Return values",
"BLE_TRSPS_BleEventHandler",
"C",
"Description",
"Parameters",
"Message Sequence Chart",
"Transparent Profile Client Role Initialization and Connection Establishment Procedure",
"Transparent Profile Server Role Initialization and Connection Establishment Procedure",
"Transparent Profile Vendor Command Exchange Procedure",
"Transparent Profile Data Exchange Procedure - Client Role",
"Transparent Profile Data Exchange Procedure - Server Role",
"BLE Document",
"Microchip OTA Profile v1 0",
"Introduction",
"Profile Dependencies",
"Bluetooth Specification Release Capability",
"Configuration",
"Roles",
"Role/Service Relationships",
"Transport Dependencies",
"OTA Server Role Requirements",
"OTA Client Role Requirements",
"GATT Sub-Procedure Requirements",
"Service Discovery",
"Characteristic Discovery",
"Service Characteristics",
"OTA Firmware Update Procedures",
"OTA Feature Discovery",
"OTA Data Discovery",
"Firmware Update Request Operation",
"Firmware Update Start Operation",
"Firmware Update Complete Operation",
"Device Reset Request Operation",
"General Error Handling",
"Connection Establishment Procedures",
"Security Considerations",
"Acronyms and Abbreviations",
"References",
"Microchip Transparent Profile v1 1",
"Introduction",
"Profile Dependencies",
"Bluetooth Specification Release Compatibility",
"Configuration",
"Roles",
"Role/Service Relationships",
"Transport Dependencies",
"Transparent Server Role Requirements",
"Additional Requirements For Low Energy Transport",
"Manufacturer Specific Data or Service Data AD Types",
"Transparent Client Role Requirements",
"GATT Sub-Procedure Requirements",
"Service Discovery",
"Characteristic Discovery",
"Transparent Service Characteristic Discovery",
"Transparent Service Characteristics",
"Transparent Up-Link Data (TUD) Characteristic",
"Transparent Down-Link Data (TDD) Characteristic",
"Transparent Control Point (TCP) Characteristic",
"Transparent Procedures",
"Downlink Credit Based Flow Control",
"Uplink Credit Based Flow Control",
"Connection Establishment Procedures",
"Security Considerations",
"Acronyms and Abbreviations",
"References",
"Microchip Transparent Credit Based Profile v1 0",
"Introduction",
"Profile Dependencies",
"Bluetooth Specification Release Compatibility",
"Configuration",
"Roles",
"Role/Service Relationships",
"Transport Dependencies",
"Transparent Credit Based Server Role Requirements",
"Additional Requirements for Low Energy Transport",
"Manufacturer Specific Data or Service Data AD Types",
"TRCBP Data Pipe",
"Transparent Credit Based Client Role Requirements",
"GATT Sub-Procedure Requirements",
"Service Discovery",
"Characteristic Discovery",
"TRCBS Characteristic Discovery",
"TRCBS Characteristics",
"L2PSM Characteristic",
"Transparent Credit Based Control Point (TRCBCP) Characteristic",
"Open Data Pipe",
"Connection Establishment Procedures",
"Data Pipe",
"Control Pipe",
"Security Considerations",
"Acronyms and Abbreviations",
"Reference",
"Microchip OTA Service v1 0",
"Introduction",
"Conformance",
"Service Dependency",
"Specification Release Compatibility",
"GATT Sub-Procedure Requirements",
"Byte Transmission Order",
"Error Code",
"Service",
"Service Characteristics",
"OTA Feature",
"OTA Feature Behavior",
"OTA Data",
"OTA Data Behavior",
"Fragmented_Image Field",
"OTA Control Point",
"OTA Control Point Behavior",
"OTA Control Operations",
"Response Code operation",
"Firmware Update Request operation",
"Firmware Update Start operation",
"Firmware Update Complete operation",
"Device Reset Request operation",
"Acronyms And Abbreviations",
"References",
"Microchip Transparent Service v1 1",
"Introduction",
"Conformance",
"Service Dependency",
"Bluetooth Specification Release Compatibility",
"GATT Sub-Procedure Requirements",
"Byte Transmission Order",
"Error Codes",
"Service Declaration",
"Service Characteristics",
"Transparent Uplink Data (TUD) Characteristic",
"Transparent Uplink Data Characteristic Behavior",
"Transparent Downlink Data (TDD) Characteristic",
"Transparent Downlink Data Characteristic Behavior",
"Transparent Control Point (TCP) Characteristics",
"Transparent Control Point Procedure Requirements",
"Transparent Control Point Characteristic Behavior",
"Downlink Credit Based Flow Control (DCBFC)",
"Uplink Credit Based Flow Control (UCBFC)",
"Acronyms and Abbreviations",
"References",
"Microchip Transparent Credit Based Service v1 0",
"Introduction",
"Service Dependency",
"Bluetooth Specification Release Compatibility",
"GATT Sub-Procedure Requirements",
"Byte Transmission Order",
"Error Codes",
"Service Declaration",
"Service Characteristics",
"L2CAP PSM Value (L2PSM) Characteristic",
"Transparent Credit Based Control Point (TRCBCP) Characteristic",
"Transparent Credit Based Control Point Procedure Requirements",
"Transparent Credit Based Control Point Characteristic Behavior",
"Acronyms and Abbreviations",
"References",
"Microchip Information",
"The Microchip Website",
"Product Change Notification Service",
"Customer Support",
"Microchip Devices Code Protection Feature",
"Legal Notice",
"Trademarks",
"Quality Management System",
"Worldwide Sales and Service"];

var SearchInfo = [" BLE Software  BLE software is compatible with BLE protocol developed by Microchip BLE Software contains four major blocks    BLE Stack BLE Stack plays an important role in BLE Software it is the core of BLE Software BLE Stack operates under it is own task and it is released as Library object  BLE Middleware BLE Middleware assists application to handle some BLE procedures BLE Middleware operates under application task and it is released as source code BLE Middleware is optional block application could disable it if application would like to handle all the BLE Stack procedures  BLE Profile There are some BLE profiles included in the BLE Software BLE profile operates under application task and it is released as source code Application could enable or disable any profile depending on the requirement  BLE Service There are some BLE services included in the BLE Software BLE service operates under application task and it is released as source code Generally BLE service is used by dedicated BLE profile Therefore if the BLE profile is enabled BLE profile would initialize the relevant BLE services However BLE service could be used by application directly In that case application needs to initialize BLE service There are some BLE services included in the BLE Software BLE service operates under application task and it is released as source code Generally BLE service is used by dedicated BLE profile Therefore if the BLE profile is enabled BLE profile would initialize the relevant BLE services However BLE service could be used by application directly In that case application needs to initialize BLE service    ",
							" PIC32CX-BZ2/WBZ45x  This page has the necessary supporting documentation to get started with application development on PIC32CX-BZ2 and WBZ45x Family of devices  ",
							" BLE Software Specification  Key Features    Bluetooth 5 2 compliant single-mode Bluetooth Low Energy protocol stack (BLE_Stack)   Maximum to 6 BLE connections concurrently  Configurable GAP roles of Peripheral Central Advertiser and Scanner  Configurable GATT Client role  Configurable features of BLE Extended and Periodic Advertisements  Configurable features of Scanning for Extended and Periodic Advertisements  L2CAP LE Credit Based Flow Control  LE GATT Caching  LE 1M 2M and Coded PHY (125/ 250/500 kbps)  LL Privacy  LE Secure Connections pairing model  APIs for GAP GATT SM and L2CAP protocols access  BT5 2 LE Power Control    BLE Middleware source codes provided to assist Application layer handling LE pairing device management GATT database discovery device firmware update and HCI virtual sniffer log etc  Microchip proprietary Transparent Profile and Service source codes provided for GATT based transparent data exchange applications  Microchip proprietary Credit Based Transparent Profile and Service source codes provided for L2CAP CoC transparent data exchange applications  Microchip proprietary OTA Profile and Service source codes provided for OTA DFU feature implementation       ",
							" Initializing the BLE Software ",
							" Initializing BLE Stack Before using any BLE Stack relevant API BLE component must be initialized It is strongly recommend that BLE component be initialized during system initialization BLE component only operates with RTOS the relevant parameters of RTOS must be assigned to BLE component Also device address is necessary for BLE component //BLE Queue definition #define QUEUE_LENGTH_BLE (16) #define QUEUE_ITEM_SIZE_BLE (sizeof(void *)) //BLE library Initialization Data OSAL_QUEUE_HANDLE_TYPE bleRequestQueueHandle; OSAL_API_LIST_TYPE osalAPIList; uint8_t bdAddr[7]; //address type + address[6] // Create BLE Stack Message QUEUE OSAL_QUEUE_Create( bleRequestQueueHandle QUEUE_LENGTH_BLE QUEUE_ITEM_SIZE_BLE); // Initialize BLE Stack if(IB_GetBdAddr(bdAddr) == 0) { BT_SYS_Init( bleRequestQueueHandle osalAPIList NULL bdAddr); } else { BT_SYS_Init( bleRequestQueueHandle osalAPIList NULL NULL); } BLE Stack provides various APIs for application and those APIs belong to the specific module within dedicated group Currently there are four groups inside the BLE Stack Application shall initialize the dedicated group and modules in the BLE Stack if needs GAP: Provide the user interface for discovery of BLE devices broadcast of BLE device and connection management L2CAP: Provide the user interface for credit based flow control procedure GATT: Provide the user interface for GATT server and client procedure SMP: Provide the user interface for pairing authentication and security configuration Example of initializing modules in GAP group: //Initialize BLE GAP main module BLE_GAP_Init(); //Initialize BLE GAP advertising module BLE_GAP_AdvInit(); Example of initializing modules in L2CAP group: //Initialize BLE L2cap main module BLE_L2CAP_Init(); //Initialize BLE L2cap credit based flow control module BLE_L2CAP_CbInit(); Example of initializing modules in GATT group: //Initialize BLE GATT server module GATTS_Init(); //Initialize BLE GATT client module GATTC_Init(); Example of initializing modules in SMP group: //Initialize BLE SMP main module BLE_SMP_Init(); BLE Stack would generate events to inform application if there is any status changed or activity Application may need to get the relevant information from BLE Stack and do the corresponding procedure Therefore application shall register BLE Stack callback function after BLE Stack initialized Example of registering BLE Stack callback event: /* Register BLE Stack callback event*/ STACK_EventRegister(APP_BleStackCb); ",
							" Initializing BLE Middleware BLE component provides two modules in BLE Middleware to assist application Application shall initialize the dedicated modules if needs BLE_DM: Handle pairing procedures connection management and the record of pairing information Provide the simplified user interface for application BLE_DD: Handle the service discovery procedures It shall be included if a GATT client profile is enabled Example of initializing modules in BLE Middleware: //Initialize BLE device manager module BLE_DM_Init(); //Initialize BLE device discovery module BLE_DD_Init(); BLE Middleware module would generate events to inform application if there is any status changed or activity Application may need to get the relevant information from BLE Middleware and do the corresponding procedure Therefore application shall register BLE Middleware callback function after BLE Middleware initialized Example of registering BLE middleware callback event: /* Register BLE DM module callback event */ BLE_DM_EventRegister(APP_DmEvtHandler); /* Register BLE DD module callback event */ BLE_DD_EventRegister(APP_DdEvtHandler); ",
							" Initializing BLE Profile BLE component provides some example profiles Application shall initialize the profiles if needs Example of initializing BLE profiles: //Initialize BLE transparent server profile BLE_TRSPS_Init(); //Initialize BLE transparent client profile BLE_TRSPC_Init(); BLE profiles module would generate events to inform application if there is any status changed or activity Application may need to get the relevant information from BLE profiles and do the corresponding procedure Therefore application shall register BLE profiles callback function after BLE profiles initialized Example of registering BLE profiles callback event: /* Register BLE transparent server callback event */ BLE_TRSPS_EventRegistration(APP_TrspsEvtHandler); /* Register BLE transparent client callback event */ BLE_TRSPC_EventRegistration(APP_TrspcEvtHandler); ",
							" Initializing BLE Service BLE component provides some example services Some of the services are used by the specific profile and some of them may be used by application directly Example of initializing BLE service: //Initialize BLE device information service BLE_DIS_Add(); //Initialize BLE battery service BLE_BAS_Add(); ",
							" Using the BLE Software Application shall be able to get the events from BLE Stack if the callback event is registered And it is strongly recommend application shall not handle the event directly Because timing is critical for BLE Stack application shall not occupy the execution time before task switch Application shall generate a new message to handle the event within application task execution time Example of handling event from BLE Stack: //Create a new message and handler the event later void APP_BleStackCb(STACK_Event_T *p_stack) { STACK_Event_T stackEvent; APP_Msg_T appMsg; APP_Msg_T *p_appMsg; memcpy((uint8_t *) stackEvent (uint8_t *)p_stack sizeof(STACK_Event_T)); stackEvent p_event=OSAL_Malloc(p_stack- evtLen); if(stackEvent p_event==NULL) { return; } memcpy(stackEvent p_event p_stack- p_event p_stack- evtLen); stackEvent p_event=stackEvent p_event; appMsg msgId=APP_MSG_BLE_STACK_EVT; ((STACK_Event_T *)appMsg msgData)- groupId=p_stack- groupId; ((STACK_Event_T *)appMsg msgData)- evtLen=p_stack- evtLen; ((STACK_Event_T *)appMsg msgData)- p_event=stackEvent p_event; p_appMsg = appMsg; OSAL_QUEUE_Send( appData appQueue p_appMsg 0); } //Handle the BLE Stack events void APP_Tasks ( void ) { APP_Msg_T appMsg[1]; APP_Msg_T *p_appMsg; p_appMsg=appMsg; /* Check the application's current state */ switch ( appData state ) { case APP_STATE_SERVICE_TASKS: { if (OSAL_QUEUE_Receive( appData appQueue appMsg OSAL_WAIT_FOREVER)) { if(p_appMsg- msgId==APP_MSG_BLE_STACK_EVT) { APP_BleStackEvtHandler((STACK_Event_T *)p_appMsg- msgData); } } break; } } } } All the group events of BLE Stack comes in one entry point Hence application shall check the groupId to identify the group first when receiving the BLE Stack event And then check the eventId in each group Example of handling the BLE Stack events: void APP_BleStackEvtHandler(STACK_Event_T *p_stackEvt) { switch (p_stackEvt- groupId) { case STACK_GRP_BLE_GAP: { /* TODO: implement your application code */ } break; case STACK_GRP_BLE_L2CAP: { /* TODO: implement your application code */ } break; case STACK_GRP_BLE_SMP: { /* TODO: implement your application code */ } break; case STACK_GRP_GATT: { /* TODO: implement your application code */ } break; } OSAL_Free(p_stackEvt- p_event); } ",
							" BLE Software v1 0 0 API ",
							" BLE Stack ",
							" Generic Access Profile (GAP)  This module defines the GAP interface to the BLE Library  ",
							" Defines ",
							" Address length ",
							" C #define GAP_MAX_BD_ADDRESS_LEN 0x06 ",
							" Description The definition of maximum Bluetooth address length ",
							" Macro Definition Macro Description GAP_MAX_BD_ADDRESS_LEN Maximum length of BD address ",
							" Address type ",
							" C #define BLE_GAP_ADDR_TYPE_PUBLIC 0x00 #define BLE_GAP_ADDR_TYPE_RANDOM_STATIC 0x01 #define BLE_GAP_ADDR_TYPE_RANDOM_RESOLVABLE 0x02 #define BLE_GAP_ADDR_TYPE_RANDOM_NON_RESOLVABLE 0x03 ",
							" Description The definition of address types ",
							" Macro Definition Macro Description BLE_GAP_ADDR_TYPE_PUBLIC Public device address (default) BLE_GAP_ADDR_TYPE_RANDOM_STATIC Static random device address BLE_GAP_ADDR_TYPE_RANDOM_RESOLVABLE Private resolvable random device address BLE_GAP_ADDR_TYPE_RANDOM_NON_RESOLVABLE Private non resolvable random device address ",
							" Advertising channel ",
							" C #define BLE_GAP_ADV_CHANNEL_37 0x01 #define BLE_GAP_ADV_CHANNEL_38 0x02 #define BLE_GAP_ADV_CHANNEL_39 0x04 #define BLE_GAP_ADV_CHANNEL_ALL 0x07 ",
							" Description The definition of channel map bit field for advertising ",
							" Macro Definition Macro Description BLE_GAP_ADV_CHANNEL_37 Use channel 37 for advertising BLE_GAP_ADV_CHANNEL_38 Use channel 38 for advertising BLE_GAP_ADV_CHANNEL_39 Use channel 39 for advertising BLE_GAP_ADV_CHANNEL_ALL Use channels 37 38 and 39 for advertising ",
							" Advertising filter policy ",
							" C #define BLE_GAP_ADV_FILTER_DEFAULT 0x00 #define BLE_GAP_ADV_FILTER_SCAN 0x01 #define BLE_GAP_ADV_FILTER_CONNECT 0x02 #define BLE_GAP_ADV_FILTER_SCAN_CONNECT 0x03 ",
							" Description The definition of advertising filter policy ",
							" Macro Definition Macro Description BLE_GAP_ADV_FILTER_DEFAULT Default setting Process scan and connection requests from all devices BLE_GAP_ADV_FILTER_SCAN Process connection requests from all devices and only scan requests from devices that are in the filter accept list BLE_GAP_ADV_FILTER_CONNECT Process scan requests from all devices and only connection requests from devices that are in the filter accept list BLE_GAP_ADV_FILTER_SCAN_CONNECT Process scan and connection requests only from devices in the filter accept list ",
							" Advertising interval ",
							" C #define BLE_GAP_ADV_INTERVAL_MIN 0x0020 #define BLE_GAP_ADV_INTERVAL_MAX 0x4000 ",
							" Description Range for advertising interval (Unit: 0 625 ms) Default value is 0x0800 ",
							" Macro Definition Macro Description BLE_GAP_ADV_INTERVAL_MIN Minimum advertising interval 20 ms BLE_GAP_ADV_INTERVAL_MAX Maximum advertising interval 10 24 sec ",
							" Advertising option ",
							" C #define BLE_GAP_ADV_OPTION_STORE_PARAMS 0x00 #define BLE_GAP_ADV_OPTION_LOAD_PARAMS 0x01 ",
							" Description The definition of advertising option ",
							" Macro Definition Macro Description BLE_GAP_ADV_OPTION_STORE_PARAMS Store advertising parameters to BACKUP RAM Once this option is enabled only one advertising event would be executed This option is valid only if the parameter \"enable\" in the BLE_GAP_SetAdvParams API is set to true BLE_GAP_ADV_OPTION_LOAD_PARAMS load advertising parameters from BACKUP RAM Once this option is enabled only one advertising event would be executed This option is valid only if the parameter \"enable\" in the BLE_GAP_SetAdvParams API is set to true ",
							" Advertising SID range ",
							" C #define BLE_GAP_ADV_SID_MIN 0x00 #define BLE_GAP_ADV_SID_MAX 0x0F ",
							" Description Range of advertising set ID ",
							" Macro Definition Macro Description BLE_GAP_ADV_SID_MIN The minimum advertising SID value BLE_GAP_ADV_SID_MAX The maximum advertising SID value ",
							" Advertising type ",
							" C #define BLE_GAP_ADV_TYPE_ADV_IND 0x00 #define BLE_GAP_ADV_TYPE_ADV_DIRECT_IND 0x01 #define BLE_GAP_ADV_TYPE_ADV_SCAN_IND 0x02 #define BLE_GAP_ADV_TYPE_ADV_NONCONN_IND 0x03 #define BLE_GAP_ADV_TYPE_ADV_DIRECT_IND_LOW 0x04 ",
							" Description The definition of advertising types ",
							" Macro Definition Macro Description BLE_GAP_ADV_TYPE_ADV_IND Connectable undirected advertising (ADV_IND) (default) BLE_GAP_ADV_TYPE_ADV_DIRECT_IND Connectable high duty cycle directed advertising (ADV_DIRECT_IND high duty cycle) BLE_GAP_ADV_TYPE_ADV_SCAN_IND Scannable undirected advertising (ADV_SCAN_IND) BLE_GAP_ADV_TYPE_ADV_NONCONN_IND Non connectable undirected advertising (ADV_NONCONN_IND) BLE_GAP_ADV_TYPE_ADV_DIRECT_IND_LOW Connectable low duty cycle directed advertising (ADV_DIRECT_IND low duty cycle) ",
							" Appearance definition ",
							" C #define GAP_APPEARANCE_UNKNOWN 0 #define GAP_APPEARANCE_GENERIC_PHONE 64 #define GAP_APPEARANCE_GENERIC_COMPUTER 128 #define GAP_APPEARANCE_GENERIC_WATCH 192 #define GAP_APPEARANCE_GENERIC_HID 960 #define GAP_APPEARANCE_GENERIC_GLUCOSE_METER 1024 #define GAP_APPEARANCE_GENERIC_CYCLING 1152 #define GAP_APPEARANCE_GENERIC_WEIGHT_SCALE 3200 ",
							" Description The definition of appearance ",
							" Macro Definition Macro Description GAP_APPEARANCE_UNKNOWN Unknown GAP_APPEARANCE_GENERIC_PHONE Generic Phone GAP_APPEARANCE_GENERIC_COMPUTER Generic Computer GAP_APPEARANCE_GENERIC_WATCH Generic Watch GAP_APPEARANCE_GENERIC_HID Human Interface Device (HID) GAP_APPEARANCE_GENERIC_GLUCOSE_METER Generic Glucose Meter GAP_APPEARANCE_GENERIC_CYCLING Generic Cycling GAP_APPEARANCE_GENERIC_WEIGHT_SCALE Generic Weight Scale ",
							" Connection parameters range ",
							" C #define BLE_GAP_CP_MIN_CONN_INTVAL_MIN 0x0006 #define BLE_GAP_CP_MIN_CONN_INTVAL_MAX 0x0C80 #define BLE_GAP_CP_MAX_CONN_INTVAL_MIN 0x0006 #define BLE_GAP_CP_MAX_CONN_INTVAL_MAX 0x0C80 #define BLE_GAP_CP_LATENCY_MIN 0x0000 #define BLE_GAP_CP_LATENCY_MAX 0x01F3 #define BLE_GAP_CP_CONN_SUPERVISION_TIMEOUT_MIN 0x000A #define BLE_GAP_CP_CONN_SUPERVISION_TIMEOUT_MAX 0x0C80 ",
							" Description Range of connection parameters ",
							" Macro Definition Macro Description BLE_GAP_CP_MIN_CONN_INTVAL_MIN Minimum value of the connection interval (Unit: 1 25 ms) BLE_GAP_CP_MIN_CONN_INTVAL_MAX Minimum value of the connection interval (Unit: 1 25 ms) BLE_GAP_CP_MAX_CONN_INTVAL_MIN Maximum value of the connection interval (Unit: 1 25 ms) BLE_GAP_CP_MAX_CONN_INTVAL_MAX Maximum value of the connection interval (Unit: 1 25 ms) BLE_GAP_CP_LATENCY_MIN Minimum allowed peripheral latency for the connection specified as the number of connection events BLE_GAP_CP_LATENCY_MAX Maximum allowed peripheral latency for the connection specified as the number of connection events BLE_GAP_CP_CONN_SUPERVISION_TIMEOUT_MIN Minimum of supervision timeout for the connection (Unit: 10 ms) BLE_GAP_CP_CONN_SUPERVISION_TIMEOUT_MAX Maximum of supervision timeout for the connection (Unit: 10 ms) ",
							" Connection roles ",
							" C #define BLE_GAP_ROLE_CENTRAL 0x00 #define BLE_GAP_ROLE_PERIPHERAL 0x01 ",
							" Description The definition of GAP role in connection state ",
							" Macro Definition Macro Description BLE_GAP_ROLE_CENTRAL MBA plays Center role in connection state BLE_GAP_ROLE_PERIPHERAL MBA plays Peripheral role in connection state ",
							" Data status for extended advertising report ",
							" C #define BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_COMPLETE 0x00 #define BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_MORE 0x01 #define BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_TRUNCATED 0x02 ",
							" Description The definition of extended advertising report data status ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_COMPLETE Complete BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_MORE Incomplete more data to come BLE_GAP_EXT_ADV_REPORT_DATA_STATUS_TRUNCATED Incomplete data truncated no more to come ",
							" Disconnect reason ",
							" C #define GAP_DISC_REASON_AUTH_FAIL 0x05 #define GAP_DISC_REASON_REMOTE_TERMINATE 0x13 #define GAP_DISC_REASON_LOW_RESOURCES 0x14 #define GAP_DISC_REASON_POWER_OFF 0x15 #define GAP_DISC_REASON_UNSUPPORTED 0x1A #define GAP_DISC_REASON_KEY_LEN_UNSUPPORTED 0x29 #define GAP_DISC_REASON_UNACCEPTABLE_CP 0x3B ",
							" Description The definition of disconnection reason ",
							" Macro Definition Macro Description GAP_DISC_REASON_AUTH_FAIL Authentication failure GAP_DISC_REASON_REMOTE_TERMINATE Remote User Terminated Connection GAP_DISC_REASON_LOW_RESOURCES Remote Device Terminated Connection due to Low Resources GAP_DISC_REASON_POWER_OFF Remote Device Terminated Connection due to Power Off GAP_DISC_REASON_UNSUPPORTED Unsupported Remote Feature / Unsupported LMP Feature GAP_DISC_REASON_KEY_LEN_UNSUPPORTED Pairing with Unit Key Not Supported GAP_DISC_REASON_UNACCEPTABLE_CP Unacceptable Connection Parameters ",
							" Encryption status ",
							" C #define BLE_GAP_ENCRYPT_SUCCESS 0x00 #define BLE_GAP_ENCRYPT_FAIL 0x01 ",
							" Description The definition of encryption status ",
							" Macro Definition Macro Description BLE_GAP_ENCRYPT_SUCCESS The link is encrypted successfully BLE_GAP_ENCRYPT_FAIL The link encryption failed ",
							" Event properties of advertising report ",
							" C #define BLE_GAP_EXT_ADV_EVT_PROP_CONNECTABLE_ADV (1 0) #define BLE_GAP_EXT_ADV_EVT_PROP_SCANNABLE_ADV (1 1) #define BLE_GAP_EXT_ADV_EVT_PROP_DIRECTED_ADV (1 2) #define BLE_GAP_EXT_ADV_EVT_PROP_HIGH_DUTY_DIRECTED_CONN_ADV (1 3) #define BLE_GAP_EXT_ADV_EVT_PROP_LEGACY_ADV (1 4) #define BLE_GAP_EXT_ADV_EVT_PROP_OMIT_ADDRESS (1 5) #define BLE_GAP_EXT_ADV_EVT_PROP_TX_POWER (1 6) #define BLE_GAP_EXT_ADV_EVT_PROP_ALL (BLE_GAP_EXT_ADV_EVT_PROP_CONNECTABLE_ADV |BLE_GAP_EXT_ADV_EVT_PROP_SCANNABLE_ADV |BLE_GAP_EXT_ADV_EVT_PROP_DIRECTED_ADV |BLE_GAP_EXT_ADV_EVT_PROP_HIGH_DUTY_DIRECTED_CONN_ADV |BLE_GAP_EXT_ADV_EVT_PROP_LEGACY_ADV |BLE_GAP_EXT_ADV_EVT_PROP_OMIT_ADDRESS |BLE_GAP_EXT_ADV_EVT_PROP_TX_POWER) ",
							" Description The definition of extended advertising event properties ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_EVT_PROP_CONNECTABLE_ADV Connectable advertising BLE_GAP_EXT_ADV_EVT_PROP_SCANNABLE_ADV Scannable advertising BLE_GAP_EXT_ADV_EVT_PROP_DIRECTED_ADV Directed advertising BLE_GAP_EXT_ADV_EVT_PROP_HIGH_DUTY_DIRECTED_CONN_ADV High Duty Cycle Directed Connectable advertising ( = 3 75 ms Advertising Interval) BLE_GAP_EXT_ADV_EVT_PROP_LEGACY_ADV Use legacy advertising PDUs BLE_GAP_EXT_ADV_EVT_PROP_OMIT_ADDRESS Omit advertiser's address from all PDUs (\"anonymous advertising\") BLE_GAP_EXT_ADV_EVT_PROP_TX_POWER Include TxPower in the extended header of the advertising PDU BLE_GAP_EXT_ADV_EVT_PROP_ALL All properties ",
							" Event type for extended advertising report ",
							" C #define BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_CONNECTABLE (1 0) #define BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_SCANNABLE (1 1) #define BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_DIRECTED (1 2) #define BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_SCAN_RSP (1 3) #define BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_LEGACY (1 4) ",
							" Description The definition of rxtended advertising report event type ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_CONNECTABLE Connectable advertising BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_SCANNABLE Scannable advertising BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_DIRECTED Directed advertising BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_SCAN_RSP Scan Response BLE_GAP_EXT_ADV_REPORT_EVT_TYPE_LEGACY Legacy advertising PDUs used ",
							" Event type of advertising report ",
							" C #define BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_IND 0x00 #define BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_DIRECT_IND 0x01 #define BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_SCAN_IND 0x02 #define BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_NONCONN_IND 0x03 #define BLE_GAP_ADV_REPORT_EVT_TYPE_SCAN_RSP 0x04 #define BLE_GAP_ADV_REPORT_EVT_TYPE_AUX_ADV_IND 0x07 ",
							" Description The definition of event type of advertising report ",
							" Macro Definition Macro Description BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_IND Connectable undirected advertising (ADV_IND) Report Event BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_DIRECT_IND Connectable directed advertising (ADV_DIRECT_IND) Report Event BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_SCAN_IND Scannable undirected advertising (ADV_SCAN_IND) Report Event BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_NONCONN_IND Non connectable undirected advertising (ADV_NONCONN_IND) Report Event BLE_GAP_ADV_REPORT_EVT_TYPE_SCAN_RSP Scan Response (SCAN_RSP) Report Event BLE_GAP_ADV_REPORT_EVT_TYPE_AUX_ADV_IND Connectable undirected advertising (AUX_ADV_IND) Report Event ",
							" Extended primary advertising interval ",
							" C #define BLE_GAP_EXT_PRIMARY_ADV_INTERVAL_MIN 0x0020 #define BLE_GAP_EXT_PRIMARY_ADV_INTERVAL_MAX 0x1F4000 ",
							" Description Range of LE extended primary advertising interval (Unit: 0 625 ms) ",
							" Macro Definition Macro Description BLE_GAP_EXT_PRIMARY_ADV_INTERVAL_MIN Minimum LE extended primary adv interval 20 ms BLE_GAP_EXT_PRIMARY_ADV_INTERVAL_MAX Maximum LE extended primary adv interval 1280 sec ",
							" Extended scan data length ",
							" C #define BLE_GAP_EXT_SCAN_DATA_LEN_MIN 0x004A #define BLE_GAP_EXT_SCAN_DATA_LEN_MAX 0x0672 ",
							" Description Range of extended scan data length ",
							" Macro Definition Macro Description BLE_GAP_EXT_SCAN_DATA_LEN_MIN Minimum extended scan data length BLE_GAP_EXT_SCAN_DATA_LEN_MAX Maximum extended scan data length ",
							" Extended scan interval ",
							" C #define BLE_GAP_EXT_SCAN_INTERVAL_MIN 0x0004 #define BLE_GAP_EXT_SCAN_INTERVAL_MAX 0xFFFF ",
							" Description Range of LE extended scan interval (Unit: 0 625 ms) ",
							" Macro Definition Macro Description BLE_GAP_EXT_SCAN_INTERVAL_MIN Minimum LE extened scan interval 2 5 ms BLE_GAP_EXT_SCAN_INTERVAL_MAX Maximum LE extened scan interval 40 959375 sec ",
							" Extended scan window ",
							" C #define BLE_GAP_EXT_SCAN_WINDOW_MIN 0x0004 #define BLE_GAP_EXT_SCAN_WINDOW_MAX 0xFFFF ",
							" Description Range of LE extended scan window (Unit: 0 625 ms) ",
							" Macro Definition Macro Description BLE_GAP_EXT_SCAN_WINDOW_MIN Minimum LE extened scan window 2 5 ms BLE_GAP_EXT_SCAN_WINDOW_MAX Maximum LE extened scan window 40 959375 sec ",
							" Fragment preference of extended advertising data ",
							" C #define BLE_GAP_EXT_ADV_DATA_FRAG_PREF_ALL 0x00 #define BLE_GAP_EXT_ADV_DATA_FRAG_PREF_MIN 0x01 ",
							" Description The definition of extended advertising event fragment preference ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_DATA_FRAG_PREF_ALL BLE Stack may fragment all advertising data BLE_GAP_EXT_ADV_DATA_FRAG_PREF_MIN BLE Stack should not fragment or should minimize fragmentation of advertising data ",
							" Initiator filter policy ",
							" C #define BLE_GAP_INIT_FP_FILTER_ACCEPT_LIST_NOT_USED 0x00 #define BLE_GAP_INIT_FP_FILTER_ACCEPT_LIST_USED 0x01 ",
							" Description The definition of initiator filter policy ",
							" Macro Definition Macro Description BLE_GAP_INIT_FP_FILTER_ACCEPT_LIST_NOT_USED Default setting filter accept list is not used to determine which advertiser to connect to BLE_GAP_INIT_FP_FILTER_ACCEPT_LIST_USED filter accept list is used to determine which advertiser to connect to Peer address shall be ignored ",
							" Maximum advertising data length ",
							" C #define BLE_GAP_ADV_MAX_LENGTH 0x1F ",
							" Description The definition of maximum advertising data length ",
							" Macro Definition Macro Description BLE_GAP_ADV_MAX_LENGTH Maximum length of advertising data in bytes ",
							" Maximum advertising handle ",
							" C #define BLE_GAP_MAX_ADV_HANDLE 0xEF ",
							" Description The definition of maximum allowed Advertising handle ",
							" Macro Definition Macro Description BLE_GAP_MAX_ADV_HANDLE Maximum BLE ADV handle ",
							" Maximum connection handle ",
							" C #define BLE_GAP_MAX_CONN_HANDLE 0xEFF ",
							" Description The definition of maximum allowed GAP connection handle ",
							" Macro Definition Macro Description BLE_GAP_MAX_CONN_HANDLE Maximum BLE GAP connection handle ",
							" Maximum connection number ",
							" C #define BLE_GAP_MAX_LINK_NBR 0x06 ",
							" Description The definition of maximum allowed link number of GAP connections ",
							" Macro Definition Macro Description BLE_GAP_MAX_LINK_NBR Maximum allowed BLE GAP connections ",
							" Maximum device name length ",
							" C #define GAP_MAX_DEVICE_NAME_LEN 0x20 ",
							" Description The definition of maximum length of device name ",
							" Macro Definition Macro Description GAP_MAX_DEVICE_NAME_LEN Maximum length of device name ",
							" Maximum extended advertising data length ",
							" C #define BLE_GAP_EXT_ADV_DATA_LEN 251 ",
							" Description The definition of maximum number of extended advertising data length ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_DATA_LEN Maximum extended advertising data length ",
							" Maximum extended advertising fragment data length ",
							" C #define BLE_GAP_EXT_ADV_FRAGMENT_MAX_LENGTH 0xE5 ",
							" Description The definition of maximum extended advertising fragment data length ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_FRAGMENT_MAX_LENGTH Maximum length of extended advertising fragment data in bytes ",
							" Maximum filter accept list number ",
							" C #define BLE_GAP_MAX_FILTER_ACCEPT_LIST_NUM 0x08 ",
							" Description The definition of maximum number of filter accept list ",
							" Macro Definition Macro Description BLE_GAP_MAX_FILTER_ACCEPT_LIST_NUM Maximum number of filter accept list ",
							" Maximum number of skipped periodic advertising event ",
							" C #define BLE_GAP_SYNC_SKIP_MAX 0x1F3 ",
							" Description Maximum number of periodic advertising can be skipped ",
							" Macro Definition Macro Description BLE_GAP_SYNC_SKIP_MAX The maximum periodic advertising event can be skipped ",
							" Maximum periodic advertising data length ",
							" C #define BLE_GAP_PERI_ADV_DATA_LEN 252 ",
							" Description The definition of maximum number of periodic advertising data length ",
							" Macro Definition Macro Description BLE_GAP_PERI_ADV_DATA_LEN Maximum extended periodic data length ",
							" Maximum periodic advertising fragment data length ",
							" C #define BLE_GAP_PERIODIC_ADV_FRAGMENT_MAX_LENGTH 0xF7 ",
							" Description The definition of maximum periodic advertising fragment data length ",
							" Macro Definition Macro Description BLE_GAP_PERIODIC_ADV_FRAGMENT_MAX_LENGTH Maximum length of periodic advertising fragment data in bytes ",
							" Maximum resolving list number ",
							" C #define BLE_GAP_MAX_RESOLV_NUM 0x08 ",
							" Description The definition of maximum number of resolving list ",
							" Macro Definition Macro Description BLE_GAP_MAX_RESOLV_NUM Maximum number of resolving list ",
							" Maximum secondary adv for extended scan ",
							" C #define BLE_GAP_EXT_SCAN_2ND_ADV_NUM 0x10 ",
							" Description The definition of maximum secondary adv for extended scan ",
							" Macro Definition Macro Description BLE_GAP_EXT_SCAN_2ND_ADV_NUM Maximum secondary advertising packets apply to extended scan ",
							" Maximum sync devices number ",
							" C #define BLE_GAP_MAX_DEV_NUM 0x08 ",
							" Description The definition of maximum number of device could be set to advertiser list ",
							" Macro Definition Macro Description BLE_GAP_MAX_DEV_NUM Maximum number of resolving list ",
							" Operation of extended advertising data ",
							" C #define BLE_GAP_EXT_ADV_DATA_OP_INTERMEDIATE 0x00 #define BLE_GAP_EXT_ADV_DATA_OP_FIRST_FRAG 0x01 #define BLE_GAP_EXT_ADV_DATA_OP_LAST_FRAG 0x02 #define BLE_GAP_EXT_ADV_DATA_OP_COMPLETE 0x03 #define BLE_GAP_EXT_ADV_DATA_OP_UNCHANGED 0x04 ",
							" Description The definition of extended advertising event operations ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_DATA_OP_INTERMEDIATE Intermediate fragment of fragmented extended advertising data BLE_GAP_EXT_ADV_DATA_OP_FIRST_FRAG First fragment of fragmented extended advertising data BLE_GAP_EXT_ADV_DATA_OP_LAST_FRAG Last fragment of fragmented extended advertising data BLE_GAP_EXT_ADV_DATA_OP_COMPLETE Complete extended advertising data BLE_GAP_EXT_ADV_DATA_OP_UNCHANGED Unchanged data (just update the Advertising DID) ",
							" Operation of periodic advertising data ",
							" C #define BLE_GAP_PERIODIC_ADV_DATA_OP_INTERMEDIATE 0x00 #define BLE_GAP_PERIODIC_ADV_DATA_OP_FIRST_FRAG 0x01 #define BLE_GAP_PERIODIC_ADV_DATA_OP_LAST_FRAG 0x02 #define BLE_GAP_PERIODIC_ADV_DATA_OP_COMPLETE 0x03 ",
							" Description The definition of periodic advertising event operations ",
							" Macro Definition Macro Description BLE_GAP_PERIODIC_ADV_DATA_OP_INTERMEDIATE Intermediate fragment of fragmented periodic advertising data BLE_GAP_PERIODIC_ADV_DATA_OP_FIRST_FRAG First fragment of fragmented periodic advertising data BLE_GAP_PERIODIC_ADV_DATA_OP_LAST_FRAG Last fragment of fragmented periodic advertising data BLE_GAP_PERIODIC_ADV_DATA_OP_COMPLETE Complete periodic advertising data ",
							" Options for creating sync ",
							" C #define BLE_GAP_SYNC_CREATE_OPTION_USE_ADV_LIST (1 0) #define BLE_GAP_SYNC_CREATE_OPTION_REPORT_DISABLED (1 1) ",
							" Description The definition of creating sync options ",
							" Macro Definition Macro Description BLE_GAP_SYNC_CREATE_OPTION_USE_ADV_LIST Use the Periodic Advertiser List to determine which advertiser to listen to BLE_GAP_SYNC_CREATE_OPTION_REPORT_DISABLED Reporting initially disabled ",
							" Periodic advertising interval ",
							" C #define BLE_GAP_PERIODIC_ADV_INTERVAL_MIN 0x0006 #define BLE_GAP_PERIODIC_ADV_INTERVAL_MAX 0xFFFF ",
							" Description Range of LE periodic advertising interval (Unit: 1 25 ms) ",
							" Macro Definition Macro Description BLE_GAP_PERIODIC_ADV_INTERVAL_MIN Minimum LE periodic adv interval 7 5 ms BLE_GAP_PERIODIC_ADV_INTERVAL_MAX Maximum LE periodic adv interval 81 91875 sec ",
							" PHY option for transmit and receive ",
							" C #define BLE_GAP_PHY_OPTION_NO_PREF 0 #define BLE_GAP_PHY_OPTION_1M (1 0) #define BLE_GAP_PHY_OPTION_2M (1 1) #define BLE_GAP_PHY_OPTION_CODED (1 2) ",
							" Description The definition of PHY option for TX and RX ",
							" Macro Definition Macro Description BLE_GAP_PHY_OPTION_NO_PREF No preference BLE_GAP_PHY_OPTION_1M Prefers to use the LE 1M PHY (possibly among others) BLE_GAP_PHY_OPTION_2M Prefers to use the LE 2M PHY (possibly among others) BLE_GAP_PHY_OPTION_CODED Prefers to use the LE Coded PHY (possibly among others) ",
							" PHY setting for extended advertising report ",
							" C #define BLE_GAP_EXT_ADV_REPORT_PHY_NO 0x00 #define BLE_GAP_EXT_ADV_REPORT_PHY_1M 0x01 #define BLE_GAP_EXT_ADV_REPORT_PHY_2M 0x02 #define BLE_GAP_EXT_ADV_REPORT_PHY_CODED 0x03 ",
							" Description The definition of extended advertising report phy ",
							" Macro Definition Macro Description BLE_GAP_EXT_ADV_REPORT_PHY_NO No packets on the secondary advertising channel BLE_GAP_EXT_ADV_REPORT_PHY_1M Advertiser PHY is LE 1M BLE_GAP_EXT_ADV_REPORT_PHY_2M Advertiser PHY is LE 2M BLE_GAP_EXT_ADV_REPORT_PHY_CODED Advertiser PHY is LE Coded ",
							" PHY type ",
							" C #define BLE_GAP_PHY_TYPE_LE_1M 0x01 #define BLE_GAP_PHY_TYPE_LE_2M 0x02 #define BLE_GAP_PHY_TYPE_LE_CODED 0x03 ",
							" Description The definition of PHY type ",
							" Macro Definition Macro Description BLE_GAP_PHY_TYPE_LE_1M The connection is LE 1M PHY BLE_GAP_PHY_TYPE_LE_2M The connection is LE 2M PHY BLE_GAP_PHY_TYPE_LE_CODED The connection is LE Coded PHY ",
							" Preferred PHY preference ",
							" C #define BLE_GAP_PHY_PREF_NO 0 #define BLE_GAP_PHY_PREF_S2 1 #define BLE_GAP_PHY_PREF_S8 2 ",
							" Description The definition of PHY preference ",
							" Macro Definition Macro Description BLE_GAP_PHY_PREF_NO No preferred coding when transmitting on the LE Coded PHY BLE_GAP_PHY_PREF_S2 Prefers that S=2 coding be used when transmitting on the LE Coded PHY BLE_GAP_PHY_PREF_S8 Prefers that S=8 coding be used when transmitting on the LE Coded PHY ",
							" Privacy mode ",
							" C #define BLE_GAP_PRIVACY_MODE_NETWORK 0x00 #define BLE_GAP_PRIVACY_MODE_DEVICE 0x01 #define BLE_GAP_PRIVACY_MODE_OFF 0xFF ",
							" Description The definition of privacy mode ",
							" Macro Definition Macro Description BLE_GAP_PRIVACY_MODE_NETWORK Use Network Privacy Mode BLE_GAP_PRIVACY_MODE_DEVICE Use Device Privacy Mode BLE_GAP_PRIVACY_MODE_OFF Privacy Mode is disabled ",
							" Property of periodic advertising ",
							" C #define BLE_GAP_PERIODIC_ADV_PROP_TX_POWER (1 6) ",
							" Description The definition of periodic advertising properties ",
							" Macro Definition Macro Description BLE_GAP_PERIODIC_ADV_PROP_TX_POWER Include TxPower in the advertising PDU ",
							" Received data status ",
							" C #define BLE_GAP_DATA_STATUS_COMPLETE 0x00 #define BLE_GAP_DATA_STATUS_MORE_DATA 0x01 #define BLE_GAP_DATA_STATUS_DATA_TRUNCATED 0x02 ",
							" Description The definition of data status ",
							" Macro Definition Macro Description BLE_GAP_DATA_STATUS_COMPLETE Data complete BLE_GAP_DATA_STATUS_MORE_DATA Data incomplete more data to come BLE_GAP_DATA_STATUS_DATA_TRUNCATED Data incomplete data truncated no more to come ",
							" RPA timeout ",
							" C #define BLE_GAP_RPA_TIMEOUT_MIN 0x0001 #define BLE_GAP_RPA_TIMEOUT_MAX 0x0E10 ",
							" Description The definition of RPA timeout ",
							" Macro Definition Macro Description BLE_GAP_RPA_TIMEOUT_MIN Minimum RPA timeout BLE_GAP_RPA_TIMEOUT_MAX Maximum RPA timeout ",
							" Scan channel ",
							" C #define BLE_GAP_SCAN_CHANNEL_37 0x01 #define BLE_GAP_SCAN_CHANNEL_38 0x02 #define BLE_GAP_SCAN_CHANNEL_39 0x04 ",
							" Description The definition of channel map bit field for scan ",
							" Macro Definition Macro Description BLE_GAP_SCAN_CHANNEL_37 Channel 37 for scan BLE_GAP_SCAN_CHANNEL_38 Channel 38 for scan BLE_GAP_SCAN_CHANNEL_39 Channel 39 for scan ",
							" Scan filter duplicate option ",
							" C #define BLE_GAP_SCAN_FD_DISABLE 0x00 #define BLE_GAP_SCAN_FD_ENABLE 0x01 #define BLE_GAP_SCAN_FD_ENABLE_RESET 0x02 ",
							" Description The definition of filter duplicate setting for scanning ",
							" Macro Definition Macro Description BLE_GAP_SCAN_FD_DISABLE Duplicate filtering disabled BLE_GAP_SCAN_FD_ENABLE Duplicate filtering enabled BLE_GAP_SCAN_FD_ENABLE_RESET Duplicate filtering enabled Valid only for BLE_GAP_ExtScanningEnable_T ",
							" Scan filter length ",
							" C #define BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN 16 #define BLE_GAP_SCAN_MSD_MAX_LEN 16 #define BLE_GAP_SCAN_NAME_MAX_LEN 16 ",
							" Description The definition of maximum length of scan filter field ",
							" Macro Definition Macro Description BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN Maximum service data array size BLE_GAP_SCAN_MSD_MAX_LEN Maximum manufacturer specific data array size BLE_GAP_SCAN_NAME_MAX_LEN Maximum name filter array size ",
							" Scan filter policy ",
							" C #define BLE_GAP_SCAN_FP_ACCEPT_ALL 0x00 #define BLE_GAP_SCAN_FP_ACCEPT_LIST 0x01 #define BLE_GAP_SCAN_FP_NOT_RESOLVED_DIRECTED 0x02 #define BLE_GAP_SCAN_FP_ACCEPT_LIST_NOT_RESOLVED_DIRECTED 0x03 ",
							" Description The definition of scanning filter policy ",
							" Macro Definition Macro Description BLE_GAP_SCAN_FP_ACCEPT_ALL Default setting Accept all advertising except directed advertising packets not addressed to this device BLE_GAP_SCAN_FP_ACCEPT_LIST Accept only advertisement packets from devices in the filter accept list BLE_GAP_SCAN_FP_NOT_RESOLVED_DIRECTED Accept advertising packets like BLE_GAP_SCAN_FP_ACCEPT_ALL Directed advertising PDUs where the TargetA is a resolvable private address that cannot be resolved are also accepted Valid only for BLE_GAP_SetExtScanningParams  BLE_GAP_SCAN_FP_ACCEPT_LIST_NOT_RESOLVED_DIRECTED Accept advertising packets like BLE_GAP_SCAN_FP_ACCEPT_LIST Directed advertising PDUs where the TargetA is a resolvable private address that cannot be resolved are also accepted Valid only for BLE_GAP_SetExtScanningParams  ",
							" Scan interval ",
							" C #define BLE_GAP_SCAN_INTERVAL_MIN 0x0004 #define BLE_GAP_SCAN_INTERVAL_MAX 0x4000 ",
							" Description Range of LE scan interval (Unit: 0 625 ms) Default value is 0x10 ",
							" Macro Definition Macro Description BLE_GAP_SCAN_INTERVAL_MIN Minimum LE scan interval 2 5 ms BLE_GAP_SCAN_INTERVAL_MAX Maximum LE scan interval 10 24 sec ",
							" Scan modes ",
							" C #define BLE_GAP_SCAN_MODE_GENERAL_DISCOVERY 0x00 #define BLE_GAP_SCAN_MODE_LIMITED_DISCOVERY 0x01 #define BLE_GAP_SCAN_MODE_OBSERVER 0x02 ",
							" Description The definition of scanning mode ",
							" Macro Definition Macro Description BLE_GAP_SCAN_MODE_GENERAL_DISCOVERY Devices in general or limited advertising mode will be reported BLE_GAP_SCAN_MODE_LIMITED_DISCOVERY Only devices in limited advertising mode will be reported BLE_GAP_SCAN_MODE_OBSERVER No filter policy GAP will report all the advertisings ",
							" Scan type ",
							" C #define BLE_GAP_SCAN_TYPE_PASSIVE_SCAN 0x00 #define BLE_GAP_SCAN_TYPE_ACTIVE_SCAN 0x01 ",
							" Description The definition of scan types ",
							" Macro Definition Macro Description BLE_GAP_SCAN_TYPE_PASSIVE_SCAN Passive Scanning No SCAN_REQ packets shall be sent (default) BLE_GAP_SCAN_TYPE_ACTIVE_SCAN Active scanning SCAN_REQ packets may be sent ",
							" Scan window ",
							" C #define BLE_GAP_SCAN_WINDOW_MIN 0x0004 #define BLE_GAP_SCAN_WINDOW_MAX 0x4000 ",
							" Description Range of LE scan window (Unit: 0 625 ms) Default value is 0x10 ",
							" Macro Definition Macro Description BLE_GAP_SCAN_WINDOW_MIN Minimum LE scan window 2 5 ms BLE_GAP_SCAN_WINDOW_MAX Maximum LE scan window 10 24 sec ",
							" Status definitions ",
							" C #define GAP_STATUS_SUCCESS 0x00 #define GAP_STATUS_UNKNOWN_HCI_COMMAND 0x01 #define GAP_STATUS_UNKNOWN_CONNECTION_IDENTIFIER 0x02 #define GAP_STATUS_HARDWARE_FAILURE 0x03 #define GAP_STATUS_PAGE_TIMEOUT 0x04 #define GAP_STATUS_AUTHENTICATION_FAILURE 0x05 #define GAP_STATUS_PIN_KEY_MISSING 0x06 #define GAP_STATUS_MEMORY_CAPACITY_EXCEEDED 0x07 #define GAP_STATUS_CONNECTION_TIMEOUT 0x08 #define GAP_STATUS_CONNECTION_LIMIT_EXCEEDED 0x09 #define GAP_STATUS_SYNCHRONOUS_CONNECTION_LIMIT_EXCEEDED 0x0A #define GAP_STATUS_CONNECTION_ALREADY_EXISTS 0x0B #define GAP_STATUS_COMMAND_DISALLOWED 0x0C #define GAP_STATUS_REJECTED_DUE_TO_LIMITED_RESOURCES 0x0D #define GAP_STATUS_REJECTED_DUE_TO_SECURITY_REASONS 0x0E #define GAP_STATUS_REJECTED_DUE_TO_UNACCEPTABLE_BDADDR 0x0F #define GAP_STATUS_CONNECTION_ACCEPT_TIMEOUT 0x10 #define GAP_STATUS_UNSUPPORTED_FEATURE 0x11 #define GAP_STATUS_INVALID_HCI_COMMAND_PARAMETERS 0x12 #define GAP_STATUS_REMOTE_TERMINATE_CONNECTION 0x13 #define GAP_STATUS_REMOTE_TERMINATE_CONNECTION_LOW_RESOURCE 0x14 #define GAP_STATUS_REMOTE_TERMINATE_CONNECTION_POWEROFF 0x15 #define GAP_STATUS_LOCAL_HOST_TERMINATE_CONNECTION 0x16 #define GAP_STATUS_REPEATED_ATTEMPTS 0x17 #define GAP_STATUS_PAIRING_NOT_ALLOWED 0x18 #define GAP_STATUS_UNKNOWN_LMP_PDU 0x19 #define GAP_STATUS_UNSUPPORTED_REMOTE_FEATURE 0x1A #define GAP_STATUS_SCO_OFFSET_REJECT 0x1B #define GAP_STATUS_SCO_INTEVAL_REJECT 0x1C #define GAP_STATUS_SCO_AIR_MODE_REJECT 0x1D #define GAP_STATUS_INVALID_LMP_PARAMETERS 0x1E #define GAP_STATUS_UNSPECIFIED_ERROR 0x1F #define GAP_STATUS_UNSUPPORTED_LMP_PARAMETERS 0x20 #define GAP_STATUS_ROLE_CHANGE_NOT_ALLOW 0x21 #define GAP_STATUS_LMP_RESPONSE_TIMEOUT 0x22 #define GAP_STATUS_LMP_ERROR_TRANSACTION_COLLISION 0x23 #define GAP_STATUS_LMP_PDU_NOT_ALLOW 0x24 #define GAP_STATUS_ENCRYPTION_MODE_NOT_ACCEPTABLE 0x25 #define GAP_STATUS_LINK_KEY_CANNOT_BE_CHANGED 0x26 #define GAP_STATUS_REQUESTED_QOS_NOT_SUPPORT 0x27 #define GAP_STATUS_INSTANT_PASSED 0x28 #define GAP_STATUS_PAIRING_WITH_UNIT_KEY_NOT_SUPPORT 0x29 #define GAP_STATUS_DIFFERENT_TRANSACTION_COLLISION 0x2A #define GAP_STATUS_RESERVED_FOR_FUTURE_USE1 0x2B #define GAP_STATUS_QOS_UNACCEPTABLE_PARAMETER 0x2C #define GAP_STATUS_QOS_REJECTED 0x2D #define GAP_STATUS_CHANNEL_CLASSIFICATION_NOT_SUPPORT 0x2E #define GAP_STATUS_INSUFFICIENT_SECURITY 0x2F #define GAP_STATUS_PARAMETER_OUT_OF_MANDATORY_RANGE 0x30 #define GAP_STATUS_RESERVED_FOR_FUTURE_USE2 0x31 #define GAP_STATUS_ROLE_SWITCH_PENDING 0x32 #define GAP_STATUS_RESERVED_FOR_FUTURE_USE3 0x33 #define GAP_STATUS_RESERVED_SLOT_VIOLATION 0x34 #define GAP_STATUS_ROLE_SWITCH_FAILED 0x35 #define GAP_STATUS_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE 0x36 #define GAP_STATUS_SECURE_SIMPLE_PAIRING_NOT_SUPPORT 0x37 #define GAP_STATUS_HOST_BUSY_PAIRING 0x38 #define GAP_STATUS_CONNECTION_REJECT_NON_SUITABLE_CHANNEL 0x39 #define GAP_STATUS_CONTROLLER_BUSY 0x3A #define GAP_STATUS_UNACCEPTABLE_CONNECTION_PARAMETERS 0x3B #define GAP_STATUS_ADVERTISING_TIMEOUT 0x3C #define GAP_STATUS_CONNECTION_TERMINATE_MIC_FAILURE 0x3D #define GAP_STATUS_CONNECTION_FAILED_TO_BE_ESTABLISHED 0x3E #define GAP_STATUS_MAC_CONNECTION_FAILED 0x3F #define GAP_STATUS_COARSE_CLOCK_ADJUSTMENT_REJECTED 0x40 #define GAP_STATUS_TYPE0_SUBMAP_NOT_DEFINED 0x41 #define GAP_STATUS_UNKNOWN_ADVERTISING_IDENTIFIER 0x42 #define GAP_STATUS_LIMIT_REACHED 0x43 #define GAP_STATUS_OPERATION_CANCELLED_BY_HOST 0x44 ",
							" Description The definitions list the various possible status ",
							" Macro Definition Macro Description GAP_STATUS_SUCCESS Successful status GAP_STATUS_UNKNOWN_HCI_COMMAND Unknown HCI Command GAP_STATUS_UNKNOWN_CONNECTION_IDENTIFIER Unknown Connection Identifier GAP_STATUS_HARDWARE_FAILURE Hardware Failure GAP_STATUS_PAGE_TIMEOUT Page Timeout GAP_STATUS_AUTHENTICATION_FAILURE Authentication Failure GAP_STATUS_PIN_KEY_MISSING PIN or Key Missing GAP_STATUS_MEMORY_CAPACITY_EXCEEDED Memory Capacity Exceeded GAP_STATUS_CONNECTION_TIMEOUT Connection Timeout GAP_STATUS_CONNECTION_LIMIT_EXCEEDED Connection Limit Exceeded GAP_STATUS_SYNCHRONOUS_CONNECTION_LIMIT_EXCEEDED Synchronous Connection Limit To A Device Exceeded GAP_STATUS_CONNECTION_ALREADY_EXISTS Connection Already Exists GAP_STATUS_COMMAND_DISALLOWED Command Disallowed GAP_STATUS_REJECTED_DUE_TO_LIMITED_RESOURCES Connection Rejected due to Limited Resources GAP_STATUS_REJECTED_DUE_TO_SECURITY_REASONS Connection Rejected due To Security Reasons GAP_STATUS_REJECTED_DUE_TO_UNACCEPTABLE_BDADDR Connection Rejected due to Unacceptable BD_ADDR GAP_STATUS_CONNECTION_ACCEPT_TIMEOUT Connection Accept Timeout Exceeded GAP_STATUS_UNSUPPORTED_FEATURE Unsupported Feature or Parameter Value GAP_STATUS_INVALID_HCI_COMMAND_PARAMETERS Invalid HCI Command Parameters GAP_STATUS_REMOTE_TERMINATE_CONNECTION Remote User Terminated Connection GAP_STATUS_REMOTE_TERMINATE_CONNECTION_LOW_RESOURCE Remote Device Terminated Connection due to Low Resources GAP_STATUS_REMOTE_TERMINATE_CONNECTION_POWEROFF Remote Device Terminated Connection due to Power Off GAP_STATUS_LOCAL_HOST_TERMINATE_CONNECTION Connection Terminated By Local Host GAP_STATUS_REPEATED_ATTEMPTS Repeated Attempts GAP_STATUS_PAIRING_NOT_ALLOWED Pairing Not Allowed GAP_STATUS_UNKNOWN_LMP_PDU Unknown LMP PDU GAP_STATUS_UNSUPPORTED_REMOTE_FEATURE Unsupported Remote Feature / Unsupported LMP Feature GAP_STATUS_SCO_OFFSET_REJECT SCO Offset Rejected GAP_STATUS_SCO_INTEVAL_REJECT SCO Interval Rejected GAP_STATUS_SCO_AIR_MODE_REJECT SCO Air Mode Rejected GAP_STATUS_INVALID_LMP_PARAMETERS Invalid LMP Parameters / Invalid LL Parameters GAP_STATUS_UNSPECIFIED_ERROR Unspecified Error GAP_STATUS_UNSUPPORTED_LMP_PARAMETERS Unsupported LMP Parameter Value / Unsupported LL Parameter Value GAP_STATUS_ROLE_CHANGE_NOT_ALLOW Role Change Not Allowed GAP_STATUS_LMP_RESPONSE_TIMEOUT LMP Response Timeout / LL Response Timeout GAP_STATUS_LMP_ERROR_TRANSACTION_COLLISION LMP Error Transaction Collision / LL Procedure Collision GAP_STATUS_LMP_PDU_NOT_ALLOW LMP PDU Not Allowed GAP_STATUS_ENCRYPTION_MODE_NOT_ACCEPTABLE Encryption Mode Not Acceptable GAP_STATUS_LINK_KEY_CANNOT_BE_CHANGED Link Key cannot be Changed GAP_STATUS_REQUESTED_QOS_NOT_SUPPORT Requested QoS Not Supported GAP_STATUS_INSTANT_PASSED Instant Passed GAP_STATUS_PAIRING_WITH_UNIT_KEY_NOT_SUPPORT Pairing With Unit Key Not Supported GAP_STATUS_DIFFERENT_TRANSACTION_COLLISION Different Transaction Collision GAP_STATUS_RESERVED_FOR_FUTURE_USE1 Reserved for Future Use GAP_STATUS_QOS_UNACCEPTABLE_PARAMETER QoS Unacceptable Parameter GAP_STATUS_QOS_REJECTED QoS Rejected GAP_STATUS_CHANNEL_CLASSIFICATION_NOT_SUPPORT Channel Classification Not Supported GAP_STATUS_INSUFFICIENT_SECURITY Insufficient Security GAP_STATUS_PARAMETER_OUT_OF_MANDATORY_RANGE Parameter Out Of Mandatory Range GAP_STATUS_RESERVED_FOR_FUTURE_USE2 Reserved for Future Use GAP_STATUS_ROLE_SWITCH_PENDING Role Switch Pending GAP_STATUS_RESERVED_FOR_FUTURE_USE3 Reserved for Future Use GAP_STATUS_RESERVED_SLOT_VIOLATION Reserved Slot Violation GAP_STATUS_ROLE_SWITCH_FAILED Role Switch Failed GAP_STATUS_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE Extended Inquiry Response Too Large GAP_STATUS_SECURE_SIMPLE_PAIRING_NOT_SUPPORT Secure Simple Pairing Not Supported By Host GAP_STATUS_HOST_BUSY_PAIRING Host Busy - Pairing GAP_STATUS_CONNECTION_REJECT_NON_SUITABLE_CHANNEL Connection Rejected due to No Suitable Channel Found GAP_STATUS_CONTROLLER_BUSY Controller Busy GAP_STATUS_UNACCEPTABLE_CONNECTION_PARAMETERS Unacceptable Connection Parameters GAP_STATUS_ADVERTISING_TIMEOUT Advertising Timeout GAP_STATUS_CONNECTION_TERMINATE_MIC_FAILURE Connection Terminated due to MIC Failure GAP_STATUS_CONNECTION_FAILED_TO_BE_ESTABLISHED Connection Failed to be Established GAP_STATUS_MAC_CONNECTION_FAILED MAC Connection Failed GAP_STATUS_COARSE_CLOCK_ADJUSTMENT_REJECTED Coarse Clock Adjustment Rejected but Will Try to Adjust Using Clock Dragging GAP_STATUS_TYPE0_SUBMAP_NOT_DEFINED Type0 Submap Not Defined GAP_STATUS_UNKNOWN_ADVERTISING_IDENTIFIER Unknown Advertising Identifier GAP_STATUS_LIMIT_REACHED Limit Reached GAP_STATUS_OPERATION_CANCELLED_BY_HOST Operation Cancelled by Host ",
							" Synchronization timeout ",
							" C #define BLE_GAP_SYNC_TIMEOUT_MIN 0x000A #define BLE_GAP_SYNC_TIMEOUT_MAX 0x4000 ",
							" Description Synchronization timeout for the periodic advertising train ",
							" Macro Definition Macro Description BLE_GAP_SYNC_TIMEOUT_MIN The minimum synchronization timeout value BLE_GAP_SYNC_TIMEOUT_MAX The maximum synchronization timeout value ",
							" The accuracy of the periodic advertiser's clock ",
							" C #define BLE_GAP_PERIODIC_ACA_500_PPM 0x00 #define BLE_GAP_PERIODIC_ACA_250_PPM 0x01 #define BLE_GAP_PERIODIC_ACA_150_PPM 0x02 #define BLE_GAP_PERIODIC_ACA_100_PPM 0x03 #define BLE_GAP_PERIODIC_ACA_75_PPM 0x04 #define BLE_GAP_PERIODIC_ACA_50_PPM 0x05 #define BLE_GAP_PERIODIC_ACA_30_PPM 0x06 #define BLE_GAP_PERIODIC_ACA_20_PPM 0x07 ",
							" Description The definition of periodic advertising advertiser clock accuracy ",
							" Macro Definition Macro Description BLE_GAP_PERIODIC_ACA_500_PPM 500 ppm BLE_GAP_PERIODIC_ACA_250_PPM 250 ppm BLE_GAP_PERIODIC_ACA_150_PPM 150 ppm BLE_GAP_PERIODIC_ACA_100_PPM 100 ppm BLE_GAP_PERIODIC_ACA_75_PPM 750 ppm BLE_GAP_PERIODIC_ACA_50_PPM 50 ppm BLE_GAP_PERIODIC_ACA_30_PPM 30 ppm BLE_GAP_PERIODIC_ACA_20_PPM 20 ppm ",
							" Transmitter PHY type ",
							" C #define BLE_GAP_TRANSMITTER_LE_1M_PHY 0x01 #define BLE_GAP_TRANSMITTER_LE_2M_PHY 0x02 #define BLE_GAP_TRANSMITTER_LE_CODED_PHY_S_8 0x03 #define BLE_GAP_TRANSMITTER_LE_CODED_PHY_S_2 0x04 ",
							" Description The definition of transmitter test packet PHY type ",
							" Macro Definition Macro Description BLE_GAP_TRANSMITTER_LE_1M_PHY Transmitter set to use the LE 1M PHY BLE_GAP_TRANSMITTER_LE_2M_PHY Transmitter set to use the LE 2M PHY BLE_GAP_TRANSMITTER_LE_CODED_PHY_S_8 Transmitter set to use the LE Coded PHY with S=8 data coding BLE_GAP_TRANSMITTER_LE_CODED_PHY_S_2 Transmitter set to use the LE Coded PHY with S=2 data coding ",
							" Type of constant tone extension ",
							" C #define BLE_GAP_CTE_TYPE_AOA 0x00 #define BLE_GAP_CTE_TYPE_AOD_WITH_1US 0x01 #define BLE_GAP_CTE_TYPE_AOD_WITH_2US 0x02 #define BLE_GAP_CTE_TYPE_NO 0x03 ",
							" Description The definition of CTE type ",
							" Macro Definition Macro Description BLE_GAP_CTE_TYPE_AOA AoA Constant Tone Extension BLE_GAP_CTE_TYPE_AOD_WITH_1US AoD Constant Tone Extension with 1 us slots BLE_GAP_CTE_TYPE_AOD_WITH_2US AoD Constant Tone Extension with 2 us slots BLE_GAP_CTE_TYPE_NO No Constant Tone Extension ",
							" TX power change reason ",
							" C #define BLE_GAP_LOCAL_TX_POWER_CHANGED 0 #define BLE_GAP_REMOTE_TX_POWER_CHANGED 1 #define BLE_GAP_READ_REMOTE_POWER_COMPLETED 2 ",
							" Description The definition of disconnection reason ",
							" Macro Definition Macro Description BLE_GAP_LOCAL_TX_POWER_CHANGED Local Transmit Power Changed BLE_GAP_REMOTE_TX_POWER_CHANGED Remote Transmit Power Changed BLE_GAP_READ_REMOTE_POWER_COMPLETED Execute BLE_GAP_ReadRemoteTxPowerLevel complete ",
							" Enums ",
							" BLE_GAP_EventId_T ",
							" C typedef enum BLE_GAP_EventId_T { BLE_GAP_EVT_CONNECTED BLE_GAP_EVT_DISCONNECTED BLE_GAP_EVT_CONN_PARAM_UPDATE BLE_GAP_EVT_ENCRYPT_STATUS BLE_GAP_EVT_ADV_REPORT BLE_GAP_EVT_ENC_INFO_REQUEST BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST BLE_GAP_EVT_EXT_ADV_REPORT BLE_GAP_EVT_ADV_TIMEOUT BLE_GAP_EVT_TX_BUF_AVAILABLE BLE_GAP_EVT_DEVICE_NAME_CHANGED BLE_GAP_EVT_AUTH_PAYLOAD_TIMEOUT BLE_GAP_EVT_PHY_UPDATE BLE_GAP_EVT_SCAN_REQ_RECEIVED BLE_GAP_EVT_DIRECT_ADV_REPORT BLE_GAP_EVT_PERI_ADV_SYNC_EST BLE_GAP_EVT_PERI_ADV_REPORT BLE_GAP_EVT_PERI_ADV_SYNC_LOST BLE_GAP_EVT_ADV_SET_TERMINATED BLE_GAP_EVT_SCAN_TIMEOUT BLE_GAP_EVT_TRANSMIT_POWER_REPORTING BLE_GAP_EVT_ADV_COMPL }BLE_GAP_EventId_T; ",
							" Description GAP events delivered to application from BLE Stack Enumerator Description BLE_GAP_EVT_CONNECTED BLE link is established See BLE_GAP_EvtConnect_T for the event details BLE_GAP_EVT_DISCONNECTED BLE link is terminated See BLE_GAP_EvtDisconnect_T for the event details BLE_GAP_EVT_CONN_PARAM_UPDATE The connection parameters of BLE link are updated See BLE_GAP_EvtConnParamUpdateParams_T for the event details BLE_GAP_EVT_ENCRYPT_STATUS The encryption status of BLE link See BLE_GAP_EvtEncryptStatus_T for the event content BLE_GAP_EVT_ADV_REPORT Received advertising report See BLE_GAP_EvtAdvReport_T for the event details BLE_GAP_EVT_ENC_INFO_REQUEST See BLE_GAP_EvtEncInfoRequest_T for the event content BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST If remote device supports Link Layer Connection Parameters Request procedure this request will receive when remote device wants to change the connection parameters See BLE_GAP_EvtRemoteConnParamRequest_T for the event content BLE_GAP_EVT_EXT_ADV_REPORT Received extended advertising report See BLE_GAP_EvtExtAdvReport_T for the event details BLE_GAP_EVT_ADV_TIMEOUT Advertising terminated because timeout BLE_GAP_EVT_TX_BUF_AVAILABLE Notify the ACL tx buffer is available See BLE_GAP_EvtTxBufAvailable_T  BLE_GAP_EVT_DEVICE_NAME_CHANGED The device name was changed by remote device via Generic Assess service BLE_GAP_EvtDeviceNameChanged_T for the event content BLE_GAP_EVT_AUTH_PAYLOAD_TIMEOUT Authenticated payload timeout BLE_GAP_EvtAuthPayloadTimeout_T for the event content BLE_GAP_EVT_PHY_UPDATE PHY update BLE_GAP_EvtPhyUpdate_T for the event content BLE_GAP_EVT_SCAN_REQ_RECEIVED Received scan request BLE_GAP_EvtScanReqReceived_T for the event content BLE_GAP_EVT_DIRECT_ADV_REPORT Received direct advertising report BLE_GAP_EvtDirectAdvReport_T for the event content BLE_GAP_EVT_PERI_ADV_SYNC_EST Periodic advertising sync established BLE_GAP_EvtPeriAdvSyncEst_T for the event content BLE_GAP_EVT_PERI_ADV_REPORT Received periodic advertising report BLE_GAP_EvtPeriAdvReport_T for the event content BLE_GAP_EVT_PERI_ADV_SYNC_LOST Periodic advertising sync lost BLE_GAP_EvtPeriAdvSyncLost_T for the event content BLE_GAP_EVT_ADV_SET_TERMINATED Advertising set terminated BLE_GAP_EvtAdvSetTerminated_T for the event content BLE_GAP_EVT_SCAN_TIMEOUT Scan terminated because timeout BLE_GAP_EVT_TRANSMIT_POWER_REPORTING Report tx power level on the ACL connection identified by the Connection_Handle BLE_GAP_EvtTxPowerReporting_T for the event content BLE_GAP_EVT_ADV_COMPL Enable one time advertising is completed See BLE_GAP_EvtAdvCompl_T for the event content ",
							" Structures ",
							" BLE_GAP_Addr_T ",
							" C typedef struct BLE_GAP_Addr_T { uint8_t addrType; uint8_t addr[GAP_MAX_BD_ADDRESS_LEN]; } BLE_GAP_Addr_T; ",
							" Description Bluetooth address ",
							" Field Documentation Field Description addrType See Addr type  addr Bluetooth address LSB format ",
							" BLE_GAP_AdvDataParams_T ",
							" C typedef struct BLE_GAP_AdvDataParams_T { uint8_t advLen; uint8_t advData[BLE_GAP_ADV_MAX_LENGTH]; } BLE_GAP_AdvDataParams_T; ",
							" Description Advertising data ",
							" Field Documentation Field Description advLen Length of advertising data see Maximum advertising data length for the maximum length advData Advertising data ",
							" BLE_GAP_AdvParams_T ",
							" C typedef struct BLE_GAP_AdvParams_T { uint16_t intervalMin; uint16_t intervalMax; uint8_t type; BLE_GAP_Addr_T peerAddr; uint8_t advChannelMap; uint8_t filterPolicy; } BLE_GAP_AdvParams_T; ",
							" Description Advertising parameters ",
							" Field Documentation Field Description intervalMin Minimum advertising interval see Advertising interval (Unit: 0 625ms) intervalMax Maximum advertising interval see Advertising interval (Unit: 0 625ms) type Advertising type see Address type  peerAddr Remote bluetooth address and address type see BLE_GAP_Addr_T  advChannelMap Advertising Channel Map See Advertising channel filterPolicy Advertising filter policy See Advertising filter policy ",
							" BLE_GAP_CharAppearance_T ",
							" C typedef struct BLE_GAP_CharAppearance_T { uint16_t appearance; } BLE_GAP_CharAppearance_T; ",
							" Description Appearance characteristic ",
							" Field Documentation Field Description appearance The enumerated value as defined by Bluetooth Assigned Numbers document for Appearance characteristic Appearance definition ",
							" BLE_GAP_CharDeviceName_T ",
							" C typedef struct BLE_GAP_CharDeviceName_T { bool enableWriteProperty; } BLE_GAP_CharDeviceName_T; ",
							" Description Device name characteristic ",
							" Field Documentation Field Description enableWriteProperty Set true to enable write property ",
							" BLE_GAP_CharPeriPreferConnParams_T ",
							" C typedef struct BLE_GAP_CharPeriPreferConnParams_T { bool enable; uint16_t minConnInterval; uint16_t maxConnInterval; uint16_t peripheralLatency; uint16_t connSupervisionTimeoutMulti; } BLE_GAP_CharPeriPreferConnParams_T; ",
							" Description Peripheral prefered connection parameter characteristic ",
							" Field Documentation Field Description enable If ture to enable the characteristic of \"Peripheral Preferred Connection Parameters\" Otherwise disable it minConnInterval Defines minimum value for the connection interval See Connection parameters range  maxConnInterval Defines maximum value for the connection interval See Connection parameters range  peripheralLatency Defines the peripheral latency for the connection See Connection parameters range  connSupervisionTimeoutMulti Defines the connection supervisor timeout multiplier as a multiple of 10ms ",
							" BLE_GAP_ConnParams_T ",
							" C typedef struct BLE_GAP_ConnParams_T { uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t supervisionTimeout; } BLE_GAP_ConnParams_T; ",
							" Description Connection parameters ",
							" Field Documentation Field Description intervalMin Define minimum allowed connection interval The value shall not be greater than maximum allowed connection interval See Connection parameters range  intervalMax Define maximum allowed connection interval See Connection parameters range  latency Peripheral latency for the connection in terms of number of connection events see Connection parameters range  supervisionTimeout Supervision timeout of the connection The timeout in milliseconds shall be larger than (1 + latency) * intervalMax * 2 where intervalMax is given in milliseconds See Connection parameters range  ",
							" BLE_GAP_CreateConnParams_T ",
							" C typedef struct BLE_GAP_CreateConnParams_T { uint16_t scanInterval; uint16_t scanWindow; uint8_t filterPolicy; BLE_GAP_Addr_T peerAddr; BLE_GAP_ConnParams_T connParams; } BLE_GAP_CreateConnParams_T; ",
							" Description Create connection parameters ",
							" Field Documentation Field Description scanInterval Recommended scan interval setting See Scan interval  scanWindow Recommended scan window setting It shall be set to a value smaller or equal to the value set for the scanInterval See Scan windown  filterPolicy Initiator filter policy It is used to determine whether the Filter Accept List is used If the Filter Accept List is not used the peerAddr argument specify the address type and address of the advertising device to connect to See Initiator filter policy  peerAddr The address of peer connectable device see BLE_GAP_Addr_T It is invalid once filterPolicy is enable connParams GAP connection parameters See BLE_GAP_ConnParams_T  ",
							" BLE_GAP_CreateSync_T ",
							" C typedef struct BLE_GAP_CreateSync_T { uint8_t options; uint8_t advSid; BLE_GAP_Addr_T advAddr; uint16_t skip; uint16_t syncTimeout; }BLE_GAP_CreateSync_T; ",
							" Description Create sync parameters ",
							" Field Documentation Field Description options Determine whether the Periodic Advertiser List is used and whether the reporting are initially enabled or disabled See Options for creating sync  advSid Advertising SID It used to identify the Periodic Advertising See Advertising SID range  advAddr Public or random (static) identity address skip The maximum number of periodic advertising events that can be skipped after a successful receive (Valid value: 0x0000 to 0x01F3) See Maximum number of skipped periodic advertising event syncTimeout Synchronization timeout for the periodic advertising train (Unit: 10 ms) See Synchronization timeout The timeout value should be greater than or equal to (2+skip)*(interval of period advertising) ",
							" BLE_GAP_Event_T ",
							" C typedef struct BLE_GAP_Event_T { BLE_GAP_EventId_T eventId; BLE_GAP_EventField_T eventField; } BLE_GAP_Event_T; ",
							" Description BLE GAP callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_GAP_EventField_T ",
							" C typedef union { BLE_GAP_EvtConnect_T evtConnect; BLE_GAP_EvtDisconnect_T evtDisconnect; BLE_GAP_EvtConnParamUpdateParams_T evtConnParamUpdate; BLE_GAP_EvtEncryptStatus_T evtEncryptStatus; BLE_GAP_EvtAdvReport_T evtAdvReport; BLE_GAP_EvtEncInfoRequest_T evtEncInfoReq; BLE_GAP_EvtRemoteConnParamRequest_T evtRemoteConnParamReq; BLE_GAP_EvtExtAdvReport_T evtExtAdvReport; BLE_GAP_EvtTxBufAvailable_T evtTxBufAvailable; BLE_GAP_EvtDeviceNameChanged_T evtDevNameChanged; BLE_GAP_EvtAuthPayloadTimeout_T evtAuthPayloadTimeout; BLE_GAP_EvtPhyUpdate_T evtPhyUpdate; BLE_GAP_EvtScanReqReceived_T evtScanReqReceived; BLE_GAP_EvtDirectAdvReport_T evtDirectAdvReport; BLE_GAP_EvtPeriAdvSyncEst_T evtPeriAdvSyncEst; BLE_GAP_EvtPeriAdvReport_T evtPeriAdvReport; BLE_GAP_EvtPeriAdvSyncLost_T evtPeriAdvSyncLost; BLE_GAP_EvtAdvSetTerminated_T evtAdvSetTerminated; BLE_GAP_EvtTxPowerReporting_T evtTxPowerReporting; BLE_GAP_EvtAdvCompl_T evtAdvCompl; } BLE_GAP_EventField_T; ",
							" Description Union of BLE GAP callback event data types ",
							" Field Documentation Field Description evtConnect Handle BLE_GAP_EVT_CONNECTED evtDisconnect Handle BLE_GAP_EVT_DISCONNECTED evtConnParamUpdate Handle BLE_GAP_EVT_CONN_PARAM_UPDATE evtEncryptStatus Handle BLE_GAP_EVT_ENCRYPT_STATUS evtAdvReport Handle BLE_GAP_EVT_ADV_REPORT evtEncInfoReq Handle BLE_GAP_EVT_ENC_INFO_REQUEST  evtRemoteConnParamReq Handle BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST  evtExtAdvReport Handle BLE_GAP_EVT_EXT_ADV_REPORT evtTxBufAvailable Handle BLE_GAP_EVT_TX_BUF_AVAILABLE  evtDevNameChanged Handle BLE_GAP_EVT_DEVICE_NAME_CHANGED evtAuthPayloadTimeout Handle BLE_GAP_EVT_AUTH_PAYLOAD_TIMEOUT evtPhyUpdate Handle BLE_GAP_EVT_PHY_UPDATE evtScanReqReceived Handle BLE_GAP_EVT_SCAN_REQ_RECEIVED evtDirectAdvReport Handle BLE_GAP_EVT_DIRECT_ADV_REPORT evtPeriAdvSyncEst Handle BLE_GAP_EVT_PERI_ADV_SYNC_EST evtPeriAdvReport Handle BLE_GAP_EVT_PERI_ADV_REPORT evtPeriAdvSyncLost Handle BLE_GAP_EVT_PERI_ADV_SYNC_LOST evtAdvSetTerminated Handle BLE_GAP_EVT_ADV_SET_TERMINATED evtTxPowerReporting Handle BLE_GAP_EVT_TRANSMIT_POWER_REPORTING evtAdvCompl Handle BLE_GAP_EVT_ADV_COMPL ",
							" BLE_GAP_EvtAdvCompl_T ",
							" C typedef struct BLE_GAP_EvtAdvCompl_T { uint8_t status; }BLE_GAP_EvtAdvCompl_T; ",
							" Description Data structure for BLE_GAP_EVT_ADV_COMPL event ",
							" Field Documentation Field Description status Status of Deep Sleep Advertising See Status definitions ",
							" BLE_GAP_EvtAdvReport_T ",
							" C typedef struct BLE_GAP_EvtAdvReport_T { uint8_t eventType; BLE_GAP_Addr_T addr; uint8_t length; uint8_t advData[BLE_GAP_ADV_MAX_LENGTH]; int8_t rssi; } BLE_GAP_EvtAdvReport_T; ",
							" Description Data structure for BLE_GAP_EVT_ADV_REPORT event ",
							" Field Documentation Field Description eventType Event type See Event type of advertising report  addr Address type See Address type  length Length of advertising data advData Advertising data rssi RSSI value ",
							" BLE_GAP_EvtAdvSetTerminated_T ",
							" C typedef struct BLE_GAP_EvtAdvSetTerminated_T { uint8_t status; uint8_t advHandle; uint16_t connHandle; uint8_t numComplExtAdvEvents; }BLE_GAP_EvtAdvSetTerminated_T; ",
							" Description Data structure for BLE_GAP_EVT_ADV_SET_TERMINATED event ",
							" Field Documentation Field Description status Status of adv set terminated See Status definitions advHandle Advertising handle in which advertising has ended connHandle Connection handle of the connection whose creation ended the advertising numComplExtAdvEvents Number of completed extended advertising events transmitted ",
							" BLE_GAP_EvtAuthPayloadTimeout_T ",
							" C typedef struct BLE_GAP_EvtAuthPayloadTimeout_T { uint16_t connHandle; } BLE_GAP_EvtAuthPayloadTimeout_T; ",
							" Description Data structure for BLE_GAP_EVT_AUTH_PAYLOAD_TIMEOUT event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_GAP_EvtConnect_T ",
							" C typedef struct BLE_GAP_EvtConnect_T { uint8_t status; uint16_t connHandle; uint8_t role; BLE_GAP_Addr_T remoteAddr; uint8_t localRpaAddr[GAP_MAX_BD_ADDRESS_LEN]; uint8_t remoteRpaAddr[GAP_MAX_BD_ADDRESS_LEN]; uint16_t interval; uint16_t latency; uint16_t supervisionTimeout; } BLE_GAP_EvtConnect_T; ",
							" Description Data structure for BLE_GAP_EVT_CONNECTED event ",
							" Field Documentation Field Description status Status of this connection connHandle Connection handle associated with this connection role GAP role See Connection role  remoteAddr Remote bluetooth address See BLE_GAP_Addr_T  localRpaAddr Resolvable private address being used by the local device for this connection This is only valid if local privacy enable otherwise all zeros remoteRpaAddr Resolvable private address being used by the peer device for this connection This is only valid if peer address is resolved by resolving list successfully otherwise all zeros interval Connection interval used on this connection Range should be Connection parameters range  latency Peripheral latency for the connection in terms of number of connection events see Connection parameters range  supervisionTimeout Supervision timeout for the LE Link See Connection parameters range  ",
							" BLE_GAP_EvtConnParamUpdateParams_T ",
							" C typedef struct BLE_GAP_EvtConnParamUpdateParams_T { uint16_t connHandle; uint8_t status; BLE_GAP_ConnParams_T connParam; } BLE_GAP_EvtConnParamUpdateParams_T; ",
							" Description Data structure for BLE_GAP_EVT_CONN_PARAM_UPDATE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Status of connection parameter update 0: Connection parameters update is successful Others: Update failed connParam Connection parameters See BLE_GAP_ConnParams_T  ",
							" BLE_GAP_EvtDeviceNameChanged_T ",
							" C typedef struct BLE_GAP_EvtDeviceNameChanged_T { uint8_t length; uint8_t devName[GAP_MAX_DEVICE_NAME_LEN]; } BLE_GAP_EvtDeviceNameChanged_T; ",
							" Description Data structure for BLE_GAP_EVT_DEVICE_NAME_CHANGED event ",
							" Field Documentation Field Description length The length of device name devName Device Name ",
							" BLE_GAP_EvtDirectAdvReport_T ",
							" C typedef struct BLE_GAP_EvtDirectAdvReport_T { uint8_t numReports; uint8_t eventType; BLE_GAP_Addr_T addr; BLE_GAP_Addr_T directAddr; int8_t rssi; }BLE_GAP_EvtDirectAdvReport_T; ",
							" Description Data structure for BLE_GAP_EVT_DIRECT_ADV_REPORT event ",
							" Field Documentation Field Description numReports Number of advertising reports eventType Even type See Event type of advertising report It should be BLE_GAP_ADV_REPORT_EVT_TYPE_ADV_DIRECT_IND addr Identity Address of the advertising device directAddr Random Device Address rssi RSSI ",
							" BLE_GAP_EvtDisconnect_T ",
							" C typedef struct BLE_GAP_EvtDisconnect_T { uint16_t connHandle; uint8_t reason; } BLE_GAP_EvtDisconnect_T; ",
							" Description Data structure for BLE_GAP_EVT_DISCONNECTED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection reason The reason for disconnection See Disconnect reason  ",
							" BLE_GAP_EvtEncInfoRequest_T ",
							" C typedef struct BLE_GAP_EvtEncInfoRequest_T { uint16_t connHandle; } BLE_GAP_EvtEncInfoRequest_T; ",
							" Description Data structure for BLE_GAP_EVT_ENC_INFO_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_GAP_EvtEncryptStatus_T ",
							" C typedef struct BLE_GAP_EvtEncryptStatus_T { uint16_t connHandle; uint8_t status; } BLE_GAP_EvtEncryptStatus_T; ",
							" Description Data structure for BLE_GAP_EVT_ENCRYPT_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Encryption status See Encryption status for possible values ",
							" BLE_GAP_EvtExtAdvReport_T ",
							" C typedef struct BLE_GAP_EvtExtAdvReport_T { uint8_t eventType; uint8_t dataStatus; BLE_GAP_Addr_T addr; uint8_t priPhy; uint8_t secPhy; uint8_t sid; int8_t txPower; int8_t rssi; uint16_t periodAdvInterval; BLE_GAP_Addr_T directAddr; uint8_t length; uint8_t advData[BLE_GAP_EXT_ADV_FRAGMENT_MAX_LENGTH]; } BLE_GAP_EvtExtAdvReport_T; ",
							" Description Data structure for BLE_GAP_EVT_ADV_REPORT event ",
							" Field Documentation Field Description eventType Event type See Event type for extended advertising report  dataStatus Data status See Data status for extended advertising report  addr Address type See Address type  priPhy Primary PHY See  secPhy Secondary PHY See PHY setting for extended advertising report  sid Advertising SID 0x00 ~ 0x0F: Value of the Advertising SID subfield in the ADI field of the PDU 0xFF: No ADI field in the PDU txPower Tx power unit: dBm rssi RSSI value periodAdvInterval Interval of the periodic advertising Unit: 1 25 ms directAddr Directed address type See Address type  length Length of advertising data advData Fragmented advertising data ",
							" BLE_GAP_EvtPeriAdvReport_T ",
							" C typedef struct BLE_GAP_EvtPeriAdvReport_T { uint16_t syncHandle; uint8_t txPwr; int8_t rssi; uint8_t cteType; uint8_t dataStatus; uint8_t dataLength; uint8_t advData[BLE_GAP_PERIODIC_ADV_FRAGMENT_MAX_LENGTH]; }BLE_GAP_EvtPeriAdvReport_T; ",
							" Description Data structure for BLE_GAP_EVT_PERI_ADV_REPORT event ",
							" Field Documentation Field Description syncHandle Sync handle txPwr Tx power (Unit: dBm) rssi RSSI (Unit: dBm) cteType CTE type See Type of constant tone extension  dataStatus Data status See Received data status  dataLength Data length advData Advertising data ",
							" BLE_GAP_EvtPeriAdvSyncEst_T ",
							" C typedef struct BLE_GAP_EvtPeriAdvSyncEst_T { uint8_t status; uint16_t syncHandle; uint8_t advSid; BLE_GAP_Addr_T advAddr; uint8_t advPhy; uint16_t periAdvInterval; uint8_t advClkAccuracy; }BLE_GAP_EvtPeriAdvSyncEst_T; ",
							" Description Data structure for BLE_GAP_EVT_PERI_ADV_SYNC_EST event ",
							" Field Documentation Field Description status Status syncHandle Sync handle advSid Advertising SID advAddr Advertising address advPhy Advertising PHY See PHY type  periAdvInterval Periodic advertising interval (Unit: 1 25ms) advClkAccuracy Advertiser clock accuracy See The accuracy of the periodic advertiser's clock ",
							" BLE_GAP_EvtPeriAdvSyncLost_T ",
							" C typedef struct BLE_GAP_EvtPeriAdvSyncLost_T { uint16_t syncHandle; }BLE_GAP_EvtPeriAdvSyncLost_T; ",
							" Description Data structure for BLE_GAP_EVT_PERI_ADV_SYNC_LOST event ",
							" Field Documentation Field Description syncHandle Sync handle ",
							" BLE_GAP_EvtPhyUpdate_T ",
							" C typedef struct BLE_GAP_EvtPhyUpdate_T { uint16_t connHandle; uint8_t status; uint8_t txPhy; uint8_t rxPhy; }BLE_GAP_EvtPhyUpdate_T; ",
							" Description Data structure for BLE_GAP_EVT_PHY_UPDATE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Status of phy update txPhy TX PHY See PHY type  rxPhy RX PHY See PHY type  ",
							" BLE_GAP_EvtRemoteConnParamRequest_T ",
							" C typedef struct BLE_GAP_EvtRemoteConnParamRequest_T { uint16_t connHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_GAP_EvtRemoteConnParamRequest_T; ",
							" Description Data structure for BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection intervalMin Minimum value of the connection interval requested by the remote device intervalMax Maximum value of the connection interval requested by the remote device latency Latency timeout Supervision timeout ",
							" BLE_GAP_EvtScanReqReceived_T ",
							" C typedef struct BLE_GAP_EvtScanReqReceived_T { uint8_t advHandle; BLE_GAP_Addr_T scannerAddr; }BLE_GAP_EvtScanReqReceived_T; ",
							" Description Data structure for BLE_GAP_EVT_SCAN_REQ_RECEIVED event ",
							" Field Documentation Field Description advHandle Advertising handle scannerAddr Scanner address ",
							" BLE_GAP_EvtTxBufAvailable_T ",
							" C typedef struct BLE_GAP_EvtTxBufAvailable_T { uint16_t connHandle; } BLE_GAP_EvtTxBufAvailable_T; ",
							" Description Data structure for BLE_GAP_EVT_TX_BUF_AVAILABLE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_GAP_EvtTxPowerReporting_T ",
							" C typedef struct BLE_GAP_EvtTxPowerReporting_T { uint8_t status; uint16_t connHandle; uint8_t reason; uint8_t phy; int8_t txPowerLevel; uint8_t txPowerLevelFlag; int8_t delta; }BLE_GAP_EvtTxPowerReporting_T; ",
							" Description Data structure for BLE_GAP_EVT_TRANSMIT_POWER_REPORTING event ",
							" Field Documentation Field Description status Status of tx power reporting See Status definitions connHandle Connection handle of the connection whose creation ended the advertising reason The reason for changed see TX power change reason  phy PHY type See Transmitter PHY type  txPowerLevel Indicate the transmit power level for the PHY txPowerLevelFlag Indicate if transmit power level reach its min/max level delta Change in power level for transmitter being reported ",
							" BLE_GAP_ExtAdvDataParams_T ",
							" C typedef struct BLE_GAP_ExtAdvDataParams_T { uint8_t advHandle; uint8_t operation; uint8_t fragPreference; uint8_t advLen; uint8_t *p_advData; } BLE_GAP_ExtAdvDataParams_T; ",
							" Description Extended advertising parameters ",
							" Field Documentation Field Description advHandle Identifies the advertising set whose parameters are being configured (Range: 0 to 0xEF) See Maximum advertising handle operation Set the advertising data in one or more operations See Operation of extended advertising data BLE_GAP_EXT_ADV_DATA_OP_UNCHANGED can't be used in BLE_GAP_SetExtScanRspData fragPreference Configure whether advertising data should be fragmented See Fragment preference of extended advertising data advLen Length of advertising data valid value is 0 ~ 251 p_advData Advertising data ",
							" BLE_GAP_ExtAdvEnableParams_T ",
							" C typedef struct BLE_GAP_ExtAdvEnableParams_T { uint8_t advHandle; uint16_t duration; uint8_t maxExtAdvEvts; }BLE_GAP_ExtAdvEnableParams_T; ",
							" Description Extended advertising enable parameters ",
							" Field Documentation Field Description advHandle Identifies which advertising set to be enabled or disabled (Range: 0 to 0xEF) See Maximum advertising handle duration Indicate the duration for which that advertising set is enabled Set 0x0000 to countinue advertising until user disables it Unit: 10 ms maxExtAdvEvts Indicate the maximum number of extended advertising events that shall be sent prior to disabling the extended advertising set even if the duration parameter has not expired ",
							" BLE_GAP_ExtAdvParams_T ",
							" C typedef struct BLE_GAP_ExtAdvParams_T { uint8_t advHandle; uint16_t evtProperies; uint32_t priIntervalMin; uint32_t priIntervalMax; uint8_t priChannelMap; BLE_GAP_Addr_T peerAddr; uint8_t filterPolicy; int8_t txPower; uint8_t priPhy; uint8_t secMaxSkip; uint8_t secPhy; uint8_t sid; bool scanReqNotifiEnable; } BLE_GAP_ExtAdvParams_T; ",
							" Description Extended advertising parameters ",
							" Field Documentation Field Description advHandle Identifies the advertising set whose parameters are being configured (Range: 0 to 0xEF) See Maximum advertising handle evtProperies The type of advertising event that is being configured and its basic properties The bit combination of BLE_GAP_EXT_ADV_EVT_PROP priIntervalMin Minimum advertising interval (Range: 0x20 to 0x1F4000) (Unit: 0 625ms) See Extended primary advertising interval priIntervalMax Maximum advertising interval (Range: 0x20 to 0x1F4000) (Unit: 0 625ms) See Extended primary advertising interval priChannelMap Advertising Channel Map See Advertising channel BLE_GAP_ADV_CHANNEL_ALL can't be used peerAddr Remote bluetooth address and address type see BLE_GAP_Addr_T  filterPolicy Advertising filter policy See Advertising filter policy txPower The maximum power level at which the advertising packets are to be transmitted on the advertising channels Set to 0x7F if user has no perference of extended advertising TX power level Level will be adjusted if value is not in range priPhy Indicates the PHY on which the advertising packets are transmitted on the primary advertising channel 2M can't be used for primary advertising See PHY type  secMaxSkip The maximum number of advertising events that can be skipped before the AUX_ADV_IND can be sent secPhy Indicates the PHY on which the advertising packets are transmitted on the secondary advertising channel See PHY type sid The value to be transmitted in the Advertising SID subfield of the ADI field of the Extended Header See Advertising SID range scanReqNotifiEnable Indicates whether the notifications shall be sent upon the receipt of a scan request PDU Set true to enable notification Set false to disable notification ",
							" BLE_GAP_ExtCreateConnParams_T ",
							" C typedef struct BLE_GAP_ExtCreateConnParams_T { bool enable; uint16_t scanInterval; uint16_t scanWindow; BLE_GAP_ConnParams_T connParams; }BLE_GAP_ExtCreateConnParams_T; ",
							" Description Supplement parameters for extended create connection ",
							" Field Documentation Field Description enable Set to true if following configuration is valid scanInterval Scan interval see Extended scan interval  scanWindow Scan window see Extended scan window  connParams GAP connection parameters See BLE_GAP_ConnParams_T  ",
							" BLE_GAP_ExtCreateConnPhy_T ",
							" C typedef struct BLE_GAP_ExtCreateConnPhy_T { BLE_GAP_ExtCreateConnParams_T le1mPhy; BLE_GAP_ExtCreateConnParams_T le2mPhy; BLE_GAP_ExtCreateConnParams_T leCodedPhy; }BLE_GAP_ExtCreateConnPhy_T; ",
							" Description Extended create connection phy setting ",
							" Field Documentation Field Description le1mPhy Scan connectable advertisements on the LE 1M PHY Connection parameters for the LE 1M PHY are provided le2mPhy Connection parameters for the LE 2M PHY are provided leCodedPhy Scan connectable advertisements on the LE Coded PHY Connection parameters for the LE Coded PHY are provided ",
							" BLE_GAP_ExtScanningEnable_T ",
							" C typedef struct BLE_GAP_ExtScanningEnable_T { bool enable; uint8_t filterDuplicates; uint16_t duration; uint16_t period; } BLE_GAP_ExtScanningEnable_T; ",
							" Description Extended scan enable parameters ",
							" Field Documentation Field Description enable Determines whether scanning is enabled or disabled filterDuplicates Controls whether the Link Layer should filter out duplicate advertising reports See Scan filter policy duration Scan duration (Unit: 10 ms) Set 0x0000 to scan continuously until explicitly disable period Time interval from when BLE Stack started its last duration until it begins the subsequent duration (Unit: 1 28 sec) Set 0x0000 to disable periodic scanning ",
							" BLE_GAP_ExtScanningParams_T ",
							" C typedef struct BLE_GAP_ExtScanningParams_T { bool enable; uint8_t type; uint16_t interval; uint16_t window; uint8_t disChannel; } BLE_GAP_ExtScanningParams_T; ",
							" Description Extended scan parameters ",
							" Field Documentation Field Description enable Set to true if the following configuration is valid type Scanning type see Scan type  interval Scanning interval see Extended scan interval (Unit: 0 625ms) window Scanning window see Extended scan window (Unit: 0 625ms) disChannel Disable specific channel during scanning See Scan channel  ",
							" BLE_GAP_ExtScanningPhy_T ",
							" C typedef struct BLE_GAP_ExtScanningPhy_T { BLE_GAP_ExtScanningParams_T le1mPhy; BLE_GAP_ExtScanningParams_T leCodedPhy; } BLE_GAP_ExtScanningPhy_T; ",
							" Description Extended scan phy setting ",
							" Field Documentation Field Description le1mPhy Scan advertisements on the LE 1M PHY leCodedPhy Scan advertisements on the LE Coded PHY ",
							" BLE_GAP_LocalPrivacyParams_T ",
							" C typedef struct BLE_GAP_LocalPrivacyParams_T { uint8_t privacyAddrType; uint16_t addrTimeout; uint8_t localIrk[16]; } BLE_GAP_LocalPrivacyParams_T; ",
							" Description Privacy parameters ",
							" Field Documentation Field Description privacyAddrType Privacy address type See Address type Only BLE_GAP_ADDR_TYPE_RANDOM_RESOLVABLE or BLE_GAP_ADDR_TYPE_RANDOM_NON_RESOLVABLE is allowed addrTimeout Timeout interval before the device changes Random Privacy Device Address See RPA timeout (Unit: 1 Seconds) localIrk IRK (Identity Resolving Key) of the local device Set to 0 to use default IRK ",
							" BLE_GAP_PeriAdvDataParams_T ",
							" C typedef struct BLE_GAP_PeriAdvDataParams_T { uint8_t advHandle; uint8_t operation; uint8_t advLen; uint8_t *p_advData; } BLE_GAP_PeriAdvDataParams_T; ",
							" Description Periodic advertising data ",
							" Field Documentation Field Description advHandle Identifies the advertising set whose periodic advertising parameters are being configured (Range: 0 to 0xEF) See Maximum advertising handle operation Set the advertising data in one or more operations See Operation of periodic advertising data advLen Length of advertising data valid value is 0 ~ 252 See Maximum periodic advertising data length p_advData Advertising data ",
							" BLE_GAP_PeriAdvParams_T ",
							" C typedef struct BLE_GAP_PeriAdvParams_T { uint8_t advHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t properties; } BLE_GAP_PeriAdvParams_T; ",
							" Description Periodic advertising parameters ",
							" Field Documentation Field Description advHandle Identifies the advertising set whose periodic advertising parameters are being configured (Range: 0 to 0xEF) See Maximum advertising handle intervalMin Minimum advertising interval see Periodic advertising interval Unit: 1 25ms intervalMax Maximum advertising interval see Periodic advertising interval Unit: 1 25ms properties Indicate which fields should be included in the advertising packet The bit combination of Property of periodic advertising ",
							" BLE_GAP_ResolvingListParams_T ",
							" C typedef struct BLE_GAP_ResolvingListParams_T { BLE_GAP_Addr_T peerIdAddr; uint8_t peerIrk[16]; uint8_t localIrk[16]; uint8_t privacyMode; } BLE_GAP_ResolvingListParams_T; ",
							" Description Resolving list ",
							" Field Documentation Field Description peerIdAddr Peer identity address peerIrk IRK of the peer device localIrk IRK of the local device privacyMode Privacy mode See Privacy mode ",
							" BLE_GAP_ScanFilterConfig_T ",
							" C typedef struct { uint8_t nameFilterEnable : 1; uint8_t svcDataFilterEnable : 1; uint8_t msdFilterEnable : 1; BLE_GAP_ScanFilterName_T nameFilter; BLE_GAP_ScanFilterServiceData_T serviceDataFilter; BLE_GAP_ScanFilterMsd_T msdFilter; } BLE_GAP_ScanFilterConfig_T; ",
							" Description Scan filter parameters ",
							" Field Documentation Field Description nameFilterEnable Name filter option setting Set true to enable name filter otherwise set false svcDataFilterEnable Service data filter option setting Set true to enable service data filter otherwise set false msdFilterEnable Manufacture specific data Filter option setting Set true to enable manufacture specific filter otherwise set false nameFilter Name filter serviceDataFilter Service data filter msdFilter Manufacturer Specific data filter ",
							" BLE_GAP_ScanFilterMsd_T ",
							" C typedef struct { uint8_t companyId[2]; uint8_t msdLen; uint8_t msd[BLE_GAP_SCAN_MSD_MAX_LEN]; } BLE_GAP_ScanFilterMsd_T; ",
							" Description Manufacturer specific data filter parameters ",
							" Field Documentation Field Description companyId Two bytes of Manufacture Company Identifier that is unique numbers assigned by the Bluetooth SIG to member companies See detail in https://www bluetooth com/specifications/assigned-numbers/company-identifiers/ msdLen Length of compared manufacture specific data msd Contents of manufacture specific data ",
							" BLE_GAP_ScanFilterName_T ",
							" C typedef struct { uint8_t nameLen; uint8_t targetName[BLE_GAP_SCAN_NAME_MAX_LEN]; } BLE_GAP_ScanFilterName_T; ",
							" Description Name filter parameters ",
							" Field Documentation Field Description nameLen Length of compared target name targetName Name contents for Name Filter comparison ",
							" BLE_GAP_ScanFilterServiceData_T ",
							" C typedef struct { uint8_t uuidLen; uint8_t uuidData[16]; uint8_t svcDataLen; uint8_t svcData[BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN]; } BLE_GAP_ScanFilterServiceData_T; ",
							" Description Service data filter parameters ",
							" Field Documentation Field Description uuidLen Byte length of Service UUID There are 3 Service UUID format definition The valid UUID length is 2 4 or 16 for 16-bit 32-bit or 128-bit Service UUID uuidData Contents of Compared Service UUID svcDataLen Length of compared Service Data The max value is BLE_GAP_SCAN_SERVICE_DATA_MAX_LEN  svcData Contents of Compared Service Data ",
							" BLE_GAP_ScanningParams_T ",
							" C typedef struct BLE_GAP_ScanningParams_T { uint8_t type; uint16_t interval; uint16_t window; uint8_t filterPolicy; uint8_t disChannel; } BLE_GAP_ScanningParams_T; ",
							" Description Scanning parameters ",
							" Field Documentation Field Description type Scanning type See Scan type  interval Scanning interval See Scan interval (Unit: 0 625ms) window Scanning window See Scan windown (Unit: 0 625ms) filterPolicy Scanning filter policy See Scan filter policy  disChannel Disable specific channel during scanning See Scan channel  ",
							" BLE_GAP_ServiceOption_T ",
							" C typedef struct BLE_GAP_ServiceOption_T { BLE_GAP_CharDeviceName_T charDeviceName; BLE_GAP_CharAppearance_T charAppearance; BLE_GAP_CharPeriPreferConnParams_T charPeriPreferConnParam; } BLE_GAP_ServiceOption_T; ",
							" Description Build-in service option ",
							" Field Documentation Field Description charDeviceName Device name characteristic charAppearance Appearance characteristic charPeriPreferConnParam Peripheral preferred connection parameters characteristic ",
							" BLE_GAP_SyncSetDev_T ",
							" C typedef struct BLE_GAP_SyncSetDev_T { BLE_GAP_Addr_T advAddr; uint8_t advSid; }BLE_GAP_SyncSetDev_T; ",
							" Description Set sync device parameters ",
							" Field Documentation Field Description advAddr Advertiser address type Public or random (static) identity address advSid Advertising SID It used to identify the Periodic Advertising See Advertising SID range  ",
							" Functions ",
							" BLE_GAP_AdvInit ",
							" C uint16_t BLE_GAP_AdvInit(); ",
							" Description Initialize BLE GAP legacy advertising module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP Advertising module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_ClearExtAdvSet ",
							" C uint16_t BLE_GAP_ClearExtAdvSet(); ",
							" Description Remove all existing advertising sets ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully remove all advertising sets MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_ConfigureBuildInService ",
							" C uint16_t BLE_GAP_ConfigureBuildInService(BLE_GAP_ServiceOption_T *p_serviceOptions); ",
							" Description Configure the build-in Generic Access services Optional characteristics and characteristic value can be configured in mandatory \"Generic Access Service\" ",
							" Note The function is suggested to be called when initialization Also it can't be called in connected state The configured option (enable/disable) should not be changed if the function is called Otherwise service change situation need to be considered in the multiple configuring build-in services case ",
							" Events generated BLE_GAP_EVT_DEVICE_NAME_CHANGED Generated when device name characteristic is configured as writable and is written by remote connected peer ",
							" Parameters Parameter Description [in] p_serviceOptions Pointer to the BLE_GAP_ServiceOption_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure the build-in Services MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_ConnCentralInit ",
							" C uint16_t BLE_GAP_ConnCentralInit(); ",
							" Description Initialize BLE GAP connection central module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP connection central module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_ConnPeripheralInit ",
							" C uint16_t BLE_GAP_ConnPeripheralInit(); ",
							" Description Initialize BLE GAP connection peripheral module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP connection peripheral module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_CreateConnection ",
							" C uint16_t BLE_GAP_CreateConnection(BLE_GAP_CreateConnParams_T *p_createConnParam); ",
							" Description Create a BLE connection to a connectable advertiser ",
							" Note This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ConnCentralInit is required for this API ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated when connection established ",
							" Parameters Parameter Description [in] p_createConnParam Pointer to connection parameters See BLE_GAP_CreateConnParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully created a BLE link with specified device MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if any of the create connection parameters are out of range See BLE_GAP_CreateConnParams_T for ranges MBA_RES_NO_RESOURCE Exceed maximum connections MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_CreateConnectionCancel ",
							" C uint16_t BLE_GAP_CreateConnectionCancel(); ",
							" Description Cancel the current connecting procedure before successful connection establishment ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated with corresponding status code ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully cancel the current connecting procedure MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_CreateSync ",
							" C uint16_t BLE_GAP_CreateSync(BLE_GAP_CreateSync_T *p_periSync); ",
							" Description Synchronize with a periodic advertising train from an advertiser and begin receiving periodic advertising packets ",
							" Note This API may be called whether or not scanning is enabled and scanning may be enabled and disabled while this command is pending However synchronization can only occur when scanning is enabled See BLE_GAP_SetExtScanningEnable  This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit  BLE_GAP_ExtScanInit and BLE_GAP_SyncInit are required for this API ",
							" Events generated BLE_GAP_EVT_PERI_ADV_SYNC_EST Generated when sync established BLE_GAP_EVT_PERI_ADV_REPORT Generated when enabling to receive the report ",
							" Parameters Parameter Description [in] p_periSync Pointer to BLE_GAP_CreateSync_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a request to synchronize with a periodic advertising MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_CONN_ALREADY_EXISTS Connection already exists MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_CreateSyncCancel ",
							" C uint16_t BLE_GAP_CreateSyncCancel(); ",
							" Description Cancel the BLE_GAP_CreateSync procedure while it is pending ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit  BLE_GAP_ExtScanInit and BLE_GAP_SyncInit are required for this API ",
							" Events generated BLE_GAP_EVT_PERI_ADV_SYNC_EST Generated with corresponding status code ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully cancel the BLE_GAP_CreateSync procedure MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_Disconnect ",
							" C uint16_t BLE_GAP_Disconnect(uint16_t connHandle uint8_t reason); ",
							" Description Terminate an existing connection ",
							" Events generated BLE_GAP_EVT_DISCONNECTED Generated when disconnected ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] reason Disconnection reason See Status definitions ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a disconnection MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid connection handle ",
							" BLE_GAP_EnableEncryption ",
							" C uint16_t BLE_GAP_EnableEncryption(uint16_t connHandle uint8_t *p_random uint8_t *p_ediv uint8_t *p_ltk); ",
							" Description Authenticate the given encryption key associated with the remote device specified by the connection and once authenticated will encrypt the connection ",
							" Note This command shall only be used when the local devices role is Central ",
							" Events generated BLE_GAP_EVT_ENCRYPT_STATUS Generated when encrypted status update BLE_GAP_EVT_DISCONNECTED Generated when encryption fail ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_random Pointer to 64 bit random number [in] p_ediv Pointer to 16 bit encrypted diversifier [in] p_ltk Pointer to 128 bit long term key (ltk) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully started MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_EnableOneTimeAdv ",
							" C uint16_t BLE_GAP_EnableOneTimeAdv(uint8_t option); ",
							" Description Start one time advertising event ",
							" Note This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit is required for this API ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated when connection is established BLE_GAP_EVT_ADV_COMPL Generated when advertising event is complete Only one of aboved events would be generated at the same time ",
							" Parameters Parameter Description [in] option Option for one time advertising See Advertising option  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully start advertising MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_EncInfoReqNegativeReply ",
							" C uint16_t BLE_GAP_EncInfoReqNegativeReply(uint16_t connHandle); ",
							" Description Reply to an LE encrypt information request event if local device cannot provide the information This API is called to reply BLE_GAP_EVT_ENC_INFO_REQUEST event ",
							" Note This API shall be called only if device is peripheral role ",
							" Events generated BLE_GAP_EVT_ENCRYPT_STATUS Generated when encrypted status update ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a negative reply of LE encrypt information request event MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_EncInfoReqReply ",
							" C uint16_t BLE_GAP_EncInfoReqReply(uint16_t connHandle uint8_t *p_ltk); ",
							" Description Reply to an LE encrypt information request event This API is called to reply BLE_GAP_EVT_ENC_INFO_REQUEST event ",
							" Note This API shall be called only if device is peripheral role ",
							" Events generated BLE_GAP_EVT_ENCRYPT_STATUS Generated when encrypted status update BLE_GAP_EVT_DISCONNECTED Generated when encryption information is wrong ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_ltk Pointer to 128 bit long term key (ltk) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a reply of LE encrypt information request event MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_ExtAdvInit ",
							" C uint16_t BLE_GAP_ExtAdvInit(); ",
							" Description Initialize BLE GAP extended advertising module ",
							" Note BLE_GAP_AdvInit is also required for this module enabling ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP extended advertising module ",
							" BLE_GAP_ExtConnCentralInit ",
							" C uint16_t BLE_GAP_ExtConnCentralInit(); ",
							" Description Initialize BLE GAP extended connection central module ",
							" Note BLE_GAP_ConnCentralInit is also required for this module enabling ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP extended connection central module ",
							" BLE_GAP_ExtCreateConnection ",
							" C uint16_t BLE_GAP_ExtCreateConnection(uint8_t filterPolicy BLE_GAP_Addr_T *p_peerAddr BLE_GAP_ExtCreateConnPhy_T *p_createConnPhy); ",
							" Description Create a BLE connection to a connectable advertiser ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API belongs legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ConnCentralInit and BLE_GAP_ExtConnCentralInit are required for this API ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated when connection established ",
							" Parameters Parameter Description [in] filterPolicy This parameter is used to determine whether the filter accept List is used See Initiator filter policy  [in] p_peerAddr Pointer to the BLE_GAP_Addr_T structure buffer Remote bluetooth address and address type [in] p_createConnPhy Pointer to the BLE_GAP_ExtCreateConnPhy_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue the create connection MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_ExtScanInit ",
							" C uint16_t BLE_GAP_ExtScanInit(uint16_t maxDataLen uint8_t maxNumOfSecPkts); ",
							" Description Initialize BLE GAP extended scanning module ",
							" Note BLE_GAP_ScanInit is also required for this module enabling ",
							" Parameters Parameter Description [in] maxDataLen This is the maximum pdu payload size that the scan is able to receive See Extended scan data length  [in] maxNumOfSecPkts This is the maximum advertising packets on the secondary channel that the scan is able to receive See Maximum secondary adv for extended scan If value 0 is used The maximum number would be adjusted automatically ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP extended scanning module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_GetAdvAddr ",
							" C uint16_t BLE_GAP_GetAdvAddr(uint8_t advHandle BLE_GAP_Addr_T *p_addr); ",
							" Description Retrieve the advertising address in the advertising events corresponding to the advertising handle ",
							" Parameters Parameter Description [in] advHandle Advertising handle Value 0xF0 to get the address of legacy advertising [in] p_addr Pointer to the BLE_GAP_Addr_T structure buffer Advertisier bluetooth address and address type ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully advertisier advertising address MBA_RES_FAIL Anonymous advertisement No address provided MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_GetDeviceAddr ",
							" C uint16_t BLE_GAP_GetDeviceAddr(BLE_GAP_Addr_T *p_addr); ",
							" Description Get the device address ",
							" Parameters Parameter Description [out] p_addr Pointer to the device address buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get the device address MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_GetDeviceName ",
							" C uint16_t BLE_GAP_GetDeviceName(uint8_t *p_len uint8_t *p_deviceName); ",
							" Description Get local device name with the length information ",
							" Parameters Parameter Description [out] p_len Pointer to length of device name buffer [out] p_deviceName Pointer to device name buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get the local device name ",
							" BLE_GAP_GetLocalPrivacy ",
							" C uint16_t BLE_GAP_GetLocalPrivacy(bool * p_enable BLE_GAP_LocalPrivacyParams_T *p_privacyParams); ",
							" Description Get the current local privacy mode setting parameters ",
							" Parameters Parameter Description [out] p_enable True if local privacy is enabled otherwise false [out] p_privacyParams Pointer to BLE_GAP_LocalPrivacyParams_T structure buffer to store current privacy parameters ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get privacy parameters MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_GetRssi ",
							" C uint16_t BLE_GAP_GetRssi(uint16_t connHandle int8_t *p_rssi); ",
							" Description Get the absolute Received Signal Strength Indication (RSSI) value (Units: dBm) ",
							" Note The meaning of the RSSI metric is an absolute receiver signal strength value in dBm ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [out] p_rssi Pointer to the buffer to store RSSI value ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get RSSI value MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Connection with the specified handle does not exist ",
							" BLE_GAP_Init ",
							" C uint16_t BLE_GAP_Init(); ",
							" Description Initialize BLE GAP main module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP main module MBA_RES_FAIL Fail to initialize BLE GAP main module ",
							" BLE_GAP_PeriodicAdvInit ",
							" C uint16_t BLE_GAP_PeriodicAdvInit(); ",
							" Description Initialize BLE GAP periodic advertising module ",
							" Note Periodic advertising belongs to extended advertising feature BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are also required for this module enabling ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP periodic advertising module ",
							" BLE_GAP_ReadAuthPayloadTimeout ",
							" C uint16_t BLE_GAP_ReadAuthPayloadTimeout(uint16_t connHandle uint16_t *p_authPayloadTo); ",
							" Description Read authenticated payload timeout value ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [out] p_authPayloadTo Pointer to authenticated payload timeout parameter (Unit: 10ms) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully read the authenticated payload timeout parameter MBA_RES_OOM Internal memory allocation failure MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_ReadChannelMap ",
							" C uint16_t BLE_GAP_ReadChannelMap(uint16_t connHandle uint8_t *p_map); ",
							" Description Get the channel map for the specific connection ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [out] p_map 5-byte channel map array containing 37 1-bit fields corresponding to 37 data channels 0 indicates corresponding channel is bad and 1 indicates channel status is unknown The most significant bits are reserved and shall be set to 0 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully read the channel map MBA_RES_OOM Internal memory allocation failure MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier ",
							" BLE_GAP_ReadFactoryTxPowerLevel ",
							" C uint16_t BLE_GAP_ReadFactoryTxPowerLevel(int8_t *p_minTxPower int8_t *p_maxTxPower); ",
							" Description Read the maximum and minimum factory RF transmit power level ",
							" Parameters Parameter Description [out] p_minTxPower Point to the minimum transmit power level (Unit: dBm) [out] p_maxTxPower Point to the maximum transmit power level (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue the request MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_ReadPhy ",
							" C uint16_t BLE_GAP_ReadPhy(uint16_t connHandle uint8_t *p_txPhy uint8_t *p_rxPhy); ",
							" Description Read the current transmitter PHY and receiver PHY on the specified connection ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_txPhy Pointer to TX PHY buffer See PHY type for the definition [in] p_rxPhy Pointer to RX PHY buffer See PHY type for the definition ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully read the current transmitter PHY and receiver PHY MBA_RES_OOM Internal memory allocation failure MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier ",
							" BLE_GAP_ReadRemoteTxPowerLevel ",
							" C uint16_t BLE_GAP_ReadRemoteTxPowerLevel(uint16_t connHandle uint8_t phy); ",
							" Description Read the transmit power level used by remote device on the specific connection ",
							" Events generated BLE_GAP_EVT_TRANSMIT_POWER_REPORTING Generated for Tx power level information ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] phy PHY See Transmitter PHY type  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue the request MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_ReadTxPowerLevel ",
							" C uint16_t BLE_GAP_ReadTxPowerLevel(uint16_t connHandle uint8_t phy int8_t *p_txPower int8_t *p_txPowerMax); ",
							" Description Read the current and maximum transmit power value of specific LE connection handle (unit: dBm) ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] phy PHY See Transmitter PHY type  [out] p_txPower Pointer to current transmit power level (Unit: dBm) [out] p_txPowerMax Pointer to maximum transmit power level (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get the transmit power level MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_RemoteConnParamsReqNegativeReply ",
							" C uint16_t BLE_GAP_RemoteConnParamsReqNegativeReply(uint16_t connHandle uint8_t reason); ",
							" Description Reply to an LE remote connection parameters request event if device rejects the remote devices request to change connection parameters This API is called to reply BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST event ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] reason The reason of remote connection parameter request negative reply See Status definitions  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a negative reply of LE remote connection parameters request event MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_RemoteConnParamsReqReply ",
							" C uint16_t BLE_GAP_RemoteConnParamsReqReply(uint16_t connHandle BLE_GAP_ConnParams_T *p_connParams); ",
							" Description Reply to an LE remote connection parameters request event if device accepts the remote devices request to change connection parameters This API is called to reply BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST event ",
							" Events generated BLE_GAP_EVT_CONN_PARAM_UPDATE Generated when connection parameters update complete ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_connParams Pointer to the connection parameter See BLE_GAP_ConnParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a reply of LE remote connection parameters request event MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_RemoveExtAdvSet ",
							" C uint16_t BLE_GAP_RemoveExtAdvSet(uint8_t advHandle); ",
							" Description Remove an advertising set ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Parameters Parameter Description [in] advHandle Advertising handle ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully remove an advertising set MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_ScanInit ",
							" C uint16_t BLE_GAP_ScanInit(); ",
							" Description Initialize BLE GAP legacy scan module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP scan module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_SetAdvData ",
							" C uint16_t BLE_GAP_SetAdvData(BLE_GAP_AdvDataParams_T *p_advData); ",
							" Description Set advertising data from the input \"p_advData\" ",
							" Note If advertising is currently enabled the new data shall be used in subsequent advertising events If an advertising event is in progress when this command is issued the new data may not be used for that event This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit is required for this API ",
							" Parameters Parameter Description [in] p_advData Pointer to the structure containing advertising data to be set ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set advertising data MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters advertisement data length is more than BLE_GAP_ADV_DATA_LEN  MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_SetAdvEnable ",
							" C uint16_t BLE_GAP_SetAdvEnable(bool enable uint16_t duration); ",
							" Description Start or stop advertising ",
							" Note The duration is only valid when advertising type is not set to Directed Advertising The advertising shall be continuous within the duration or until the disable command is issued or until a connection is created or until the Advertising is timed out due to high duty cycle Directed Advertising In these cases advertising is then disabled This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit is required for this API ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated when connection established BLE_GAP_EVT_ADV_TIMEOUT Generated when adv enabled and timeout (by duration) ",
							" Parameters Parameter Description [in] enable Advertising control option [in] duration Duration for advertising (Unit: 10 ms) Set to 0 to continuously advertise ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully start or stop advertising MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_SetAdvParams ",
							" C uint16_t BLE_GAP_SetAdvParams(BLE_GAP_AdvParams_T *p_advParams); ",
							" Description Set advertising parameters ",
							" Note This command shall not be issued when advertising is enabled This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit is required for this API ",
							" Parameters Parameter Description [in] p_advParams Pointer to advertising parameters buffer See BLE_GAP_AdvParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set advertising parameters MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_SetAdvTxPowerLevel ",
							" C uint16_t BLE_GAP_SetAdvTxPowerLevel(int8_t advTxPower int8_t *p_selectedTxPower); ",
							" Description Set RF Tx power level preset value for Advertising physical channel PDUs (Advertising physical channel PDUs means all of advertising scanning and initiating PDU) Advertising PDU Tx power setting for specific Advertising handle can be revised by BLE_GAP_SetExtAdvParams It is recommended to called during application code initialization ",
							" Parameters Parameter Description [in] advTxPower The advertising transmit power [out] p_selectedTxPower Point to the real transmit power level (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the transmit power level MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetChannelMap ",
							" C uint16_t BLE_GAP_SetChannelMap(uint8_t *p_map); ",
							" Description Set local channel map If this API is not called then by default status of all 37 channels is treated unknown ",
							" Note If this API is used the application should send it within 10 seconds of knowing that the channel classification has changed The interval between two successive API calls should be at least one second BLE Stack uses this channel map as an input along with its own assessment of the channels This API is effective only for BLE Central role ",
							" Parameters Parameter Description [in] p_map 5-byte channel map array containing 37 1-bit fields corresponding to 37 data channels 0 indicates corresponding channel is bad and 1 indicates channel status is unknown The most significant bits are reserved and shall be set to 0 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully Set the channel map MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if any of the bits Corresponding to advertising channels are set (3 Most significant bits of p_map ) ",
							" BLE_GAP_SetConnTxPowerLevel ",
							" C uint16_t BLE_GAP_SetConnTxPowerLevel(int8_t connTxPower int8_t *p_selectedTxPower); ",
							" Description Set RF Tx power level preset value for LE connection Data physical channel PDU If both connected devices support LE Power Control feature RF Tx power level will be adjusted by BLE stack automatically ",
							" Parameters Parameter Description [in] connTxPower The transmit power after connected and before the LE transmit power control protocol been activated [out] p_selectedTxPower Point to the real transmit power level (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the transmit power level MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetDefaultPhy ",
							" C uint16_t BLE_GAP_SetDefaultPhy(uint8_t txPhys uint8_t rxPhys); ",
							" Description Specify the preferred values for the transmitter PHY and receiver PHY to be used for all subsequent connections ",
							" Parameters Parameter Description [in] txPhys Indicates the transmitter PHYs that the user prefers to use [in] rxPhys Indicates the receiver PHYs that the user prefers to use ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully specify the preferred values for the transmitter PHY and receiver PHY to be used for all subsequent connections MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetDeviceAddr ",
							" C uint16_t BLE_GAP_SetDeviceAddr(BLE_GAP_Addr_T *p_addr); ",
							" Description Set the Bluetooth device address (identity address) Type of address must be BLE_GAP_ADDR_TYPE_PUBLIC or BLE_GAP_ADDR_TYPE_RANDOM_STATIC The address identifies the device to other Bluetooth devices ",
							" Parameters Parameter Description [in] p_addr Pointer to the device address buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the device address MBA_RES_FAIL Fail to set device addr Some types of address can be set by application MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_SetDeviceName ",
							" C uint16_t BLE_GAP_SetDeviceName(uint8_t len uint8_t *p_deviceName); ",
							" Description Set the local device name ",
							" Parameters Parameter Description [in] len Length of the device name See Maximum device name length  [in] p_deviceName Pointer to a device name buffer (UTF-8 string) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the local device name MBA_RES_INVALID_PARA Invalid parameters if length of the device name is more than 32 bytes ",
							" BLE_GAP_SetDevToPeriAdvList ",
							" C uint16_t BLE_GAP_SetDevToPeriAdvList(uint8_t num BLE_GAP_SyncSetDev_T *p_syncSetDev); ",
							" Description Set one or multiple entries to the Periodic Advertiser list ",
							" Parameters Parameter Description [in] num Number of devices need to be set See Maximum sync devices number [in] p_syncSetDev Pointer to the BLE_GAP_SyncSetDev_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully Set one or multiple entries to the Periodic Advertiser list MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetExtAdvCodingScheme ",
							" C uint16_t BLE_GAP_SetExtAdvCodingScheme(uint8_t codingScheme); ",
							" Description Set preferred phy for extended advertising When coded phy is used in extended advertising there are two coding schemes can be chosen (Transmitted Symbols: S=2 or S=8) This API is provided to configure coding scheme when using coded phy in extended advertising ",
							" Note BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Parameters Parameter Description [in] codingScheme The coding scheme of adverting PDUs 0 is S=8 coding and 1 is S=2 coding ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully setting the extended advertising coding scheme MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed if adv is not initialized ",
							" BLE_GAP_SetExtAdvData ",
							" C uint16_t BLE_GAP_SetExtAdvData(BLE_GAP_ExtAdvDataParams_T *p_advDataParam); ",
							" Description Configure extended advertising data ",
							" Note This API may be issued at any time after an advertising set identified by the advHandle parameter has been created using the BLE_GAP_SetExtAdvParams API No matter advertising in that set is enabled or disabled This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Parameters Parameter Description [in] p_advDataParam Pointer to BLE_GAP_ExtAdvDataParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure extended advertising data MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetExtAdvEnable ",
							" C uint16_t BLE_GAP_SetExtAdvEnable(bool enable uint8_t numOfSets BLE_GAP_ExtAdvEnableParams_T *p_advParam); ",
							" Description Enable or disable one or more advertising sets using the advertising sets identified by the advHandle ",
							" Note If enable set to false and numOfSets set to 0x00 then all advertising sets are disabled Advertising will be disabled after set maximum extended advertising events were sent even if the set duration has not expired Details in BLE_GAP_ExtAdvEnableParams_T  This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Events generated BLE_GAP_EVT_CONNECTED Generated when connectable advertising is started and connection is established BLE_GAP_EVT_SCAN_REQ_RECEIVED Generated when ext adv enabled BLE_GAP_EVT_ADV_SET_TERMINATED Generated when ext adv enabled and timeout (by duration) ",
							" Parameters Parameter Description [in] enable Enable or disable one or more advertising sets Set true to start the extended advertising [in] numOfSets The number of advertising sets contained in the p_advParam [in] p_advParam Pointer to BLE_GAP_ExtAdvEnableParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enable or disable one or more advertising sets MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetExtAdvParams ",
							" C uint16_t BLE_GAP_SetExtAdvParams(BLE_GAP_ExtAdvParams_T *p_extAdvParams int8_t *p_selectedTxPower); ",
							" Description Configure the extended advertising parameters ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API belongs legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Parameters Parameter Description [in] p_extAdvParams Pointer to BLE_GAP_ExtAdvParams_T structure buffer [out] p_selectedTxPower Point to the real transmit power level (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure the extended advertising parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_SetExtScanningEnable ",
							" C uint16_t BLE_GAP_SetExtScanningEnable(uint8_t mode BLE_GAP_ExtScanningEnable_T *p_enable); ",
							" Description Enable or disable extended scanning ",
							" Note If this API with enable set to true is called while scanning is already enabled the timers used for duration and period are reset to the new parameter values and a new scan period is started The duration of a scan period refers to the time spent scanning on both the primary and secondary advertising physical channels If scanning is started and advertising packet or scan response is received then the event BLE_GAP_EVT_EXT_ADV_REPORT is generated This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit and BLE_GAP_ExtScanInit are required for this API ",
							" Events generated BLE_GAP_EVT_EXT_ADV_REPORT Generated when ext scan enabled BLE_GAP_EVT_SCAN_TIMEOUT Generated when ext scan enabled and timeout (by duration) ",
							" Parameters Parameter Description [in] mode Scan mode See Scan mode  [in] p_enable Pointer to BLE_GAP_ExtScanningEnable_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enable or disable extended scanning MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_SetExtScanningParams ",
							" C uint16_t BLE_GAP_SetExtScanningParams(uint8_t filterPolicy BLE_GAP_ExtScanningPhy_T *p_extScanPhy); ",
							" Description Set the extended scan parameters to be used on the advertising physical channels ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit and BLE_GAP_ExtScanInit are required for this API ",
							" Parameters Parameter Description [in] filterPolicy Scanning filter policy See Scan filter policy  [in] p_extScanPhy Pointer to BLE_GAP_ExtScanningPhy_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the extended scan parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_SetExtScanRspData ",
							" C uint16_t BLE_GAP_SetExtScanRspData(BLE_GAP_ExtAdvDataParams_T *p_scanDataParam); ",
							" Description Configure extended scan response data ",
							" Note This API may be issued at any time after an advertising set identified by the advHandle parameter has been created using the BLE_GAP_SetExtAdvParams API No matter advertising in that set is enabled or disabled This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit and BLE_GAP_ExtAdvInit are required for this API ",
							" Parameters Parameter Description [in] p_scanDataParam Pointer to BLE_GAP_ExtAdvDataParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure extended scan response data MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetFilterAcceptList ",
							" C uint16_t BLE_GAP_SetFilterAcceptList(uint8_t num BLE_GAP_Addr_T *p_addr); ",
							" Description Add devices to the filter accept list ",
							" Note This API is not permitted in the following three scenarios: The advertising filter policy uses the filter accept list and advertising is enabled The scanning filter policy uses the filter accept list and scanning is enabled The initiator filter policy uses the filter accept list and a create connection command is outstanding ",
							" Parameters Parameter Description [in] num Number of address set See Maximum filter accept list number [in] p_addr Pointer to BLE_GAP_Addr_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully add the device to the filter accept list MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if address type does not match any of the Address type  ",
							" BLE_GAP_SetGoldenRxPowerRange ",
							" C uint16_t BLE_GAP_SetGoldenRxPowerRange(int8_t upperLimit int8_t lowerLimit uint8_t stepDecreasePower); ",
							" Description Set the golden receive power range ",
							" Parameters Parameter Description [out] upperLimit The golden range upper value No higher than -30dBm (Unit: dBm) [out] lowerLimit The golden range lower value No lower than -80dBm [out] stepDecreasePower The maximum decrease power for each single step (Unit: dBm) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set golden receive power range MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetLocalPrivacy ",
							" C uint16_t BLE_GAP_SetLocalPrivacy(bool enable BLE_GAP_LocalPrivacyParams_T *p_privacyParams); ",
							" Description Configure the privacy parameters ",
							" Note Local Privacy settings cannot be changed while advertising scanning or creating connection ",
							" Parameters Parameter Description [in] enable True to enable local privacy false to disable local privacy [in] p_privacyParams Pointer to BLE_GAP_LocalPrivacyParams_T structure buffer If enable local privacy the configurations must be legal If disable local privacy this parameter can be NULL or not ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure privacy parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_BAD_STATE Privacy parameters cannot be configured while advertising scanning or creating a connection ",
							" BLE_GAP_SetPeriAdvData ",
							" C uint16_t BLE_GAP_SetPeriAdvData(BLE_GAP_PeriAdvDataParams_T *p_advDataParam); ",
							" Description Set periodic advertising data ",
							" Note This API may be issued at any time If periodic advertising is currently enabled for the specified advertising set the new data in subsequent periodic advertising events shall be used for this advertising set If a periodic advertising event is in progress when this command is issued the old or new data may be used for that event This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit  BLE_GAP_ExtAdvInit and BLE_GAP_PeriodicAdvInit are required for this API ",
							" Parameters Parameter Description [in] p_advDataParam Pointer to BLE_GAP_PeriAdvDataParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set periodic advertising data MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetPeriAdvEnable ",
							" C uint16_t BLE_GAP_SetPeriAdvEnable(bool enable uint8_t advHandle); ",
							" Description Enable or disable the periodic advertising for the advertising set specified by the advHandle ",
							" Note If the advertising set is not currently enabled (see BLE_GAP_SetExtAdvEnable API) the periodic advertising is not started until the advertising set is enabled The periodic advertising should continue until this API is called with enable set to false This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit  BLE_GAP_ExtAdvInit and BLE_GAP_PeriodicAdvInit are required for this API ",
							" Parameters Parameter Description [in] enable Enable or disable the periodic advertising [in] advHandle Identifies which advertising set to be enabled or disabled ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enable or disable the periodic advertising MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetPeriAdvParams ",
							" C uint16_t BLE_GAP_SetPeriAdvParams(BLE_GAP_PeriAdvParams_T *p_periAdvParams); ",
							" Description Configure periodic advertising parameters ",
							" Note If the advHandle does not identify an advertising set that is already configured for periodic advertising and it is unable to support more periodic advertising at present This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit  BLE_GAP_ExtAdvInit and BLE_GAP_PeriodicAdvInit are required for this API ",
							" Parameters Parameter Description [in] p_periAdvParams Pointer to BLE_GAP_PeriAdvParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure periodic advertising parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetPeriAdvRxEnable ",
							" C uint16_t BLE_GAP_SetPeriAdvRxEnable(uint16_t syncHandle bool enable); ",
							" Description Enables or disables reports for the periodic advertising train identified by input \"syncHandle\" ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit  BLE_GAP_ExtScanInit and BLE_GAP_SyncInit are required for this API ",
							" Events generated BLE_GAP_EVT_PERI_ADV_REPORT Generated when enabled ",
							" Parameters Parameter Description [in] syncHandle Identity of the periodic advertising train [in] enable Enable or disable reports Set true to enable reports ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enables or disables reports for the periodic advertising train MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_SetPhy ",
							" C uint16_t BLE_GAP_SetPhy(uint16_t connHandle uint8_t txPhys uint8_t rxPhys uint8_t phyOptions); ",
							" Description Set the PHY preferences for the specified connection ",
							" Note The Controller might not be able to make the change Event will generate if one of the phy changes ",
							" Events generated BLE_GAP_EVT_PHY_UPDATE Generated when phy updated ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] txPhys TX PHYs A bit field that indicates the transmitter PHYs that the user prefers to use See PHY option for transmit and receive  [in] rxPhys RX PHYs A bit field that indicates the receiver PHYs that the user prefers to use See PHY option for transmit and receive  [in] phyOptions PHY options See Preferred PHY preference  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the PHY preferences for the specified connection MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_SetResolvingList ",
							" C uint16_t BLE_GAP_SetResolvingList(uint8_t num BLE_GAP_ResolvingListParams_T *p_resolvingList); ",
							" Description Set devices to the resolving list ",
							" Note This API is not permitted in the following three scenarios: Advertising is enabled Scanning is enabled BLE_GAP_CreateConnection  BLE_GAP_ExtCreateConnection or BLE_GAP_CreateSync API is outstanding ",
							" Parameters Parameter Description [in] num The number of the resolving list included See BLE_GAP_MAX_RESOLV_NUM  [in] p_resolvingList Pointer to BLE_GAP_ResolvingListParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully add the device to the resolving list MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA When number exceeds BLE_GAP_MAX_RESOLV_NUM  MBA_RES_BAD_STATE Resolving list cannot be configured while advertising scanning or creating a connection ",
							" BLE_GAP_SetScanningEnable ",
							" C uint16_t BLE_GAP_SetScanningEnable(bool enable uint8_t filterDuplicate uint8_t mode uint16_t duration); ",
							" Description Start or stop scanning ",
							" Note Scanning is used to discover advertising devices nearby If the enable parameter is set to true and scanning is already enabled any change to the filterDuplicate setting shall take effect This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit is required for this API ",
							" Events generated BLE_GAP_EVT_ADV_REPORT Generated when scan enabled BLE_GAP_EVT_DIRECT_ADV_REPORT Generated when scan enabled and direct adv received BLE_GAP_EVT_SCAN_TIMEOUT Generated when scan enabled and timeout (by duration) ",
							" Parameters Parameter Description [in] enable Start or stop scanning Set true to start scanning [in] filterDuplicate Duplicate Filter policy see Scan filter duplicate option Only BLE_GAP_SCAN_FD_DISABLE /BLE_GAP_SCAN_FD_ENABLE are valid [in] mode Scan mode See Scan modes  [in] duration Scan duration (unit :100 ms) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enable or disable scanning MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if any of the parameters are out of range MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_SetScanningFilter ",
							" C uint16_t BLE_GAP_SetScanningFilter(BLE_GAP_ScanFilterConfig_T *p_param); ",
							" Description Set the scanning filter parameters to filter received advertising or scan response PDU There are 3 Advertising Data Type (AD_Type) contents filter options can be enabled individually While either option is enabled and PDU contents with specific AD_Type data that same as compared target parameters LE Stack will report this received PDU by BLE_GAP_EVT_ADV_REPORT or BLE_GAP_EVT_EXT_ADV_REPORT event Name Filter: To filter the contents of Shortened Local Name (AD_Type=0x08) or Full Complete Local Name (AD_Type=0x09) Service Data Filter: To filter the contents of Service Data (AD_Type=0x16) Manufacture Data Filter: To filter the contents of Manufacturer Specific Data (AD_Type=0xFF) ",
							" Note This scanning filter is an advanced filtering procedure after filterPolicy setting in the BLE_GAP_SetScanningParam API or BLE_GAP_SetExtScanningParams API ",
							" Parameters Parameter Description [in] p_param Pointer to BLE_GAP_ScanFilterConfig_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the scanning filter parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_GAP_SetScanningParam ",
							" C uint16_t BLE_GAP_SetScanningParam(BLE_GAP_ScanningParams_T *p_scanParams); ",
							" Description Set the Scanning Parameters ",
							" Note This API should not be called when scanning is enabled This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit is required for this API ",
							" Parameters Parameter Description [in] p_scanParams Pointer to BLE_GAP_ScanningParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set scanning parameters MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if any of the scanning parameters are out of range MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_SetScanRspData ",
							" C uint16_t BLE_GAP_SetScanRspData(BLE_GAP_AdvDataParams_T *p_scanData); ",
							" Description Set scan response data ",
							" Note If advertising is currently enabled the new data shall be used in subsequent advertising events If an advertising event is in progress when this command is issued the new data may not be used for that event This API belongs to legacy advertising feature It will be disallowed if any one API belongs extended advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_AdvInit is required for this API ",
							" Parameters Parameter Description [in] p_scanData Pointer to the structure containing scan response data to be set See BLE_GAP_AdvDataParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set scan response data MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters scan response data length is more than BLE_GAP_ADV_MAX_LENGTH  MBA_RES_COMMAND_DISALLOWED Command disallowed when extended Adv feature is in-use ",
							" BLE_GAP_SetTxPowerReportingEnable ",
							" C uint16_t BLE_GAP_SetTxPowerReportingEnable(uint16_t connHandle bool localEnable bool remoteEnable); ",
							" Description Enable or disable the reporting to the transmit power level changes in the local and remote device for the specific connection ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] localEnable Enable or disable local transmit power reports Set true to enable the local transmit power reports [in] remoteEnable Enable or disable remote transmit power reports Set true to enable the remote transmit power reports ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue the request MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" BLE_GAP_SyncInit ",
							" C uint16_t BLE_GAP_SyncInit(); ",
							" Description Initialize BLE GAP sync module The sync is refer to periodic advertising synchronization ",
							" Note Sync belongs to extended advertising feature ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE GAP sync module ",
							" BLE_GAP_TerminateSync ",
							" C uint16_t BLE_GAP_TerminateSync(uint16_t syncHandle); ",
							" Description Stop reception of the periodic advertising train identified by the input \"syncHandle\" ",
							" Note This API belongs to extended advertising feature It will be disallowed if any one API that belongs to legacy advertising feature is issued before Categories of advertising APIs and events for details of advertising APIs BLE_GAP_ScanInit  BLE_GAP_ExtScanInit and BLE_GAP_SyncInit are required for this API ",
							" Parameters Parameter Description [in] syncHandle Identity of the periodic advertising train Range: 0x0000 to 0X0EFF ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully stop reception of the periodic advertising train MBA_RES_OOM Internal memory allocation failure MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" BLE_GAP_TrafficUnlock ",
							" C uint16_t BLE_GAP_TrafficUnlock(); ",
							" Description Unlock BLE data traffic ",
							" Note BLE_stack will lock BLE data traffic while BLE_GAP_EnableOneTimeAdv is called and connection established automatically Application should call BLE_GAP_TrafficUnlock to unlock BLE data traffic after all of necessary BLE modules are initialized ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully unlock BLE data traffic MBA_RES_OOM Internal memory allocation failure ",
							" BLE_GAP_UpdateConnParam ",
							" C uint16_t BLE_GAP_UpdateConnParam(uint16_t connHandle BLE_GAP_ConnParams_T *p_connParams); ",
							" Description Update connection parameters of an existing connection ",
							" Events generated BLE_GAP_EVT_CONN_PARAM_UPDATE Generated when connection parameters update complete ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_connParams Pointer to the BLE_GAP_ConnParams_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully update the connection parameters MBA_RES_FAIL Connection update is in progress MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters if any of the connection update parameters are out of range See Connection parameters range for range) (OR) Connection with the specified handle does not exist MBA_RES_UNSUPPORT_REMOTE_FEATURE Unsupported remote feature ",
							" BLE_GAP_WriteAuthPayloadTimeout ",
							" C uint16_t BLE_GAP_WriteAuthPayloadTimeout(uint16_t connHandle uint16_t authPayloadTo); ",
							" Description Write authenticated payload timeout parameter ",
							" Note This configuration determine when to use the LE ping sequence ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] authPayloadTo Authenticated payload timeout parameter (Unit: 10 ms) The authPayloadTo shall be equal to or greater than connInterval*(1 + peripheralLatency) Refer to BLE_GAP_EvtConnect_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully write the authenticated payload timeout parameter MBA_RES_OOM Internal memory allocation failure MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier MBA_RES_COMMAND_DISALLOWED Command disallowed ",
							" Message Sequence Chart ",
							" GAP ADV / Ext ADV procedure    Example of starting advertising         Example of changing adv data under advertising enabled         Example of changing advertising parameter under advertising enabled         Example of stopping advertising under advertising enabled         Example of advertising timeout         Example of becoming peripheral role under advertising enabled         Example of starting extended advertising         Example of changing adv data under extended advertising enabled         Example of changing extended advertising parameter extended advertising enabled         Example of receiving BLE_GAP_EVT_SCAN_REQ_RECEIVED event         Example of stopping extended advertising         Example of becoming peripheral role under extended advertising enabled     ",
							" GAP SCAN / Ext SCAN procedure    Example of starting active scan         Example of starting passive scan       Example of receiving ADV_DIRECT_IND         Example of scan timeout         Example of starting extended active scan         Example of starting extended passive scan         Example of receiving incomplete advertising report         Example of losing partial of sequential advertising report         Example of extended scan timeout     ",
							" GAP Create Connection procedure    Example of central connects to legacy advertisers procedure         Example of central connects to extended advertisers procedure         Example of disconnection procedure     ",
							" GAP Update Connection Parameter procedure    Example of central updates connection parameter procedure         Example of peripheral updates connection parameter procedure     ",
							" GAP PHY Update procedure    Example of central PHY update procedure         Example of peripheral PHY Update procedure     ",
							" GAP Security (Encryption) procedure    Example of central security (encryption) procedure         Example of peripheral security (encryption) procedure     ",
							" GAP Privacy procedure    Example of Privacy Advertising procedure- Using resolvable private address generated from local default IRK         Example of Privacy Advertising procedure- Using resolvable private address generated from resolving list IRK         Example of Privacy Advertising procedure- Using non-resolvable private address         Example of Privacy Extended Advertising procedure- Using resolvable private address generated from local default IRK         Example of Privacy Extended Advertising procedure- Using resolvable private address generated from resolving list IRK         Example of Privacy Extended Advertising procedure- Using non-resolvable private address         Example of Privacy Scanning procedure         Example of Privacy Extended Scanning procedure         Example of Privacy Create Connection procedure         Example of Privacy Extended Create Connection procedure       ",
							" Notes ",
							" Operation of extended advertising data ",
							" Description BLE LIB supports both legacy and extended advertising features Since there exists usage limitation defined by specification the following tables list the legacy and extended advertising APIs and events In Spec Vol 4 Part E Sec 3 1 there's limitation when controller supports both legacy and extended advertising: If since the last power-on or reset the Host has ever issued a legacy advertising command and then issues an extended advertising command or has ever issued an extended advertising command and then issues a legacy advertising command the command will be disallowed ",
							" APIs Legacy advertising API Extended advertising API BLE_GAP_SetAdvParams BLE_GAP_SetExtAdvParams BLE_GAP_SetAdvData BLE_GAP_SetExtAdvData BLE_GAP_SetScanRspData BLE_GAP_SetExtScanRspData BLE_GAP_SetAdvEnable BLE_GAP_SetExtAdvEnable none BLE_GAP_RemoveExtAdvSet none BLE_GAP_ClearExtAdvSet none BLE_GAP_SetPeriAdvParams none BLE_GAP_SetPeriAdvData none BLE_GAP_SetPeriAdvEnable BLE_GAP_SetScanningParam BLE_GAP_SetExtScanningParams BLE_GAP_SetScanningEnable BLE_GAP_SetExtScanningEnable BLE_GAP_CreateConnection BLE_GAP_ExtCreateConnection none BLE_GAP_CreateSync none BLE_GAP_CreateSyncCancel none BLE_GAP_TerminateSync none BLE_GAP_SetDevToPeriAdvList none BLE_GAP_SetPeriAdvRxEnable BLE_GAP_EnableOneTimeAdv none ",
							" Events Legacy advertising event Extended advertising event BLE_GAP_EVT_ADV_REPORT BLE_GAP_EVT_EXT_ADV_REPORT ",
							" Concept of TX power control The default RF TX power level is max TX power recorded in the OTP information block Application can get maximum and minimum factory RF TX power level by BLE_GAP_ReadFactoryTxPowerLevel API Application may give the RF TX Power preset values for Advertising or Connection Data physical channels by BLE_GAP_SetAdvTxPowerLevel or BLE_GAP_SetConnTxPowerLevel APIs If BLE Stack Ext Adv module is enabled Advertising PDU TX power setting for specific Advertising handle can be revised by BLE_GAP_SetExtAdvParams API If both connected LE devices support LE Power Control feature RF TX power level will be adjusted by BLE stack within factory RF TX power range based on RF golden range automatically ",
							" Generic Attribute Profile (GATT) ",
							" Defines ",
							" ATT error code ",
							" C #define ATT_ERRCODE_INVALID_HANDLE 0x01 #define ATT_ERRCODE_READ_NOT_PERMITTED 0x02 #define ATT_ERRCODE_WRITE_NOT_PERMITTED 0x03 #define ATT_ERRCODE_INVALID_PDU 0x04 #define ATT_ERRCODE_INSUFFICIENT_AUTHENTICATION 0x05 #define ATT_ERRCODE_REQUEST_NOT_SUPPORT 0x06 #define ATT_ERRCODE_INVALID_OFFSET 0x07 #define ATT_ERRCODE_INSUFFICIENT_AUTHORIZATION 0x08 #define ATT_ERRCODE_PREPARE_QUEUE_FULL 0x09 #define ATT_ERRCODE_ATTRIBUTE_NOT_FOUND 0x0a #define ATT_ERRCODE_ATTRIBUTE_NOT_LONG 0x0b #define ATT_ERRCODE_INSUFFICIENT_ENCRYPTION_KEY_SIZE 0x0c #define ATT_ERRCODE_INVALID_ATTRIBUTE_VALUE_LENGTH 0x0d #define ATT_ERRCODE_UNLIKELY_ERROR 0x0e #define ATT_ERRCODE_INSUFFICIENT_ENCRYPTION 0x0f #define ATT_ERRCODE_UNSUPPORTED_GROUP_TYPE 0x10 #define ATT_ERRCODE_INSUFFICIENT_RESOURCE 0x11 #define ATT_ERRCODE_DATABASE_OUT_OF_SYNC 0x12 #define ATT_ERRCODE_VALUE_NOT_ALLOW 0x13 #define ATT_ERRCODE_APPLICATION_ERROR 0x80 ",
							" Description The definition of ATT Error Codes ",
							" Macro Definition Macro Description ATT_ERRCODE_INVALID_HANDLE ATT Error Code: Invalid Handle ATT_ERRCODE_READ_NOT_PERMITTED ATT Error Code: Read Not Permitted ATT_ERRCODE_WRITE_NOT_PERMITTED ATT Error Code: Write Not Permitted ATT_ERRCODE_INVALID_PDU ATT Error Code: Invalid PDU ATT_ERRCODE_INSUFFICIENT_AUTHENTICATION ATT Error Code: Insufficient Authentication ATT_ERRCODE_REQUEST_NOT_SUPPORT ATT Error Code: Request Not Supported ATT_ERRCODE_INVALID_OFFSET ATT Error Code: Invalid Offset ATT_ERRCODE_INSUFFICIENT_AUTHORIZATION ATT Error Code: Insufficient Authorization ATT_ERRCODE_PREPARE_QUEUE_FULL ATT Error Code: Prepare Queue Full ATT_ERRCODE_ATTRIBUTE_NOT_FOUND ATT Error Code: Attribute Not Found ATT_ERRCODE_ATTRIBUTE_NOT_LONG ATT Error Code: Attribute Not Long ATT_ERRCODE_INSUFFICIENT_ENCRYPTION_KEY_SIZE ATT Error Code: Insufficient Encryption Key Size ATT_ERRCODE_INVALID_ATTRIBUTE_VALUE_LENGTH ATT Error Code: Invalid Attribute Value Length ATT_ERRCODE_UNLIKELY_ERROR ATT Error Code: Unlikely Error ATT_ERRCODE_INSUFFICIENT_ENCRYPTION ATT Error Code: Insufficient Encryption ATT_ERRCODE_UNSUPPORTED_GROUP_TYPE ATT Error Code: Unsupported Group Type ATT_ERRCODE_INSUFFICIENT_RESOURCE ATT Error Code: Insufficient Resource ATT_ERRCODE_DATABASE_OUT_OF_SYNC ATT Error Code: Database Out Of Sync ATT_ERRCODE_VALUE_NOT_ALLOW ATT Error Code: Value Not Allowed ATT_ERRCODE_APPLICATION_ERROR ATT Error Code: Application Error ",
							" ATT opcodes ",
							" C #define ATT_ERROR_RSP 0x01 #define ATT_EXCHANGE_MTU_REQ 0x02 #define ATT_EXCHANGE_MTU_RSP 0x03 #define ATT_FIND_INFORMATION_REQ 0x04 #define ATT_FIND_INFORMATION_RSP 0x05 #define ATT_FIND_BY_TYPE_VALUE_REQ 0x06 #define ATT_FIND_BY_TYPE_VALUE_RSP 0x07 #define ATT_READ_BY_TYPE_REQ 0x08 #define ATT_READ_BY_TYPE_RSP 0x09 #define ATT_READ_REQ 0x0a #define ATT_READ_RSP 0x0b #define ATT_READ_BLOB_REQ 0x0c #define ATT_READ_BLOB_RSP 0x0d #define ATT_READ_MULTIPLE_REQ 0x0e #define ATT_READ_MULTIPLE_RSP 0x0f #define ATT_READ_BY_GROUP_TYPE_REQ 0x10 #define ATT_READ_BY_GROUP_TYPE_RSP 0x11 #define ATT_WRITE_REQ 0x12 #define ATT_WRITE_RSP 0x13 #define ATT_WRITE_CMD 0x52 #define ATT_PREPARE_WRITE_REQ 0x16 #define ATT_PREPARE_WRITE_RSP 0x17 #define ATT_EXECUTE_WRITE_REQ 0x18 #define ATT_EXECUTE_WRITE_RSP 0x19 #define ATT_HANDLE_VALUE_NTF 0x1b #define ATT_HANDLE_VALUE_IND 0x1d #define ATT_HANDLE_VALUE_CFM 0x1e #define ATT_READ_MUTIPLE_VARIABLE_REQ 0x20 #define ATT_READ_MUTIPLE_VARIABLE_RSP 0x21 #define ATT_MUTIPLE_HANDLE_VALUE_NTF 0x22 #define ATT_SIGNED_WRITE_COMMAND 0xd2 ",
							" Description The definition of ATT Attribute Opcodes ",
							" Macro Definition Macro Description ATT_ERROR_RSP Attribute Opcode: Error Response ATT_EXCHANGE_MTU_REQ Attribute Opcode: Exchange MTU Request ATT_EXCHANGE_MTU_RSP Attribute Opcode: Exchange MTU Response ATT_FIND_INFORMATION_REQ Attribute Opcode: Find Information Request ATT_FIND_INFORMATION_RSP Attribute Opcode: Find Information Response ATT_FIND_BY_TYPE_VALUE_REQ Attribute Opcode: Find By Type Value Request ATT_FIND_BY_TYPE_VALUE_RSP Attribute Opcode: Find By Type Value Response ATT_READ_BY_TYPE_REQ Attribute Opcode: Read By Type Request ATT_READ_BY_TYPE_RSP Attribute Opcode: Read By Type Response ATT_READ_REQ Attribute Opcode: Read Request ATT_READ_RSP Attribute Opcode: Read Response ATT_READ_BLOB_REQ Attribute Opcode: Read Blob Request ATT_READ_BLOB_RSP Attribute Opcode: Read Blob Response ATT_READ_MULTIPLE_REQ Attribute Opcode: Read Multiple Request ATT_READ_MULTIPLE_RSP Attribute Opcode: Read Multiple Response ATT_READ_BY_GROUP_TYPE_REQ Attribute Opcode: Read By Group Type Request ATT_READ_BY_GROUP_TYPE_RSP Attribute Opcode: Read By Group Type Response ATT_WRITE_REQ Attribute Opcode: Write Request ATT_WRITE_RSP Attribute Opcode: Write Response ATT_WRITE_CMD Attribute Opcode: Write Command ATT_PREPARE_WRITE_REQ Attribute Opcode: Prepare Write Request ATT_PREPARE_WRITE_RSP Attribute Opcode: Prepare Write Response ATT_EXECUTE_WRITE_REQ Attribute Opcode: Execute Write Request ATT_EXECUTE_WRITE_RSP Attribute Opcode: Execute Write Response ATT_HANDLE_VALUE_NTF Attribute Opcode: Handle Value Notification ATT_HANDLE_VALUE_IND Attribute Opcode: Handle Value Indication ATT_HANDLE_VALUE_CFM Attribute Opcode: Handle Value Confirmation ATT_READ_MUTIPLE_VARIABLE_REQ Attribute Opcode: Read Multiple Variable Request ATT_READ_MUTIPLE_VARIABLE_RSP Attribute Opcode: Read Multiple Variable Response ATT_MUTIPLE_HANDLE_VALUE_NTF Attribute Opcode: Multiple Handle Value Notification ATT_SIGNED_WRITE_COMMAND Attribute Opcode: Signed Write Command ",
							" Attribute permission ",
							" C #define PERMISSION_READ 0x01 #define PERMISSION_READ_AUTHEN 0x02 #define PERMISSION_READ_AUTHEN_SC 0x04 #define PERMISSION_READ_ENC 0x08 #define PERMISSION_WRITE 0x10 #define PERMISSION_WRITE_AUTHEN 0x20 #define PERMISSION_WRITE_AUTHEN_SC 0x40 #define PERMISSION_WRITE_ENC 0x80 ",
							" Description The definition of attribute permissions ",
							" Macro Definition Macro Description PERMISSION_READ Read access is premitted PERMISSION_READ_AUTHEN Read access requires encryption MITM protection PERMISSION_READ_AUTHEN_SC Read access requires encryption MITM protection Secure Connections PERMISSION_READ_ENC Read access requires encryption No MITM protection PERMISSION_WRITE Write access is premitted PERMISSION_WRITE_AUTHEN Write access requires encryption MITM protection PERMISSION_WRITE_AUTHEN_SC write access requires encryption MITM protection Secure Connections PERMISSION_WRITE_ENC Write access requires encryption No MITM protection ",
							" Attribute settings ",
							" C #define SETTING_MANUAL_WRITE_RSP 0x01 #define SETTING_MANUAL_READ_RSP 0x02 #define SETTING_UUID_16 0x04 #define SETTING_VARIABLE_LEN 0x08 #define SETTING_ALLOW_OFFSET 0x10 #define SETTING_CCCD 0x20 ",
							" Description The definition of attribute settings ",
							" Macro Definition Macro Description SETTING_MANUAL_WRITE_RSP Set if service need to know write operations on this attribute Service also need to send response (if need) manually SETTING_MANUAL_READ_RSP Set if service need to know read operations on this attribute Service also need to send response manually SETTING_UUID_16 Set if the UUID is 16 bytes (128 bits) in length SETTING_VARIABLE_LEN Set if the attribute has a variable length SETTING_ALLOW_OFFSET Set if writes are allowed with an offset SETTING_CCCD Set if the attribute is CCCD ",
							" Characteristic extended property ",
							" C #define RELIABLE_WRITE 0x0001 #define WRITABLE_AUXILIARIES 0x0002 ",
							" Description The definition of Characteristic Extended Properties bit field ",
							" Macro Definition Macro Description RELIABLE_WRITE If set permits reliable writes of Characteristic Value WRITABLE_AUXILIARIES If set permits writes to the Characteristic Descriptor ",
							" Characteristic property ",
							" C #define ATT_PROP_BROADCAST 0x01 #define ATT_PROP_READ 0x02 #define ATT_PROP_WRITE_CMD 0x04 #define ATT_PROP_WRITE_REQ 0x08 #define ATT_PROP_NOTIFY 0x10 #define ATT_PROP_INDICATE 0x20 #define ATT_PROP_AUTH_WRITES 0x40 #define ATT_PROP_EXTENDED_PROP 0x80 ",
							" Description The definition of properties in Characteristic declaration ",
							" Macro Definition Macro Description ATT_PROP_BROADCAST If set permits broadcasts of Characteristic Value using Server Characteristic Configuration Descriptor ATT_PROP_READ If set permits reads of the Characteristic Value ATT_PROP_WRITE_CMD If set permits writes of Characteristic Value without response ATT_PROP_WRITE_REQ If set permits writes of Characteristic Value with response ATT_PROP_NOTIFY If set permits notifications of a Characteristic Value without acknowledgement ATT_PROP_INDICATE If set permits indications of Characteristic Value with acknowledgement ATT_PROP_AUTH_WRITES If set permits signed writes to the Characteristic Value ATT_PROP_EXTENDED_PROP If set additional characteristic properties are defined in the Characteristic Extended Properties Descriptor ",
							" Client Characteristic Configuration definition ",
							" C #define NOTIFICATION 0x0001 #define INDICATION 0x0002 ",
							" Description The definition of Client Characteristic Configuration bit field ",
							" Macro Definition Macro Description NOTIFICATION The Characteristic Value shall be notified INDICATION The Characteristic Value shall be indicated ",
							" Database change state ",
							" C #define GATT_DB_CHANGE_AWARE 0x00 #define GATT_DB_CHANGE_UNAWARE 0x01 ",
							" Description The definition of GATT Server database change-aware state ",
							" Macro Definition Macro Description GATT_DB_CHANGE_AWARE The GATT database is change-aware to specific client GATT_DB_CHANGE_UNAWARE The GATT database is change-unaware to specific client ",
							" Execute write flag ",
							" C #define GATT_EXEC_WRITE_FLAG_CANCEL_ALL 0x00 #define GATT_EXEC_WRITE_FLAG_WRITE 0x01 ",
							" Description The definition of flags for Execute Write Request ",
							" Macro Definition Macro Description GATT_EXEC_WRITE_FLAG_CANCEL_ALL Cancel all prepared writes GATT_EXEC_WRITE_FLAG_WRITE Immediately write all pending prepared values ",
							" GATT client configuration definitions ",
							" C #define GATTC_CONFIG_NONE 0x0000 #define GATTC_CONFIG_MANUAL_CONFIRMATION 0x0001 ",
							" Description The definition of of GATT Client configuration bits ",
							" Macro Definition Macro Description GATTC_CONFIG_NONE Not configure anyone of the supported function GATTC_CONFIG_MANUAL_CONFIRMATION bit 0: Configure ATT stack for auto/manual transmission of confirmation when an indication is received ",
							" GATT client features ",
							" C #define GATT_ROBUST_CACHING 0x01 #define GATT_EATT_BEARER 0x02 #define GATT_MULTI_HANDLE_NOTI 0x04 ",
							" Description The definition of client features in client supported features characteristic in GATT Service ",
							" Macro Definition Macro Description GATT_ROBUST_CACHING The client supports robust caching GATT_EATT_BEARER The client supports enhanced ATT bearer GATT_MULTI_HANDLE_NOTI The client supports multiple handle value notifications ",
							" GATT server configuration definitions ",
							" C #define GATTS_CONFIG_NONE 0x0000 #define GATTS_CONFIG_CACHING_SUPPORT 0x0001 ",
							" Description The definition of GATT server configuration bits ",
							" Macro Definition Macro Description GATTS_CONFIG_NONE Not configure anyone of the supported function GATTS_CONFIG_CACHING_SUPPORT bit 0: Configure GATT Server support caching function If gatt caching is supported the API GATTS_UpdateBondingInfo must be called after link connected Otherwise the GATT Server won't start process the incoming packets ",
							" Header size ",
							" C #define ATT_HANDLE_VALUE_HEADER_SIZE 3 #define ATT_WRITE_HEADER_SIZE 3 #define ATT_READ_RESP_HEADER_SIZE 1 #define ATT_WRITE_RESP_HEADER_SIZE 5 #define ATT_FIND_INFO_RESP_HEADER_SIZE 2 #define ATT_FIND_BY_TYPE_RESP_HEADER_SIZE 1 #define ATT_READ_BY_TYPE_RESP_HEADER_SIZE 2 #define ATT_READ_BY_GROUP_RESP_HEADER_SIZE 2 #define ATT_PREP_WRITE_RESP_HEADER_SIZE 5 #define ATT_NOTI_INDI_HEADER_SIZE 3 ",
							" Description The definition of GATT header size ",
							" Macro Definition Macro Description ATT_HANDLE_VALUE_HEADER_SIZE The ATT Handle Value Notification/Indication Header Size ATT_WRITE_HEADER_SIZE The ATT Write Request/Command Header Size ATT_READ_RESP_HEADER_SIZE The ATT Read Response Header Size ATT_WRITE_RESP_HEADER_SIZE The ATT Prepare Write Response Header Size ATT_FIND_INFO_RESP_HEADER_SIZE The ATT Find Information Response Header Size ATT_FIND_BY_TYPE_RESP_HEADER_SIZE The ATT Find By Type Value Response Header Size ATT_READ_BY_TYPE_RESP_HEADER_SIZE The ATT Read By Type Response Header Size ATT_READ_BY_GROUP_RESP_HEADER_SIZE The ATT Read By Group Type Response Header Size ATT_PREP_WRITE_RESP_HEADER_SIZE The ATT Prepare Write Response Header Size ATT_NOTI_INDI_HEADER_SIZE The ATT Notification/Indication Header Size ",
							" Maximium build-in CCCD number ",
							" C #define GATTS_BUILDIN_CCCD_NUM 0x01 ",
							" Description The definition of total CCCD number of build-in services ",
							" Macro Definition Macro Description GATTS_BUILDIN_CCCD_NUM There exist one CCCD in build-in GATT Services ",
							" Maximum UUID length ",
							" C #define ATT_MAX_UUID_SIZE ATT_UUID_LENGTH_16 ",
							" Description The definition of max UUID length ",
							" Macro Definition Macro Description ATT_MAX_UUID_SIZE The Maximum UUID Length 128-bit ",
							" MTU length ",
							" C #define BLE_ATT_DEFAULT_MTU_LEN 23 #define BLE_ATT_MAX_MTU_LEN 247 ",
							" Description The definition of GATT MTU length ",
							" Macro Definition Macro Description BLE_ATT_DEFAULT_MTU_LEN ATT default MTU length BLE_ATT_MAX_MTU_LEN The Maximum supported MTU length of ATT stack ",
							" Permission key size ",
							" C #define ATT_PERMISSION_KEY_SIZE 0x10 ",
							" Description The definition of of permission key size ",
							" Note Attribute might require permission (Encryption/Authentication Permission) to be accessed The key size defines the minimum length of the pairing key Key size shorter than this length is considered as unsafe authentication/encryption Length ranges from 7 bytes to 16 bytes Set to zero to disable the key size checking ",
							" Macro Definition Macro Description ATT_PERMISSION_KEY_SIZE Minimum length of the pairing key ",
							" Procedure status definition ",
							" C #define GATT_PROCEDURE_STATUS_CONTINUE 0x00 #define GATT_PROCEDURE_STATUS_FINISH 0x01 ",
							" Description The definition of of procedure status ",
							" Note Some GATT procedures would not finish in one ATT request Hence more than one event will received in one procedure Status in the event indicates if this procedure will continue or end ",
							" Macro Definition Macro Description GATT_PROCEDURE_STATUS_CONTINUE Querying procedure continues Further events will be received GATT_PROCEDURE_STATUS_FINISH Querying procedure is complete Last event of this procedure ",
							" Server Characteristic Configuration definition ",
							" C #define SCCD_BROADCAST 0x0001 ",
							" Description The definition of Server Characteristic Configuration bit field ",
							" Macro Definition Macro Description SCCD_BROADCAST The Characteristic Value shall be broadcast ",
							" Valid start attribute handle ",
							" C #define GATTS_APP_ATTRIBUTE_START_HANDLE 0x0050 ",
							" Description The definition of valid attribute handle ",
							" Note The application registered service should be greater than this definition ",
							" Macro Definition Macro Description GATTS_APP_ATTRIBUTE_START_HANDLE Start attribute handle of application-defined service ",
							" UUID declaration ",
							" C extern const uint8_t g_gattUuidPrimSvc[ATT_UUID_LENGTH_2]; extern const uint8_t g_gattUuidSecSvc[ATT_UUID_LENGTH_2]; extern const uint8_t g_gattUuidInc[ATT_UUID_LENGTH_2]; extern const uint8_t g_gattUuidChar[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidCharExtProp[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidUserDesc[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidCcc[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidScc[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidPreFormat[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidAggFormat[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidValidRange [ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidExtReportRef[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidReportRef[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidNumOfDigitals[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidValueTriggetSet[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidEnvSensingConfig[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidEnvSensingMeasure[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidEnvSensingTriggerSet[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidTimeTriggerSet[ATT_UUID_LENGTH_2]; extern const uint8_t g_descUuidCompleteBredrBlockData[ATT_UUID_LENGTH_2]; ",
							" Description The declaration of UUID for service table usage ",
							" Variable Documentation Variable Description g_gattUuidPrimSvc GATT Declaration UUID: Primary Service g_gattUuidSecSvc GATT Declaration UUID: Secondary Service g_gattUuidInc GATT Declaration UUID: Include g_gattUuidChar GATT Declaration UUID: Characteristic Declaration g_descUuidCharExtProp GATT Characteristic Descriptor UUID: Characteristic Extended Properties g_descUuidUserDesc GATT Characteristic Descriptor UUID: Characteristic User Description g_descUuidCcc GATT Characteristic Descriptor UUID: Client Characteristic Configuration g_descUuidScc GATT Characteristic Descriptor UUID: Server Characteristic Configuration g_descUuidPreFormat GATT Characteristic Descriptor UUID: Characteristic Presentation Format g_descUuidAggFormat GATT Characteristic Descriptor UUID: Characteristic Aggregate Format g_descUuidValidRange GATT Characteristic Descriptor UUID: Valid Range g_descUuidExtReportRef GATT Characteristic Descriptor UUID: External Report Reference g_descUuidReportRef GATT Characteristic Descriptor UUID: Report Reference g_descUuidNumOfDigitals GATT Characteristic Descriptor UUID: Number of Digitals g_descUuidValueTriggetSet GATT Characteristic Descriptor UUID: Value Trigger Setting g_descUuidEnvSensingConfig GATT Characteristic Descriptor UUID: Environmental Sensing Configuration g_descUuidEnvSensingMeasure GATT Characteristic Descriptor UUID: Environmental Sensing Measurement g_descUuidEnvSensingTriggerSet GATT Characteristic Descriptor UUID: Environmental Sensing Trigger Setting g_descUuidTimeTriggerSet GATT Characteristic Descriptor UUID: Time Trigger Setting g_descUuidCompleteBredrBlockData GATT Characteristic Descriptor UUID: Complete BR-EDR Transport Block Data ",
							" UUID definitions ",
							" C #define UUID_PRIMARY_SERVICE 0x2800 #define UUID_SECONDARY_SERVICE 0x2801 #define UUID_INCLUDE 0x2802 #define UUID_CHARACTERISTIC 0x2803 #define UUID_DESCRIPTOR_CHAR_EXT_PROP 0x2900 #define UUID_DESCRIPTOR_USER_DESC 0x2901 #define UUID_DESCRIPTOR_CLIENT_CHAR_CONFIG 0x2902 #define UUID_DESCRIPTOR_SERVER_CHAR_CONFIG 0x2903 #define UUID_DESCRIPTOR_CHAR_PRE_FORMAT 0x2904 #define UUID_DESCRIPTOR_CHAR_AGGRE_FROMAT 0x2905 #define UUID_DESCRIPTOR_VALID_RANGE 0x2906 #define UUID_DESCRIPTOR_EXTERNAL_REPORT_REF 0x2907 #define UUID_DESCRIPTOR_REPORT_REF 0x2908 #define UUID_DESCRIPTOR_NUM_OF_DIGITALS 0x2909 #define UUID_DESCRIPTOR_VALUE_TRIGGER_SETTING 0x290A #define UUID_DESCRIPTOR_ENV_SENSING_CONFIG 0x290B #define UUID_DESCRIPTOR_ENV_SENSING_MEASURE 0x290C #define UUID_DESCRIPTOR_ENV_SENSING_TRIGGER_SETTING 0x290D #define UUID_DESCRIPTOR_TIME_TRIGGER_SETTING 0x290E #define UUID_DESCRIPTOR_COMPLETE_BREDR_BLOCK_DATA 0x290F ",
							" Description The definition of GATT UUID ",
							" Macro Definition Macro Description UUID_PRIMARY_SERVICE Primary Service Declaration UUID_SECONDARY_SERVICE Secondary Service Declaration UUID_INCLUDE Include Declaration UUID_CHARACTERISTIC Characteristic Declaration UUID_DESCRIPTOR_CHAR_EXT_PROP Characteristic Extended Properties UUID_DESCRIPTOR_USER_DESC Characteristic User Description Descriptor UUID_DESCRIPTOR_CLIENT_CHAR_CONFIG Client Characteristic Configuration Descriptor UUID_DESCRIPTOR_SERVER_CHAR_CONFIG Server Characteristic Configuration Descriptor UUID_DESCRIPTOR_CHAR_PRE_FORMAT Characteristic Presentation Format Descriptor UUID_DESCRIPTOR_CHAR_AGGRE_FROMAT Characteristic Aggregate Format Descriptor UUID_DESCRIPTOR_VALID_RANGE Valid Range UUID_DESCRIPTOR_EXTERNAL_REPORT_REF External Report Reference UUID_DESCRIPTOR_REPORT_REF Report Reference UUID_DESCRIPTOR_NUM_OF_DIGITALS Number of Digitals UUID_DESCRIPTOR_VALUE_TRIGGER_SETTING Value Trigger Setting UUID_DESCRIPTOR_ENV_SENSING_CONFIG Environmental Sensing Configuration UUID_DESCRIPTOR_ENV_SENSING_MEASURE Environmental Sensing Measurement UUID_DESCRIPTOR_ENV_SENSING_TRIGGER_SETTING Environmental Sensing Trigger Setting UUID_DESCRIPTOR_TIME_TRIGGER_SETTING Time Trigger Setting UUID_DESCRIPTOR_COMPLETE_BREDR_BLOCK_DATA Complete BR-EDR Transport Block Data ",
							" UUID length ",
							" C #define ATT_UUID_LENGTH_2 2 #define ATT_UUID_LENGTH_4 4 #define ATT_UUID_LENGTH_16 16 ",
							" Description The definition of UUID length ",
							" Macro Definition Macro Description ATT_UUID_LENGTH_2 16-bit Bluetooth UUID ATT_UUID_LENGTH_4 32-bit Bluetooth UUID ATT_UUID_LENGTH_16 128-bit Bluetooth UUID ",
							" Enums ",
							" GATT_EventId_T ",
							" C typedef enum GATT_EventId_T { GATTC_EVT_ERROR_RESP = 0x00 GATTC_EVT_DISC_PRIM_SERV_RESP GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP GATTC_EVT_DISC_CHAR_RESP GATTC_EVT_DISC_DESC_RESP GATTC_EVT_READ_USING_UUID_RESP GATTC_EVT_READ_RESP GATTC_EVT_WRITE_RESP GATTC_EVT_HV_NOTIFY GATTC_EVT_HV_INDICATE GATTS_EVT_READ GATTS_EVT_WRITE GATTS_EVT_HV_CONFIRM ATT_EVT_TIMEOUT ATT_EVT_UPDATE_MTU GATTC_EVT_DISC_CHAR_BY_UUID_RESP GATTS_EVT_SERVICE_CHANGE GATTS_EVT_CLIENT_FEATURE_CHANGE GATTS_EVT_CLIENT_CCCDLIST_CHANGE GATTC_EVT_PROTOCOL_AVAILABLE GATTS_EVT_PROTOCOL_AVAILABLE }GATT_EventId_T; ",
							" Description Enumeration type of GATT callback events ",
							" Note Events with \"GATTC\" in EventID are generated on GATT Client Events with \"GATTS\" are generated on GATT Server Remaining events may be generated either on the GATT client or server Enumerator Description GATTC_EVT_ERROR_RESP Error Response Event See GATT_EvtError_T for event details GATTC_EVT_DISC_PRIM_SERV_RESP Discover Primary Services Response Event See GATT_EvtDiscPrimServResp_T for event details GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP Discover Primary Services By UUID Response Event See GATT_EvtDiscPrimServByUuidResp_T for event details GATTC_EVT_DISC_CHAR_RESP Discover All Characteristics Response Event See GATT_EvtDiscCharResp_T for event details GATTC_EVT_DISC_DESC_RESP Discover All Descriptors Response Event See GATT_EvtDiscDescResp_T for event details GATTC_EVT_READ_USING_UUID_RESP Read Using UUID Response Event See GATT_EvtReadUsingUuidResp_T for event details GATTC_EVT_READ_RESP Read Response Event See GATT_EvtReadResp_T for event details GATTC_EVT_WRITE_RESP Write Response Event See GATT_EvtWriteResp_T for event details GATTC_EVT_HV_NOTIFY Handle Value Notification Event See GATT_EvtReceiveHandleValue_T for event details GATTC_EVT_HV_INDICATE Handle Value Indication Event See GATT_EvtReceiveHandleValue_T for event details GATTS_EVT_READ Read Requests Event See GATT_EvtRead_T for event details GATTS_EVT_WRITE Write Request/Command Event See GATT_EvtWrite_T for event details Please note that App will receive prepare/execute write requests if the additional condition matched: There's no queue writes queued in the GATT GATT cannot handle queue writes both in stack and application at the same time GATTS_EVT_HV_CONFIRM Handle Value Confirmation Event See GATT_EvtReceiveCfm_T for event details ATT_EVT_TIMEOUT ATT Stack Timeout Event ATT_EVT_UPDATE_MTU Update MTU Event See GATT_EvtUpdateMtu_T for event details GATTC_EVT_DISC_CHAR_BY_UUID_RESP Discover Characteristics By UUID Response Event See GATT_EvtDiscCharResp_T for event details GATTS_EVT_SERVICE_CHANGE Service change for the specific bonded client The information must be kept between connection GATT_EvtServiceChange_T  GATTS_EVT_CLIENT_FEATURE_CHANGE Support feature change for a specific bonded client The information must be kept between connection GATT_EvtClientFeatureChange_T  GATTS_EVT_CLIENT_CCCDLIST_CHANGE CCCD list change for a specific bonded client The information must be kept between connection GATT_EvtClientCccdListChange_T  GATTC_EVT_PROTOCOL_AVAILABLE Sequential protocol available in client role GATT_EvtProtocolAvailable_T GATTS_EVT_PROTOCOL_AVAILABLE Sequential protocol available in server role GATT_EvtProtocolAvailable_T ",
							" Structures ",
							" ATT_Uuid_T ",
							" C typedef struct ATT_Uuid_T { uint8_t uuid[ATT_MAX_UUID_SIZE]; uint8_t uuidLength; } ATT_Uuid_T; ",
							" Description UUID parameters ",
							" Field Documentation Field Description uuid The UUID uuidLength Length of the UUID ",
							" GATT_Event_T ",
							" C typedef struct GATT_Event_T { GATT_EventId_T eventId; GATT_EventField_T eventField; } GATT_Event_T; ",
							" Description GATT callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" GATT_EventField_T ",
							" C typedef union { GATT_EvtError_T onError; GATT_EvtRead_T onRead; GATT_EvtWrite_T onWrite; GATT_EvtDiscPrimServResp_T onDiscPrimServResp; GATT_EvtDiscPrimServByUuidResp_T onDiscPrimServByUuidResp; GATT_EvtDiscCharResp_T onDiscCharResp; GATT_EvtDiscDescResp_T onDiscDescResp; GATT_EvtReadUsingUuidResp_T onReadUsingUuidResp; GATT_EvtReadResp_T onReadResp; GATT_EvtWriteResp_T onWriteResp; GATT_EvtUpdateMtu_T onUpdateMTU; GATT_EvtReceiveHandleValue_T onNotification; GATT_EvtReceiveHandleValue_T onIndication; GATT_EvtReceiveCfm_T onConfirmation; GATT_EvtDiscCharResp_T onDiscCharByUuid; GATT_EvtServiceChange_T onServiceChange; GATT_EvtClientFeatureChange_T onClientFeatureChange; GATT_EvtClientCccdListChange_T onClientCccdListChange; GATT_EvtProtocolAvailable_T onClientProtocolAvailable; GATT_EvtProtocolAvailable_T onServerProtocolAvailable; } GATT_EventField_T; ",
							" Description Union of GATT callback event data types ",
							" Field Documentation Field Description onError Handle GATTC_EVT_ERROR_RESP onRead Handle GATTS_EVT_READ onWrite Handle GATTS_EVT_WRITE onDiscPrimServResp Handle GATTC_EVT_DISC_PRIM_SERV_RESP onDiscPrimServByUuidResp Handle GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP onDiscCharResp Handle GATTC_EVT_DISC_CHAR_RESP onDiscDescResp Handle GATTC_EVT_DISC_DESC_RESP onReadUsingUuidResp Handle GATTC_EVT_READ_USING_UUID_RESP onReadResp Handle GATTC_EVT_READ_RESP onWriteResp Handle GATTC_EVT_WRITE_RESP onUpdateMTU Handle ATT_EVT_UPDATE_MTU onNotification Handle GATTC_EVT_HV_NOTIFY onIndication Handle GATTC_EVT_HV_INDICATE onConfirmation Handle GATTS_EVT_HV_CONFIRM onDiscCharByUuid Handle GATTC_EVT_DISC_CHAR_BY_UUID_RESP onServiceChange Handle GATTS_EVT_SERVICE_CHANGE onClientFeatureChange Handle GATTS_EVT_CLIENT_FEATURE_CHANGE onClientCccdListChange Handle GATTS_EVT_CLIENT_CCCDLIST_CHANGE onClientProtocolAvailable Handle GATTC_EVT_PROTOCOL_AVAILABLE onServerProtocolAvailable Handle GATTS_EVT_PROTOCOL_AVAILABLE ",
							" GATT_EvtClientCccdListChange_T ",
							" C typedef struct GATT_EvtClientCccdListChange_T { GATTS_CccdList_T *p_cccdList; uint16_t connHandle; uint8_t numOfCccd; } GATT_EvtClientCccdListChange_T; ",
							" Description Data structure for GATTS_EVT_CLIENT_CCCDLIST_CHANGE event ",
							" Field Documentation Field Description p_cccdList Pointer to the CCCD list connHandle Connection handle associated with this connection numOfCccd Number of CCCDs in the List ",
							" GATT_EvtClientFeatureChange_T ",
							" C typedef struct GATT_EvtClientFeatureChange_T { uint16_t connHandle; uint8_t clientSupportFeature; } GATT_EvtClientFeatureChange_T; ",
							" Description Data structure for GATTS_EVT_CLIENT_FEATURE_CHANGE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection clientSupportFeature Bit field represents client support features GATT client features ",
							" GATT_EvtDiscCharResp_T ",
							" C typedef struct GATT_EvtDiscCharResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; uint8_t procedureStatus; } GATT_EvtDiscCharResp_T; ",
							" Description Data structure for GATTC_EVT_DISC_CHAR_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrPairLength Length of each handle-value pair in the list attrDataLength Total length of attribute data list attrData Attribute data list Consists of handle-value pairs in following format: 2-byte Characteristic declaration handle 1-byte Characteristic property 2-byte Value Handle Characteristic UUID To extract the Characteristic property data see Characteristic property Characteristic UUID may be 16-bit or 128-bit in length Multiple Handle-value pairs received in a single event have the same characteristic UUID length Number of handle-value pairs = (attrDataLength/attrPairLength Note that the format of the data is little endian procedureStatus Discover All Characteristics procedure may not finish in one ATT request Status indicates if further events are expected See Procedure status definition  ",
							" GATT_EvtDiscDescResp_T ",
							" C typedef struct GATT_EvtDiscDescResp_T { uint16_t connHandle; uint8_t infoDataFormat; uint16_t infoDataLength; uint8_t infoData[BLE_ATT_MAX_MTU_LEN-ATT_FIND_INFO_RESP_HEADER_SIZE]; uint8_t procedureStatus; } GATT_EvtDiscDescResp_T; ",
							" Description Data structure for GATTC_EVT_DISC_DESC_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection infoDataFormat Format of the received descriptor Data If 1 then p_infoData has 16-bit UUIDs If 2 then p_infoData has 128-bit UUIDs Other values are invalid infoDataLength Total length of the all received Descriptor information Data infoData Descriptor Data Data consists of handle-value pairs in following format: 2-byte Characteristic descriptor handle Characteristic Descriptor UUID Number of handle-value pairs = (infoDataLength/4) if p_infoData is 1 Number of handle-value pairs = (infoDataLength/18) if p_infoData is 2 Note that the format of the data is little endian procedureStatus \"Discover All Descriptors\" procedure may not finish in one ATT request Status indicates if further events are expected See Procedure status definition  ",
							" GATT_EvtDiscPrimServByUuidResp_T ",
							" C typedef struct GATT_EvtDiscPrimServByUuidResp_T { uint16_t connHandle; uint16_t handleInfoLength; uint8_t handleInfo[BLE_ATT_MAX_MTU_LEN-ATT_FIND_BY_TYPE_RESP_HEADER_SIZE]; uint8_t procedureStatus; } GATT_EvtDiscPrimServByUuidResp_T; ",
							" Description Data structure for GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection handleInfoLength Total length of the handle information list in bytes handleInfo Handle information list Contains handle pairs in following format: 2-byte service handle 2-byte End Group Handle Service handle is the handle of service discovered End Group Handle is the handle of the last attribute of the service discovered If the same primary service has multiple instances on the server then multiple handle pairs may exist Note that the format of the data is little endian procedureStatus Discover Primary Service By UUID may not finish in one ATT request Status indicates if further events are expected See Procedure status definition  ",
							" GATT_EvtDiscPrimServResp_T ",
							" C typedef struct GATT_EvtDiscPrimServResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_GROUP_RESP_HEADER_SIZE]; uint8_t procedureStatus; } GATT_EvtDiscPrimServResp_T; ",
							" Description Data structure for GATTC_EVT_DISC_PRIM_SERV_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrPairLength Length of each tuple in attribute data attrDataLength Total length of all tuples attrData Attribute data list Contains Tuples in following format: 2-byte service handle 2-byte End Group Handle Service UUID Service handle is the handle of service discovered End Group Handle is the handle of the last attribute of the service discovered Service UUID may be 16 or 128-bit Multiple tuples received in a single event have the same service UUID length Number of tuples = (attrDataLength/attrPairLength) Note that the format of the data is little endian procedureStatus \"Discover All Primary Services\" Procedure may not finish in one ATT request Status indicates if further events are expected See Procedure status definition  ",
							" GATT_EvtError_T ",
							" C typedef struct GATT_EvtError_T { uint16_t connHandle; uint8_t reqOpcode; uint16_t attrHandle; uint8_t errCode; } GATT_EvtError_T; ",
							" Description Data structure for GATTC_EVT_ERROR_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection reqOpcode Request that generated this error response attrHandle The attribute handle that generated this error response errCode Reason why the request has generated an error response See ATT error code  ",
							" GATT_EvtProtocolAvailable_T ",
							" C typedef struct GATT_EvtProtocolAvailable_T { uint16_t connHandle; } GATT_EvtProtocolAvailable_T; ",
							" Description Data structure for GATTC_EVT_PROTOCOL_AVAILABLE or GATTS_EVT_PROTOCOL_AVAILABLE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" GATT_EvtRead_T ",
							" C typedef struct GATT_EvtRead_T { uint16_t connHandle; uint16_t attrHandle; uint8_t readType; uint16_t readOffset; } GATT_EvtRead_T; ",
							" Description Data structure for GATTS_EVT_READ event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrHandle Handle of the attribute to be read readType Read Type Only ATT_READ_BY_TYPE_REQ/ATT_READ_REQ/ATT_READ_BLOB_REQ are allowed See ATT opcodes  readOffset Offset of the first octet to be read Used for Read Blob request only ",
							" GATT_EvtReadResp_T ",
							" C typedef struct GATT_EvtReadResp_T { uint16_t connHandle; uint8_t responseType; uint16_t attrDataLength; uint8_t readValue[BLE_ATT_MAX_MTU_LEN-ATT_READ_RESP_HEADER_SIZE]; uint16_t charHandle; } GATT_EvtReadResp_T; ",
							" Description Data structure for GATTC_EVT_READ_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection responseType Read response type See ATT opcodes Only ATT_READ_RSP/ATT_READ_BLOB_RSP are allowed attrDataLength Length of the data read readValue Data Read from the handle that was specified in Read Request charHandle Characteristic handle for the response ",
							" GATT_EvtReadUsingUuidResp_T ",
							" C typedef struct GATT_EvtReadUsingUuidResp_T { uint16_t connHandle; uint8_t attrPairLength; uint16_t attrDataLength; uint8_t attrData[BLE_ATT_MAX_MTU_LEN-ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; } GATT_EvtReadUsingUuidResp_T; ",
							" Description Data structure for GATTC_EVT_READ_USING_UUID_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrPairLength Length of each attribute handle-value pair in the list attrDataLength Length of attributes data list attrData Attribute data list Data consists of one or more handle-value pairs - Format of handle-value pair: 2-byte Characteristic Value handle Characteristic Value Read - Number of handle-value pairs = (attrDataLength/attrPairLength) Note that the format of the data is little endian ",
							" GATT_EvtReceiveCfm_T ",
							" C typedef struct GATT_EvtReceiveCfm_T { uint16_t connHandle; uint16_t attrHandle; } GATT_EvtReceiveCfm_T; ",
							" Description Data structure for GATTS_EVT_HV_CONFIRM event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrHandle The confirmation is acknowledgement of indication performed on this attribute hanlde ",
							" GATT_EvtReceiveHandleValue_T ",
							" C typedef struct GATT_EvtReceiveHandleValue_T { uint16_t connHandle; uint16_t charHandle; uint16_t receivedLength; uint8_t receivedValue[BLE_ATT_MAX_MTU_LEN-ATT_NOTI_INDI_HEADER_SIZE]; } GATT_EvtReceiveHandleValue_T; ",
							" Description Data structure for GATTC_EVT_HV_NOTIFY or GATTC_EVT_HV_INDICATE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection charHandle Handle of the attribute which is notified/indicated receivedLength Length of value received in notification/indication receivedValue Value received in Notification/Indication ",
							" GATT_EvtServiceChange_T ",
							" C typedef struct GATT_EvtServiceChange_T { uint16_t connHandle; uint8_t serviceChange; } GATT_EvtServiceChange_T; ",
							" Description Data structure for GATTS_EVT_SERVICE_CHANGE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection Value 0x00 to all the bonded devices serviceChange Service change-aware state Database change state  ",
							" GATT_EvtUpdateMtu_T ",
							" C typedef struct GATT_EvtUpdateMtu_T { uint16_t connHandle; uint16_t exchangedMTU; } GATT_EvtUpdateMtu_T; ",
							" Description Data structure for ATT_EVT_UPDATE_MTU event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection exchangedMTU The exchanged MTU after connection ",
							" GATT_EvtWrite_T ",
							" C typedef struct GATT_EvtWrite_T { uint16_t connHandle; uint16_t attrHandle; uint8_t writeType; uint8_t flags; uint16_t valueOffset; uint16_t writeDataLength; uint8_t writeValue[BLE_ATT_MAX_MTU_LEN - ATT_WRITE_HEADER_SIZE]; } GATT_EvtWrite_T; ",
							" Description Data structure for GATTS_EVT_WRITE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrHandle Handle of the attribute to be written writeType Write Type See ATT opcodes Only ATT_WRITE_REQ/ATT_WRITE_CMD/ATT_PREPARE_WRITE_REQ/ATT_EXECUTE_WRITE_REQ are allowed flags Flags for Execute Write Request See Execute write flag  valueOffset Value offset for Prepare Write Request writeDataLength Length of the data to be written writeValue Value to be written to the attribute ",
							" GATT_EvtWriteResp_T ",
							" C typedef struct GATT_EvtWriteResp_T { uint16_t connHandle; uint8_t responseType; uint16_t charHandle; uint16_t valueOffset; uint16_t writeLength; uint8_t writeValue[BLE_ATT_MAX_MTU_LEN-ATT_PREP_WRITE_RESP_HEADER_SIZE]; } GATT_EvtWriteResp_T; ",
							" Description Data structure for GATTC_EVT_WRITE_RESP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection responseType Write response type See ATT opcodes Only ATT_WRITE_RSP/ATT_PREPARE_WRITE_RSP/ATT_EXECUTE_WRITE_RSP are allowed charHandle Handle (Same as in prepare write request) Used only when responseType is ATT_PREPARE_WRITE_RSP valueOffset Write offset (Same as in prepare write request) Used only when responseType is ATT_PREPARE_WRITE_RSP writeLength Length of written value Used only when responseType is ATT_PREPARE_WRITE_RSP writeValue Value written (Same as in prepare write request) Used only when responseType is ATT_PREPARE_WRITE_RSP ",
							" GATTC_DiscoverCharacteristicByUuidParams_T ",
							" C typedef struct GATTC_DiscoverCharacteristicByUuidParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t uuidLength; uint8_t uuid[ATT_MAX_UUID_SIZE]; } GATTC_DiscoverCharacteristicByUuidParams_T; ",
							" Description GATT Discover Characteristics By UUID parameters ",
							" Field Documentation Field Description startHandle Start handle for querying specific characteristic endHandle End handle for querying specific characteristic uuidLength Length of the specific characteristic UUID in bytes uuid The specific characteristic UUID The format of UUID is little endian ",
							" GATTC_DiscoverPrimaryServiceByUuidParams_T ",
							" C typedef struct GATTC_DiscoverPrimaryServiceByUuidParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t valueLength; uint8_t value[ATT_MAX_UUID_SIZE]; } GATTC_DiscoverPrimaryServiceByUuidParams_T; ",
							" Description GATT Discover Primary Service By UUID parameters ",
							" Field Documentation Field Description startHandle Start handle for querying the service by UUID endHandle End handle for querying the service by UUID valueLength length of UUID in bytes Should be set to 2 for 16-bit UUID and 16 for 128 bit UUID value UUID of particular primary service to be discovered The format of UUID is little endian ",
							" GATTC_ReadByTypeParams_T ",
							" C typedef struct GATTC_ReadByTypeParams_T { uint16_t startHandle; uint16_t endHandle; uint8_t attrTypeLength; uint8_t attrType[ATT_MAX_UUID_SIZE]; } GATTC_ReadByTypeParams_T; ",
							" Description GATT Read By Type Request parameters ",
							" Field Documentation Field Description startHandle Starting handle for querying endHandle Ending handle for querying attrTypeLength Length of the attribute type in bytes Should be set to 2 for 16-bit UUID and 16 for 128 bit UUID attrType Attribute Type i e Characteristic UUID The format of UUID is little endian ",
							" GATTC_WriteParams_T ",
							" C typedef struct GATTC_WriteParams_T { uint16_t charHandle; uint16_t charLength; uint8_t charValue[BLE_ATT_MAX_MTU_LEN - ATT_WRITE_HEADER_SIZE]; uint8_t writeType; uint16_t valueOffset; uint8_t flags; } GATTC_WriteParams_T; ",
							" Description GATT Write Request parameters ",
							" Field Documentation Field Description charHandle Handle of the characteristic to be written charLength Length of the characteristic to be written For Max value refer size of charValue charValue Data to be written writeType Type of the write operation See ATT opcodes Only ATT_WRITE_REQ/ATT_WRITE_CMD/ATT_PREPARE_WRITE_REQ/ATT_EXECUTE_WRITE_REQ are allowed valueOffset The offset of the first octet to be written Set to offset where attribute part value is to be written for Prepare Write request For all other write types set to 0 flags Flag Used only when writeType is ATT_EXECUTE_WRITE_REQ (See Execute write flag ) Otherwise always 0) ",
							" GATTS_Attribute_T ",
							" C typedef struct GATTS_Attribute_T { uint8_t *p_uuid; uint8_t *p_value; uint16_t *p_len; uint16_t maxLen; uint8_t settings; uint8_t permissions; } GATTS_Attribute_T; ",
							" Description GATT attribute ",
							" Field Documentation Field Description p_uuid Pointer to the attribute's UUID (attribut type) p_value Pointer to the attribute's value p_len Pointer to the length of the attribute's value maxLen Maximum length of attribute's value settings Attribute settings permissions Attribute permissions ",
							" GATTS_BondingParams_T ",
							" C typedef struct GATTS_BondingParams_T { uint8_t serviceChange; uint8_t clientSupportFeature; } GATTS_BondingParams_T; ",
							" Description Bonding parameters ",
							" Field Documentation Field Description serviceChange The service change state clientSupportFeature Support feature of the related client ",
							" GATTS_CccdList_T ",
							" C typedef struct GATTS_CccdList_T { uint16_t attrHandle; uint16_t cccdValue; } GATTS_CccdList_T; ",
							" Description CCCD list ",
							" Field Documentation Field Description attrHandle The attribute handle of the CCCD cccdValue Value of the CCCD ",
							" GATTS_CccdSetting_T ",
							" C typedef struct GATTS_CccdSetting_T { uint16_t attrHandle; uint16_t acceptableValue; } GATTS_CccdSetting_T; ",
							" Description CCCD parameters ",
							" Field Documentation Field Description attrHandle The attribute handle of the CCCD acceptableValue The acceptable value of the CCCD ",
							" GATTS_GattServiceOptions_T ",
							" C typedef struct GATTS_GattServiceOptions_T { uint8_t enable; } GATTS_GattServiceOptions_T; ",
							" Description Service options ",
							" Field Documentation Field Description enable Enable or disable GATT service ",
							" GATTS_HandleValueParams_T ",
							" C typedef struct GATTS_HandleValueParams_T { uint16_t charHandle; uint16_t charLength; uint8_t charValue[BLE_ATT_MAX_MTU_LEN - ATT_HANDLE_VALUE_HEADER_SIZE]; uint8_t sendType; } GATTS_HandleValueParams_T; ",
							" Description GATT Handle Value Notification/Indication parameters ",
							" Field Documentation Field Description charHandle Handle of the characteristic to be notified/indicated charLength Length of the characteristic to be notified/indicated Max value limited to size of charValue  charValue Characteristic value to be notified/indicated sendType Flag indicating Notification or Indication See ATT opcodes Only ATT_HANDLE_VALUE_NTF/ATT_HANDLE_VALUE_IND are allowed ",
							" GATTS_SendErrRespParams_T ",
							" C typedef struct GATTS_SendErrRespParams_T { uint8_t reqOpcode; uint8_t errorCode; uint16_t attrHandle; } GATTS_SendErrRespParams_T; ",
							" Description GATT Send Error Response parameters ",
							" Field Documentation Field Description reqOpcode Request that generated this error response See ATT opcodes  errorCode Reason why the request has generated an error response See ATT error code  attrHandle Attribute handle that generated this error response ",
							" GATTS_SendReadByTypeRespParams_T ",
							" C typedef struct GATTS_SendReadByTypeRespParams_T { uint16_t allPairsLength; uint8_t eachPairLength; uint8_t attrDataList[BLE_ATT_MAX_MTU_LEN - ATT_READ_BY_TYPE_RESP_HEADER_SIZE]; } GATTS_SendReadByTypeRespParams_T; ",
							" Description GATT Send Read By Type Response parameters ",
							" Field Documentation Field Description allPairsLength Length of all handle-value pairs eachPairLength Length of one handle-value pair Read By Type Response may contain multiple handle-value pairs of the same length attrDataList Handle-value pairs to be sent to Client The data format should be little endian ",
							" GATTS_SendReadRespParams_T ",
							" C typedef struct GATTS_SendReadRespParams_T { uint16_t attrLength; uint8_t responseType; uint8_t attrValue[BLE_ATT_MAX_MTU_LEN - ATT_READ_RESP_HEADER_SIZE]; } GATTS_SendReadRespParams_T; ",
							" Description GATT Send Read Response parameters ",
							" Field Documentation Field Description attrLength Length of the read attribute responseType Read response type ATT opcodes Only ATT_READ_RSP/ATT_READ_BLOB_RSP are allowed attrValue Value to be sent in Read response ",
							" GATTS_SendWriteRespParams_T ",
							" C typedef struct GATTS_SendWriteRespParams_T { uint8_t responseType; uint16_t attrHandle; uint16_t valueOffset; uint16_t writeLength; uint8_t writeValue[BLE_ATT_MAX_MTU_LEN - ATT_WRITE_RESP_HEADER_SIZE]; } GATTS_SendWriteRespParams_T; ",
							" Description GATT Send Write Response parameters ",
							" Field Documentation Field Description responseType Write response type ATT opcodes Only ATT_WRITE_RSP/ATT_PREPARE_WRITE_RSP/ATT_EXECUTE_WRITE_RSP are allowed attrHandle Handle of the attribute written Use for Prepare Write Response only valueOffset Offset of the first octet written Use for Prepare Write Response only writeLength Length of the written value Used for Prepare Write Response only and should be same as corresponding field in Prepare Write request received writeValue Value of the attribute written Used for Prepare Write Response only and should be same as as corresponding field in Prepare Write request received ",
							" GATTS_Service_T ",
							" C typedef struct GATTS_Service_T { struct GATTS_Service_T *p_next; GATTS_Attribute_T *p_attrList; GATTS_CccdSetting_T const *p_cccdSetting; uint16_t startHandle; uint16_t endHandle; uint8_t cccdNumber; } GATTS_Service_T; ",
							" Description Service table parameters ",
							" Field Documentation Field Description p_next For internal use only p_attrList Pointer to attribute list in this service p_cccdSetting CCCD information of the service Can be null startHandle The handle of the first attribute in this group endHandle The handle of the last attribute in this group cccdNumber Number of CCCD in the service ",
							" Functions ",
							" GATTC_DiscoverAllCharacteristics ",
							" C uint16_t GATTC_DiscoverAllCharacteristics(uint16_t connHandle uint16_t startHandle uint16_t endHandle); ",
							" Description GATT Client starts discovery of all characteristics within the given handle range when this API is called Following events may be generated: Event GATTC_EVT_DISC_CHAR_RESP with procedureStatus in GATT_EvtDiscCharResp_T set to continue This indicates characteristic declarations are found but the discovery is not yet complete (more declarations may be present) See p_attrData in GATT_EvtDiscCharResp_T for extracting the characteristic details Event GATTC_EVT_DISC_CHAR_RESP with procedureStatus in GATT_EvtDiscCharResp_T set to Finish This indicates termination of the procedure (Value handle of last found characteristic declaration is equal to end handle of input handle range) Event GATTC_EVT_ERROR_RESP with error code ATT_ERRCODE_ATTRIBUTE_NOT_FOUND is generated This indicates termination of the procedure (Last found Value handle is not same as end handle of the input handle range or no characteristic declaration found) ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when characteristics not found or discovery procedure is end GATTC_EVT_DISC_CHAR_RESP Generated when characteristics discovered from remote ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to discover the characteristics for [in] startHandle Start of handle range to be queried [in] endHandle End of handle range to be queried ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts discovering the characteristics MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_DiscoverAllDescriptors ",
							" C uint16_t GATTC_DiscoverAllDescriptors(uint16_t connHandle uint16_t startHandle uint16_t endHandle); ",
							" Description GATT Client starts discovering all descriptors within the given handle range when this API is called Following events may be generated: Event GATTC_EVT_DISC_DESC_RESP with procedureStatus in GATT_EvtDiscDescResp_T set to continue This indicates descriptors are found but the discovery is not yet complete (more descriptors may be present) Event GATTC_EVT_DISC_DESC_RESP with procedureStatus in GATT_EvtDiscDescResp_T set to Finish This indicates termination of the procedure (Handle of last found descriptor is equal to end handle of input handle range) Event GATTC_EVT_ERROR_RESP with error code ATT_ERRCODE_ATTRIBUTE_NOT_FOUND is generated This indicates termination of the procedure (Handle of last found descriptor is not same as end handle of the input handle range or no descriptor was found) ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when characteristic descriptors not found or discovery procedure is end GATTC_EVT_DISC_DESC_RESP Generated when characteristic descriptors discovered from remote ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to discover the descriptors for [in] startHandle Start of the querying handle range [in] endHandle End of the querying handle range ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the discovering MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_DiscoverAllPrimaryServices ",
							" C uint16_t GATTC_DiscoverAllPrimaryServices(uint16_t connHandle); ",
							" Description GATT Client starts the discovery of all primary services when this API is called All primary services in the handle range 0x0001 - 0xFFFF will be discovered with a single call to this API The event GATTC_EVT_DISC_PRIM_SERV_RESP may be generated multiple times until all services are discovered Following events may be generated on the GATT client: Event GATTC_EVT_DISC_PRIM_SERV_RESP with procedureStatus in GATT_EvtDiscPrimServResp_T set to continue This indicates some services are found but the discovery of all services is not complete (See p_attrData in GATT_EvtDiscPrimServResp_T for extracting service data received ) Event GATTC_EVT_DISC_PRIM_SERV_RESP with procedureStatus in GATT_EvtDiscPrimServResp_T set to Finish This indicates termination of the procedure (End Handle for last found service is 0xFFFF See p_attrData in GATT_EvtDiscPrimServResp_T for End Group Handle of a discovered service) Event GATTC_EVT_ERROR_RESP with error code ATT_ERRCODE_ATTRIBUTE_NOT_FOUND is generated This indicates termination of the procedure (End Group handle of last found service is less that 0xFFFF) ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when service not found or discovery procedure is end GATTC_EVT_DISC_PRIM_SERV_RESP Generated when services discovered from remote ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to discover the services for ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the discovering MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_DiscoverCharacteristicsByUUID ",
							" C uint16_t GATTC_DiscoverCharacteristicsByUUID(uint16_t connHandle GATTC_DiscoverCharacteristicByUuidParams_T *p_discParams); ",
							" Description GATT Client starts discovery of specific characteristics by UUID within the given handle range when this API is called Following events may be generated: Event GATTC_EVT_DISC_CHAR_BY_UUID_RESP with procedureStatus in GATT_EvtDiscCharResp_T set to continue This indicates specific characteristics are found but the discovery is not yet complete (more characteristics may be present) See p_attrData in GATT_EvtDiscCharResp_T for extracting the characteristic details Event GATTC_EVT_DISC_CHAR_BY_UUID_RESP with procedureStatus in GATT_EvtDiscCharResp_T set to Finish This indicates termination of the procedure (Value handle of last found characteristic declaration is equal to end handle of input handle range) Please note that the response may be null if no characteristic found in last query Event GATTC_EVT_ERROR_RESP with error code ATT_ERRCODE_ATTRIBUTE_NOT_FOUND is generated This indicates termination of the procedure (Last found Value handle is not same as end handle of the input handle range or no characteristic declaration found) ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when characteristics not found or discovery procedure is end GATTC_EVT_DISC_CHAR_BY_UUID_RESP Generated when characteristics discovered from remote ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to discover the characteristics for [in] p_discParams Pointer to structure containing the specific characteristic UUID to be discovered and the discovered handle range ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts discovering the characteristics MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_DiscoverPrimaryServiceByUUID ",
							" C uint16_t GATTC_DiscoverPrimaryServiceByUUID(uint16_t connHandle GATTC_DiscoverPrimaryServiceByUuidParams_T *p_discParams); ",
							" Description GATT Client starts the procedure for discovering primary service by UUID within the given input handle range Multiple instances of the primary service with specified UUID may be present on the GATT server Hence the event GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP may be generated multiple times until all the service instances are discovered Following events may be generated: Event GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP with procedureStatus in GATT_EvtDiscPrimServByUuidResp_T set to continue This indicates service instance(s) found but the discovery not complete (more instances may be present) See p_attrData in GATT_EvtDiscPrimServByUuidResp_T for extracting service data received Event GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP with procedureStatus in GATT_EvtDiscPrimServByUuidResp_T set to Finish This indicates termination of the procedure (End Group Handle of last found service instance is equal to End handle in input handle range) (See GATTC_DiscoverPrimaryServiceByUuidParams_T p_attrData in GATT_EvtDiscPrimServByUuidResp_T contains the End Group Handle of the service found ) Event GATTC_EVT_ERROR_RESP with error code ATT_ERRCODE_ATTRIBUTE_NOT_FOUND is generated This indicates termination of the procedure (End Group handle of last found service is less that End handle in input handle range ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when service not found or discovery procedure is end GATTC_EVT_DISC_PRIM_SERV_BY_UUID_RESP Generated when services discovered from remote ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to discover the services [in] p_discParams Pointer to structure containing the UUID of the primary service and handle range to be queried ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the discovering MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_ExchangeMTURequest ",
							" C uint16_t GATTC_ExchangeMTURequest(uint16_t connHandle uint16_t mtuLen); ",
							" Description GATT Client sends Exchange MTU Request to GATT Server If the requested MTU length is less than BLE_ATT_DEFAULT_MTU_LEN then BLE_ATT_DEFAULT_MTU_LEN is requested If the requested MTU length is greater than BLE_ATT_MAX_MTU_LEN then BLE_ATT_MAX_MTU_LEN is requested ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when fail to exchange MTU ATT_EVT_UPDATE_MTU Generated when MTU exchanges successfully ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send Exchange MTU Request [in] mtuLen Requested MTU length (Range is BLE_ATT_DEFAULT_MTU_LEN to BLE_ATT_MAX_MTU_LEN inclusive of both limits) ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the Exchange MTU Request MBA_RES_FAIL Operation rejected This request cannot be performed over BR/EDR link MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid connection handle MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_HandleValueConfirm ",
							" C uint16_t GATTC_HandleValueConfirm(uint16_t connHandle); ",
							" Description GATT client sends Handle Value Confirmation to the GATT server when it receives a Handle Value Indication It should be called to send a confirmation only if event GATTC_EVT_HV_INDICATE is received This event is generated if manual mode is configured (see GATTC_CONFIG_MANUAL_CONFIRMATION ) and an indication is received ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send Handle Value Confirmation ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the Handle Value Confirmation MBA_RES_FAIL Operation is not permitted Either Automatic mode is configured or an Indication was not received MBA_RES_OOM Out Of Memory Allocation of memory for internal data structure failed MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" GATTC_Init ",
							" C uint16_t GATTC_Init(uint16_t configuration); ",
							" Description Initialize GATT Client module ",
							" Parameters Parameter Description [in] configuration Bit-field configuring GATT Client configurable functions GATT client configuration definitions for bit definition - If manual mode is configured then the API GATTC_HandleValueConfirm should be called to send a confirmation for an indication when event GATTC_EVT_HV_INDICATE is received - If auto mode is configured then the GATT stack takes care of sending confirmation ",
							" Return values Return value Description MBA_RES_SUCCESS Success initialize GATT client module MBA_RES_OOM Internal memory allocation failure ",
							" GATTC_Read ",
							" C uint16_t GATTC_Read(uint16_t connHandle uint16_t charHandle uint16_t valueOffset); ",
							" Description GATT Client initiates a read operation to GATT Server when this API is called This API should be used to read a Characteristic Value or Characteristic descriptor ",
							" Note Read long attributes: If the attribute is not long attribute valueOffset should be set to 0 and Read request is sent to GATT Server by this API If the attribute is a long attribute then first (ATT_MTU-1) bytes are read with valueOffset set to 0 (API uses Read Request) and rest of the bytes are read using appropriate Non-zero valueOffset (API uses Read Blob Request) The Read Blob Request should be initiated in the application by calling the API GATTC_Read with non-zero valueOffset when the event GATTC_EVT_READ_RESP is received This should be repeated each time the event GATTC_EVT_READ_RESP is received until expected number of bytes of the long attribute are read ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when fail to read GATTC_EVT_READ_RESP Generated when read successfully ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection [in] charHandle Handle of the characteristic value or descriptor to be read [in] valueOffset Non-zero offset value to initiate a read blob request ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the read operation MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_ReadUsingUUID ",
							" C uint16_t GATTC_ReadUsingUUID(uint16_t connHandle GATTC_ReadByTypeParams_T *p_readParams); ",
							" Description GATT Client initiates read of characteristic value for the specified characteristic UUID within the given handle range when this API is called ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when fail to read GATTC_EVT_READ_USING_UUID_RESP Generated when read successfully ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to read characteristic value for [in] p_readParams Pointer to structure containing the UUID of the Characteristic and handle range to be queried ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initiates read using UUID procedure MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTC_SetPreferredMtu ",
							" C uint16_t GATTC_SetPreferredMtu(uint16_t preferredMtuCentral); ",
							" Description GATT Client allow user to configure preferred ATT MTU as GATT Client When connection established with remote peer GATT client will initiate MTU negotiation with remote peer By default BLE_ATT_MAX_MTU_LEN will be used to negotiate with remote If user sets preferred MTU the set value will be used to negotiate with remote ",
							" Note The API is optional If preferred MTU is not set BLE_ATT_MAX_MTU_LEN will be used Only preferred MTU setting provided in GAP central role In GAP peripheral role remote central will initiate MTU negotiation in most of the time The setting won't be applied to the current connections GATTC_ExchangeMTURequest for MTU exchange in connected state ",
							" Parameters Parameter Description [in] preferredMtuCentral Preferred ATT MTU when GAP role is central ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configured preferred MTU in GATT Client role MBA_RES_INVALID_PARA Invalid MTU value usage ",
							" GATTC_Write ",
							" C uint16_t GATTC_Write(uint16_t connHandle GATTC_WriteParams_T *p_writeParams); ",
							" Description GATT Client initiates a write operation to GATT Server This API should be used to write a Characteristic Value or Characteristic descriptor Refer ATT opcodes (ATT_WRITE_REQ/ATT_WRITE_CMD/ATT_PREPARE_WRITE_REQ/ATT_EXECUTE_WRITE_REQ) for write types ",
							" Note Write long attribute: If the attribute is not long attribute valueOffset should be set to 0 and writeType should be set to Write Request/Write Command as required If the attribute is a long attribute then first (ATT_MTU-3) bytes should be written with valueOffset set to 0 and writeType set to ATT_PREPARE_WRITE_REQ (See GATTC_WriteParams_T ) in the API The subsequent prepare write request should be called with appropriate value Offset and next set of data when event GATTC_EVT_WRITE_RESP is received This should be repeated until expected number of bytes is queued up in the server When event GATTC_EVT_WRITE_RESP is received for last prepare write request this API should be called with writeType set to ATT_EXECUTE_WRITE_REQ and flags set to Execute write flag (See GATTC_WriteParams_T ) ",
							" Events generated GATTC_EVT_ERROR_RESP Generated when fail to write GATTC_EVT_WRITE_RESP Generated when write successfully ATT_EVT_TIMEOUT Generated when server does not respond the request ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send write operation [in] p_writeParams Pointer to the Write Request parameters Refer GATTC_WriteParams_T ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the write operation MBA_RES_FAIL Operation is not permitted MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters One of the following reasons: - Connection handle is not valid - Invalid write parameters See GATTC_WriteParams_T for valid values MBA_RES_NO_RESOURCE No available resource to send write operation MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" GATTS_AddService ",
							" C uint16_t GATTS_AddService(GATTS_Service_T *p_service uint8_t numAttributes); ",
							" Description This API registers service to GATT server ",
							" Note Note that the start handle of the registering service should be greater than GATTS_APP_SVC_START_HDL  ",
							" Parameters Parameter Description [in] p_service Pointer to the registering service information [in] numAttributes Number of the attributes in the registering service ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully registering the service MBA_RES_FAIL Fail to register the service The assigned attribute handles in the service conflict or the start handle of the service is smaller than GATTS_APP_SVC_START_HDL  ",
							" GATTS_ConfigureBuildInService ",
							" C uint16_t GATTS_ConfigureBuildInService(GATTS_GattServiceOptions_T *p_gattServiceOptions); ",
							" Description GATT Server configures the build-in GATT service Optional service \"GATT Service\" can be configured enable/disable ",
							" Note The function is suggested to be called when initialization Also can't be called in connected state The configured option (enable/disable) should not be changed if the function is called several times Otherwise service change situation need to be considered in the multiple configuring build-in services case ",
							" Parameters Parameter Description [in] p_gattServiceOptions Pointer to the configuration structure of GATT Service See GATTS_GattServiceOptions_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configured the build-in Services MBA_RES_FAIL Operation is not permitted ",
							" GATTS_GetHandleValue ",
							" C uint16_t GATTS_GetHandleValue(uint16_t attrHandle uint8_t *p_attrValue uint16_t *p_attrLength); ",
							" Description Gets the attribute value of a valid attribute from GATT Server If the attribute is permitted to read value will be return in application provided buffer ",
							" Note The format of the attribute value is raw-data ",
							" Parameters Parameter Description [in] attrHandle Attribute Handle [out] p_attrValue Pointer of buffer to store getting attribute value Valid if API return status is success [in] p_attrLength As input parameter describe size of application provided buffer As output parameter describe actual size of getting attribute value when API return status is success ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully gets the attribute value MBA_RES_FAIL Operation is not permitted The attribute handle is valid but the attribute can't be read MBA_RES_INVALID_PARA Invalid parameters ",
							" GATTS_Init ",
							" C uint16_t GATTS_Init(uint16_t configuration); ",
							" Description Initialize GATT Server module ",
							" Parameters Parameter Description [in] configuration Bit-field configuring GATT Server configurable functions GATT server configuration definitions for bit definition ",
							" Return values Return value Description MBA_RES_SUCCESS Success initialize GATT server module MBA_RES_OOM Internal memory allocation failure ",
							" GATTS_RemoveService ",
							" C uint16_t GATTS_RemoveService(uint16_t startHandle); ",
							" Description GATT server removes registered service ",
							" Parameters Parameter Description [in] startHandle The start handle of the registered service ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully remove the registered service MBA_RES_FAIL Fail to remove the service Service with the assigned start handle does not exist ",
							" GATTS_SendErrorResponse ",
							" C uint16_t GATTS_SendErrorResponse(uint16_t connHandle GATTS_SendErrRespParams_T *p_errParams); ",
							" Description GATT Server sends an error response This API should be called when a request event is received by the application The request is not processed by the GATT server For example This API may be called after Application receives Write Request event ( GATTS_EVT_WRITE ) but request cannot be processed as the attribute value does not have Write permission ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send the error response [in] p_errParams Pointer to Error Response parameters See GATTS_SendErrRespParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initiates an error response MBA_RES_FAIL Operation is not permitted The error response is not for the received request i e The reqOpcode field in the GATTS_SendErrRespParams_T is the matched to the receiving request MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" GATTS_SendHandleValue ",
							" C uint16_t GATTS_SendHandleValue(uint16_t connHandle GATTS_HandleValueParams_T *p_hvParams); ",
							" Description GATT Server sends Handle Value Notification or Indication to GATT Client when this API is called sendType in GATTS_HandleValueParams_T determines if a notification or Indication is sent If sendType is set to ATT_HANDLE_VALUE_NTF then a notification is sent if notify property is set for the characteristic and Notification is enabled in its CCCD If sendType is set to ATT_HANDLE_VALUE_IND then an Indication is sent if Indicate property is set for the characteristic and Indication is enabled in its CCCD ",
							" Events generated GATTS_EVT_HV_CONFIRM Generated if indication is successfully sent ATT_EVT_TIMEOUT Generated when client does not respond the indication ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send Handle Value Notification/Indication [in] p_hvParams Pointer to the Handle Value Notification/Indication Parameters ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the Handle Value Notification/Indication MBA_RES_FAIL Operation is not permitted Memory not available to send notification/indication MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters One of the following errors may have occurred: - Connection handle is not valid - Parameters specified in GATTS_HandleValueParams_T have invalid/out of range values - The sending data length is exceeded the MTU - Notification/Indication has to be sent but either Notify/Indicate property is not set for the characteristic or Notification/Indication is not enabled in the CCCD MBA_RES_BUSY Send indication when another indication is ongoing Only available in sending indication MBA_RES_NO_RESOURCE No available resource to send the handle value ",
							" GATTS_SendReadByTypeResponse ",
							" C uint16_t GATTS_SendReadByTypeResponse(uint16_t connHandle GATTS_SendReadByTypeRespParams_T *p_respParams); ",
							" Description see GATT Server sends the Read By Type response This API should be called to send the response only when event GATTS_EVT_READ is received ",
							" Note If the attribute setting of the attribute is set as SETTING_MANUAL_READ_RSP the event GATTS_EVT_READ with readType is ATT_READ_BY_TYPE_REQ will be sent to application when GATT server receives the request performing on this attribute In this case application need to call this API to send read by type response or send error response if the request is not permitted ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send the read by type response [in] p_respParams Pointer to Read By Type Response parameters See GATTS_SendReadByTypeRespParams_T ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts to send the read by type response MBA_RES_FAIL Operation is not permitted if GATT server does not receive read by type request before MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" GATTS_SendReadResponse ",
							" C uint16_t GATTS_SendReadResponse(uint16_t connHandle GATTS_SendReadRespParams_T *p_respParams); ",
							" Description GATT Server sends the read/read blob response when this API is called responseType in GATTS_SendReadRespParams_T indicates if the response is for read request or read blob request Response to the GATT client is sent only if: API initiates a Read response and a Read request was received by GATT server API initiates a Read Blob response and a Read Blob request was received by GATT server ",
							" Note If the attribute setting of the attribute is set as SETTING_MANUAL_READ_RSP the event GATTS_EVT_READ with readType is ATT_READ_REQ or ATT_READ_BLOB_REQ will be sent to application when GATT server receives these requests performing on this attribute In this case application need to call this API to send read response or send error response if the request is not permitted This API should be called to send the response only when event GATTS_EVT_READ is received ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send the read response [in] p_respParams Pointer to Read Response parameters See GATTS_SendReadRespParams_T ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts to send the read response MBA_RES_FAIL Operation is not permitted as Read response/Read Blob response transmission was requested but read request/read blob request was not received MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" GATTS_SendWriteResponse ",
							" C uint16_t GATTS_SendWriteResponse(uint16_t connHandle GATTS_SendWriteRespParams_T *p_respParams); ",
							" Description GATT Server sends the write/prepare write/execute write response when this API is called ResponseType in GATTS_SendWriteRespParams_T indicates if the response is for write request prepare write request or execute write request Response to the GATT client is sent only if: API initiates a Write response and a Write request was received by GATT server API initiates a Prepare Write response and a Prepare Write request was received by GATT server API initiates a Execute Write response and a Execution Write request was received by GATT server ",
							" Note If the attribute setting of the attribute is set as SETTING_MANUAL_WRITE_RSP the event GATTS_EVT_WRITE with writeType is ATT_WRITE_REQ or ATT_PREPARE_WRITE_REQ or ATT_EXECUTE_WRITE_REQ will be sent to application when GATT server receives these requests performing on this attribute In this case application need to call this API to send write response or send error response if the request is not permitted This API should be called to send the response only when event GATTS_EVT_WRITE is received ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send the write response [in] p_respParams Pointer to Write Response parameters See GATTS_SendWriteRespParams_T ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts to send the write response MBA_RES_FAIL Operation is not permitted as Write response/Prepare Write response/Execute Write response transmission was requested but write request/prepare write request/execute write request was not received MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" GATTS_ServiceChanged ",
							" C uint16_t GATTS_ServiceChanged(); ",
							" Description This API is used to enable the service change and notify clients that service table is changed Service might be added or removed After all the changes this API is used to enable the service change All the connected client will receive indication if the indication in configured ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully notify the connected devices th service change ",
							" GATTS_SetPreferredMtu ",
							" C uint16_t GATTS_SetPreferredMtu(uint16_t preferredMtuPeriph uint16_t preferredMtuCentral); ",
							" Description GATT Server configures preferred ATT MTU By default BLE_ATT_MAX_MTU_LEN will be used to respond exchange MTU request from remote client User specified ATT MTU will be used if the preferred MTU is configured ",
							" Note The API is optional BLE_ATT_MAX_MTU_LEN will be used to respond if no configuration ",
							" Parameters Parameter Description [in] preferredMtuPeriph Preferred ATT MTU when GAP role is peripheral [in] preferredMtuCentral Preferred ATT MTU when GAP role is central ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configured preferred MTU in GATT Server role MBA_RES_INVALID_PARA Invalid MTU value usage ",
							" GATTS_UpdateBondingInfo ",
							" C uint16_t GATTS_UpdateBondingInfo(uint16_t connHandle GATTS_BondingParams_T *p_gattsParams uint8_t numOfCccds GATTS_CccdList_T *p_cccdList); ",
							" Description Notify GATT Server the relevant bonding information of the connection ",
							" Note This function is suggested to be called once after connected whether the connection is bonded or not The GATT Server requires bonding information when processing some requests on bonded connection If the GATT Server initialized with gatt caching supported i e GATTS_Init with GATTS_CONFIG_CACHING_SUPPORT this function must be called after the link connected (whether bonded link or not) The stack GATT will start process packets after the bonded information get ",
							" Parameters Parameter Description [in] connHandle Connection handle [in] p_gattsParams GATTS required bonding parameters See GATTS_BondingParams_T Set NULL if it is non-bonded connection [in] numOfCccds Number of CCCDs of this bonded connection Set zero if it is non-bonded connection [in] p_cccdList CCCDs list of this bonded connection GATTS_CccdList_T Set NULL if it is non-bonded connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully notify GATT updated parameters MBA_RES_INVAIID_PARA The connection handle is invalid ",
							" Message Sequence Chart ",
							" GATTS Service Add/Remove    Example of GATT Service Add         Example of GATTS Service Remove     ",
							" GATTS Characteristic/Characteristic Descriptor Value Read    Example of GATTS Characteristic/Characteristic Descriptor Value Read (Handled by BLE_LIB)         Example of GATTS Characteristic/Characteristic Descriptor Value Read (Handled by Application) Authorization permission case The permission is accomplished by setting SETTING_MANUAL_READ_RSP on the attribute     ",
							" GATTS Long Characteristic/Characteristic Descriptor Value Read    Example of GATTS Characteristic/Characteristic Descriptor Value Long Read (Handled by BLE_LIB)         Example of GATTS Characteristic/Characteristic Descriptor Value Long Read (Handled by Application) Authorization permission case The permission is accomplished by setting SETTING_MANUAL_READ_RSP on the attribute     ",
							" GATTS Characteristic/Characteristic Descriptor Value Write    Example of GATTS Characteristic/Characteristic Descriptor Value Write (Response by BLE_LIB)         Example of GATTS Characteristic/Characteristic Descriptor Value Write (Response by Application)    Authorization permission case The permission is accomplished by setting SETTING_MANUAL_WRITE_RSP on the attribute       Example of GATTS Characteristic Value Write without Response     ",
							" GATTS Long Characteristic/Characteristic Descriptor Value Write  Note: Long writes won't be performed in BLE_LIB or Application at the same time    Example of GATTS Characteristic/Characteristic Descriptor Value Long Write (Handled by BLE_LIB)         Example of GATTS Characteristic/Characteristic Descriptor Value Long Write (Handled by Application) Authorization permission case The permission is accomplished by setting SETTING_MANUAL_WRITE_RSP on the attribute     ",
							" GATTS Handle Value Notification    Example of GATTS Handle Value Notification     ",
							" GATTS Handle Value Indication    Example of GATTS Handle Value Indication     ",
							" GATTC Primary Services Discovery    Example of GATTC Discover All Primary Services         Example of GATTC Discover a Specific Service     ",
							" GATTC Characteristics Discovery    Example of GATTC Discovery All Characteristics         Example of GATTC Discovery Characteristics By UUID     ",
							" GATTC Characteristic Descriptors Discovery    Example of GATTC Discovery All Characteristics Descriptors     ",
							" GATTC Relationship Discovery    Example of GATTC Relationship Discovery (Find Included Service)     ",
							" GATTC Characteristic/Characteristic Descriptor Value Read    Example of GATTC Characteristic/Characteristic Descriptor Value Read (N=ATT_MTU-1)     ",
							" GATTC Read Using Characteristic UUID    Example of GATTC Read Using Characteristic UUID     ",
							" GATTC Long Characteristic/Characteristic Descriptor Value Read    Example of GATTC Long Characteristic/Characteristic Descriptor Value Read (N=ATT_MTU-1)     ",
							" GATTC Characteristic/Characteristic Descriptor Value Write    Example of GATTC Characteristic/Characteristic Descriptor Value Write         Example of GATTC Characteristic Value Write Without Response     ",
							" GATTC Long Characteristic/Characteristic Descriptor Value Write    Example of GATTC Long Characteristic/Characteristic Descriptor Value Write     ",
							" GATTC Handle Value Confirmation    Example of sending GATTC Handle Value Confirmation by Application         Example of sending GATTC Handle Value Confirmation by BLE_LIB     ",
							" Logical Link Control and Adaptation Protocol (L2CAP)  This module defines the L2CAP interface to the BLE Library  ",
							" Defines ",
							" Connection parameter update result ",
							" C #define BLE_L2CAP_CONN_PARAMS_ACCEPT 0x0000 #define BLE_L2CAP_CONN_PARAMS_REJECT 0x0001 ",
							" Description The definition of response result code for connection parameter update ",
							" Macro Definition Macro Description BLE_L2CAP_CONN_PARAMS_ACCEPT Connection Parameters accepted BLE_L2CAP_CONN_PARAMS_REJECT Connection Parameters rejected ",
							" Connection result ",
							" C #define BLE_L2CAP_RES_CONN_SUCCESSFUL 0x0000 #define BLE_L2CAP_RES_CONN_SPSM_NOT_SUPPORTED 0x0002 #define BLE_L2CAP_RES_CONN_NO_RESOURCES 0x0004 #define BLE_L2CAP_RES_CONN_INSUFF_AUTHENTICATION 0x0005 #define BLE_L2CAP_RES_CONN_INSUFF_AUTHORIZATION 0x0006 #define BLE_L2CAP_RES_CONN_INSUFF_ENC_KEY_SIZE 0x0007 #define BLE_L2CAP_RES_CONN_INSUFF_ENC 0x0008 #define BLE_L2CAP_RES_CONN_INVALID_SOURCE_CID 0x0009 #define BLE_L2CAP_RES_CONN_SOURCE_CID_ALLOCATED 0x000A #define BLE_L2CAP_RES_CONN_UNACCEPT_PARAMS 0x000B #define BLE_L2CAP_RES_CONN_REJECT 0xFFFF ",
							" Description The definition of the result for L2CAP credit based connection response packet ",
							" Macro Definition Macro Description BLE_L2CAP_RES_CONN_SUCCESSFUL Connection successful BLE_L2CAP_RES_CONN_SPSM_NOT_SUPPORTED Connection refused - SPSM not supported BLE_L2CAP_RES_CONN_NO_RESOURCES Connection refused - no resource available BLE_L2CAP_RES_CONN_INSUFF_AUTHENTICATION Connection refused - insufficient authentication BLE_L2CAP_RES_CONN_INSUFF_AUTHORIZATION Connection refused - insufficient authorization BLE_L2CAP_RES_CONN_INSUFF_ENC_KEY_SIZE Connection refused - insufficient encryption key size BLE_L2CAP_RES_CONN_INSUFF_ENC Connection refused - insufficient encryption BLE_L2CAP_RES_CONN_INVALID_SOURCE_CID Connection refused - invalid Source CID BLE_L2CAP_RES_CONN_SOURCE_CID_ALLOCATED Connection refused - Source CID already allocated BLE_L2CAP_RES_CONN_UNACCEPT_PARAMS Connection refused - unacceptable parameters BLE_L2CAP_RES_CONN_REJECT Command reject ",
							" Credit based channel number ",
							" C #define BLE_L2CAP_MAX_CB_NUM 0x05 ",
							" Description The definition of L2cap credit based channel number per connection ",
							" Macro Definition Macro Description BLE_L2CAP_MAX_CB_NUM The maximum L2cap credit based channel number per connection ",
							" Maximum PDU size ",
							" C #define BLE_L2CAP_MAX_PDU_SIZE 1024 ",
							" Description The definition of PDU size ",
							" Macro Definition Macro Description BLE_L2CAP_MAX_PDU_SIZE The maximum PDU size ",
							" Maximum SDU size ",
							" C #define BLE_L2CAP_MAX_SDU_SIZE 739 ",
							" Description The definition of SDU size ",
							" Macro Definition Macro Description BLE_L2CAP_MAX_SDU_SIZE The maximum SDU size ",
							" Minimum MPS size ",
							" C #define BLE_L2CAP_MIN_MPS_SIZE 23 ",
							" Description The definition of MPS size ",
							" Macro Definition Macro Description BLE_L2CAP_MIN_MPS_SIZE The minimum MPS size ",
							" L2CAP minimum MTU size ",
							" C #define BLE_L2CAP_MIN_MTU_SIZE 23 ",
							" Description The definition of MTU size ",
							" Macro Definition Macro Description BLE_L2CAP_MIN_MTU_SIZE The minimum MTU size ",
							" L2CAP permission definition ",
							" C #define BLE_L2CAP_PERMISSION_NONE 0x00 #define BLE_L2CAP_PERMISSION_AUTHEN 0x01 #define BLE_L2CAP_PERMISSION_ENC 0x02 #define BLE_L2CAP_PERMISSION_AUTHEN_SC 0x03 ",
							" Description The definition of L2CAP permission ",
							" Macro Definition Macro Description BLE_L2CAP_PERMISSION_NONE No permission required BLE_L2CAP_PERMISSION_AUTHEN Connection requires encryption MITM protection BLE_L2CAP_PERMISSION_ENC Connection requires encryption No MITM protection BLE_L2CAP_PERMISSION_AUTHEN_SC Connection requires encryption MITM protection Secure Connections ",
							" Maximum SPSM number ",
							" C #define BLE_L2CAP_MAX_CB_SPSM_NUM 2 ",
							" Description The definition of SPSM number of credit based channel can be registered ",
							" Macro Definition Macro Description BLE_L2CAP_MAX_CB_SPSM_NUM The maximum SPSM number of credit based channel can be registered ",
							" SPSM range ",
							" C #define BLE_L2CAP_SPSM_DYNAMIC_MIN 0x0080 #define BLE_L2CAP_SPSM_DYNAMIC_MAX 0x00ff ",
							" Description Range for SPSM ",
							" Macro Definition Macro Description BLE_L2CAP_SPSM_DYNAMIC_MIN The minimum dynamic SPSM value BLE_L2CAP_SPSM_DYNAMIC_MAX The maximum dynamic SPSM value ",
							" Enums ",
							" BLE_L2CAP_EventId_T ",
							" C typedef enum BLE_L2CAP_EventId_T { BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ=0x00 BLE_L2CAP_EVT_CONN_PARA_UPDATE_RSP BLE_L2CAP_EVT_CB_CONN_IND BLE_L2CAP_EVT_CB_CONN_FAIL_IND BLE_L2CAP_EVT_CB_SDU_IND BLE_L2CAP_EVT_CB_ADD_CREDITS_IND BLE_L2CAP_EVT_CB_DISC_IND }BLE_L2CAP_EventId_T; ",
							" Description L2cap events delivered to application from BLE Stack Enumerator Description BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ Notify connection parameter update request received See BLE_L2CAP_EvtConnParamUpdateReq_T for the event content BLE_L2CAP_EVT_CONN_PARA_UPDATE_RSP Notify connection parameter update response received See BLE_L2CAP_EvtConnParamUpdateRsp_T for the event content BLE_L2CAP_EVT_CB_CONN_IND Notify a credit based connection is opened See BLE_L2CAP_EvtCbConnInd_T for the event content BLE_L2CAP_EVT_CB_CONN_FAIL_IND Notify a credit based connection is failed See BLE_L2CAP_EvtCbConnFailInd_T for the event content BLE_L2CAP_EVT_CB_SDU_IND Notify credit based SDU received See BLE_L2CAP_EvtCbSduInd_T for the event content BLE_L2CAP_EVT_CB_ADD_CREDITS_IND Notify credit based credit received See BLE_L2CAP_EvtCbAddCreditsInd_T for the event content BLE_L2CAP_EVT_CB_DISC_IND Notify credit based disconnect request received See BLE_L2CAP_EvtCbDiscInd_T for the event content ",
							" Structures ",
							" BLE_L2CAP_Event_T ",
							" C typedef struct BLE_L2CAP_Event_T { BLE_L2CAP_EventId_T eventId; BLE_L2CAP_EventField_T eventField; } BLE_L2CAP_Event_T; ",
							" Description BLE L2cap callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_L2CAP_EventField_T ",
							" C typedef union { BLE_L2CAP_EvtConnParamUpdateReq_T evtConnParamUpdateReq; BLE_L2CAP_EvtConnParamUpdateRsp_T evtConnParamUpdateRsp; BLE_L2CAP_EvtCbConnInd_T evtCbConnInd; BLE_L2CAP_EvtCbConnFailInd_T evtCbConnFailInd; BLE_L2CAP_EvtCbSduInd_T evtCbSduInd; BLE_L2CAP_EvtCbAddCreditsInd_T evtCbAddCreditsInd; BLE_L2CAP_EvtCbDiscInd_T evtCbDiscInd; } BLE_L2CAP_EventField_T; ",
							" Description Union of BLE L2cap callback event data types ",
							" Field Documentation Field Description evtConnParamUpdateReq Handle BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ  evtConnParamUpdateRsp Handle BLE_L2CAP_EVT_CONN_PARA_UPDATE_RSP  evtCbConnInd Handle BLE_L2CAP_EVT_CB_CONN_IND  evtCbConnFailInd Handle BLE_L2CAP_EVT_CB_CONN_FAIL_IND  evtCbSduInd Handle BLE_L2CAP_EVT_CB_SDU_IND  evtCbAddCreditsInd Handle BLE_L2CAP_EVT_CB_ADD_CREDITS_IND  evtCbDiscInd Handle BLE_L2CAP_EVT_CB_DISC_IND  ",
							" BLE_L2CAP_EvtCbAddCreditsInd_T ",
							" C typedef struct BLE_L2CAP_EvtCbAddCreditsInd_T { uint8_t leL2capId; uint16_t credits; } BLE_L2CAP_EvtCbAddCreditsInd_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CB_ADD_CREDITS_IND event ",
							" Field Documentation Field Description leL2capId Instance of l2cap session credits Initial credits ",
							" BLE_L2CAP_EvtCbConnFailInd_T ",
							" C typedef struct BLE_L2CAP_EvtCbConnFailInd_T { uint16_t connHandle; uint16_t spsm; uint16_t result; } BLE_L2CAP_EvtCbConnFailInd_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CB_CONN_FAIL_IND event ",
							" Field Documentation Field Description connHandle Connection handle spsm SPSM result Remote maximum transmit unit ",
							" BLE_L2CAP_EvtCbConnInd_T ",
							" C typedef struct BLE_L2CAP_EvtCbConnInd_T { uint8_t leL2capId; uint16_t connHandle; uint16_t spsm; uint16_t remoteMtu; uint16_t remoteMps; uint16_t initialCredits; uint16_t localCid; uint16_t remoteCid; } BLE_L2CAP_EvtCbConnInd_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CB_CONN_IND event ",
							" Field Documentation Field Description leL2capId Instance of l2cap session connHandle Connection handle spsm SPSM remoteMtu Remote maximum transmit unit in bytes remoteMps Remote maximum PDU size in bytes initialCredits Initial credits localCid Local Cid remoteCid Remote Cid ",
							" BLE_L2CAP_EvtCbDiscInd_T ",
							" C typedef struct BLE_L2CAP_EvtCbDiscInd_T { uint8_t leL2capId; } BLE_L2CAP_EvtCbDiscInd_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CB_DISC_IND event ",
							" Field Documentation Field Description leL2capId Instance of l2cap session ",
							" BLE_L2CAP_EvtCbSduInd_T ",
							" C typedef struct BLE_L2CAP_EvtCbSduInd_T { uint8_t leL2capId; uint16_t length; uint8_t payload[BLE_L2CAP_MAX_PDU_SIZE]; uint8_t frames; } BLE_L2CAP_EvtCbSduInd_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CB_SDU_IND event ",
							" Field Documentation Field Description leL2capId Instance of l2cap session length Length of SDU payload in bytes payload SDU payload frames Number of frames reassembled for this SDU ",
							" BLE_L2CAP_EvtConnParamUpdateReq_T ",
							" C typedef struct BLE_L2CAP_EvtConnParamUpdateReq_T { uint16_t connHandle; uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_L2CAP_EvtConnParamUpdateReq_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ event ",
							" Field Documentation Field Description connHandle Connection handle intervalMin Minimum value for the connection interval See Connection parameters range  intervalMax Maximum value for the connection interval See Connection parameters range  latency Peripheral latency parameter See Connection parameters range  timeout Connection timeout See Connection parameters range  ",
							" BLE_L2CAP_EvtConnParamUpdateRsp_T ",
							" C typedef struct BLE_L2CAP_EvtConnParamUpdateRsp_T { uint16_t connHandle; uint16_t result; } BLE_L2CAP_EvtConnParamUpdateRsp_T; ",
							" Description Data structure for BLE_L2CAP_EVT_CONN_PARA_UPDATE_RSP event ",
							" Field Documentation Field Description connHandle Connection handle result The outcome of the connection parameters updating See Connection parameter update result  ",
							" Functions ",
							" BLE_L2CAP_CbAddCredits ",
							" C uint16_t BLE_L2CAP_CbAddCredits(uint8_t leL2capId uint16_t credits); ",
							" Description Send a L2cap flow control credit to peer device ",
							" Note Credit should be returned to peer device after receiving data Otherwise no more data could be sent by peer device ",
							" Parameters Parameter Description [in] leL2capId L2cap instance [in] credits Credit number ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send credit to peer device MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending L2cap data MBA_RES_FAIL Fail to send credit to peer device by error L2cap instance ",
							" BLE_L2CAP_CbConnReq ",
							" C uint16_t BLE_L2CAP_CbConnReq(uint16_t connHandle uint16_t spsm); ",
							" Description Issue a L2cap credit based connection request to establish a L2cap channel ",
							" Note BLE_L2CAP_CbRegisterSpsm must be called to register SPSM before calling this API ",
							" Events generated BLE_L2CAP_EVT_CB_CONN_IND Generated when a credit based connection is established successfully BLE_L2CAP_EVT_CB_CONN_FAIL_IND Generated when a credit based connection is established failure ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] spsm SPSM See See the valid range SPSM range ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a connection request MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending connection request ",
							" BLE_L2CAP_CbDeregisterSpsm ",
							" C uint16_t BLE_L2CAP_CbDeregisterSpsm(uint16_t spsm); ",
							" Description Deregister a SPSM ",
							" Note This function should be called to free unused registered SPSM ",
							" Parameters Parameter Description [in] spsm Simplified Protocol/Service Multiplexer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully deregister SPSM MBA_RES_INVALID_PARA Unknown SPSM ",
							" BLE_L2CAP_CbDiscReq ",
							" C uint16_t BLE_L2CAP_CbDiscReq(uint8_t leL2capId); ",
							" Description Issue a disconnect request to credit based connection channel ",
							" Events generated BLE_L2CAP_EVT_CB_DISC_IND Generated when a credit based connection is disconnected ",
							" Parameters Parameter Description [in] leL2capId L2cap instance ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a L2cap disconnect request MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending L2cap disconnect request MBA_RES_FAIL Fail to send L2cap disconnect request by error L2cap instance ",
							" BLE_L2CAP_CbInit ",
							" C uint16_t BLE_L2CAP_CbInit(); ",
							" Description Initialize BLE L2CAP Credit Based module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE L2cap credit based module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_L2CAP_CbPauseAuthorization ",
							" C uint16_t BLE_L2CAP_CbPauseAuthorization(uint16_t spsm bool enable); ",
							" Description Pause or resume authorization in specific SPSM ",
							" Note All SPSMs are all authorized as default Use this API to pause the authorization if required ",
							" Parameters Parameter Description [in] spsm Simplified Protocol/Service Multiplexer [in] enable Set true to pause the authorization (unauthorized) Otherwise authorized ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure the SPSM MBA_RES_INVALID_PARA Unknown SPSM ",
							" BLE_L2CAP_CbRegisterSpsm ",
							" C uint16_t BLE_L2CAP_CbRegisterSpsm(uint16_t spsm uint16_t mtu uint16_t mps uint16_t initCredits uint8_t permission); ",
							" Description Register a SPSM ",
							" Note This function should be called before establishing credit based channel ",
							" Parameters Parameter Description [in] spsm Simplified Protocol/Service Multiplexer [in] mtu Maximum Transmission Unit See the range definition L2CAP Minimum MTU size  Maximum PDU size  [in] mps Maximum PDU Payload Size See the minimum definition Minimum MPS size  [in] initCredits Initial Credits [in] permission Permission of the SPSM See L2CAP Permission definition ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully register SPSM MBA_RES_INVALID_PARA Invalid MTU parameter usage MBA_RES_FAIL Fail to register SPSM ",
							" BLE_L2CAP_CbSendSdu ",
							" C uint16_t BLE_L2CAP_CbSendSdu(uint8_t leL2capId uint16_t length uint8_t *p_payload); ",
							" Description Send a L2cap SDU over credit based connection channel ",
							" Parameters Parameter Description [in] leL2capId L2cap instance [in] length Length of L2cap SDU See the maximum definition Maximum SDU size  [in] p_payload Point to the L2cap SDU buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send a L2cap data MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending L2cap data MBA_RES_FAIL Fail to send L2cap data by error L2cap instance ",
							" BLE_L2CAP_ConnParamUpdateReq ",
							" C uint16_t BLE_L2CAP_ConnParamUpdateReq(uint16_t connHandle uint16_t intervalMin uint16_t intervalMax uint16_t latency uint16_t timeout); ",
							" Description Issue a connection parameter update request ",
							" Note This API shall only be called if local is LE peripheral role ",
							" Events generated BLE_L2CAP_EVT_CONN_PARA_UPDATE_RSP Generated when connection parameter update response received ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] intervalMin Minimum value for the connection interval See Connection parameters range  [in] intervalMax Maximum value for the connection interval See Connection parameters range  [in] latency Peripheral latency parameter See Connection parameters range  [in] timeout Connection timeout parameter See Connection parameters range  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send a L2cap connection parameters update request MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending L2cap connection parameters update request MBA_RES_FAIL Fail to send L2cap connection parameters update request by error L2cap instance ",
							" BLE_L2CAP_ConnParamUpdateRsp ",
							" C uint16_t BLE_L2CAP_ConnParamUpdateRsp(uint16_t connHandle uint16_t result); ",
							" Description Reply a connection parameter update request ",
							" Note This function should be called when BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ received ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] result Accept or reject the request See Connection parameter update result  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a L2cap connection parameters update response MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No Transmit buffers available for sending L2cap connection parameters update response MBA_RES_FAIL Fail to send L2cap connection parameters update response by error L2cap instance ",
							" BLE_L2CAP_Init ",
							" C uint16_t BLE_L2CAP_Init(); ",
							" Description Initialize BLE L2CAP module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE L2cap main module MBA_RES_OOM Internal memory allocation failure ",
							" Message Sequence Chart ",
							" L2CAP CoC connection procedure    Example of L2CAP CoC create connection procedure - Local initiated         Example of L2CAP CoC create connection procedure - Remote initiated         Example of L2CAP CoC local credit calculation and update         Example of L2CAP CoC TX flow based on remote credit     ",
							" L2CAP Connection Parameter Update procedure    Example of L2CAP Connection Parameter Update procedure - Peripheral         Example of L2CAP Connection Parameter Update procedure - Central     ",
							" Security Manager Protocol (SMP)  This module defines the SMP interface to the BLE Library  ",
							" Defines ",
							" Confirm result ",
							" C #define BLE_SMP_CONFIRM_YES 0x00 #define BLE_SMP_CONFIRM_NO 0x01 ",
							" Description The definition of user confirm result ",
							" Macro Definition Macro Description BLE_SMP_CONFIRM_YES User confirms \"YES\" BLE_SMP_CONFIRM_NO User confirms \"NO\" ",
							" IO capability ",
							" C #define BLE_SMP_IO_DISPLAYONLY 0x00 #define BLE_SMP_IO_DISPLAYYESNO 0x01 #define BLE_SMP_IO_KEYBOARDONLY 0x02 #define BLE_SMP_IO_NOINPUTNOOUTPUT 0x03 #define BLE_SMP_IO_KEYBOARDDISPLAY 0x04 ",
							" Description The definition of SMP IO Capabilities ",
							" Macro Definition Macro Description BLE_SMP_IO_DISPLAYONLY Device has the ability to display or communicate a 6 digit decimal number but does not have the ability to indicate yes or no BLE_SMP_IO_DISPLAYYESNO Device has at least two buttons that can be easily mapped to yes and no and also has the ability to display or communicate a 6 digit decimal number BLE_SMP_IO_KEYBOARDONLY Device has a numeric keyboard that can input the numbers 0 through 9 and a confirmation but does not have the ability to display or communicate a 6 digit decimal number BLE_SMP_IO_NOINPUTNOOUTPUT Device does not have the abilities to indicate yes or no and display or communicate a 6 digit decimal number BLE_SMP_IO_KEYBOARDDISPLAY Device has a numeric keyboard that can input the numbers 0 through 9 and a confirmation and has the ability to display or communicate a 6 digit decimal number ",
							" Key flags ",
							" C #define BLE_SMP_FLAG_ENCRYPT_INFO (1 0) #define BLE_SMP_FLAG_CENTRAL_ID (1 1) #define BLE_SMP_FLAG_ID_INFO (1 2) #define BLE_SMP_FLAG_ID_ADDR_INFO (1 3) #define BLE_SMP_FLAG_SIGNING_INFO (1 4) ",
							" Description The definition of valid remote keys flag ",
							" Macro Definition Macro Description BLE_SMP_FLAG_ENCRYPT_INFO Indicate LTK is valid BLE_SMP_FLAG_CENTRAL_ID Indicate EDIV and Rand are valid BLE_SMP_FLAG_ID_INFO Indicate IRK is valid BLE_SMP_FLAG_ID_ADDR_INFO Indicate identity address is valid BLE_SMP_FLAG_SIGNING_INFO Indicate SRK is valid ",
							" Keypress notification type ",
							" C #define BLE_SMP_KEYPRESS_STARTED 0x00 #define BLE_SMP_KEYPRESS_DIGIT_ENTERED 0x01 #define BLE_SMP_KEYPRESS_DIGIT_ERASED 0x02 #define BLE_SMP_KEYPRESS_CLEARED 0x03 #define BLE_SMP_KEYPRESS_COMPLETED 0x04 ",
							" Description The definition of keypress notification type ",
							" Macro Definition Macro Description BLE_SMP_KEYPRESS_STARTED Passkey entry started BLE_SMP_KEYPRESS_DIGIT_ENTERED Passkey digit entered BLE_SMP_KEYPRESS_DIGIT_ERASED Passkey digit erased BLE_SMP_KEYPRESS_CLEARED Passkey cleared BLE_SMP_KEYPRESS_COMPLETED Passkey entry completed ",
							" Pairing fail reason ",
							" C #define BLE_SMP_REASON_PASSKEY_ENTRY_FAILED 0x01 #define BLE_SMP_REASON_OOB_NOT_AVAILABLE 0x02 #define BLE_SMP_REASON_AUTH_REQ 0x03 #define BLE_SMP_REASON_CONFIRM_VALUE_FAILED 0x04 #define BLE_SMP_REASON_PAIRING_NOT_SUPPORTED 0x05 #define BLE_SMP_REASON_ENCRYPT_KEY_SIZE 0x06 #define BLE_SMP_REASON_COMMAND_NOT_SUPPORTED 0x07 #define BLE_SMP_REASON_UNSPECIFIED_REASON 0x08 #define BLE_SMP_REASON_REPEATED_ATTEMPTS 0x09 #define BLE_SMP_REASON_INVALID_PARAMETERS 0x0A #define BLE_SMP_REASON_DHKEY_CHECK_FAILED 0x0B #define BLE_SMP_REASON_NUMERIC_COMPARISON_FAILED 0x0C ",
							" Description The definition of the reason for pairing fail ",
							" Macro Definition Macro Description BLE_SMP_REASON_PASSKEY_ENTRY_FAILED The user input of passkey failed BLE_SMP_REASON_OOB_NOT_AVAILABLE The OOB data is not available BLE_SMP_REASON_AUTH_REQ Authentication requirements cannot be met due to IO capabilities of one or both devices BLE_SMP_REASON_CONFIRM_VALUE_FAILED The confirm value does not match BLE_SMP_REASON_PAIRING_NOT_SUPPORTED Pairing is not supported by the device BLE_SMP_REASON_ENCRYPT_KEY_SIZE Encryption key size is insufficient BLE_SMP_REASON_COMMAND_NOT_SUPPORTED The SMP command received is not supported on this device BLE_SMP_REASON_UNSPECIFIED_REASON Pairing failed due to an unspecified reason BLE_SMP_REASON_REPEATED_ATTEMPTS Too little time has elapsed since last pairing request or security request BLE_SMP_REASON_INVALID_PARAMETERS The command length is invalid BLE_SMP_REASON_DHKEY_CHECK_FAILED DHKey Check value received doesn’t match the one calculated by the local device BLE_SMP_REASON_NUMERIC_COMPARISON_FAILED The confirm values in the numeric comparison protocol do not match ",
							" Pairing options ",
							" C #define BLE_SMP_OPTION_NONE 0x00 #define BLE_SMP_OPTION_BONDING 0x01 #define BLE_SMP_OPTION_MITM 0x04 #define BLE_SMP_OPTION_SECURE_CONNECTION 0x08 #define BLE_SMP_OPTION_KEYPRESS 0x10 ",
							" Description The definition of pairing options ",
							" Note Possible combinations are : BLE_SMP_OPTION_NONE : No bonding LE legacy pairing is used BLE_SMP_OPTION_BONDING : Bonding requested LE legacy pairing is used BLE_SMP_OPTION_SECURE_CONNECTION : No Bonding If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_SECURE_CONNECTION : Bonding Requested If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing BLE_SMP_OPTION_MITM : No bonding LE legacy pairing is used MITM protection is required BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_MITM : Bonding requested LE legacy pairing is used MITM protection is required BLE_SMP_OPTION_MITM | BLE_SMP_OPTION_SECURE_CONNECTION : No Bonding MITM protection is required If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_MITM | BLE_SMP_OPTION_SECURE_CONNECTION : Bonding Requested MITM protection is required If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing BLE_SMP_OPTION_SECURE_CONNECTION | BLE_SMP_OPTION_KEYPRESS : No Bonding If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing Enable keypress notifications BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_SECURE_CONNECTION | BLE_SMP_OPTION_KEYPRESS : Bonding Requested If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing Enable keypress notifications BLE_SMP_OPTION_MITM | BLE_SMP_OPTION_SECURE_CONNECTION | BLE_SMP_OPTION_KEYPRESS : No Bonding MITM protection is required If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing Enable keypress notifications BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_MITM | BLE_SMP_OPTION_SECURE_CONNECTION | BLE_SMP_OPTION_KEYPRESS : Bonding Requested MITM protection is required If both devices support LE Secure Connections use LE Secure Connections; otherwise use LE legacy pairing Enable keypress notifications ",
							" Macro Definition Macro Description BLE_SMP_OPTION_NONE Do not allow a bond to be created with a peer device The keys are not stored BLE_SMP_OPTION_BONDING Allows two connected devices to exchange and store security and identity information to create a trusted relationship BLE_SMP_OPTION_MITM Request MITM protection BLE_SMP_OPTION_SECURE_CONNECTION Request LE Secure Connections pairing BLE_SMP_OPTION_KEYPRESS Enable keypress notifications ",
							" Pairing result ",
							" C #define BLE_SMP_PAIRING_SUCCESS 0x00 #define BLE_SMP_PAIRING_FAIL 0x01 #define BLE_SMP_PAIRING_TIMEOUT 0x02 ",
							" Description The definition of pairing result ",
							" Macro Definition Macro Description BLE_SMP_PAIRING_SUCCESS Pairing process is successful BLE_SMP_PAIRING_FAIL Pairing process failed BLE_SMP_PAIRING_TIMEOUT Pairing process timeout ",
							" Enums ",
							" BLE_SMP_EventId_T ",
							" C typedef enum BLE_SMP_EventId_T { BLE_SMP_EVT_PAIRING_COMPLETE BLE_SMP_EVT_SECURITY_REQUEST BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST BLE_SMP_EVT_INPUT_PASSKEY_REQUEST BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST BLE_SMP_EVT_NOTIFY_KEYS BLE_SMP_EVT_PAIRING_REQUEST BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST BLE_SMP_EVT_KEYPRESS BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE }BLE_SMP_EventId_T; ",
							" Description Enumeration type of BLE SMP callback events Enumerator Description BLE_SMP_EVT_PAIRING_COMPLETE Pairing process is completed event See BLE_SMP_EvtPairingComplete_T structure for eventField BLE_SMP_EVT_SECURITY_REQUEST Received peripheral security request from remote device event See BLE_SMP_EvtSecurityReq_T structure for eventField BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST Received confirmation request for 6-digit values during pairing process (Numeric comparison) event See BLE_SMP_EvtDisplayCompareValueReq_T structure for eventField BLE_SMP_EVT_INPUT_PASSKEY_REQUEST Passkey is requested to be input during pairing process (Passkey entry) event See BLE_SMP_EvtInputPasskeyReq_T structure for eventField BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST Request to display passkey during pairing process (Passkey entry) event See BLE_SMP_EvtDisplayPasskeyReq_T structure for eventField BLE_SMP_EVT_NOTIFY_KEYS Notify keys See BLE_SMP_EvtNotifyKeys_T structure for eventField BLE_SMP_EVT_PAIRING_REQUEST Received pairing request from remote device event See BLE_SMP_EvtPairingReq_T structure for eventField BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST OOB data for legacy pairing is requested to be input during pairing process (Out of Band) event See BLE_SMP_EvtInputOobData_T structure for eventField BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST OOB data for Secure Connections pairing is requested to be input during pairing process (Out of Band) event See BLE_SMP_EvtInputScOobData_T structure for eventField BLE_SMP_EVT_KEYPRESS Keypress notification from the remote device See BLE_SMP_EvtKeypress_T structure for eventField BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE Generate SC OOB data is completed event See BLE_SMP_EvtGenScOobDataDone_T structure for eventField ",
							" Structures ",
							" BLE_SMP_Config_T ",
							" C typedef struct BLE_SMP_Config_T { uint8_t ioCapability; uint8_t authReqFlag; bool oobDataFlag; bool scOnly; bool authPairingRequired; }BLE_SMP_Config_T; ",
							" Description Pairing parameters ",
							" Field Documentation Field Description ioCapability Input and output capabilities of a device handle See IO capability  authReqFlag Authentication Requirement Flag See Pairing options  oobDataFlag OOB data flag - In LE legacy pairing set true to indicate device has OOB authentication data If both devices have OOB authentication data then OOB pairing method shall be used - In LE Secure Connections pairing set true to indicate device has the OOB authentication data from remote device If one or both devices have the OOB authentication data from remote device then OOB pairing method shall be used scOnly Secure Connections only mode Set true to enable secure connection only mode authPairingRequired Set true if authenticated pairing method is required If local device plays as peripheral role in the connection and the final mapping method in pairing is unauthenticated Then pairing fail packet will be issued automatically after receiving pairing request packet ",
							" BLE_SMP_EncInfo_T ",
							" C typedef struct BLE_SMP_EncInfo_T { uint8_t ltk[16]; uint8_t ediv[2]; uint8_t rand[8]; uint8_t lesc:1; uint8_t auth:1; uint8_t ltkLen:6; }BLE_SMP_EncInfo_T; ",
							" Description Encryption information ",
							" Field Documentation Field Description ltk The long term key ediv The encrypted diversifier value rand The randon number value lesc Key generated using LE security connection auth Is Authenticated Key ltkLen The LTK length in bytes ",
							" BLE_SMP_Event_T ",
							" C typedef struct BLE_SMP_Event_T { BLE_SMP_EventId_T eventId; BLE_SMP_EventField_T eventField; } BLE_SMP_Event_T; ",
							" Description BLE SMP callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_SMP_EventField_T ",
							" C typedef union { BLE_SMP_EvtPairingComplete_T evtPairingComplete; BLE_SMP_EvtInputPasskeyReq_T evtInputPasskeyReq; BLE_SMP_EvtDisplayCompareValueReq_T evtDisplayCompareValueReq; BLE_SMP_EvtDisplayPasskeyReq_T evtDisplayPasskeyReq; BLE_SMP_EvtSecurityReq_T evtSecurityReq; BLE_SMP_EvtNotifyKeys_T evtNotifyKeys; BLE_SMP_EvtPairingReq_T evtPairingReq; BLE_SMP_EvtInputOobData_T evtInputOobData; BLE_SMP_EvtInputScOobData_T evtInputScOobData; BLE_SMP_EvtKeypress_T evtKeypress; BLE_SMP_EvtGenScOobDataDone_T evtGenScOobDataDone; } BLE_SMP_EventField_T; ",
							" Description Union of BLE SMP callback event data types ",
							" Field Documentation Field Description evtPairingComplete Handle BLE_SMP_EVT_PAIRING_COMPLETE  evtInputPasskeyReq Handle BLE_SMP_EVT_INPUT_PASSKEY_REQUEST  evtDisplayCompareValueReq Handle BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST  evtDisplayPasskeyReq Handle BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST  evtSecurityReq Handle BLE_SMP_EVT_SECURITY_REQUEST  evtNotifyKeys Handle BLE_SMP_EVT_NOTIFY_KEYS  evtPairingReq Handle BLE_SMP_EVT_PAIRING_REQUEST  evtInputOobData Handle BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST  evtInputScOobData Handle BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST  evtKeypress Handle BLE_SMP_EVT_KEYPRESS  evtGenScOobDataDone Handle BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE  ",
							" BLE_SMP_EvtDisplayCompareValueReq_T ",
							" C typedef struct BLE_SMP_EvtDisplayCompareValueReq_T { uint16_t connHandle; uint8_t value[6]; } BLE_SMP_EvtDisplayCompareValueReq_T; ",
							" Description Data structure for BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection value 6-digit confirmation value that users needs to match and confirm The value is in ASCII format ",
							" BLE_SMP_EvtDisplayPasskeyReq_T ",
							" C typedef struct BLE_SMP_EvtDisplayPasskeyReq_T { uint16_t connHandle; } BLE_SMP_EvtDisplayPasskeyReq_T; ",
							" Description Data structure for BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_SMP_EvtGenScOobDataDone_T ",
							" C typedef struct BLE_SMP_EvtGenScOobDataDone_T { uint8_t confirm[16]; uint8_t rand[16]; } BLE_SMP_EvtGenScOobDataDone_T; ",
							" Description Data structure for BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE event ",
							" Field Documentation Field Description confirm The Confirm Value rand The Random Number ",
							" BLE_SMP_EvtInputOobData_T ",
							" C typedef struct BLE_SMP_EvtInputOobData_T { uint16_t connHandle; } BLE_SMP_EvtInputOobData_T; ",
							" Description Data structure for BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_SMP_EvtInputPasskeyReq_T ",
							" C typedef struct BLE_SMP_EvtInputPasskeyReq_T { uint16_t connHandle; bool keypress; } BLE_SMP_EvtInputPasskeyReq_T; ",
							" Description Data structure for BLE_SMP_EVT_INPUT_PASSKEY_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection keypress Is required to inform the remote device when keys have been entered or erased If this is true please using BLE_SMP_Keypress to send keypress notifications ",
							" BLE_SMP_EvtInputScOobData_T ",
							" C typedef struct BLE_SMP_EvtInputScOobData_T { uint16_t connHandle; } BLE_SMP_EvtInputScOobData_T; ",
							" Description Data structure for BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_SMP_EvtKeypress_T ",
							" C typedef struct BLE_SMP_EvtKeypress_T { uint16_t connHandle; uint8_t notifyType; } BLE_SMP_EvtKeypress_T; ",
							" Description Data structure for BLE_SMP_EVT_KEYPRESS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection notifyType Notification type See Keypress notification type  ",
							" BLE_SMP_EvtNotifyKeys_T ",
							" C typedef struct BLE_SMP_EvtNotifyKeys_T { uint16_t connHandle; BLE_SMP_KeyList_T keys; } BLE_SMP_EvtNotifyKeys_T; ",
							" Description Data structure for BLE_SMP_EVT_NOTIFY_KEYS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection keys Keys associated with this connection ",
							" BLE_SMP_EvtPairingComplete_T ",
							" C typedef struct BLE_SMP_EvtPairingComplete_T { uint16_t connHandle; uint8_t status; uint8_t failReason; bool bond; uint8_t encryptKey[16]; BLE_SMP_SecKeys_T local; BLE_SMP_SecKeys_T remote; } BLE_SMP_EvtPairingComplete_T; ",
							" Description Data structure for BLE_SMP_EVT_PAIRING_COMPLETE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Status of pairing procedure See Pairing result  failReason The failReason field indicates why the pairing failed if the status is BLE_SMP_PAIRING_FAIL See Pairing fail reason  bond The remote is bonded or not encryptKey Encryption key associated with this connection local Local security keys remote Remote security keys ",
							" BLE_SMP_EvtPairingReq_T ",
							" C typedef struct BLE_SMP_EvtPairingReq_T { uint16_t connHandle; uint8_t authReq; } BLE_SMP_EvtPairingReq_T; ",
							" Description Data structure for BLE_SMP_EVT_PAIRING_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection authReq Authentication requirement flag See Pairing options  ",
							" BLE_SMP_EvtSecurityReq_T ",
							" C typedef struct BLE_SMP_EvtSecurityReq_T { uint16_t connHandle; uint8_t authReq; } BLE_SMP_EvtSecurityReq_T; ",
							" Description Data structure for BLE_SMP_EVT_SECURITY_REQUEST event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection authReq Authentication requirement flag See Pairing options  ",
							" BLE_SMP_IdInfo_T ",
							" C typedef struct BLE_SMP_IdInfo_T { uint8_t irk[16]; BLE_GAP_Addr_T addr; }BLE_SMP_IdInfo_T; ",
							" Description Identity information ",
							" Field Documentation Field Description irk The identity resolving key addr The identity address ",
							" BLE_SMP_KeyList_T ",
							" C typedef struct BLE_SMP_KeyList_T { BLE_SMP_SecKeys_T local; BLE_SMP_SecKeys_T remote; } BLE_SMP_KeyList_T; ",
							" Description Key list ",
							" Field Documentation Field Description local Local security keys remote Remote security keys ",
							" BLE_SMP_PairInfo_T ",
							" C typedef struct BLE_SMP_PairInfo_T { uint8_t auth:1; uint8_t lesc:1; uint8_t reserve:6; }BLE_SMP_PairInfo_T; ",
							" Description Pairing information ",
							" Field Documentation Field Description auth Set true if it's authenticated pairing lesc Set true if key is generated by using LE security connection reserve Reserved ",
							" BLE_SMP_SecKeys_T ",
							" C typedef struct BLE_SMP_SecKeys_T { BLE_SMP_EncInfo_T encInfo; BLE_SMP_IdInfo_T idInfo; BLE_SMP_SignInfo_T signInfo; }BLE_SMP_SecKeys_T; ",
							" Description Security keys ",
							" Field Documentation Field Description encInfo The encryption information idInfo The identity information signInfo The signing information ",
							" BLE_SMP_SignInfo_T ",
							" C typedef struct BLE_SMP_SignInfo_T { uint8_t srk[16]; }BLE_SMP_SignInfo_T; ",
							" Description Signing information ",
							" Field Documentation Field Description srk The signature resolving key ",
							" Functions ",
							" BLE_SMP_AcceptDebugKey ",
							" C uint16_t BLE_SMP_AcceptDebugKey(); ",
							" Description Accept BLE SMP debug key during pairing procedure ",
							" Note If this API is called then BLE_SMP_EnableDebugMode API is prohibited ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set to accept debug key MBA_RES_FAIL Fail to set to accept debug key due to BLE_SMP_EnableDebugMode API is called ",
							" BLE_SMP_AcceptPairingRequest ",
							" C uint16_t BLE_SMP_AcceptPairingRequest(uint16_t connHandle); ",
							" Description Accept the pairing request ",
							" Note This API should be called to continue pairing procedure when receiving BLE_SMP_EVT_PAIRING_REQUEST  ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue pairing response with accept parameter MBA_RES_INVALID_PARA The parameter is invalid ",
							" BLE_SMP_Config ",
							" C uint16_t BLE_SMP_Config(BLE_SMP_Config_T * p_config); ",
							" Description Configure SMP pairing parameters ",
							" Note MITM (man-in-the-middle protection) is requested if ioCapability is other than NoInputNoOutput If this API is not called then following are the defaults: ioCapability : BLE_SMP_IO_NOINPUTNOOUTPUT oob: Set false to indicate device does not have OOB authentication data authReqFlag : BLE_SMP_OPTION_BONDING | BLE_SMP_OPTION_SECURE_CONNECTION scOnly: Set true to enable LE secure connection only ",
							" Parameters Parameter Description [in] p_config Pointer to the BLE_SMP_Config_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully configure SMP pairing parameters MBA_RES_INVALID_PARA The configured parameter(s) is/are invalid ",
							" BLE_SMP_EnableDebugMode ",
							" C uint16_t BLE_SMP_EnableDebugMode(); ",
							" Description Enable BLE SMP debug mode ",
							" Note Debug public key will be used if debug mode is enabled If this API is called then BLE_SMP_AcceptDebugKey API is prohibited ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully enable SMP debug mode MBA_RES_FAIL Fail to enable debug mode due to BLE_SMP_AcceptDebugKey API is called ",
							" BLE_SMP_GeneratePasskey ",
							" C void BLE_SMP_GeneratePasskey(uint8_t *p_passkey); ",
							" Description Generate six bytes random passkey in ASCII format ",
							" Note This API should be called in SMP callback function when BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST event is generated Following this API BLE_SMP_PasskeyReply should be called to send the passkey generated to the SDK and the passkey should be displayed to the user ",
							" Parameters Parameter Description [out] p_passkey Pointer to buffer into which generated passkey is stored ",
							" BLE_SMP_GenerateScOobData ",
							" C uint16_t BLE_SMP_GenerateScOobData(); ",
							" Description Generate the OOB data for the next LE Secure Connections pairing process The API should be called and wait BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE event before starting pairing Hence it is better be called before connection is established ",
							" Note The OOB data may be generated by application ",
							" Events generated When the SC OOB data is generated successfully the BLE_SMP_EVT_GEN_SC_OOB_DATA_DONE event is generated ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully start to generate the SC OOB data for pairing process MBA_RES_OOM Internal memory allocation failure MBA_RES_BUSY Generation fail due to SMP is busy ",
							" BLE_SMP_Init ",
							" C uint16_t BLE_SMP_Init(); ",
							" Description Initialize BLE SMP main module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize the BLE SMP main module MBA_RES_OOM Internal memory allocation failure ",
							" BLE_SMP_InitiatePairing ",
							" C uint16_t BLE_SMP_InitiatePairing(uint16_t connHandle); ",
							" Description Initiate pairing procedure ",
							" Note If Pairing is initiated (unbonded devices) then following happens: Phase 1: Pairing Feature Exchange Phase 2 (LE legacy pairing): Short Term Key (STK) Generation Phase 2 (LE Secure Connections): Long Term Key (LTK) Generation Phase 3: Transport Specific Key Distribution The pairing method for Phase 2 is chosen based on IO Capabilities and Authentication request flag For phase 3: LE Secure connection pairing: CSRK and IRK may be distributed LE Legacy pairing: Encryption key (LTK EDIV Rand) CSRK and IRK may be distributed ",
							" Events generated Depending on the pairing parameters configured by BLE_SMP_Config and the pairing feature exchanges with the peer the following events may be generated: BLE_SMP_EVT_PAIRING_COMPLETE Generated when pairing process is completed or failed BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST Generated when received confirmation request for 6-digit values during pairing process (Numeric comparison) BLE_SMP_EVT_INPUT_PASSKEY_REQUEST Generated when passkey is requested to be input during pairing process (Passkey entry) BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST Generated when request to display passkey during pairing process (Passkey entry) BLE_SMP_EVT_NOTIFY_KEYS Generated when key distribution finished BLE_SMP_EVT_PAIRING_REQUEST Generated when received pairing request from remote device BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST Generated when OOB data for legacy pairing is requested to be input during pairing process (Out of Band) BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST Generated when OOB data for Secure Connections pairing is requested to be input during pairing process (Out of Band) BLE_SMP_EVT_KEYPRESS Generated when keypress notification from the remote device ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Pairing procedure started successfully MBA_RES_FAIL The specified connection handle is invalid ",
							" BLE_SMP_Keypress ",
							" C uint16_t BLE_SMP_Keypress(uint16_t connHandle uint8_t notifyType); ",
							" Description Send a keypress notification message to inform the remote device when keys have been entered or erased ",
							" Note This API should be called only if receiving BLE_SMP_EVT_INPUT_PASSKEY_REQUEST and keypress field of BLE_SMP_EvtInputPasskeyReq_T is true ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] notifyType Notification type See Keypress notification type  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a keypress notification MBA_RES_INVALID_PARA The parameter is invalid ",
							" BLE_SMP_NumericComparisonConfirmReply ",
							" C uint16_t BLE_SMP_NumericComparisonConfirmReply(uint16_t connHandle uint8_t outcome); ",
							" Description Confirm the confirmation value between two devices ",
							" Note Only valid while pairing method is numeric comparison (Only used for LE secure connections) The API should be called when user confirmation request event is generated ( BLE_SMP_EVT_NUMERIC_COMPARISON_CONFIRM_REQUEST ) If user confirmation (outcome) is Yes then Pairing continues else pairing process ends in a failure ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] outcome See Confirm result The result of user confirm ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully sent user confirmation (Yes or No) MBA_RES_INVALID_PARA Outcome is invalid (other than Yes or No) See Confirm result MBA_RES_FAIL The specified connection handle is invalid ",
							" BLE_SMP_OobDataReply ",
							" C uint16_t BLE_SMP_OobDataReply(uint16_t connHandle uint8_t *p_oobData); ",
							" Description Send the OOB data for pairing process The API should be called in response to OOB data request Hence it should be called in SMP callback function when BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST event is generated These events are received only when OOB method is selected for Legacy pairing ",
							" Note If event BLE_SMP_EVT_INPUT_OOB_DATA_REQUEST is received then the OOB data may be generated by application ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_oobData Pointer to the OOB data Set NULL if local device cannot provide the information The length of OOB data should be 16 bytes key value ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully replied with passkey for pairing process MBA_RES_FAIL The specified connection handle is invalid MBA_RES_BAD_STATE The OOB data for Secure Connections if requested It should call BLE_SMP_ScOobDataReply to reply OOB data ",
							" BLE_SMP_PasskeyNegativeReply ",
							" C uint16_t BLE_SMP_PasskeyNegativeReply(uint16_t connHandle); ",
							" Description Reply to a passkey request event if local device cannot provide the information ",
							" Note The API should be called in response to passkey entry request or passkey display request Hence it should be called in SMP callback function when BLE_SMP_EVT_INPUT_PASSKEY_REQUEST event or BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST event is generated These events are received only when passkey entry method is selected for pairing (LE secure connections or Legacy pairing) ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully reply passkey is not available MBA_RES_FAIL The specified connection handle is invalid ",
							" BLE_SMP_PasskeyReply ",
							" C uint16_t BLE_SMP_PasskeyReply(uint16_t connHandle uint8_t *p_passkey); ",
							" Description Reply to a passkey request event with passkey information ",
							" Note The API should be called in response to passkey entry request or passkey display request Hence it should be called in SMP callback function when BLE_SMP_EVT_INPUT_PASSKEY_REQUEST event or BLE_SMP_EVT_DISPLAY_PASSKEY_REQUEST event is generated These events are received only when passkey entry method is selected for pairing (LE secure connections or Legacy pairing) ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_passkey Pointer to the passkey buffer The length of passkey should be 6 bytes in ASCII format ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully reply with passkey for pairing process MBA_RES_FAIL The specified connection handle is invalid ",
							" BLE_SMP_RejectPairingRequest ",
							" C uint16_t BLE_SMP_RejectPairingRequest(uint16_t connHandle); ",
							" Description Reject the pairing request ",
							" Note This API should be called to reject pairing procedure when receiving BLE_SMP_EVT_PAIRING_REQUEST  ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue pairing response with reject parameter MBA_RES_INVALID_PARA The parameter is invalid ",
							" BLE_SMP_RejectSecRequest ",
							" C uint16_t BLE_SMP_RejectSecRequest(uint16_t connHandle); ",
							" Description Reject the security request issued by peer device ",
							" Note This API should be called to reject security request when receiving BLE_SMP_EVT_SECURITY_REQUEST This API is only valid if device is central role ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully reject security request issued by peer device MBA_RES_INVALID_PARA The parameter is invalid ",
							" BLE_SMP_ScOobDataReply ",
							" C uint16_t BLE_SMP_ScOobDataReply(uint16_t connHandle uint8_t *p_confirm uint8_t *p_rand); ",
							" Description Send the OOB data for pairing process The API should be called in response to OOB data request Hence it should be called in SMP callback function when BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST event is generated These events are received only when OOB method is selected for LE Secure Connections pairing ",
							" Note If event BLE_SMP_EVT_INPUT_SC_OOB_DATA_REQUEST is received then the OOB data may be generated by application ",
							" Events generated This API is called during pairing procedure please see the events generated of BLE_SMP_InitiatePairing  ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_confirm Pointer to the Confirm Value Set NULL if local device cannot provide the information The length of Confirm Value should be 16 bytes value [in] p_rand Pointer to the Random Number Set NULL if local device cannot provide the information The length of Random Number should be 16 bytes value ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully replied with the OOB data for pairing process MBA_RES_FAIL The specified connection handle is invalid MBA_RES_BAD_STATE The OOB data for Legacy pairing if requested It should call BLE_SMP_OobDataReply to reply OOB data ",
							" BLE_SMP_UpdateBondingInfo ",
							" C uint16_t BLE_SMP_UpdateBondingInfo(uint16_t connHandle uint8_t encryptKeySize BLE_SMP_PairInfo_T *p_pairInfo); ",
							" Description Update paired device information to SMP ",
							" Note This function is suggested to be called once after connected if the connection is bonded SMP requires bonding information to check permission when processing requests ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] encryptKeySize Encryption key size [in] p_pairInfo Pointer to the pairing information buffer See BLE_SMP_PairInfo_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully update the information to SMP MBA_RES_INVALID_PARA Invalid connection handle ",
							" Message Sequence Chart ",
							" SMP Central Legacy Pairing Procedure    Example of SMP Central Legacy Pairing procedure - Just Works         Example of SMP Central Legacy Pairing procedure - Passkey Entry (Central displays passkey)         Example of SMP Central Legacy Pairing procedure - Passkey Entry (Central inputs passkey)         Example of SMP Central Legacy Pairing procedure - OOB     ",
							" SMP Peripheral Legacy Pairing procedure    Example of SMP Peripheral Legacy Pairing procedure - Just Works         Example of SMP Peripheral Legacy Pairing procedure - Passkey Entry (Peripheral displays passkey)         Example of SMP Peripheral Legacy Pairing procedure - Passkey Entry (Peripheral inputs passkey)         Example of SMP Peripheral Legacy Pairing procedure - Passkey Entry (Peripheral inputs passkey)     ",
							" SMP Central LESC Pairing Procedure    Example of SMP Central LESC Pairing procedure - Just Works         Example of SMP Central LESC Pairing procedure - Passkey Entry (Central displays passkey)         Example of SMP Central LESC Pairing procedure - Passkey Entry (Central inputs passkey)         Example of SMP Central LESC Pairing procedure - Numeric Comparison         Example of SMP Central LESC Pairing procedure - OOB (Only Central sends OOB data to Peer)         Example of SMP Central LESC Pairing procedure - OOB (Only Peer sends OOB data to Central)          Example of SMP Central LESC Pairing procedure - OOB (Central and Peer send OOB data to each other)      ",
							" SMP Peripheral LESC Pairing Procedure    Example of SMP Peripheral LESC Pairing procedure - Just Works         Example of SMP Peripheral LESC Pairing procedure - Passkey Entry (Peripheral displays passkey)         Example of SMP Peripheral LESC Pairing procedure - Passkey Entry (Peripheral inputs passkey)         Example of SMP Peripheral LESC Pairing procedure - Numeric Comparison          Example of SMP Peripheral LESC Pairing procedure - OOB (Only Peripheral sends OOB data to Peer)          Example of SMP Peripheral LESC Pairing procedure - OOB (Only Peer sends OOB data to Peripheral)         Example of SMP Peripheral LESC Pairing procedure - OOB (Only Peer sends OOB data to Peripheral)     ",
							" SMP Security Request Send/Receive Procedure    Example of SMP Central Receives Security Request         Example of SMP Peripheral Sends Security Request     ",
							" SMP Pairing Timeout Procedure    Example of SMP Central Pairing Timeout         Example of SMP Peripheral Pairing Timeout     ",
							" SMP Pairing Failure Procedure    Example of SMP Sends Pairing Failed: Encryption Key Size         Example of SMP Sends Pairing Failed: Authentication Requirements         Example of SMP Sends Pairing Failed: Confirm value failed         Example of SMP Sends Pairing Failed: DHKey Check Failed         Example of SMP Receives Pairing Failed     ",
							" STACK ",
							" Defines ",
							" Error code definitions ",
							" C #define MBA_RES_SUCCESS 0x0000 #define MBA_RES_FAIL 0x0001 #define MBA_RES_OOM 0x0002 #define MBA_RES_INVALID_PARA 0x0003 #define MBA_RES_NO_RESOURCE 0x0004 #define MBA_RES_BAD_STATE 0x0005 #define MBA_RES_PENDING_DUE_TO_SECURITY 0x0006 #define MBA_RES_BUSY 0x0007 #define MBA_RES_UNKNOWN_CONN_ID 0x0102 #define MBA_RES_CONN_ALREADY_EXISTS 0x010B #define MBA_RES_COMMAND_DISALLOWED 0x010C #define MBA_RES_UNSUPPORT_REMOTE_FEATURE 0x011A #define MBA_RES_UNKNOWN_ADV_ID 0x0142 ",
							" Description The definition of STACK API result ",
							" Macro Definition Macro Description MBA_RES_SUCCESS Execution successfully MBA_RES_FAIL Execution fail MBA_RES_OOM Out of memory MBA_RES_INVALID_PARA Invalid parameters MBA_RES_NO_RESOURCE No resource MBA_RES_BAD_STATE Bad State MBA_RES_PENDING_DUE_TO_SECURITY Pending the request due to security process MBA_RES_BUSY Execution fail due to stack is busy MBA_RES_UNKNOWN_CONN_ID Unknown connection identifier MBA_RES_CONN_ALREADY_EXISTS Connection already exists MBA_RES_COMMAND_DISALLOWED Command disallowed MBA_RES_UNSUPPORT_REMOTE_FEATURE Unsupported remote feature MBA_RES_UNKNOWN_ADV_ID Unknown advertising identifier ",
							" Enums ",
							" STACK_GroupId_T ",
							" C typedef enum STACK_GroupId_T{ STACK_GRP_BLE_GAP STACK_GRP_BLE_L2CAP STACK_GRP_BLE_SMP STACK_GRP_GATT }STACK_GroupId_T; ",
							" Description The definitions of stack group id Enumerator Description STACK_GRP_BLE_GAP Stack group: BLE GAP STACK_GRP_BLE_L2CAP Stack group: BLE L2CAP STACK_GRP_BLE_SMP Stack group: BLE SMP STACK_GRP_GATT Stack group: GATT ",
							" Structures ",
							" STACK_Event_T ",
							" C typedef struct STACK_Event_T { uint8_t groupId; uint16_t evtLen; uint8_t *p_event; } STACK_Event_T; ",
							" Description STACK callback event ",
							" Field Documentation Field Description groupId Group id STACK_EVT_GRP evtLen Length of the event p_event Pointer to the event field ",
							" STACK_EventCb_T ",
							" C typedef void (*STACK_EventCb_T)(STACK_Event_T *p_event); ",
							" Description STACK callback type This callback function sends STACK events to the application ",
							" Functions ",
							" STACK_EventRegister ",
							" C void STACK_EventRegister(STACK_EventCb_T eventCb); ",
							" Description Register STACK callback ",
							" Parameters Parameter Description [in] eventCb Client callback function ",
							" BLE System ",
							" Defines ",
							" Length of Bluetooth address ",
							" C #define BT_SYS_DEV_ADDR_LEN 7 ",
							" Description Length of the Bluetooth address ",
							" Macro Definition Macro Description BT_SYS_DEV_ADDR_LEN Length of the Bluetooth address ",
							" RF Suspend Status ",
							" C #define BT_SYS_RF_NOT_SUSPEND 0 #define BT_SYS_RF_SUSPENDED_NO_SLEEP 1 #define BT_SYS_RF_SUSPENDED_WITH_SLEEP 2 ",
							" Description The definition of rf suspend status ",
							" Macro Definition Macro Description BT_SYS_RF_NOT_SUSPEND BLE RF is not allowed to suspend BT_SYS_RF_SUSPENDED_NO_SLEEP BLE RF is allowed to suspended without ble sleep mode BT_SYS_RF_SUSPENDED_WITH_SLEEP BLE RF is allowed to suspended with ble sleep mode ",
							" Trace Mask ",
							" C #define BT_SYS_TRACE_INFO_LL_H 1 #define BT_SYS_TRACE_INFO_LL_L (1 1) #define BT_SYS_TRACE_INFO_HOST (1 2) ",
							" Description The definition of trace mask ",
							" Macro Definition Macro Description BT_SYS_TRACE_INFO_LL_H LL trace high priority information BT_SYS_TRACE_INFO_LL_L LL trace low priority information BT_SYS_TRACE_INFO_HOST Host trace info ",
							" Enums ",
							" BT_SYS_LogType_T ",
							" C typedef enum BT_SYS_LogType_T { BT_STS_LOG_TYPE_HCI_COMMAND = (0x0100+0x0001) BT_STS_LOG_TYPE_HCI_ACL_TX BT_STS_LOG_TYPE_HCI_ACL_RX BT_STS_LOG_TYPE_HCI_EVENT }BT_SYS_LogType_T; ",
							" Description The definition of log type of HCI logs Enumerator Description BT_LOG_TYPE_HCI_COMMAND HCI Command BT_LOG_TYPE_HCI_ACL_TX HCI ACL Tx Packet BT_LOG_TYPE_HCI_ACL_RX HCI ACL Rx Packet BT_LOG_TYPE_HCI_EVENT HCI Event ",
							" Structures ",
							" BT_SYS_LogEvent_T ",
							" C typedef struct BT_SYS_LogEvent_T { uint16_t logType; uint16_t logId; uint16_t paramsLength; uint16_t payloadLength; uint8_t *p_logPayload; uint8_t *p_returnParams; } BT_SYS_LogEvent_T; ",
							" Description BT system log callback event ",
							" Field Documentation Field Description logType Log type logId Log ID or connection handle when logType is BT_SYS_LOG_TYPE_HCI_ACL_TX or BT_SYS_LOG_TYPE_HCI_ACL_RX  paramsLength Length of return parameters Value 0 represents no parameters payloadLength Length of log payload p_logPayload Log payload Value 0 represents no payload p_returnParams Return parameters ",
							" BT_SYS_Cfg_T ",
							" C typedef struct BT_SYS_Cfg_T { uint8_t addrValid:1; uint8_t rssiOffsetValid:1; uint8_t antennaGainValid:1; uint8_t devAddr[BT_SYS_DEV_ADDR_LEN]; int8_t rssiOffset; int8_t antennaGain; } BT_SYS_Cfg_T; ",
							" Description Bluetooth system configuration ",
							" Field Documentation Field Description addrValid Set true if devAddr field is valid rssiOffsetValid Set true if rssiOffset field is valid antennaGainValid Set true if antennaGain field is valid devAddr Device address rssiOffset RSSI offset antennaGain Antenna gain ",
							" BT_SYS_LogCb_T ",
							" C typedef void (*BT_SYS_LogCb_T)(BT_SYS_LogEvent_T *p_event); ",
							" Description BT system log callback type This callback function sends log events to the application ",
							" BT_SYS_Option_T ",
							" C typedef struct BT_SYS_Option_T { uint32_t cmnMemSize; uint8_t *p_cmnMemAddr; uint32_t *p_sramVecorTable; } BT_SYS_Option_T; ",
							" Description Bluetooth system initialization ",
							" Field Documentation Field Description cmnMemSize Common memory size p_cmnMemAddr Common memory address p_sramVecorTable Vector table ",
							" BT_SYS_TraceEventCb_T ",
							" C typedef void (*BT_SYS_TraceEventCb_T)(uint8_t length uint8_t *p_tracePayload); ",
							" Description BT system trace callback type This callback function sends trace events to the application ",
							" Functions ",
							" BM_Task ",
							" C void BM_Task(void *p_param); ",
							" Description Hook Bluetooth task ",
							" Parameters Parameter Description [in] p_param Pointer that will be used as the parameter for the task ",
							" BT_SYS_AllowSystemSleep ",
							" C bool BT_SYS_AllowSystemSleep(uint32_t ulRtcFrequency uint32_t ulRtcCurrentCnt); ",
							" Description Qquery if BT allow system enter sleep ",
							" Parameters Parameter Description [in] ulRtcFrequency RTC frequency [in] ulRtcCurrentCnt RTC current count ",
							" Return values Return value Description true BT is sleeping and BT is ready for System enter sleep false BT is not sleeping or BT is not ready for System enter sleep ",
							" BT_SYS_EnterDeepSleepMode ",
							" C void BT_SYS_EnterDeepSleepMode(); ",
							" Description Request BT enter deep sleep mode ",
							" Return values None ",
							" BT_SYS_EnterSleepMode ",
							" C bool BT_SYS_EnterSleepMode(uint32_t ulRtcFrequency uint32_t ulRtcCurrentCnt); ",
							" Description Request BT enter sleep ",
							" Parameters Parameter Description [in] ulRtcFrequency RTC frequency [in] ulRtcCurrentCnt RTC current count ",
							" Return values Return value Description true BT is ready for idle and enter sleep false BT is already sleeping or BT is not ready for idle ",
							" BT_SYS_GetSleepMode ",
							" C bool BT_SYS_GetSleepMode(); ",
							" Description Query if BT is sleeping ",
							" Return values Return value Description true BT is sleeping false BT is not sleeping ",
							" BT_SYS_Init ",
							" C bool BT_SYS_Init(void *p_reqQueueHandle void *p_osalApiList BT_SYS_Option_T *p_option BT_SYS_Cfg_T *p_cfg); ",
							" Description BT Init Entry ",
							" Parameters Parameter Description [in] p_reqQueueHandle OS handle for Bluetooth internal task [in] p_osalApiList OSAL api list [in] p_option Initialization option [in] p_cfg System configuration ",
							" Return values Return value Description true Success to initialize BT false Fail to initialize BT ",
							" BT_SYS_LogEnable ",
							" C void BT_SYS_LogEnable(BT_SYS_LogCb logCb); ",
							" Description Enable BT log message indication ",
							" Parameters Parameter Description [in] logCb BT system log callback ",
							" BT_SYS_ReadVersion ",
							" C void BT_SYS_ReadVersion(uint32_t *p_version); ",
							" Description Retrieve BT version ",
							" Parameters Parameter Description [out] p_version Point to version buffer ",
							" BT_SYS_Ready4Idle ",
							" C bool BT_SYS_Ready4Idle(); ",
							" Description Query if BT is ready for idle ",
							" Return values Return value Description true Ready for idle false Not ready for idle ",
							" BT_SYS_RfSuspendReq ",
							" C bool BT_SYS_RfSuspendReq(uint8_t enable); ",
							" Description Request BT suspend RF ",
							" Parameters Parameter Description [in] enable Set true to suspend RF Otherwise set false ",
							" Return values Return value Description BT_SYS_RF_SUSPEND_STATUS BT system RF Suspend status See BT_SYS_RF_SUSPEND_STATUS  ",
							" BT_SYS_TraceEnable ",
							" C void BT_SYS_TraceEnable(uint32_t traceMask BT_SYS_TraceEventCb_T traceCb); ",
							" Description Enable BT trace message indication ",
							" Parameters Parameter Description [in] traceMask BT system trace mask See Trace mask  [in] traceCb BT system trace callback ",
							" BT_SYS_TraceTimeSensEnable ",
							" C void BT_SYS_TraceTimeSensEnable(uint32_t traceMask BT_SYS_TraceEventCb_T traceCb); ",
							" Description Enable BT time sensitive trace message indication ",
							" Parameters Parameter Description [in] traceMask BT system trace mask See Trace mask  [in] traceCb BT system trace callback ",
							" BLE Direct Test Mode ",
							" Defines ",
							" Channel range of continuous wave test ",
							" C #define BLE_DTM_CW_CHANNEL_MIN 0x00 #define BLE_DTM_CW_CHANNEL_MAX 0x4E ",
							" Description Range of Continuous Wave (CW) test defintion ",
							" Macro Definition Macro Description BLE_DTM_CW_CHANNEL_MIN Minimum value of channel definition BLE_DTM_CW_CHANNEL_MAX Maximum value of channel definition ",
							" Receiver or transmitter channel ",
							" C #define BLE_DTM_CHANNEL_MIN 0x00 #define BLE_DTM_CHANNEL_MAX 0x27 ",
							" Description Range of RX/TX channel defintion ",
							" Macro Definition Macro Description BLE_DTM_CHANNEL_MIN Minimum value of channel definition BLE_DTM_CHANNEL_MAX Maximum value of channel definition ",
							" Receiver PHY type ",
							" C #define BLE_DTM_RECEIVER_LE_1M_PHY 0x01 #define BLE_DTM_RECEIVER_LE_2M_PHY 0x02 #define BLE_DTM_RECEIVER_LE_CODED_PHY 0x03 ",
							" Description The definition of receiver test packet PHY type ",
							" Macro Definition Macro Description BLE_DTM_RECEIVER_LE_1M_PHY Receiver set to use the LE 1M PHY BLE_DTM_RECEIVER_LE_2M_PHY Receiver set to use the LE 2M PHY BLE_DTM_RECEIVER_LE_CODED_PHY Receiver set to use the LE Coded PHY ",
							" Transmitter payload type ",
							" C #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_0 0x00 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_1 0x01 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_2 0x02 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_3 0x03 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_4 0x04 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_5 0x05 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_6 0x06 #define BLE_DTM_TRANSMITTER_TEST_PAYLOAD_7 0x07 ",
							" Description The definition of transmitter test packet payload type ",
							" Macro Definition Macro Description BLE_DTM_TRANSMITTER_TEST_PAYLOAD_0 PRBS9 sequence ‘11111111100000111101…’ (in transmission order) BLE_DTM_TRANSMITTER_TEST_PAYLOAD_1 Repeated ‘11110000’ (in transmission order) sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_2 Repeated ‘10101010’ (in transmission order) sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_3 PRBS15 sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_4 Repeated ‘11111111’ (in transmission order) sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_5 Repeated ‘00000000’ (in transmission order) sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_6 Repeated ‘00001111’ (in transmission order) sequence BLE_DTM_TRANSMITTER_TEST_PAYLOAD_7 Repeated ‘01010101’ (in transmission order) sequence ",
							" Transmitter PHY type ",
							" C #define BLE_DTM_TRANSMITTER_LE_1M_PHY 0x01 #define BLE_DTM_TRANSMITTER_LE_2M_PHY 0x02 #define BLE_DTM_TRANSMITTER_LE_CODED_PHY_S_8 0x03 #define BLE_DTM_TRANSMITTER_LE_CODED_PHY_S_2 0x04 ",
							" Description The definition of transmitter test packet PHY type ",
							" Macro Definition Macro Description BLE_DTM_TRANSMITTER_LE_1M_PHY Transmitter set to use the LE 1M PHY BLE_DTM_TRANSMITTER_LE_2M_PHY Transmitter set to use the LE 2M PHY BLE_DTM_TRANSMITTER_LE_CODED_PHY_S_8 Transmitter set to use the LE Coded PHY with S=8 data coding BLE_DTM_TRANSMITTER_LE_CODED_PHY_S_2 Transmitter set to use the LE Coded PHY with S=2 data coding ",
							" Structures ",
							" BLE_DTM_TransmitterTestParams_T ",
							" C typedef struct BLE_DTM_TransmitterTestParams_T { uint8_t txChannel; uint8_t testDataLen; uint8_t packetPayload; uint8_t phy; int8_t transmitPowerLevel; } BLE_DTM_TransmitterTestParams_T; ",
							" Description Transmitter test parameters ",
							" Field Documentation Field Description txChannel The RF channel which is used by the transmitter Channel= (F – 2402) / 2 (Frequency Range : 2402 MHz to 2480 MHz) See Receiver or transmitter channel  testDataLen The length of the Payload of the test reference packets packetPayload The contents of the Payload of the test reference packets See Transmitter payload type  phy The PHY which is used by the transmitter See Transmitter PHY type  transmitPowerLevel The transmit power level which is used by the transmitter Range: -127 to +20 (Units: dBm) Set to 0x7E to use the minimum transmit power level Set to 0x7F to use the maximum transmit power level If the parameter is set to a value other than 0x7E or 0x7F then ble stack makes the requested change or makes closest change that it is capable of doing ",
							" Functions ",
							" BLE_DTM_EndTest ",
							" C uint16_t BLE_DTM_EndTest(uint16_t *p_packetCount int8_t *p_avgRssi); ",
							" Description Stop any test which is in progress ",
							" Note BLE_DTM_Init is required for this API ",
							" Parameters Parameter Description [out] p_packetCount Pointer to the packet count parameter buffer The number of count shall be zero for a transmitter test and shall be received packets for a reveiver test [out] p_avgRssi Pointer to the average rssi value buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully stop the test which is in progress MBA_RES_OOM Internal memory allocation failure ",
							" BLE_DTM_EnhancedReceiverTest ",
							" C uint16_t BLE_DTM_EnhancedReceiverTest(uint8_t rxChannel uint8_t phy); ",
							" Description Start a test where the device receives test reference packets at a fixed interval ",
							" Note BLE_DTM_Init is required for this API ",
							" Parameters Parameter Description [in] rxChannel Channel= (F – 2402) / 2 (Frequency Range : 2402 MHz to 2480 MHz) See Receiver or transmitter channel [in] phy PHY type setting See Receiver PHY type  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully start the receiver test MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_DTM_EnhancedTransmitterTest ",
							" C uint16_t BLE_DTM_EnhancedTransmitterTest(BLE_DTM_TransmitterTestParams_T *p_transTestParams); ",
							" Description Start a test where the device generates test reference packets at a fixed interval ",
							" Note BLE_DTM_Init is required for this API ",
							" Parameters Parameter Description [in] p_transTestParams Pointer to the transmitter test parameter See BLE_DTM_TransmitterTestParams_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the BLE transmitter test MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_DTM_Init ",
							" C uint16_t BLE_DTM_Init(); ",
							" Description Initialize BLE DTM (Directed Test Mode) module ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize BLE DTM module ",
							" BLE_DTM_StartCwTest ",
							" C uint16_t BLE_DTM_StartCwTest(uint8_t txChannel int8_t txPower); ",
							" Description Start a Continuous Wave (CW) test with specific channel and power ",
							" Note BLE_DTM_Init is required for this API ",
							" Parameters Parameter Description [in] txChannel Channel = (F – 2402) (Frequency Range : 2402 MHz to 2480 MHz) See Channel range of continuous wave test  [in] txPower The transmit power level to be used by the transmitter Range: -127 to +20 Units: dBm ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully start the CW test MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_DTM_StopCwTest ",
							" C uint16_t BLE_DTM_StopCwTest(); ",
							" Description Stop the Continuous Wave (CW) test ",
							" Note BLE_DTM_Init is required for this API ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully stop the CW test MBA_RES_OOM Internal memory allocation failure ",
							" BLE Middleware  These modules help communicating with BLE_LIB and provide functions/events for application easy usage  ",
							" Device Manager (DM)  Performing BLE security procedure and managing paired peer device information  ",
							" Defines ",
							" Invalid peer device ID ",
							" C #define BLE_DM_PEER_DEV_ID_INVALID BLE_DM_MAX_PAIRED_DEVICE_NUM ",
							" Description The definition of invalid peer device id ",
							" Macro Definition Macro Description BLE_DM_PEER_DEV_ID_INVALID Definition of invalid peer device id ",
							" Maximum paired record number ",
							" C #define BLE_DM_MAX_PAIRED_DEVICE_NUM 8 ",
							" Description The definition of maximum number of paired device store in flash ",
							" Macro Definition Macro Description BLE_DM_MAX_PAIRED_DEVICE_NUM Maximum number of paired device store in flash ",
							" Maximum filter accept list num ",
							" C #define BLE_DM_MAX_FILTER_ACCEPT_LIST_NUM BLE_DM_MAX_PAIRED_DEVICE_NUM ",
							" Description The definition of maximum number of paired devices in the filter accept list ",
							" Macro Definition Macro Description BLE_DM_MAX_FILTER_ACCEPT_LIST_NUM Maximum number of filter accept list ",
							" Maximum resolving list num ",
							" C #define BLE_DM_MAX_RESOLVING_LIST_NUM BLE_DM_MAX_PAIRED_DEVICE_NUM ",
							" Description The definition of maximum number of paired devices in the resolving list ",
							" Macro Definition Macro Description BLE_DM_MAX_RESOLVING_LIST_NUM Maximum number of resolving list ",
							" Maximum registration number ",
							" C #define BLE_DM_MAX_REGISTER_NUM 2 ",
							" Description The definition of maximum number of BLE_DM register ",
							" Macro Definition Macro Description BLE_DM_MAX_REGISTER_NUM Maximum BLE_DM register num ",
							" Enums ",
							" BLE_DM_EventId_T ",
							" C typedef enum BLE_DM_EventId_T { BLE_DM_EVT_DISCONNECTED BLE_DM_EVT_CONNECTED BLE_DM_EVT_SECURITY_START BLE_DM_EVT_SECURITY_SUCCESS BLE_DM_EVT_SECURITY_FAIL BLE_DM_EVT_PAIRED_DEVICE_FULL BLE_DM_EVT_PAIRED_DEVICE_UPDATED BLE_DM_EVT_CONN_UPDATE_SUCCESS BLE_DM_EVT_CONN_UPDATE_FAIL }BLE_DM_EventId_T; ",
							" Description Enumeration type of BLE DM callback events Enumerator Description BLE_DM_EVT_DISCONNECTED BLE link is terminated See BLE_DM_Event_T for the event details BLE_DM_EVT_CONNECTED BLE link is established See BLE_DM_Event_T for the event details BLE_DM_EVT_SECURITY_START Security procedure has started See BLE_DM_EvtSecurityStart_T for the event detail BLE_DM_EVT_SECURITY_SUCCESS Security procedure has finished successfully See BLE_DM_EvtSecuritySuccess_T for the event detail BLE_DM_EVT_SECURITY_FAIL Security procedure has failed See BLE_DM_EvtSecurityFail_T for the event detail BLE_DM_EVT_PAIRED_DEVICE_FULL The maximum record number of paired device have been reached DM cannot store the latest bonding data to flash To solve this problem delete paired device that is not needed anymore See the BLE_DM_EvtPairedDeviceFull_T for the event content BLE_DM_EVT_PAIRED_DEVICE_UPDATED A paired device have been updated Application can use peerDevId get paired device information by BLE_DM_GetPairedDevice  BLE_DM_EVT_CONN_UPDATE_SUCCESS Connection parameter update triggered by BLE_DM_ConnectionParameterUpdate is success See BLE_DM_Event_T for the event details BLE_DM_EVT_CONN_UPDATE_FAIL Connection parameter update triggered by BLE_DM_ConnectionParameterUpdate is fail See BLE_DM_Event_T for the event details ",
							" BLE_DM_SecurityProc_T ",
							" C typedef enum BLE_DM_SecurityProc_T { DM_SECURITY_PROC_PAIRING DM_SECURITY_PROC_ENCRYPTION } BLE_DM_SecurityProc_T; ",
							" Description Enumeration of security process Enumerator Description DM_SECURITY_PROC_PAIRING Pairing procedure DM_SECURITY_PROC_ENCRYPTION Encrypt the link ",
							" Structures ",
							" BLE_DM_Config_T ",
							" C typedef struct BLE_DM_Config_T { BLE_DM_ConnConfig_T connConfig; bool secAutoAccept; } BLE_DM_Config_T; ",
							" Description The structure contains information about configuration used for BLE_DM module ",
							" Field Documentation Field Description connConfig Configuration parameters of BLE_DM_CONN module BLE_DM_ConnConfig_T  secAutoAccept Configuration parameter of BLE_DM_SM module Whether to accept and response pairing request or security request automatically See true to enable ",
							" BLE_DM_ConnConfig_T ",
							" C typedef struct BLE_DM_ConnConfig_T { uint16_t minAcceptConnInterval; uint16_t maxAcceptConnInterval; uint16_t minAcceptPeripheralLatency; uint16_t maxAcceptPeripheralLatency; bool autoReplyUpdateRequest; } BLE_DM_ConnConfig_T; ",
							" Description The structure contains information about configuration used for BLE_DM_Conn submodule in BLE_DM ",
							" Field Documentation Field Description minAcceptConnInterval Minimum acceptable connection interval maxAcceptConnInterval Maximum acceptable connection interval minAcceptPeripheralLatency Minimum acceptable Peripheral latency maxAcceptPeripheralLatency Maximum acceptable Peripheral latency autoReplyUpdateRequest Set true to enable automatic reply when receiving BLE_L2CAP_EVT_CONN_PARA_UPDATE_REQ or BLE_GAP_EVT_REMOTE_CONN_PARAM_REQUEST Otherwise set false ",
							" BLE_DM_ConnParamUpdate_T ",
							" C typedef struct BLE_DM_ConnParamUpdate_T { uint16_t intervalMin; uint16_t intervalMax; uint16_t latency; uint16_t timeout; } BLE_DM_ConnParamUpdate_T; ",
							" Description The structure contains information about connection parameter update ",
							" Field Documentation Field Description intervalMin Minimum value for the connection interval intervalMax Maximum value for the connection interval latency Peripheral latency for the connection in number of connection events timeout Supervision timeout for the LE link ",
							" BLE_DM_Event_T ",
							" C typedef struct BLE_DM_Event_T { BLE_DM_EventId_T eventId; uint16_t connHandle; uint8_t peerDevId; BLE_DM_EventField_T eventField; } BLE_DM_Event_T; ",
							" Description BLE_DM callback event ",
							" Field Documentation Field Description eventId Event ID connHandle Connection handle associated with this connection peerDevId Peer device ID eventField Event field ",
							" BLE_DM_EventCb_T ",
							" C typedef void (*BLE_DM_EventCb_T)(BLE_DM_Event_T *p_event); ",
							" Description BLE_DM callback type This callback function sends BLE_DM events to the application ",
							" BLE_DM_EventField_T ",
							" C typedef union { BLE_DM_EvtSecurityStart_T evtSecurityStart; BLE_DM_EvtSecuritySuccess_T evtSecuritySuccess; BLE_DM_EvtSecurityFail_T evtSecurityFail; BLE_DM_EvtPairedDeviceFull_T evtPairedDevFull; } BLE_DM_EventField_T; ",
							" Description Union of BLE_DM callback event data types ",
							" Field Documentation Field Description evtSecurityStart Handles BLE_DM_EVT_SECURITY_START  evtSecuritySuccess Handles BLE_DM_EVT_SECURITY_SUCCESS  evtSecurityFail Handles BLE_DM_EVT_SECURITY_FAIL  evtPairedDevFull Handles BLE_DM_EVT_PAIRED_DEVICE_FULL  ",
							" BLE_DM_EvtPairedDeviceFull_T ",
							" C typedef struct BLE_DM_EvtPairedDeviceFull_T { uint8_t pairedDeviceNum; } BLE_DM_EvtPairedDeviceFull_T; ",
							" Description Data structure for BLE_DM_EVT_PAIRED_DEVICE_FULL event ",
							" Field Documentation Field Description pairedDeviceNum The number of paired device that have been recorded in the flash ",
							" BLE_DM_EvtSecurityFail_T ",
							" C typedef struct BLE_DM_EvtSecurityFail_T { BLE_DM_SecurityProc_T procedure; uint8_t error; uint8_t reason; } BLE_DM_EvtSecurityFail_T; ",
							" Description Data structure for BLE_DM_EVT_SECURITY_FAIL event ",
							" Field Documentation Field Description procedure The procedure that has failed error The error for failure occurred See Pairing result if procedure is DM_SECURITY_PROC_PAIRING  reason The reason for error occurred See Pairing fail reason if error is BLE_SMP_PAIRING_FAIL ",
							" BLE_DM_EvtSecurityStart_T ",
							" C typedef struct BLE_DM_EvtSecurityStart_T { BLE_DM_SecurityProc_T procedure; } BLE_DM_EvtSecurityStart_T; ",
							" Description Data structure for BLE_DM_EVT_SECURITY_START event ",
							" Field Documentation Field Description procedure The procedure that has started ",
							" BLE_DM_EvtSecuritySuccess_T ",
							" C typedef struct BLE_DM_EvtSecuritySuccess_T { BLE_DM_SecurityProc_T procedure; uint8_t bonded; } BLE_DM_EvtSecuritySuccess_T; ",
							" Description Data structure for BLE_DM_EVT_SECURITY_SUCCESS event ",
							" Field Documentation Field Description procedure The procedure that has finished successfully bonded The pairing procedure is bonded or not ",
							" BLE_DM_PairedDevInfo_T ",
							" C typedef struct BLE_DM_PairedDevInfo_T { BLE_GAP_Addr_T remoteAddr; uint8_t remoteIrk[16]; uint8_t rv[8]; uint8_t ediv[2]; uint8_t ltk[16]; uint8_t lesc:1; uint8_t auth:1; uint8_t encryptKeySize:6; }BLE_DM_PairedDevInfo_T; ",
							" Description The structure contains information about paired device information ",
							" Field Documentation Field Description remoteAddr Paired device bluetooth address remoteIrk Paired device BLE identity resolving key rv Paired device BLE rand value ediv Paired device BLE encrypted diversifier ltk Paired device BLE Link key lesc Paired device using LE secure connection auth Paired device using authenticated pairing method encryptKeySize Paired device BLE encrpytion key size ",
							" Functions ",
							" BLE_DM_BleEventHandler ",
							" C void BLE_DM_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE events ",
							" Note This API should be called in the application while caching BLE events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE events buffer ",
							" BLE_DM_Config ",
							" C uint16_t BLE_DM_Config(BLE_DM_Config_T *p_config); ",
							" Description Configure BLE_DM module ",
							" Parameters Parameter Description [in] p_config Pointer to the BLE_DM_Config_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully build configuration MBA_RES_INVALID_PARA The parameter in p_config is invalid ",
							" BLE_DM_ConnectionParameterUpdate ",
							" C uint16_t BLE_DM_ConnectionParameterUpdate(uint16_t connHandle BLE_DM_ConnParamUpdate_T *p_params); ",
							" Description Change connection parameters of the specific connection ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_params Pointer to the BLE_DM_ConnParamUpdate_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the update request to remote device MBA_RES_FAIL The update procedure is disallowed in certain condition MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid connection handle ",
							" BLE_DM_DeleteAllPairedDevice ",
							" C uint16_t BLE_DM_DeleteAllPairedDevice(); ",
							" Description Delete all paired device information ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully deleted all paired device information MBA_RES_FAIL The delete operation failure ",
							" BLE_DM_DeletePairedDevice ",
							" C uint16_t BLE_DM_DeletePairedDevice(uint8_t devId); ",
							" Description Delete specific paired device information ",
							" Note Application could use the BLE_DM_GetPairedDeviceList API to get the paired device list of device IDs ",
							" Parameters Parameter Description [in] devId Paired device ID of paired information ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully deleted specific paired device information MBA_RES_INVALID_PARA Invalid parameters if device ID does not recognize a valid pairing device MBA_RES_FAIL The delete operation failure ",
							" BLE_DM_EventRegister ",
							" C uint16_t BLE_DM_EventRegister(BLE_DM_EventCb_T eventCb); ",
							" Description Register BLE_DM callback ",
							" Note This API should be called in the application initialization routine ",
							" Parameters Parameter Description [in] eventCb Client callback function ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully register BLE_DM callback function MBA_RES_NO_RESOURCE Fail to register DM callback funcation ",
							" BLE_DM_GetFilterAcceptList ",
							" C uint16_t BLE_DM_GetFilterAcceptList(uint8_t *p_devCnt BLE_GAP_Addr_T *p_addr); ",
							" Description Get filter accept list ",
							" Parameters Parameter Description [out] p_devCnt The number of devices in filter accept list [out] p_addr Pointer to the BLE_GAP_Addr_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get filter accept list ",
							" BLE_DM_GetPairedDevice ",
							" C uint16_t BLE_DM_GetPairedDevice(uint8_t devId BLE_DM_PairedDevInfo_T *p_pairedDevInfo); ",
							" Description Get the single paired device information via device ID ",
							" Parameters Parameter Description [in] devId The device ID Should be in the range of 0 ~ ( BLE_DM_MAX_PAIRED_DEVICE_NUM - 1) [out] p_pairedDevInfo Pointer to BLE_DM_PairedDevInfo_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully get single paired devices information MBA_RES_INVALID_PARA DevId exceeds the maximum range or the number of paired devices MBA_RES_FAIL The get operation failure ",
							" BLE_DM_GetPairedDeviceList ",
							" C void BLE_DM_GetPairedDeviceList(uint8_t *p_devId uint8_t *p_devCnt); ",
							" Description Get the paired device list of device IDs ",
							" Parameters Parameter Description [out] p_devId Pointer to the device IDs list buffer See BLE_DM_MAX_PAIRED_DEVICE_NUM for the maximum size definition [out] p_devCnt The number of valid device IDs in p_devId ",
							" BLE_DM_Init ",
							" C void BLE_DM_Init(); ",
							" Description Initialize BLE_DM module ",
							" BLE_DM_ProceedSecurity ",
							" C uint16_t BLE_DM_ProceedSecurity(uint16_t connHandle uint8_t repairing); ",
							" Description Proceed the security process ",
							" Note For Central role BLE_DM will call BLE_GAP_EnableEncryption API to initiate encryption procedure if paired information recorded in the PDS for peer connected device Otherwise BLE_SMP_InitiatePairing API will be called by BLE_DM to start pairing procedure For Peripheral role BLE DM call BLE_SMP_InitiatePairing API to trigger SMP security request It is up to the remote Central then to initiate pairing or encryption procedure ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] repairing Whether to force a pairing procedure even if there is an existing pairing record This argument is only for the Central role ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully build configuration MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA The connHandle is invalid ",
							" BLE_DM_SetFilterAcceptList ",
							" C uint16_t BLE_DM_SetFilterAcceptList(uint8_t devCnt uint8_t const *p_devId); ",
							" Description Set filter accept list ",
							" Parameters Parameter Description [in] devCnt The number of paired device to add to filter accept list The number must be less than or equel to BLE_DM_MAX_FILTER_ACCEPT_LIST_NUM Pass zero to clear filter accept list [in] p_devId The paired device list to add to filter accept list Pass NULL to clear filter accept list ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set or clear filter accept list MBA_RES_INVALID_PARA The devCnt is greater than BLE_DM_MAX_FILTER_ACCEPT_LIST_NUM  ",
							" BLE_DM_SetResolvingList ",
							" C uint16_t BLE_DM_SetResolvingList(uint8_t devCnt uint8_t const *p_devId uint8_t const * p_privacyMode); ",
							" Description Set resolving list ",
							" Parameters Parameter Description [in] devCnt The number of paired device to add to resolving list The number must be less than or equel to BLE_DM_MAX_RESOLVING_LIST_NUM Pass zero to clear resolving list [in] p_devId The paired device list to add to resolving list Pass NULL to clear resolving list [in] p_privacyMode The privacy mode list (see Privacy mode ) Each entry in the array maps to the entry in p_devId at the same index Pass NULL to clear resolving list ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set or clear resolving list MBA_RES_INVALID_PARA The devCnt is greater than BLE_DM_MAX_RESOLVING_LIST_NUM  ",
							" Message Sequence Chart ",
							" Pairing procedure    Example of security main flow         Example of disabling accepts and responses pairing request and security request automatically         Example of enabling accepts and responses pairing request and security request automatically         Example of pairing procedure - Just Works         Example of pairing procedure - Passkey Entry (Local displays passkey)         Example of pairing procedure - Passkey Entry (Local inputs passkey)         Example of pairing procedure - Numeric Comparison         Example of pairing procedure - OOB (Legacy pairing)         Example of pairing procedure - OOB (LESC: Only Local sends OOB data to Peer)         Example of pairing procedure - OOB (LESC: Only Peer sends OOB data to Local)         Example of pairing procedure - OOB (LESC: Local and Peer send OOB data to each other)     ",
							" Filter accept list process    Example of setting all paired devices to filter accept list         Example of setting partial paired devices to filter accept list     ",
							" Resolving list process    Example of setting all paired devices to resolving list         Example of setting partial paired devices to resolving list     ",
							" Connection Parameters Update Procedure    Example of automatically replying l2cap connection parameters update request from peer         Example of automatically replying ll connection parameters update request from peer         Example of manually initiating connection parameters update request to peer     ",
							" LOG  Handling Bluetooth system log from LIB  ",
							" Defines ",
							" Log type ",
							" C #define BLE_LOG_TYPE_HCI_COMMAND 0x01 #define BLE_LOG_TYPE_HCI_ACL_TX 0x02 #define BLE_LOG_TYPE_HCI_ACL_RX 0x03 #define BLE_LOG_TYPE_HCI_EVENT 0x04 ",
							" Description Log type ",
							" Macro Definition Macro Description BLE_LOG_TYPE_HCI_COMMAND HCI Command BLE_LOG_TYPE_HCI_ACL_TX HCI ACL Tx Packet BLE_LOG_TYPE_HCI_ACL_RX HCI ACL Rx Packet BLE_LOG_TYPE_HCI_EVENT HCI Event ",
							" Structures ",
							" BLE_LOG_EventCb_T ",
							" C typedef void (*BLE_LOG_EventCb_T)(uint8_t logType uint16_t logLength uint8_t *p_logPayload); ",
							" Description BLE_LOG callback type This callback function sends BLE_LOG events to the application ",
							" Functions ",
							" BLE_LOG_EventRegister ",
							" C void BLE_LOG_EventRegister(BLE_LOG_EventCb_T eventCb); ",
							" Description Register BLE_LOG callback ",
							" Parameters Parameter Description [in] eventCb Client callback function ",
							" BLE_LOG_StackLogHandler ",
							" C void BLE_LOG_StackLogHandler(BT_SYS_LogEvent_T *p_log); ",
							" Description Handling BT_SYS_Log comes from ble_stack lib BT_SYS_Log is the debug log with ble_stack HCI traffic information ",
							" Parameters Parameter Description [in] p_log Pointer to BT_SYS_LogEvent_T buffer ",
							" Database Discovery (DD)  Handling GATT Client Procedures for service discovery at remote  ",
							" Defines ",
							" Characteristic setting ",
							" C #define CHAR_SET_DESCRIPTOR 0x01 ",
							" Description The definition of characteristic setting for discovery ",
							" Macro Definition Macro Description CHAR_SET_DESCRIPTOR Set if this is a characteristic descriptor ",
							" Maximum register services number ",
							" C #define BLE_DD_MAX_DISC_SVC_NUM 0x06 ",
							" Description The definition of maximum registering services allowed in BLE_DD module ",
							" Macro Definition Macro Description BLE_DD_MAX_DISC_SVC_NUM Maximum registering services allowed ",
							" Enums ",
							" BLE_DD_EventId_T ",
							" C typedef enum BLE_DD_EventId_T { BLE_DD_EVT_DISC_COMPLETE BLE_DD_EVT_SEC_REQUIRED BLE_DD_EVT_CONNECTED BLE_DD_EVT_DISCONNECTED }BLE_DD_EventId_T; ",
							" Description The definition of BLE_DD module event ID Enumerator Description BLE_DD_EVT_DISC_COMPLETE The discovery of all service is completed BLE_DD_EvtDiscResult_T BLE_DD_EVT_SEC_REQUIRED Encryption/authentication permission is required accessing characteristic at remote Application might need to initiate encryption/authentication to remote BLE_DD_EvtSecRequire_T BLE_DD_EVT_CONNECTED BLE link is established See BLE_DD_EvtConnect_T for the event details BLE_DD_EVT_DISCONNECTED BLE link is terminated See BLE_DD_EvtDisconnect_T for the event details ",
							" Structures ",
							" BLE_DD_CharInfo_T ",
							" C typedef struct BLE_DD_CharInfo_T { uint16_t charHandle; uint8_t property; } BLE_DD_CharInfo_T; ",
							" Description Characteristic information ",
							" Field Documentation Field Description charHandle Handle of the characteristic property The field is only meaningful when the type of characteristic is characteristic declaration ",
							" BLE_DD_CharList_T ",
							" C typedef struct BLE_DD_CharList_T { uint16_t connHandle; BLE_DD_CharInfo_T *p_charInfo; } BLE_DD_CharList_T; ",
							" Description Characteristic list parameters ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection p_charInfo Pointer to the characteristic information ",
							" BLE_DD_Config_T ",
							" C typedef struct BLE_DD_Config_T { uint8_t waitForSecurity:1; uint8_t initDiscInCentral:1; uint8_t initDiscInPeripheral:1; uint8_t disableConnectedDisc:1; uint8_t reserved:4; } BLE_DD_Config_T; ",
							" Description Parameters configuration ",
							" Field Documentation Field Description waitForSecurity Configure if security is required before database discovery Set true to enable initDiscInCentral Configure discovery option when the gap role of connection is central Set true to enable initDiscInPeripheral Configure discovery option when the gap role of connection is peripheral Set true to enable disableConnectedDisc Configure discovery function when connection established Discovery might be optional for bonded link Note: This is one-time option Disable unnecessary discovery when connected at each time reserved Reserved for future used ",
							" BLE_DD_DiscChar_T ",
							" C typedef struct BLE_DD_DiscChar_T { ATT_Uuid_T const *p_uuid; uint8_t settings; } BLE_DD_DiscChar_T; ",
							" Description Characteristic for discovery procedure ",
							" Field Documentation Field Description p_uuid Pointer to UUID settings Characteristic discovery settings ",
							" BLE_DD_DiscSvc_T ",
							" C typedef struct BLE_DD_DiscSvc_T { ATT_Uuid_T svcUuid; BLE_DD_DiscChar_T **p_discChars; BLE_DD_CharList_T *p_charList; uint8_t discCharsNum; } BLE_DD_DiscSvc_T; ",
							" Description Service for discovery procedure ",
							" Field Documentation Field Description svcUuid UUID of the service to be discovered p_discChars Characteristic list of the service to be discoverd Note: only assigned characteristic will be discovered p_charList Structure storing discovered information of the characteristic Application/profile need to provide the storage discCharsNum Number of the characteristics in the list ",
							" BLE_DD_Event_T ",
							" C typedef struct BLE_DD_Event_T { BLE_DD_EventId_T eventId; BLE_DD_EventField_T eventField; } BLE_DD_Event_T; ",
							" Description BLE_DD callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_DD_EventCb_T ",
							" C typedef void (*BLE_DD_EventCb_T)(BLE_DD_Event_T *p_event); ",
							" Description BLE_DD callback type This callback function sends BLE_DD events to the application ",
							" BLE_DD_EventField_T ",
							" C typedef union { BLE_DD_EvtDiscResult_T evtDiscResult; BLE_DD_EvtSecRequire_T evtSecRequire; BLE_DD_EvtConnect_T evtConnect; BLE_DD_EvtDisconnect_T evtDisconnect; } BLE_DD_EventField_T; ",
							" Description Union of BLE_DD callback event data types ",
							" Field Documentation Field Description evtDiscResult Handle BLE_DD_EVT_DISC_COMPLETE  evtSecRequire Handle BLE_DD_EVT_SEC_REQUIRED  evtConnect Handle BLE_DD_EVT_CONNECTED  evtDisconnect Handle BLE_DD_EVT_DISCONNECTED  ",
							" BLE_DD_EvtConnect_T ",
							" C typedef struct BLE_DD_EvtConnect_T { uint16_t connHandle; } BLE_DD_EvtConnect_T; ",
							" Description Data structure for BLE_DD_EVT_CONNECTED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_DD_EvtDisconnect_T ",
							" C typedef struct BLE_DD_EvtDisconnect_T { uint16_t connHandle; } BLE_DD_EvtDisconnect_T; ",
							" Description Data structure for BLE_DD_EVT_DISCONNECTED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_DD_EvtDiscResult_T ",
							" C typedef struct BLE_DD_EvtDiscResult_T { uint16_t connHandle; } BLE_DD_EvtDiscResult_T; ",
							" Description Data structure for BLE_DD_EVT_DISC_COMPLETE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_DD_EvtSecRequire_T ",
							" C typedef struct BLE_DD_EvtSecRequire_T { uint16_t connHandle; } BLE_DD_EvtSecRequire_T; ",
							" Description Data structure for BLE_DD_EVT_SEC_REQUIRED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" Functions ",
							" BLE_DD_BleEventHandler ",
							" C void BLE_DD_BleEventHandler(BLE_DD_Config_T *p_config STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE events ",
							" Note This function should be called for every BLE event ",
							" Parameters Parameter Description [in] p_config Pointer to the BLE_DD_Config_T structure buffer [in] p_stackEvent Pointer to STACK_Event_T structure buffer ",
							" BLE_DD_EventRegister ",
							" C void BLE_DD_EventRegister(BLE_DD_EventCb_T eventCb); ",
							" Description Register BLE_DD callback ",
							" Note This API should be called in the application initialization routine ",
							" Parameters Parameter Description [in] eventCb Pointer to the BLE_DD_EventCb_T structure buffer ",
							" BLE_DD_Init ",
							" C void BLE_DD_Init(); ",
							" Description Initialize BLE_DD module ",
							" BLE_DD_RestartServicesDiscovery ",
							" C uint16_t BLE_DD_RestartServicesDiscovery(uint16_t connHandle); ",
							" Description Restart database discovery for specific connection ",
							" Note This function shall only be called when remote services changed and application wants to restart database discovery ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully restart discovery MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA The connHandle is invalid ",
							" BLE_DD_ServiceDiscoveryRegister ",
							" C uint16_t BLE_DD_ServiceDiscoveryRegister(BLE_DD_DiscSvc_T *p_discSvc); ",
							" Description Register specific service to the database discovery module ",
							" Note Discovery of the service will be started by module after connected by configurations ",
							" Parameters Parameter Description [in] p_discSvc Pointer to the BLE_DD_DiscSvc_T structure buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully register service for discovery MBA_RES_FAIL Exceeds maximum number of registering service ",
							" Message Sequence Chart ",
							" Register Discover Service Information For Discovery    Example of initializing and registering discovered service to BLE_DD module     ",
							" Database Discovery Process    Example of database discovery after connected         Example of database discovery after connected and paired/encrypted        Example of database discovery interrupted by security    ",
							" Configure Database Discovery Function and Disable Discovery at Run Time    Example of configuring database discovery function enabled in GAP central role        Example of configuring database discovery function enabled in GAP peripheral role       Example of disabling (one time disable) database discovery function at run time (discovered results cached for paired connection)    ",
							" Database Discovery with BLE_SCM in Service Change Situation    Example of receiving service change (SC) indication from peer         Example of receiving ATT Database Out Of Sync error code from peer     ",
							" Service Change Manager (SCM)  Handling GATT services change of remote GATT Server  ",
							" Defines ",
							" Number of discovering characteristics of GATT service ",
							" C #define BLE_SCM_GATT_DISC_CHAR_NUM 0x03 ",
							" Description The definition of number of characteristics ",
							" Macro Definition Macro Description BLE_SCM_GATT_DISC_CHAR_NUM Number of characteristic to discovery of GATT Service ",
							" Enums ",
							" BLE_SCM_EventId_T ",
							" C typedef enum BLE_SCM_EventId_T { BLE_SCM_EVT_SVC_CHANGE BLE_SCM_EVT_BONDED_CHAR_INFO BLE_SCM_EVT_CONFIGURED BLE_SCM_EVT_DISC_COMPLETE }BLE_SCM_EventId_T; ",
							" Description The definition of BLE_SCM module event ID Enumerator Description BLE_SCM_EVT_SVC_CHANGE Receive service change indication from remote BLE_SCM_EvtServiceChange_T BLE_SCM_EVT_BONDED_CHAR_INFO Characteristic handles information of GATT Service of remote bonded device Application needs to take care the bonded information e g storing information to persistent storage BLE_SCM_EvtBondedCharInfo_T  BLE_SCM_EVT_CONFIGURED Generated when GATT client configure procedures are done BLE_SCM_EvtConfigured_T  BLE_SCM_EVT_DISC_COMPLETE Generated when discovery of GATT service of remote connection is completed BLE_SCM_EvtDiscComplete_T  ",
							" Structures ",
							" BLE_SCM_Event_T ",
							" C typedef struct BLE_SCM_Event_T { BLE_SCM_EventId_T eventId; BLE_SCM_EventField_T eventField; } BLE_SCM_Event_T; ",
							" Description BLE_SCM callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_SCM_EventCb_T ",
							" C typedef void (*BLE_SCM_EventCb_T)(BLE_SCM_Event_T *p_event); ",
							" Description BLE_SCM callback type This callback function sends BLE_SCM events to the application ",
							" BLE_SCM_EventField_T ",
							" C typedef union { BLE_SCM_EvtServiceChange_T evtServiceChange; BLE_SCM_EvtBondedCharInfo_T evtBondedCharInfo; BLE_SCM_EvtConfigured_T evtConfigured; BLE_SCM_EvtDiscComplete_T evtDiscComplete; } BLE_SCM_EventField_T; ",
							" Description Union of BLE_SCM callback event data types ",
							" Field Documentation Field Description evtServiceChange Handle BLE_SCM_EVT_SVC_CHANGE  evtBondedCharInfo Handle BLE_SCM_EVT_BONDED_CHAR_INFO  evtConfigured Handle BLE_SCM_EVT_CONFIGURED  evtDiscComplete Handle BLE_SCM_EVT_DISC_COMPLETE  ",
							" BLE_SCM_EvtBondedCharInfo_T ",
							" C typedef struct BLE_SCM_EvtBondedCharInfo_T { uint16_t connHandle; BLE_DD_CharInfo_T charInfo[BLE_SCM_GATT_DISC_CHAR_NUM]; } BLE_SCM_EvtBondedCharInfo_T; ",
							" Description Data structure for BLE_SCM_EVT_BONDED_CHAR_INFO event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection charInfo Characteristic information of GATT service of this bonded remote peer ",
							" BLE_SCM_EvtConfigured_T ",
							" C typedef struct BLE_SCM_EvtConfigured_T { uint16_t connHandle; } BLE_SCM_EvtConfigured_T; ",
							" Description Data structure BLE_SCM_EVT_CONFIGURED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_SCM_EvtDiscComplete_T ",
							" C typedef struct BLE_SCM_EvtDiscComplete_T { uint16_t connHandle; } BLE_SCM_EvtDiscComplete_T; ",
							" Description Data structure BLE_SCM_EVT_DISC_COMPLETE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_SCM_EvtServiceChange_T ",
							" C typedef struct BLE_SCM_EvtServiceChange_T { uint16_t connHandle; uint16_t scStartHandle; uint16_t scEndHandle; } BLE_SCM_EvtServiceChange_T; ",
							" Description Data structure for BLE_SCM_EVT_SVC_CHANGE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection scStartHandle Start attribute handle of service change at remote scEndHandle End attribute handle of service change at remote ",
							" Functions ",
							" BLE_SCM_BleDdEventHandler ",
							" C void BLE_SCM_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE_DD events ",
							" Note This function should be called for every BLE_DD event ",
							" Parameters Parameter Description [in] p_event Pointer to BLE_DD_Event_T structure buffer ",
							" BLE_SCM_BleEventHandler ",
							" C void BLE_SCM_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE events ",
							" Note This function should be called for every BLE event ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to STACK_Event_T structure buffer ",
							" BLE_SCM_EventRegister ",
							" C void BLE_SCM_EventRegister(BLE_SCM_EventCb_T eventCb); ",
							" Description Register BLE_SCM callback ",
							" Note This API should be called in the application initialization routine ",
							" Parameters Parameter Description [in] eventCb Client callback function ",
							" BLE_SCM_Init ",
							" C void BLE_SCM_Init(); ",
							" Description Initialize BLE_SCM module ",
							" Note This module is required only when GATT client is supported and service change status needs to be taken care at remote This module required BLE_DD supported ",
							" BLE_SCM_SetBondedCharInfo ",
							" C void BLE_SCM_SetBondedCharInfo(uint16_t connHandle BLE_DD_CharInfo_T *p_charInfo); ",
							" Description Set characteristics handles information of bonded connection ",
							" Note Application help to cache handle information and set back to BLE_SCM when bonded link connected ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] p_charInfo Point to the characteristic information of GATT service of this bonded remote peer The maximum number is BLE_SCM_GATT_DISC_CHAR_NUM  ",
							" Message Sequence Chart ",
							" Initialize Service Change Manager module    Example of initializing (BLE_DD module is required for BLE_SCM) Managing service change status after connection established     ",
							" Get characteristic handles of remote GATT service    Example of getting characteristic handles from database discovery        Example of getting characteristic handles from application (connection paired and handles cached)    ",
							" Configure characteristic of remote GATT service    Example of configuring GATT service after service is discovered     ",
							" Manage service change status at remote    Example of receiving service change indication from remote peer        Example of receiving Database out of sync error code from remote peer    ",
							" Utilities ",
							" Device Firmware Update ",
							" Defines ",
							" Maximum block len ",
							" C #define MW_DFU_MAX_BLOCK_LEN 0x400 ",
							" Description The definition of maximum block length ",
							" Macro Definition Macro Description MW_DFU_MAX_BLOCK_LEN Maximum block length ",
							" Maximum image size ",
							" C #define MW_DFU_MAX_SIZE_FW_IMAGE 507904 ",
							" Description The definition of DFU maximum image size ",
							" Macro Definition Macro Description MW_DFU_MAX_SIZE_FW_IMAGE Maximum size of firmware image in bytes ",
							" Structures ",
							" MW_DFU_Info_T ",
							" C typedef struct MW_DFU_Info_T { uint32_t fwImageSize; } MW_DFU_Info_T; ",
							" Description Structure of DFU info which is used to indicate the actual image size: MW_DFU_MAX_IMAGE_SIZE  ",
							" Field Documentation Field Description fwImageSize Firmware image size It must be 16-bytes aligned ",
							" Functions ",
							" MW_DFU_Config ",
							" C uint16_t MW_DFU_Config(MW_DFU_Info_T *p_dfuInfo); ",
							" Description The API is used to configure the device information for DFU process ",
							" Parameters Parameter Description [in] p_dfuInfo Pointer to the structure of the image size for DFU Refer to MW_DFU_Info_T for detail structure info ",
							" Return values Return value Description MBA_RES_SUCCESS Configure successfully MBA_RES_INVALID_PARA Invalid parameters The size exceeds the maximum category size or size is not 4-bytes aligned ",
							" MW_DFU_FwImageRead ",
							" C uint16_t MW_DFU_FwImageRead(uint32_t offset uint16_t length uint8_t *p_content); ",
							" Description The API is used to read the fragment of firmware image from flash ",
							" Note Before full firmware image is updated the first 16 bytes image fragment read from flash is invalid ",
							" Parameters Parameter Description [in] offset The flash offset to start reading image fragment [in] length The length of image fragment to read unit: byte [in] p_content Pointer to the image fragment buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Read the fragment of firmware image successfully MBA_RES_INVALID_PARA Invalid parameters The offset + length exceed MW_DFU_MAX_SIZE_FW_IMAGE or length exceed MW_DFU_MAX_BLOCK_LEN  ",
							" MW_DFU_FwImageStart ",
							" C uint16_t MW_DFU_FwImageStart(); ",
							" Description The API is used to start or restart firmware image update procedure The state machine and parameters of this module would be reset after this API is called ",
							" Return values Return value Description MBA_RES_SUCCESS Start or restart firmware image update procedure successfully MBA_RES_INVALID_PARA This API cannot be executed in current DFU process state ",
							" MW_DFU_FwImageUpdate ",
							" C uint16_t MW_DFU_FwImageUpdate(uint16_t length uint8_t *p_content); ",
							" Description The API is used to update the fragment of firmware image to flash The API should be called multiple times to udpate all fragments of firmware image to flash ",
							" Parameters Parameter Description [in] length The length of image fragment to update unit: byte It must be 16-bytes aligned [in] p_content Pointer to the image fragment ",
							" Return values Return value Description MBA_RES_SUCCESS Update the fragment of firmware image successfully MBA_RES_INVALID_PARA Invalid parameters The length exceeds the image size or length exceeds MW_DFU_MAX_BLOCK_LEN or length is not 16-bytes aligned MBA_RES_BAD_STATE This API cannot be executed in current DFU process state MBA_RES_OOM No available memory MBA_RES_FAIL Fail to updpate fragment to flash ",
							" BLE Profile ",
							" Apple Notification Center Service (ANCS)  The purpose of the Apple Notification Center Service (ANCS) is to give Bluetooth accessories (that connect to iOS devices through a Bluetooth low-energy link) a simple and convenient way to access many kinds of notifications that are generated on iOS devices Detail ANCS specification can be found in Apple Developer website  ",
							" Apple Notification Center Service Notification Consumer Role ",
							" Defines ",
							" ANCS length definition ",
							" C #define BLE_ANCS_MAX_PACKET_BUFFER_SIZE 1024 #define BLE_ANCS_MAX_APPID_LEN 32 #define BLE_ANCS_MAX_TITLE_LEN 32 #define BLE_ANCS_MAX_SUB_TITLE_LEN 32 #define BLE_ANCS_MAX_MESSAGE_LEN 512 #define BLE_ANCS_MAX_MESSAGE_SIZE_LEN 5 #define BLE_ANCS_MAX_DATE_LEN 18 #define BLE_ANCS_MAX_POS_ACTION_LABEL_LEN 8 #define BLE_ANCS_MAX_NEG_ACTION_LABEL_LEN 8 #define BLE_ANCS_MAX_APP_NAME_LEN 16 ",
							" Description The definition of maximum length for decoded attribute ",
							" Macro Definition Macro Description BLE_ANCS_MAX_PACKET_BUFFER_SIZE Maximum length of buffer for reassembled packet BLE_ANCS_MAX_APPID_LEN Maximum length of App Identifier BLE_ANCS_MAX_TITLE_LEN Maximum length of Title BLE_ANCS_MAX_SUB_TITLE_LEN Maximum length of Subtitle BLE_ANCS_MAX_MESSAGE_LEN Maximum length of Message BLE_ANCS_MAX_MESSAGE_SIZE_LEN Maximum length of Message Size BLE_ANCS_MAX_DATE_LEN Maximum length of Date Size BLE_ANCS_MAX_POS_ACTION_LABEL_LEN Maximum length of Positive Action content BLE_ANCS_MAX_NEG_ACTION_LABEL_LEN Maximum length of Negative action content BLE_ANCS_MAX_APP_NAME_LEN Maximum length of Application Name ",
							" Enums ",
							" BLE_ANCS_ActionId_T ",
							" C typedef enum BLE_ANCS_ActionId_T { BLE_ANCS_ACTION_ID_POSITIVE = 0 BLE_ANCS_ACTION_ID_NEGATIVE BLE_ANCS_ACTION_ID_MAX } BLE_ANCS_ActionId_T; ",
							" Description ActionID for iOS Perform Notification Action Enumerator Description BLE_ANCS_ACTION_ID_POSITIVE Positive action BLE_ANCS_ACTION_ID_NEGATIVE Negative action BLE_ANCS_ACTION_ID_MAX Undefined action ",
							" BLE_ANCS_CategoryId_T ",
							" C typedef enum BLE_ANCS_CategoryId_T { BLE_ANCS_CATEGORY_ID_OTHER BLE_ANCS_CATEGORY_ID_INCOMING_CALL BLE_ANCS_CATEGORY_ID_MISSED_CALL BLE_ANCS_CATEGORY_ID_VOICE_MAIL BLE_ANCS_CATEGORY_ID_SOCIAL BLE_ANCS_CATEGORY_ID_SCHEDULE BLE_ANCS_CATEGORY_ID_EMAIL BLE_ANCS_CATEGORY_ID_NEWS BLE_ANCS_CATEGORY_ID_HEALTH_AND_FITNESS BLE_ANCS_CATEGORY_ID_BUSINESS_AND_FINANCE BLE_ANCS_CATEGORY_ID_LOCATION BLE_ANCS_CATEGORY_ID_ENTERTAINMENT BLE_ANCS_CATEGORY_ID_MAX } BLE_ANCS_CategoryId_T; ",
							" Description A numerical value providing a category in which the iOS notification can be classified Enumerator Description BLE_ANCS_CATEGORY_ID_OTHER The iOS notification belongs to the \"Other\" category BLE_ANCS_CATEGORY_ID_INCOMING_CALL The iOS notification belongs to the \"Incoming Call\" category BLE_ANCS_CATEGORY_ID_MISSED_CALL The iOS notification belongs to the \"Missed Call\" category BLE_ANCS_CATEGORY_ID_VOICE_MAIL The iOS notification belongs to the \"Voice Mail\" category BLE_ANCS_CATEGORY_ID_SOCIAL The iOS notification belongs to the \"Social\" category BLE_ANCS_CATEGORY_ID_SCHEDULE The iOS notification belongs to the \"Schedule\" category BLE_ANCS_CATEGORY_ID_EMAIL The iOS notification belongs to the \"Email\" category BLE_ANCS_CATEGORY_ID_NEWS The iOS notification belongs to the \"News\" category BLE_ANCS_CATEGORY_ID_HEALTH_AND_FITNESS The iOS notification belongs to the \"Health and Fitness\" category BLE_ANCS_CATEGORY_ID_BUSINESS_AND_FINANCE The iOS notification belongs to the \"Business and Finance\" category BLE_ANCS_CATEGORY_ID_LOCATION The iOS notification belongs to the \"Location\" category BLE_ANCS_CATEGORY_ID_ENTERTAINMENT The iOS notification belongs to the \"Entertainment\" category BLE_ANCS_CATEGORY_ID_MAX Undefined category id ",
							" BLE_ANCS_EventId_T ",
							" C typedef enum BLE_ANCS_EventId_T { BLE_ANCS_EVT_DISC_COMPLETE_IND BLE_ANCS_EVT_ERR_ATTR_BUF_IND BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND BLE_ANCS_EVT_NTFY_ADDED_IND BLE_ANCS_EVT_NTFY_MODIFIED_IND BLE_ANCS_EVT_NTFY_REMOVED_IND BLE_ANCS_EVT_NTFY_ATTR_IND BLE_ANCS_EVT_APP_ATTR_IND BLE_ANCS_EVT_ERR_UNSPECIFIED_IND BLE_ANCS_EVT_ERR_NO_MEM_IND } BLE_ANCS_EventId_T; ",
							" Description BLE ANCS event received by the application Enumerator Description BLE_ANCS_EVT_DISC_COMPLETE_IND Event for discovery completion See BLE_ANCS_EvtDiscComplete_T for event details BLE_ANCS_EVT_ERR_ATTR_BUF_IND The size of received data is larger than the attribute buffer See BLE_ANCS_EvtErrAttrBufInd_T for event details BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND The size of received data is larger than the recomposed buffer See BLE_ANCS_EvtErrRecomposeBufInd_T for event details BLE_ANCS_EVT_NTFY_ADDED_IND The arrival of a new iOS notification on the NP See BLE_ANCS_EvtNtfyInd_T for event details BLE_ANCS_EVT_NTFY_MODIFIED_IND The modification of an iOS notification on the NP See BLE_ANCS_EvtNtfyInd_T for event details BLE_ANCS_EVT_NTFY_REMOVED_IND The removal of an iOS notification on the NP See BLE_ANCS_EvtNtfyInd_T for event details BLE_ANCS_EVT_NTFY_ATTR_IND Notification attribute received See BLE_ANCS_EvtNtfyAttrInd_T for event details BLE_ANCS_EVT_APP_ATTR_IND App attribute received See BLE_ANCS_EvtAppAttrInd_T for event details BLE_ANCS_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs BLE_ANCS_EVT_ERR_NO_MEM_IND Profile internal error occurs due to insufficient heap memory ",
							" BLE_ANCS_NtfyAttrId_T ",
							" C typedef enum BLE_ANCS_NtfyAttrId_T { BLE_ANCS_NTFY_ATTR_ID_APP_IDENTIFIER = 0 BLE_ANCS_NTFY_ATTR_ID_TITLE BLE_ANCS_NTFY_ATTR_ID_SUBTITLE BLE_ANCS_NTFY_ATTR_ID_MESSAGE BLE_ANCS_NTFY_ATTR_ID_MESSAGE_SIZE BLE_ANCS_NTFY_ATTR_ID_DATE BLE_ANCS_NTFY_ATTR_ID_POSITIVE_ACTION_LABEL BLE_ANCS_NTFY_ATTR_ID_NEGATIVE_ACTION_LABEL BLE_ANCS_NTFY_ATTR_ID_MAX } BLE_ANCS_NtfyAttrId_T; ",
							" Description NotificationAttributeID for iOS Get Notification Attributes Enumerator Description BLE_ANCS_NTFY_ATTR_ID_APP_IDENTIFIER Identifies that the attribute data is of an \"App Identifier\" type BLE_ANCS_NTFY_ATTR_ID_TITLE Identifies that the attribute data is a \"Title\" BLE_ANCS_NTFY_ATTR_ID_SUBTITLE Identifies that the attribute data is a \"Subtitle\" BLE_ANCS_NTFY_ATTR_ID_MESSAGE Identifies that the attribute data is a \"Message\" BLE_ANCS_NTFY_ATTR_ID_MESSAGE_SIZE Identifies that the attribute data is a \"Message Size\" BLE_ANCS_NTFY_ATTR_ID_DATE Identifies that the attribute data is a \"Date\" BLE_ANCS_NTFY_ATTR_ID_POSITIVE_ACTION_LABEL The notification has a \"Positive action\" that can be executed associated with it BLE_ANCS_NTFY_ATTR_ID_NEGATIVE_ACTION_LABEL The notification has a \"Negative action\" that can be executed associated with it BLE_ANCS_NTFY_ATTR_ID_MAX Undefined notification attribute id ",
							" Structures ",
							" BLE_ANCS_AppAttrsMask_T ",
							" C typedef struct { uint8_t displayName : 1; uint8_t reserved : 7; } BLE_ANCS_AppAttrsMask_T; ",
							" Description The structure contains iOS app attributes id ",
							" Field Documentation Field Description displayName Set true if Display name is enable reserved Reserved ",
							" BLE_ANCS_DecodeAppAttrs_T ",
							" C typedef struct { uint8_t appId[BLE_ANCS_MAX_APPID_LEN]; uint8_t displayName[BLE_ANCS_MAX_APP_NAME_LEN]; } BLE_ANCS_DecodeAppAttrs_T; ",
							" Description The structure contains iOS app attributes decoded information ",
							" Field Documentation Field Description appId App Identifier displayName Display Name ",
							" BLE_ANCS_DecodeNtfyAttrs_T ",
							" C typedef struct { BLE_ANCS_NtfyAttrsMask_T bitmask; uint32_t ntfyId; uint8_t appId[BLE_ANCS_MAX_APPID_LEN]; uint8_t *p_title; uint8_t *p_subtitle; uint8_t *p_msg; uint16_t msgSize; uint8_t date[BLE_ANCS_MAX_DATE_LEN]; uint8_t positiveAction[BLE_ANCS_MAX_POS_ACTION_LABEL_LEN]; uint8_t negativeAction[BLE_ANCS_MAX_NEG_ACTION_LABEL_LEN]; } BLE_ANCS_DecodeNtfyAttrs_T; ",
							" Description The structure contains iOS notification attributes decoded information ",
							" Field Documentation Field Description bitmask Notification attribute bitmask It's used to indicate whether the following filed is enabled or not ntfyId Notification UID appId Valid if App Identifier is enabled p_title Valid if Title is enabled p_subtitle Valid if Sub Title is enabled p_msg Valid if Message is enabled msgSize Valid if Message Size is enabled date Valid if Date is enabled positiveAction Valid if Positive Action is enabled negativeAction Valid if Negative Action is enabled ",
							" BLE_ANCS_Event_T ",
							" C typedef struct { BLE_ANCS_EventId_T eventId; BLE_ANCS_EventField_T eventField; } BLE_ANCS_Event_T; ",
							" Description BLE ANCS callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_ANCS_EventCb_T ",
							" C typedef void(*BLE_ANCS_EventCb_T)(BLE_ANCS_Event_T *p_event); ",
							" Description BLE ANCS callback type This callback function sends BLE ANCS events to the application ",
							" BLE_ANCS_EventField_T ",
							" C typedef union { BLE_ANCS_EvtDiscComplete_T evtDiscComplete; BLE_ANCS_EvtErrAttrBufInd_T evtErrAttrBufInd; BLE_ANCS_EvtErrRecomposeBufInd_T evtErrRecomposeBufInd; BLE_ANCS_EvtNtfyInd_T evtNtfyInd; BLE_ANCS_EvtNtfyAttrInd_T evtNtfyAttrInd; BLE_ANCS_EvtAppAttrInd_T evtAppAttrInd; } BLE_ANCS_EventField_T; ",
							" Description Union of BLE ANCS callback event data types ",
							" Field Documentation Field Description evtDiscComplete Handle BLE_ANCS_EVT_DISC_COMPLETE_IND evtErrAttrBufInd Handle BLE_ANCS_EVT_ERR_ATTR_BUF_IND  evtErrRecomposeBufInd Handle BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND  evtNtfyInd Handle BLE_ANCS_EVT_NTFY_ADDED_IND  BLE_ANCS_EVT_NTFY_MODIFIED_IND  BLE_ANCS_EVT_NTFY_REMOVED_IND  evtNtfyAttrInd Handle BLE_ANCS_EVT_NTFY_ATTR_IND  evtAppAttrInd Handle BLE_ANCS_EVT_APP_ATTR_IND  ",
							" BLE_ANCS_EvtAppAttrInd_T ",
							" C typedef struct { uint16_t connHandle; BLE_ANCS_DecodeAppAttrs_T *p_data; } BLE_ANCS_EvtAppAttrInd_T; ",
							" Description Data structure for BLE_ANCS_EVT_APP_ATTR_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection p_data Decoded app attribute information See BLE_ANCS_DecodeAppAttrs_T  ",
							" BLE_ANCS_EvtDiscComplete_T ",
							" C typedef struct BLE_ANCS_EvtDiscComplete_T { uint16_t connHandle; }BLE_ANCS_EvtDiscComplete_T; ",
							" Description Data structure for BLE_ANCS_EVT_DISC_COMPLETE_IND event ",
							" Field Documentation Field Description connHandle The connection handle of discovery completion ",
							" BLE_ANCS_EvtErrAttrBufInd_T ",
							" C typedef struct { uint16_t connHandle; uint8_t attrId; uint16_t len; } BLE_ANCS_EvtErrAttrBufInd_T; ",
							" Description Data structure for BLE_ANCS_EVT_ERR_ATTR_BUF_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection attrId Attribute ID See BLE_ANCS_NtfyAttrId_T  len length of the attribute ",
							" BLE_ANCS_EvtErrRecomposeBufInd_T ",
							" C typedef struct { uint16_t connHandle; } BLE_ANCS_EvtErrRecomposeBufInd_T; ",
							" Description Data structure for BLE_ANCS_EVT_ERR_RECOMPOSE_BUF_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_ANCS_EvtNtfyAttrInd_T ",
							" C typedef struct { uint16_t connHandle; BLE_ANCS_DecodeNtfyAttrs_T *p_data; } BLE_ANCS_EvtNtfyAttrInd_T; ",
							" Description Data structure for BLE_ANCS_EVT_NTFY_ATTR_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection p_data Decoded iOS notification attribute information See BLE_ANCS_DecodeNtfyAttrs_T  ",
							" BLE_ANCS_EvtNtfyInd_T ",
							" C typedef struct { uint16_t connHandle; uint32_t ntfyId; BLE_ANCS_NtfyEvtFlagMask_T ntfyEvtFlagMask; BLE_ANCS_CategoryId_T categoryId; uint8_t categoryCount; } BLE_ANCS_EvtNtfyInd_T; ",
							" Description Data structure for BLE_ANCS_EVT_NTFY_ADDED_IND  BLE_ANCS_EVT_NTFY_MODIFIED_IND  BLE_ANCS_EVT_NTFY_REMOVED_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ntfyId Notification UID A 32-bit numerical value that is the unique identifier (UID) for the iOS notification ntfyEvtFlagMask Bitmask to signal whether a special condition applies to the notification For example \"Silent\" or \"Important\" categoryId Classification of the notification type For example email or location categoryCount Current number of active iOS notifications in the given category ",
							" BLE_ANCS_NtfyAttrsMask_T ",
							" C typedef struct { uint8_t appId : 1; uint8_t title : 1; uint8_t subtitle : 1; uint8_t msg : 1; uint8_t msgSize : 1; uint8_t date : 1; uint8_t positiveAction : 1; uint8_t negativeAction : 1; } BLE_ANCS_NtfyAttrsMask_T; ",
							" Description The structure contains iOS notification attributes id ",
							" Field Documentation Field Description appId Set true if App Identifier is enabled title Set true if Title is enabled subtitle Set true if Sub Title is enabled msg Set true if Message is enabled msgSize Set true if Message Size is enabled date Set true if Date is enabled positiveAction Set true if Positive Action is enabled negativeAction Set true if Negative Action is enabled ",
							" BLE_ANCS_NtfyEvtFlagMask_T ",
							" C typedef struct { uint8_t silent : 1; uint8_t important : 1; uint8_t preExisting : 1; uint8_t positiveAction : 1; uint8_t negativeAction : 1; } BLE_ANCS_NtfyEvtFlagMask_T; ",
							" Description A bitmask of Event Flag whose set bits inform an NC of specificities with the iOS notification ",
							" Field Documentation Field Description silent Set true if the notification is low priority important Set true if the notification is high priority preExisting Set true if the notification is pre-existing positiveAction Set true if the notification has a positive action that can be taken negativeAction Set true if the notification has a negative action that can be taken ",
							" Functions ",
							" BLE_ANCS_BleDdEventHandler ",
							" C void BLE_ANCS_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE_DD (Database Discovery middleware) events This API should be called in the application while caching BLE_DD events ",
							" Parameters Parameter Description [in] p_event Pointer to BLE_DD events buffer ",
							" BLE_ANCS_BleEventHandler ",
							" C void BLE_ANCS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_ANCS_EventRegister ",
							" C void BLE_ANCS_EventRegister(BLE_ANCS_EventCb_T bleAncsHandler); ",
							" Description Register BLE ANCS callback ",
							" Parameters Parameter Description [in] bleAncsHandler Client callback function ",
							" BLE_ANCS_GetAppAttr ",
							" C uint16_t BLE_ANCS_GetAppAttr(uint16_t connHandle uint8_t *p_appId BLE_ANCS_AppAttrsMask_T bitmask); ",
							" Description This API triggers ANCS client role (Notification Consumer) to retrieve a specific app attributes installed on the iOS device (Notification Provider) ",
							" Parameters Parameter Description [in] connHandle The connection handle [in] p_appId Pointer to App Identifier(string with NULL-terminated) would like to get App Identifier could be retrieved when receiving BLE_ANCS_EVT_NTFY_ATTR_IND event [in] bitmask Bitmask value of App Attribute Set true to enable retrieving otherwise set to false See BLE_ANCS_AppAttrsMask_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a Get App Attributes command MBA_RES_FAIL Operation is not permitted MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters One of the following reasons: - Connection handle is not valid - Invalid write parameters See GATTC_WriteParams_T for valid values MBA_RES_NO_RESOURCE No available resource to send write operation MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" BLE_ANCS_GetNtfyAttr ",
							" C uint16_t BLE_ANCS_GetNtfyAttr(uint16_t connHandle uint32_t ntfyId BLE_ANCS_NtfyAttrsMask_T bitmask); ",
							" Description This API triggers ANCS client role (Notification Consumer) to retrieve a specific iOS notification attributes from iOS device (Notification Provider) ",
							" Parameters Parameter Description [in] connHandle The connection handle [in] ntfyId Notification UID The ntfyId could be retrieved when receiving BLE_ANCS_EVT_NTFY_ADDED_IND or BLE_ANCS_EVT_NTFY_MODIFIED_IND or BLE_ANCS_EVT_NTFY_REMOVED_IND events [in] bitmask Bitmask value of Notification Attribute Set true to enable retrieving otherwise set to false See BLE_ANCS_NtfyAttrsMask_T  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a Get Notification Attributes command MBA_RES_FAIL Operation is not permitted MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters One of the following reasons: - Connection handle is not valid - Invalid write parameters See GATTC_WriteParams_T for valid values MBA_RES_NO_RESOURCE No available resource to send write operation MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" BLE_ANCS_Init ",
							" C uint16_t BLE_ANCS_Init(); ",
							" Description Initialize ANCS profile ",
							" Return values Return value Description MBA_RES_SUCCESS Initialize BLE ANCS profile successfully MBA_RES_FAIL Fail to initialize BLE ANCS profile ",
							" BLE_ANCS_PerformNtfyAction ",
							" C uint16_t BLE_ANCS_PerformNtfyAction(uint16_t connHandle uint32_t ntfyId BLE_ANCS_ActionId_T actId); ",
							" Description Function for The Perform Notification Action command allows an NC to perform a predetermined action on a specific iOS notification ",
							" Parameters Parameter Description [in] connHandle The connection handle [in] ntfyId A 32-bit numerical value representing the UID of the iOS notification on which the client wants to perform an action The ntfyId could be retrieved when receiving BLE_ANCS_EVT_NTFY_ADDED_IND or BLE_ANCS_EVT_NTFY_MODIFIED_IND or BLE_ANCS_EVT_NTFY_REMOVED_IND events [in] actId The desired action the NC wants to be performed on the iOS notification ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully complete the API MBA_RES_FAIL Operation is not permitted MBA_RES_OOM No available buffer MBA_RES_INVALID_PARA Invalid parameters One of the following reasons: - Connection handle is not valid - Invalid write parameters See GATTC_WriteParams_T for valid values MBA_RES_NO_RESOURCE No available resource to send write operation MBA_RES_BUSY GATT Client is busy Another request is ongoing ",
							" Alert Notification Profile (ANP) ",
							" Alert Notification Profile Client Role ",
							" Defines ",
							" Category Id ",
							" C #define BLE_ANPC_CAT_ID_SIMPLE_ALERT (0x00) #define BLE_ANPC_CAT_ID_EMAIL (0x01) #define BLE_ANPC_CAT_ID_NEWS (0x02) #define BLE_ANPC_CAT_ID_CALL (0x03) #define BLE_ANPC_CAT_ID_MISSED_CALL (0x04) #define BLE_ANPC_CAT_ID_SMS_MMS (0x05) #define BLE_ANPC_CAT_ID_VOICE_MAIL (0x06) #define BLE_ANPC_CAT_ID_SCHEDULE (0x07) #define BLE_ANPC_CAT_ID_HIGH_PRIOR_ALERT (0x08) #define BLE_ANPC_CAT_ID_INSTANT_MSG (0x09) #define BLE_ANPC_CAT_ID_ALL_ALERT (0xFF) ",
							" Description The definition of category id ",
							" Macro Definition Macro Description BLE_ANPC_CAT_ID_SIMPLE_ALERT Simple Alert The title of the alert BLE_ANPC_CAT_ID_EMAIL Email Sender name BLE_ANPC_CAT_ID_NEWS News Title of the news feed BLE_ANPC_CAT_ID_CALL Call Caller name or caller ID BLE_ANPC_CAT_ID_MISSED_CALL Missed Call Caller name or caller ID BLE_ANPC_CAT_ID_SMS_MMS SMS Sender name or caller ID BLE_ANPC_CAT_ID_VOICE_MAIL Voice Mail Sender name or caller ID BLE_ANPC_CAT_ID_SCHEDULE Sechedule Title of the schedule BLE_ANPC_CAT_ID_HIGH_PRIOR_ALERT High Prioritized Alert Title of alert BLE_ANPC_CAT_ID_INSTANT_MSG Instant Messaging Sender name BLE_ANPC_CAT_ID_ALL_ALERT All alert ",
							" Command definition ",
							" C #define BLE_ANPC_CMD_ENABLE_NEW_ALERT (0x00) #define BLE_ANPC_CMD_ENABLE_UNREAD_ALERT_STAT (0x01) #define BLE_ANPC_CMD_DISABLE_NEW_ALERT (0x02) #define BLE_ANPC_CMD_DISABLE_UNREAD_ALERT_STAT (0x03) #define BLE_ANPC_CMD_NOTI_NEW_ALERT_IMM (0x04) #define BLE_ANPC_CMD_NOTI_UNREAD_ALERT_STAT_IMM (0x05) #define BLE_ANPC_CMD_END (BLE_ANPC_CMD_NOTI_UNREAD_ALERT_STAT_IMM) ",
							" Description The definition of command id ",
							" Macro Definition Macro Description BLE_ANPC_CMD_ENABLE_NEW_ALERT Enable new alert notification BLE_ANPC_CMD_ENABLE_UNREAD_ALERT_STAT Enable unread alert status notification BLE_ANPC_CMD_DISABLE_NEW_ALERT Disable new alert notification BLE_ANPC_CMD_DISABLE_UNREAD_ALERT_STAT Disable unread alert status notification BLE_ANPC_CMD_NOTI_NEW_ALERT_IMM Notify new alert immediately BLE_ANPC_CMD_NOTI_UNREAD_ALERT_STAT_IMM Notify unread alert status immediately BLE_ANPC_CMD_END End of command ID ",
							" Error code definition ",
							" C #define BLE_ANPC_ERRCODE_COMMAND_NOT_SUPPORTTED (0xA0) ",
							" Description The definition of command id ",
							" Macro Definition Macro Description BLE_ANPC_ERRCODE_COMMAND_NOT_SUPPORTTED Command not supportted ",
							" Supported category mask ",
							" C #define BLE_ANPC_SUPP_CAT_SIMPLE_ALERT (1 0) #define BLE_ANPC_SUPP_CAT_EMAIL (1 1) #define BLE_ANPC_SUPP_CAT_NEWS (1 2) #define BLE_ANPC_SUPP_CAT_CALL (1 3) #define BLE_ANPC_SUPP_CAT_MISSED_CALL (1 4) #define BLE_ANPC_SUPP_CAT_SMS_MMS (1 5) #define BLE_ANPC_SUPP_CAT_VOICE_MAIL (1 6) #define BLE_ANPC_SUPP_CAT_SCHEDULE (1 7) #define BLE_ANPC_SUPP_CAT_HIGH_PRIOR_ALERT (1 8) #define BLE_ANPC_SUPP_CAT_INSTANT_MSG (1 9) ",
							" Description The definition of category id bit mask If a bit is set to 0 the associated feature is not supported 1 is supported ",
							" Macro Definition Macro Description BLE_ANPC_SUPP_CAT_SIMPLE_ALERT Simple Alert BLE_ANPC_SUPP_CAT_EMAIL Email BLE_ANPC_SUPP_CAT_NEWS News BLE_ANPC_SUPP_CAT_CALL Call BLE_ANPC_SUPP_CAT_MISSED_CALL Missed Call BLE_ANPC_SUPP_CAT_SMS_MMS SMS MMS BLE_ANPC_SUPP_CAT_VOICE_MAIL Voice Mail BLE_ANPC_SUPP_CAT_SCHEDULE Schedule BLE_ANPC_SUPP_CAT_HIGH_PRIOR_ALERT High Prioritized Alert BLE_ANPC_SUPP_CAT_INSTANT_MSG Instant Message ",
							" Enums ",
							" BLE_ANPC_EventId_T ",
							" C typedef enum BLE_ANPC_EventId_T { BLE_ANPC_EVT_DISC_COMPLETE = 0x00 BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND BLE_ANPC_EVT_WRITE_UNREAD_ALERT_NTFY_RSP_IND BLE_ANPC_EVT_WRITE_CP_RSP_IND BLE_ANPC_EVT_NEW_ALERT_IND BLE_ANPC_EVT_UNREAD_ALERT_STAT_IND BLE_ANPC_EVT_ERR_UNSPECTIFIED_IND BLE_ANPC_EVT_ERR_NO_MEM_IND }BLE_ANPC_EventId_T; ",
							" Description Enumeration type of BLE ANPC callback events Enumerator Description BLE_ANPC_EVT_DISC_COMPLETE Event for discovery completion See BLE_ANPC_EvtDiscComplete_T for event details BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND Event for receiving read supported new alert category response See BLE_ANPC_EvtSuppNewAlertCatInd_T for event details BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND Event for receiving read supported unread alert status category response See BLE_ANPC_EvtSuppUnreadAlertCatInd_T for event details BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND Event for receiving write new alert response See BLE_ANPC_EvtWriteNewAlertRspInd_T for event details BLE_ANPC_EVT_WRITE_UNREAD_ALERT_NTFY_RSP_IND Event for receiving write unread alert response See BLE_ANPC_EvtWriteUnreadAlertRspInd_T for event details BLE_ANPC_EVT_WRITE_CP_RSP_IND Event for receiving write cp response See BLE_ANPC_EvtWriteCpRspInd_T for event details BLE_ANPC_EVT_NEW_ALERT_IND Event for receiving new alert notification See BLE_ANPC_EvtNewAlertInd_T for event details BLE_ANPC_EVT_UNREAD_ALERT_STAT_IND Event for receiving unread alert status notification See BLE_ANPC_EvtUnreadAlertStatInd_T for event details BLE_ANPC_EVT_ERR_UNSPECTIFIED_IND Profile internal unspecified error occurs BLE_ANPC_EVT_ERR_NO_MEM_IND Profile internal error occurs due to insufficient heap memory ",
							" Structures ",
							" BLE_ANPC_Event_T ",
							" C typedef struct BLE_ANPC_Event_T { BLE_ANPC_EventId_T eventId; BLE_ANPC_EventField_T eventField; }BLE_ANPC_Event_T; ",
							" Description BLE Alert Notification Client callback event ",
							" Field Documentation Field Description eventId Event ID See BLE_ANPC_EventId_T  eventField Event field ",
							" BLE_ANPC_EventCb_T ",
							" C typedef void(*BLE_ANPC_EventCb_T)(BLE_ANPC_Event_T *p_event); ",
							" Description BLE Alert Notification profile Client callback type This callback function sends BLE Alert Notification profile client events to the application ",
							" BLE_ANPC_EventField_T ",
							" C typedef union { BLE_ANPC_EvtDiscComplete_T evtDiscComplete; BLE_ANPC_EvtSuppNewAlertCatInd_T evtSuppNewAlertCatInd; BLE_ANPC_EvtSuppUnreadAlertCatInd_T evtSuppUnreadAlertCatInd; BLE_ANPC_EvtWriteNewAlertRspInd_T evtWriteNewAlertRspInd; BLE_ANPC_EvtWriteUnreadAlertRspInd_T evtWriteUnreadAlertRspInd; BLE_ANPC_EvtWriteCpRspInd_T evtWriteCpRspInd; BLE_ANPC_EvtNewAlertInd_T evtNewAlertInd; BLE_ANPC_EvtUnreadAlertStatInd_T evtUnreadAlertStatInd; }BLE_ANPC_EventField_T; ",
							" Description Union of BLE Alert Notification Client callback event data types ",
							" Field Documentation Field Description evtDiscComplete Handle BLE_ANPC_EVT_DISC_COMPLETE_IND evtSuppNewAlertCatInd Handle BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND evtSuppUnreadAlertCatInd Handle BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND evtWriteNewAlertRspInd Handle BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND evtWriteUnreadAlertRspInd Handle BLE_ANPC_EVT_WRITE_UNREAD_ALERT_NTFY_RSP_IND evtWriteCpRspInd Handle BLE_ANPC_EVT_WRITE_CP_RSP_IND evtNewAlertInd Handle BLE_ANPC_EVT_NEW_ALERT_IND evtUnreadAlertStatInd Handle BLE_ANPC_EVT_UNREAD_ALERT_STAT_IND ",
							" BLE_ANPC_EvtDiscComplete_T ",
							" C typedef struct BLE_ANPC_EvtDiscComplete_T { uint16_t connHandle; }BLE_ANPC_EvtDiscComplete_T; ",
							" Description Data structure for BLE_ANPC_EVT_DISC_COMPLETE_IND event ",
							" Field Documentation Field Description connHandle The connection handle of discovery completion ",
							" BLE_ANPC_EvtNewAlertInd_T ",
							" C typedef struct BLE_ANPC_EvtNewAlertInd_T { uint16_t connHandle; uint8_t categoryId; uint8_t numOfNewAlert; uint16_t receivedLength; uint8_t *p_receivedValue; }BLE_ANPC_EvtNewAlertInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_NEW_ALERT_IND event ",
							" Field Documentation Field Description connHandle The connection handle categoryId The category Id See Category Id  numOfNewAlert Number of new alert receivedLength Receive txt string length p_receivedValue Point of txt string data ",
							" BLE_ANPC_EvtSuppNewAlertCatInd_T ",
							" C typedef struct BLE_ANPC_EvtSuppNewAlertCatInd_T { uint16_t connHandle; uint16_t category; }BLE_ANPC_EvtSuppNewAlertCatInd_T; ",
							" Description Data structure for ** BLE_ANPC_EVT_SUPP_NEW_ALERT_CAT_IND **event ",
							" Field Documentation Field Description connHandle The connection handle category Supported New Alert Category See Supported category mask  ",
							" BLE_ANPC_EvtSuppUnreadAlertCatInd_T ",
							" C typedef struct BLE_ANPC_EvtSuppUnreadAlertCatInd_T { uint16_t connHandle; uint16_t category; }BLE_ANPC_EvtSuppUnreadAlertCatInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_SUPP_UNREAD_ALERT_STAT_CAT_IND event ",
							" Field Documentation Field Description connHandle The connection handle category Supported Unread Alert Category See Supported category mask  ",
							" BLE_ANPC_EvtUnreadAlertStatInd_T ",
							" C typedef struct BLE_ANPC_EvtUnreadAlertStatInd_T { uint16_t connHandle; uint8_t categoryId; uint8_t unreadCnt; }BLE_ANPC_EvtUnreadAlertStatInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_UNREAD_ALERT_STAT_IND event ",
							" Field Documentation Field Description connHandle The connection handle categoryId The category Id See Category Id  unreadCnt Unread Count ",
							" BLE_ANPC_EvtWriteCpRspInd_T ",
							" C typedef struct BLE_ANPC_EvtWriteCpRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteCpRspInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_WRITE_CP_RSP_IND event ",
							" Field Documentation Field Description connHandle The connection handle errCode The error code of config control point response See Error code definition  ",
							" BLE_ANPC_EvtWriteNewAlertRspInd_T ",
							" C typedef struct BLE_ANPC_EvtWriteNewAlertRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteNewAlertRspInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_WRITE_NEW_ALERT_NTFY_RSP_IND event ",
							" Field Documentation Field Description connHandle The connection handle errCode Error code See ATT error code  ",
							" BLE_ANPC_EvtWriteUnreadAlertRspInd_T ",
							" C typedef struct BLE_ANPC_EvtWriteUnreadAlertRspInd_T { uint16_t connHandle; uint16_t errCode; }BLE_ANPC_EvtWriteUnreadAlertRspInd_T; ",
							" Description Data structure for BLE_ANPC_EVT_WRITE_UNREAD_ALERT_NTFY_RSP_IND event ",
							" Field Documentation Field Description connHandle The connection handle errCode Error code See ATT error code  ",
							" Functions ",
							" BLE_ANPC_BleDdEventHandler ",
							" C void BLE_ANPC_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE DD (Database Discovery middleware) events This API should be called in the application while caching BLE DD events ",
							" Parameters Parameter Description [in] p_event Pointer to BLE DD events buffer ",
							" BLE_ANPC_BleEventHandler ",
							" C void BLE_ANPC_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack related events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_ANPC_EnableNewAlertNtfy ",
							" C uint16_t BLE_ANPC_EnableNewAlertNtfy(uint16_t connHandle bool enable); ",
							" Description Enable New Alert Notification Application must call this API after starting BLE Alert Notification Client procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection [in] enable Set true to enable notification of New Alert Otherwise set false ",
							" Return values Return value Description MBA_RES_SUCCESS Send command successful MBA_RES_INVALID_PARA Invalid parameters MBA_RES_OOM Internal memory allocation failure ",
							" BLE_ANPC_EnableUnreadAlertNtfy ",
							" C uint16_t BLE_ANPC_EnableUnreadAlertNtfy(uint16_t connHandle bool enable); ",
							" Description Enable Unread Alert Notificaiton Application must call this API after starting BLE Alert Notification Client procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection [in] enable Set true to enable notification of Unread Alert Otherwise set false ",
							" Return values Return value Description MBA_RES_SUCCESS Send command successful MBA_RES_INVALID_PARA Invalid parameters MBA_RES_OOM Internal memory allocation failure ",
							" BLE_ANPC_EventRegister ",
							" C void BLE_ANPC_EventRegister(BLE_ANPC_EventCb_T routine); ",
							" Description Register BLE Alert Notification Client callback Application must call this API after starting BLE Alert Notification Client procedure ",
							" Parameters Parameter Description [in] routine Client callback function ",
							" BLE_ANPC_Init ",
							" C uint16_t BLE_ANPC_Init(void); ",
							" Description Initialize BLE Alert Notification Client ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initalize BLE Alert Notification Client MBA_RES_FAIL Fail to initalize BLE Alert Notification Client ",
							" BLE_ANPC_ReadSuppNewAlertCat ",
							" C uint16_t BLE_ANPC_ReadSuppNewAlertCat(uint16_t connHandle); ",
							" Description Read the value of Supported New Alert Category Application must call this API after starting BLE Alert Notification Client procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection ",
							" Return values Return value Description MBA_RES_SUCCESS Send command successful MBA_RES_FAIL Fail ",
							" BLE_ANPC_ReadSuppUnreadAlertCat ",
							" C uint16_t BLE_ANPC_ReadSuppUnreadAlertCat(uint16_t connHandle); ",
							" Description Read the value of Supported Unread Alert Category Application must call this API after starting BLE Alert Notification Client procedure ",
							" Return values Return value Description MBA_RES_SUCCESS Success ",
							" BLE_ANPC_WriteAncp ",
							" C uint16_t BLE_ANPC_WriteAncp(uint16_t connHandle uint8_t cmdId uint8_t catId); ",
							" Description Write Alert Notification Control Point Application must call this API after starting BLE Alert Notification Client procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection [in] cmdId The command Id See Command definition [in] catId The category Id See Category Id ",
							" Return values Return value Description MBA_RES_SUCCESS Send command successful MBA_RES_INVALID_PARA Invalid parameters MBA_RES_OOM Internal memory allocation failure ",
							" Alert Notification Profile Server Role ",
							" Defines ",
							" Category Id ",
							" C #define BLE_ANPS_CAT_ID_SIMPLE_ALERT (0x00) #define BLE_ANPS_CAT_ID_EMAIL (0x01) #define BLE_ANPS_CAT_ID_NEWS (0x02) #define BLE_ANPS_CAT_ID_CALL (0x03) #define BLE_ANPS_CAT_ID_MISSED_CALL (0x04) #define BLE_ANPS_CAT_ID_SMS_MMS (0x05) #define BLE_ANPS_CAT_ID_VOICE_MAIL (0x06) #define BLE_ANPS_CAT_ID_SCHEDULE (0x07) #define BLE_ANPS_CAT_ID_HIGH_PRIOR_ALERT (0x08) #define BLE_ANPS_CAT_ID_INSTANT_MSG (0x09) #define BLE_ANPS_CAT_ID_ALL_ALERT (0xFF) ",
							" Description The definition of category id ",
							" Macro Definition Macro Description BLE_ANPS_CAT_ID_SIMPLE_ALERT Simple Alert The title of the alert BLE_ANPS_CAT_ID_EMAIL Email Sender name BLE_ANPS_CAT_ID_NEWS News Title of the news feed BLE_ANPS_CAT_ID_CALL Call Caller name or caller ID BLE_ANPS_CAT_ID_MISSED_CALL Missed Call Caller name or caller ID BLE_ANPS_CAT_ID_SMS_MMS SMS Sender name or caller ID BLE_ANPS_CAT_ID_VOICE_MAIL Voice Mail Sender name or caller ID BLE_ANPS_CAT_ID_SCHEDULE Sechedule Title of the schedule BLE_ANPS_CAT_ID_HIGH_PRIOR_ALERT High Prioritized Alert Title of alert BLE_ANPS_CAT_ID_INSTANT_MSG Instant Messaging Sender name BLE_ANPS_CAT_ID_ALL_ALERT All alert ",
							" Command definition ",
							" C #define BLE_ANPS_CMD_ENABLE_NEW_ALERT (0x00) #define BLE_ANPS_CMD_ENABLE_UNREAD_ALERT_STAT (0x01) #define BLE_ANPS_CMD_DISABLE_NEW_ALERT (0x02) #define BLE_ANPS_CMD_DISABLE_UNREAD_ALERT_STAT (0x03) #define BLE_ANPS_CMD_NOTI_NEW_ALERT_IMM (0x04) #define BLE_ANPS_CMD_NOTI_UNREAD_ALERT_STAT_IMM (0x05) #define BLE_ANPS_CMD_END (BLE_ANPS_CMD_NOTI_UNREAD_ALERT_STAT_IMM) ",
							" Description The definition of command id ",
							" Macro Definition Macro Description BLE_ANPS_CMD_ENABLE_NEW_ALERT Enable new alert notification BLE_ANPS_CMD_ENABLE_UNREAD_ALERT_STAT Enable unread alert status notification BLE_ANPS_CMD_DISABLE_NEW_ALERT Disable new alert notification BLE_ANPS_CMD_DISABLE_UNREAD_ALERT_STAT Disable unread alert status notification BLE_ANPS_CMD_NOTI_NEW_ALERT_IMM Notify new alert immediately BLE_ANPS_CMD_NOTI_UNREAD_ALERT_STAT_IMM Notify unread alert status immediately BLE_ANPS_CMD_END End of command ID ",
							" Maximum connection number ",
							" C #define BLE_ANPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR ",
							" Description The definition of Memory size ",
							" Macro Definition Macro Description BLE_ANPS_MAX_CONN_NBR Maximum allowing Conncetion Numbers ",
							" Support category mask ",
							" C #define BLE_ANPS_SUPP_CAT_SIMPLE_ALERT (1 0) #define BLE_ANPS_SUPP_CAT_EMAIL (1 1) #define BLE_ANPS_SUPP_CAT_NEWS (1 2) #define BLE_ANPS_SUPP_CAT_CALL (1 3) #define BLE_ANPS_SUPP_CAT_MISSED_CALL (1 4) #define BLE_ANPS_SUPP_CAT_SMS_MMS (1 5) #define BLE_ANPS_SUPP_CAT_VOICE_MAIL (1 6) #define BLE_ANPS_SUPP_CAT_SCHEDULE (1 7) #define BLE_ANPS_SUPP_CAT_HIGH_PRIOR_ALERT (1 8) #define BLE_ANPS_SUPP_CAT_INSTANT_MSG (1 9) #define BLE_ANPS_SUPP_CAT_RESERVED (0xFC00) ",
							" Description The definition of category id bit mask ",
							" Macro Definition Macro Description BLE_ANPS_SUPP_CAT_SIMPLE_ALERT Simple Alert BLE_ANPS_SUPP_CAT_EMAIL Email BLE_ANPS_SUPP_CAT_NEWS News BLE_ANPS_SUPP_CAT_CALL Call BLE_ANPS_SUPP_CAT_MISSED_CALL Missed Call BLE_ANPS_SUPP_CAT_SMS_MMS SMS MMS BLE_ANPS_SUPP_CAT_VOICE_MAIL Voice Mail BLE_ANPS_SUPP_CAT_SCHEDULE Schedule BLE_ANPS_SUPP_CAT_HIGH_PRIOR_ALERT High Prioritized Alert BLE_ANPS_SUPP_CAT_INSTANT_MSG Instant Message BLE_ANPS_SUPP_CAT_RESERVED Reserved ",
							" Enums ",
							" BLE_ANPS_EventId_T ",
							" C typedef enum BLE_ANPS_EventId_T { BLE_ANPS_EVT_ANCP_WRITE_IND = 0x00 BLE_ANPS_EVT_ERR_UNSPECIFIED_IND BLE_ANPS_EVT_ERR_NO_MEM_IND }BLE_ANPS_EventId_T; ",
							" Description Enumeration type of BLE Alert Notification callback events Enumerator Description BLE_ANPS_EVT_ANCP_WRITE_IND Indication of alert notification control point is written by client See BLE_ANPS_EvtAncpWriteInd_T for event details BLE_ANPS_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs BLE_ANPS_EVT_ERR_NO_MEM_IND Profile internal error occurs due to insufficient heap memory ",
							" Structures ",
							" BLE_ANPS_Event_T ",
							" C typedef struct BLE_ANPS_Event_T { BLE_ANPS_EventId_T eventId; BLE_ANPS_EventField_T eventField; }BLE_ANPS_Event_T; ",
							" Description BLE Alert Notification profile callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_ANPS_EventCb_T ",
							" C typedef void(*BLE_ANPS_EventCb_T)(BLE_ANPS_Event_T *p_event); ",
							" Description BLE Alert Notification profile server callback type This callback function sends BLE Alert Notification profile server events to the application ",
							" BLE_ANPS_EventField_T ",
							" C typedef union { BLE_ANPS_EvtAncpWriteInd_T evtAncpWriteInd; }BLE_ANPS_EventField_T; ",
							" Description Union of BLE Alert Notification profile callback event data types ",
							" Field Documentation Field Description evtAncpWriteInd Handle BLE_ANPS_EVT_ANCP_WRITE_IND  ",
							" BLE_ANPS_EvtAncpWriteInd_T ",
							" C typedef struct BLE_ANPS_EvtAncpWriteInd_T { uint16_t connHandle; uint8_t cmdId; uint8_t catId; }BLE_ANPS_EvtAncpWriteInd_T; ",
							" Description Data structure for BLE_ANPS_EVT_ANCP_WRITE_IND ievent ",
							" Field Documentation Field Description connHandle The connection handle cmdId The command ID See Command definition  catId The category ID See Category Id  ",
							" Functions ",
							" BLE_ANPS_SetSuppNewCat ",
							" C uint16_t BLE_ANPS_SetSuppNewCat(uint16_t catMask); ",
							" Description Set new alert category ",
							" Parameters Parameter Description [in] catMask Category of new alert are supported See Support category mask  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set supported new alert category MBA_RES_FAIL Supported new alert category shall not change while in a connection MBA_RES_INVALID_PARA Parameter does not meet the spec ",
							" BLE_ANPS_EventRegister ",
							" C void BLE_ANPS_EventRegister(BLE_ANPS_EventCb_T bleAnpRoutine); ",
							" Description Register BLE Alert Notification profile callback Application must call this API before starting BLE Alert Notification procedure ",
							" Parameters Parameter Description [in] bleAnpRoutine Client callback function ",
							" BLE_ANPS_Init ",
							" C uint16_t BLE_ANPS_Init(); ",
							" Description Initialize BLE Alert Notification Profile ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully init BLE Alert Notification Profile ",
							" BLE_ANPS_BleEventHandler ",
							" C void BLE_ANPS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_ANPS_SendNewAlert ",
							" C uint16_t BLE_ANPS_SendNewAlert(uint16_t connHandle uint8_t catId uint8_t num uint16_t txtStrLen uint8_t *p_txtStr); ",
							" Description Send new alert ",
							" Parameters Parameter Description [in] connHandle The connection handle [in] catId Category Id See Category Id  [in] num Number of new alert [in] txtStrLen Text string information length Length must be less than or equal to (MTU - 5) [in] p_txtStr Text string infomation ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send new alert MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No available buffer for transmitting new alert MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_ANPS_SendUnreadAlertStat ",
							" C uint16_t BLE_ANPS_SendUnreadAlertStat(uint16_t connHandle uint8_t catId uint8_t unreadCnt); ",
							" Description Send unread alert status ",
							" Parameters Parameter Description [in] connHandle The connection handle [in] catId Category Id See Category Id  [in] unreadCnt Unread count number ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send unread alert status MBA_RES_OOM Internal memory allocation failure MBA_RES_NO_RESOURCE No available buffer for transmitting unread alert status MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_ANPS_SetSuppUnreadCat ",
							" C uint16_t BLE_ANPS_SetSuppUnreadCat(uint16_t catMask); ",
							" Description Set unread alert category ",
							" Parameters Parameter Description [in] catMask Category of unread alert are supported See Support category mask  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set supported unread alert category MBA_RES_FAIL Supported unread alert category shall not change while in a connection MBA_RES_INVALID_PARA Parameter does not meet the spec ",
							" HID Over GATT Profile ",
							" HID Over GATT Profile Server Role ",
							" Enums ",
							" BLE_HOGPS_EventId_T ",
							" C typedef enum BLE_HOGPS_EventId_T { BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND BLE_HOGPS_EVT_INPUT_REPORT_WRITE_IND BLE_HOGPS_EVT_OUTPUT_REPORT_WRITE_IND BLE_HOGPS_EVT_FEATURE_REPORT_WRITE_IND BLE_HOGPS_EVT_BOOT_KB_INPUT_REPORT_WRITE_IND BLE_HOGPS_EVT_BOOT_KB_OUTPUT_REPORT_WRITE_IND BLE_HOGPS_EVT_BOOT_M_INPUT_REPORT_WRITE_IND } BLE_HOGPS_EventId_T; ",
							" Description Enumeration type of BLE HOGPS callback events Enumerator Description BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND Indicate HID Boot Mode entered See BLE_HOGPS_EvtBootModeEnter_T for event details BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND Indicate HID Report Mode entered See BLE_HOGPS_EvtReportModeEnter_T for event details BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND Indicate HID Host entering suspend See BLE_HOGPS_EvtHostSuspendEnter_T for event details BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND Indicate HID Host exiting suspend See BLE_HOGPS_EvtHostSuspendExit_T for event details BLE_HOGPS_EVT_INPUT_REPORT_WRITE_IND Indicate HID Input report written See BLE_HOGPS_EvtReportWrite_T for event details BLE_HOGPS_EVT_OUTPUT_REPORT_WRITE_IND Indicate HID Output report written See BLE_HOGPS_EvtReportWrite_T for event details BLE_HOGPS_EVT_FEATURE_REPORT_WRITE_IND Indicate HID Feature report written See BLE_HOGPS_EvtReportWrite_T for event details BLE_HOGPS_EVT_BOOT_KB_INPUT_REPORT_WRITE_IND Indicate HID Boot Keyboard Input report written See BLE_HOGPS_EvtBootReportWrite_T for event details BLE_HOGPS_EVT_BOOT_KB_OUTPUT_REPORT_WRITE_IND Indicate HID Boot Keyboard Output report written See BLE_HOGPS_EvtBootReportWrite_T for event details BLE_HOGPS_EVT_BOOT_M_INPUT_REPORT_WRITE_IND Indicate HID Boot Mouse Input report written See BLE_HOGPS_EvtBootReportWrite_T for event details ",
							" Structures ",
							" BLE_HOGPS_Event_T ",
							" C typedef struct BLE_HOGPS_Event_T { BLE_HOGPS_EventId_T eventId; BLE_HOGPS_EventField_T eventField; } BLE_HOGPS_Event_T; ",
							" Description BLE HID over GATT profile server role callback event ",
							" Field Documentation Field Description eventId Event ID See BLE_HOGPS_EventId_T  eventField Event field ",
							" BLE_HOGPS_EventCb_T ",
							" C typedef void(*BLE_HOGPS_EventCb_T)(BLE_HOGPS_Event_T *p_event); ",
							" Description BLE HID over GATT profile server role callback type This callback function sends BLE HID over GATT profile server role events to the application ",
							" BLE_HOGPS_EventField_T ",
							" C typedef union { BLE_HOGPS_EvtBootModeEnter_T evtBootModeEnter; BLE_HOGPS_EvtReportModeEnter_T evtReportModeEnter; BLE_HOGPS_EvtHostSuspendEnter_T evtHostSuspendEnter; BLE_HOGPS_EvtHostSuspendExit_T evtHostSuspendExit; BLE_HOGPS_EvtReportWrite_T evtInputReportWrite; BLE_HOGPS_EvtReportWrite_T evtOutputReportWrite; BLE_HOGPS_EvtReportWrite_T evtFeatureReportWrite; BLE_HOGPS_EvtBootReportWrite_T evtBootKbOutputReportWrite; BLE_HOGPS_EvtBootReportWrite_T evtBootKbInputReportWrite; BLE_HOGPS_EvtBootReportWrite_T evtBootMouseInputReportWrite; } BLE_HOGPS_EventField_T; ",
							" Description Union of BLE HID over GATT profile server role callback event data types ",
							" Field Documentation Field Description evtBootModeEnter Handle BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND evtReportModeEnter Handle BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND evtHostSuspendEnter Handle BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND evtHostSuspendExit Handle BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND evtInputReportWrite Handle BLE_HOGPS_EVT_INPUT_REPORT_WRITE_IND evtOutputReportWrite Handle BLE_HOGPS_EVT_OUTPUT_REPORT_WRITE_IND evtFeatureReportWrite Handle BLE_HOGPS_EVT_FEATURE_REPORT_WRITE_IND evtBootKbOutputReportWrite Handle BLE_HOGPS_EVT_BOOT_KB_INPUT_REPORT_WRITE_IND evtBootKbInputReportWrite Handle BLE_HOGPS_EVT_BOOT_KB_OUTPUT_REPORT_WRITE_IND evtBootMouseInputReportWrite Handle BLE_HOGPS_EVT_BOOT_M_INPUT_REPORT_WRITE_IND ",
							" BLE_HOGPS_EvtBootModeEnter_T ",
							" C typedef struct BLE_HOGPS_EvtBootModeEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtBootModeEnter_T; ",
							" Description Data structure for BLE_HOGPS_EVT_BOOT_MODE_ENTER_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection ",
							" BLE_HOGPS_EvtBootReportWrite_T ",
							" C typedef struct BLE_HOGPS_EvtBootReportWrite_T { uint16_t connHandle; uint16_t length; uint16_t offset; uint8_t *p_data; } BLE_HOGPS_EvtBootReportWrite_T; ",
							" Description Data structure for BLE_HOGPS_EVT_BOOT_KB_INPUT_REPORT_WRITE_IND  BLE_HOGPS_EVT_BOOT_KB_OUTPUT_REPORT_WRITE_IND  BLE_HOGPS_EVT_BOOT_M_INPUT_REPORT_WRITE_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection length Length of the written value offset Offset of the written value p_data Data of the written value ",
							" BLE_HOGPS_EvtHostSuspendEnter_T ",
							" C typedef struct BLE_HOGPS_EvtHostSuspendEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtHostSuspendEnter_T; ",
							" Description Data structure for BLE_HOGPS_EVT_HOST_SUSPEND_ENTER_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection ",
							" BLE_HOGPS_EvtHostSuspendExit_T ",
							" C typedef struct BLE_HOGPS_EvtHostSuspendExit_T { uint16_t connHandle; } BLE_HOGPS_EvtHostSuspendExit_T; ",
							" Description Data structure for BLE_HOGPS_EVT_HOST_SUSPEND_EXIT_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection ",
							" BLE_HOGPS_EvtReportModeEnter_T ",
							" C typedef struct BLE_HOGPS_EvtReportModeEnter_T { uint16_t connHandle; } BLE_HOGPS_EvtReportModeEnter_T; ",
							" Description Data structure for BLE_HOGPS_EVT_REPORT_MODE_ENTER_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection ",
							" BLE_HOGPS_EvtReportWrite_T ",
							" C typedef struct BLE_HOGPS_EvtReportWrite_T { uint16_t connHandle; uint16_t length; uint16_t offset; uint8_t reportId; uint8_t *p_data; } BLE_HOGPS_EvtReportWrite_T; ",
							" Description Data structure for BLE_HOGPS_EVT_INPUT_REPORT_WRITE_IND  BLE_HOGPS_EVT_OUTPUT_REPORT_WRITE_IND  BLE_HOGPS_EVT_FEATURE_REPORT_WRITE_IND event ",
							" Field Documentation Field Description connHandle The connection handle associated with the connection length Length of the written value offset Offset of the written value reportId Report id of the written report p_data Data of the written value ",
							" Functions ",
							" BLE_HOGPS_BleEventHandler ",
							" C void BLE_HOGPS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_HOGPS_EventRegister ",
							" C void BLE_HOGPS_EventRegister(BLE_HOGPS_EventCb_T routine); ",
							" Description Register BLE HID over GATT profile server role callback Application must call this API after starting BLE HID over GATT profile server role procedure ",
							" Parameters Parameter Description [in] routine Client callback function ",
							" BLE_HOGPS_Init ",
							" C uint16_t BLE_HOGPS_Init(void); ",
							" Description Initialize BLE HID over GATT profile server role ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initialize BLE HID over GATT profile server role MBA_RES_FAIL Fail to initialize BLE HID over GATT profile server role ",
							" BLE_HOGPS_SendBatteryLevel ",
							" C uint16_t BLE_HOGPS_SendBatteryLevel(uint16_t connHandle); ",
							" Description Send battery level of HID device by Battery service ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SendBootKeyboardInputReport ",
							" C uint16_t BLE_HOGPS_SendBootKeyboardInputReport(uint16_t connHandle uint8_t *p_keyCodeArray); ",
							" Description Send HID boot keyboard input report ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection [in] p_keyCodeArray 8 bytes of key codes array From byte 0 to byte 7: |Modifier Keys|Reserved|Keycode 1|Keycode 2|Keycode 3|Keycode 4|Keycode 5|Keycode 6| ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SendBootMouseInputReport ",
							" C uint16_t BLE_HOGPS_SendBootMouseInputReport(uint16_t connHandle uint8_t buttons int8_t xAxis int8_t yAxis); ",
							" Description Send HID boot mouse input report ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection [in] buttons Bit fields (bit 0 - bit 2) represent left/right/middle button pressed or not [in] xAxis X-Axis position [in] yAxis Y-Axis position ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SendKeyboardInputReport ",
							" C uint16_t BLE_HOGPS_SendKeyboardInputReport(uint16_t connHandle uint8_t *p_keyCodeArray); ",
							" Description Send HID keyboard input report ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection [in] p_keyCodeArray 8 bytes of key codes array From byte 0 to byte 7: |Modifier Keys|Reserved|Keycode 1|Keycode 2|Keycode 3|Keycode 4|Keycode 5|Keycode 6| ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SendMouseButtonInputReport ",
							" C uint16_t BLE_HOGPS_SendMouseButtonInputReport(uint16_t connHandle uint8_t buttons int8_t wheel int8_t acPan); ",
							" Description Send HID mouse (Mouse Button) input report ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection [in] buttons Bit fields (bit 0 - bit 4) represent button pressed or not [in] wheel Value of mouse wheel Range from -127 to 127 [in] acPan Value of mouse AC pan Range from -127 to 127 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SendMouseMotionInputReport ",
							" C uint16_t BLE_HOGPS_SendMouseMotionInputReport(uint16_t connHandle int16_t xAxis int16_t yAxis); ",
							" Description Send HID mouse (Mouse Motion) input report ",
							" Parameters Parameter Description [in] connHandle The connection handle associated with the connection [in] xAxis X-Axis position Range from -2047 to 2047 [in] yAxis Y-Axis position Range from -2047 to 2047 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send the input report MBA_RES_OOM Internal memory allocation failure MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetBootKeyboardInputReport ",
							" C uint16_t BLE_HOGPS_SetBootKeyboardInputReport(uint8_t *p_keyCodeArray); ",
							" Description Set HID boot keyboard input report ",
							" Parameters Parameter Description [in] p_keyCodeArray 8 bytes of key codes array From byte 0 to byte 7: |Modifier Keys|Reserved|Keycode 1|Keycode 2|Keycode 3|Keycode 4|Keycode 5|Keycode 6| ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the input report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetBootKeyboardOutputReport ",
							" C uint16_t BLE_HOGPS_SetBootKeyboardOutputReport(uint8_t ledValue); ",
							" Description Set HID boot keyboard output report ",
							" Parameters Parameter Description [in] ledValue Bit fields (bit 0 - bit 4) represent LED values ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the output report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetBootMouseInputReport ",
							" C uint16_t BLE_HOGPS_SetBootMouseInputReport(uint8_t buttons int8_t xAxis int8_t yAxis); ",
							" Description Set HID boot mouse input report ",
							" Parameters Parameter Description [in] buttons Bit fields (bit 0 - bit 2) represent left/right/middle button pressed or not [in] xAxis X-Axis position [in] yAxis Y-Axis position ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the input report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetKeyboardInputReport ",
							" C uint16_t BLE_HOGPS_SetKeyboardInputReport(uint8_t *p_keyCodeArray); ",
							" Description Set HID keyboard input report ",
							" Parameters Parameter Description [in] p_keyCodeArray 8 bytes of key codes array From byte 0 to byte 7: |Modifier Keys|Reserved|Keycode 1|Keycode 2|Keycode 3|Keycode 4|Keycode 5|Keycode 6| ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the input report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetKeyboardOutputReport ",
							" C uint16_t BLE_HOGPS_SetKeyboardOutputReport(uint8_t ledValue); ",
							" Description Set HID keyboard output report ",
							" Parameters Parameter Description [in] ledValue Bit fields (bit 0 - bit 4) represent LED values ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the output report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetMouseButtonInputReport ",
							" C uint16_t BLE_HOGPS_SetMouseButtonInputReport(uint8_t buttons int8_t wheel int8_t acPan); ",
							" Description Set HID mouse (Mouse Button) input report ",
							" Parameters Parameter Description [in] buttons Bit fields (bit 0 - bit 4) represent button pressed or not [in] wheel Value of mouse wheel Range from -127 to 127 [in] acPan Value of mouse AC pan Range from -127 to 127 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the input report MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_HOGPS_SetMouseMotionInputReport ",
							" C uint16_t BLE_HOGPS_SetMouseMotionInputReport(int16_t xAxis int16_t yAxis); ",
							" Description Set HID mouse (Mouse Motion) input report ",
							" Parameters Parameter Description [in] xAxis X-Axis position Range from -2047 to 2047 [in] yAxis Y-Axis position Range from -2047 to 2047 ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set the input report MBA_RES_INVALID_PARA Invalid parameters ",
							" Microchip Over The Air (OTA) Profile  This proprietary profile defines the fundamental requirements to enable over the air device firmware update (OTA DFU) application See Microchip OTA Profile v1 0 in detail  ",
							" Microchip OTA Profile Client Role ",
							" Defines ",
							" Encryption method ",
							" C #define BLE_OTAPC_ENC_NONE 0x00 #define BLE_OTAPC_ENC_AES_CBC 0x01 ",
							" Description The definition of encryption method ",
							" Macro Definition Macro Description BLE_OTAPC_ENC_NONE New firmware image is not encrypted BLE_OTAPC_ENC_AES_CBC New firmware image is encrypted by AES-CBC ",
							" OTAPC image type ",
							" C #define BLE_OTAPC_IMG_TYPE_FW (1 0) ",
							" Description The definition of image type ",
							" Macro Definition Macro Description BLE_OTAPC_IMG_TYPE_FW Firmaware image type ",
							" OTAPC result code ",
							" C #define BLE_OTAPC_RESULT_SUCCESS 0x00 #define BLE_OTAPC_RESULT_INVALID_STATE 0x01 #define BLE_OTAPC_RESULT_NOT_SUPPORTED 0x02 #define BLE_OTAPC_RESULT_OPERATION_FAILED 0x03 #define BLE_OTAPC_RESULT_INVALID_PARA 0x04 #define BLE_OTAPC_RESULT_UNSPECIED_ERROR 0x05 ",
							" Description The definition of operation result ",
							" Macro Definition Macro Description BLE_OTAPC_RESULT_SUCCESS Response for successful operation BLE_OTAPC_RESULT_INVALID_STATE Response if the requested operation is not valid in the current state of the firmware update process BLE_OTAPC_RESULT_NOT_SUPPORTED Response if unsupported Opcode is received BLE_OTAPC_RESULT_OPERATION_FAILED Response if the requested operation failed BLE_OTAPC_RESULT_INVALID_PARA Response if Parameter received does not meet the requirements of the service BLE_OTAPC_RESULT_UNSPECIED_ERROR The server has encountered an unspecified error ",
							" Enums ",
							" BLE_OTAPC_EventId_T ",
							" C typedef enum BLE_OTAPC_EventId_T { BLE_OTAPC_EVT_SEC_REQ = 0x00 BLE_OTAPC_EVT_CONNECT_IND BLE_OTAPC_EVT_FEATURE_IND BLE_OTAPC_EVT_REQ_RSP_IND BLE_OTAPC_EVT_START_RSP_IND BLE_OTAPC_EVT_FRAGMENT_COMPL_IND BLE_OTAPC_EVT_COMPLETE_RSP_IND BLE_OTAPC_EVT_ERR_UNSPECIFIED_IND }BLE_OTAPC_EventId_T; ",
							" Description Enumeration type of BLE OTA profile callback events Enumerator Description BLE_OTAPC_EVT_SEC_REQ Encryption is required accessing OTA Service characteristic at remote Application should encrypt the link to perform further OTA operations See BLE_OTAPC_EvtSecReq_T for event details BLE_OTAPC_EVT_CONNECT_IND OTA profile is ready to perform firmware update procedure BLE_OTAPC_EvtConnectIndInd_T  BLE_OTAPC_EVT_FEATURE_IND The supported feature of the OTA server read by BLE_OTAPC_FeatureDisc See BLE_OTAPC_EvtFeatureIndInd_T for event details BLE_OTAPC_EVT_REQ_RSP_IND The response of BLE_OTAPC_UpdateRequest operation See BLE_OTAPC_EvtReqRspIndInd_T for event details BLE_OTAPC_EVT_START_RSP_IND The response of BLE_OTAPC_UpdateStart operation See BLE_OTAPC_EvtStartRspIndInd_T for event details BLE_OTAPC_EVT_FRAGMENT_COMPL_IND The notification of BLE_OTAPC_FragmentDist operation See BLE_OTAPC_EvtFragmentComplInd_T for event details Application shall wait this event after the total length of sent fragmented images reaches to max fragmented image size before distributing the next fragmented images If the length of remaining fragmented image is less than max fragmented image size application shall wait this event before calling BLE_OTAPC_UpdateComplete  BLE_OTAPC_EVT_COMPLETE_RSP_IND The response of BLE_OTAPC_UpdateComplete operation See BLE_OTAPC_EvtCompleteRspIndInd_T for event details BLE_OTAPC_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs ",
							" Structures ",
							" BLE_OTAPC_Event_T ",
							" C typedef struct BLE_OTAPC_Event_T { BLE_OTAPC_EventId_T eventId; BLE_OTAPC_EventField_T eventField; } BLE_OTAPC_Event_T; ",
							" Description BLE OTA profile callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_OTAPC_EventCb_T ",
							" C typedef void(*BLE_OTAPC_EventCb_T)(BLE_OTAPC_Event_T *p_event); ",
							" Description BLE OTA profile callback type This callback function sends BLE OTA profile events to the application ",
							" BLE_OTAPC_EventField_T ",
							" C typedef union { BLE_OTAPC_EvtSecReq_T evtSecReq; BLE_OTAPC_EvtConnectIndInd_T evtConnectInd; BLE_OTAPC_EvtFeatureIndInd_T evtFeatureInd; BLE_OTAPC_EvtReqRspIndInd_T evtReqRspInd; BLE_OTAPC_EvtStartRspIndInd_T evtStartRspInd; BLE_OTAPC_EvtFragmentComplInd_T evtFragComplInd; BLE_OTAPC_EvtCompleteRspIndInd_T evtCompleteRspInd; } BLE_OTAPC_EventField_T; ",
							" Description Union of BLE OTA profile callback event data types ",
							" Field Documentation Field Description evtSecReq Handle BLE_OTAPC_EVT_SEC_REQ  evtConnectInd Handle BLE_OTAPC_EVT_CONNECT_IND  evtFeatureInd Handle BLE_OTAPC_EVT_FEATURE_IND  evtReqRspInd Handle BLE_OTAPC_EVT_REQ_RSP_IND  evtStartRspInd Handle BLE_OTAPC_EVT_START_RSP_IND  evtFragComplInd Handle BLE_OTAPC_EVT_FRAGMENT_COMPL_IND  evtCompleteRspInd Handle BLE_OTAPC_EVT_COMPLETE_RSP_IND  ",
							" BLE_OTAPC_EvtCompleteRspInd_T ",
							" C typedef struct BLE_OTAPC_EvtCompleteRspInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtCompleteRspInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_COMPLETE_RSP_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection result The start result See Result code  ",
							" BLE_OTAPC_EvtConnectInd_T ",
							" C typedef struct BLE_OTAPC_EvtConnectInd_T { uint16_t connHandle; } BLE_OTAPC_EvtConnectInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_CONNECT_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_OTAPC_EvtFeatureInd_T ",
							" C typedef struct BLE_OTAPC_EvtFeatureInd_T { uint16_t connHandle; uint8_t suppImgType; } BLE_OTAPC_EvtFeatureInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_FEATURE_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection suppImgType The supported image type See Definition of image type ",
							" BLE_OTAPC_EvtFragmentComplInd_T ",
							" C typedef struct BLE_OTAPC_EvtFragmentComplInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtFragmentComplInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_FRAGMENT_COMPL_IND event Application shall wait this event after the total length of sent fragmented images reaches to max fragmented image size before distributing the next fragmented images ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection result The start result See Result code  ",
							" BLE_OTAPC_EvtReqRspInd_T ",
							" C typedef struct BLE_OTAPC_EvtReqRspInd_T { uint16_t connHandle; uint8_t result; uint16_t maxFragImgSize; uint32_t imgStartIdx; uint32_t fwImageVer; } BLE_OTAPC_EvtReqRspInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_REQ_RSP_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection result The request result See Result code  maxFragImgSize Maximum fragmented image size imgStartIdx The start index of image fwImageVer The version of current firmware image ",
							" BLE_OTAPC_EvtSecReq_T ",
							" C typedef struct BLE_OTAPC_EvtSecReq_T { uint16_t connHandle; } BLE_OTAPC_EvtSecReq_T; ",
							" Description Parameters for BLE_OTAPC_EVT_SEC_REQ event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_OTAPC_EvtStartRspInd_T ",
							" C typedef struct BLE_OTAPC_EvtStartRspInd_T { uint16_t connHandle; uint8_t result; } BLE_OTAPC_EvtStartRspInd_T; ",
							" Description Data structure for BLE_OTAPC_EVT_START_RSP_IND event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection result The start result See Result code  ",
							" BLE_OTAPC_Req_T ",
							" C typedef struct BLE_OTAPC_Req_T { uint32_t fwImageSize; uint32_t fwImageId; uint32_t fwImageVer; uint8_t fwImageEnc; } BLE_OTAPC_Req_T; ",
							" Description The structure contains udpate request information It should be used to request the OTA procedure in BLE_OTAPC_UpdateRequest  ",
							" Field Documentation Field Description fwImageSize The size of new firmware image fwImageId The identity of new firmware image fwImageVer The version of new firmware image fwImageEnc The encrypt method of new firmware image See Definition of encryption method  ",
							" Functions ",
							" BLE_OTAPC_BleDdEventHandler ",
							" C void BLE_OTAPC_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE_DD (Database Discovery middleware) events This API should be called in the application while caching BLE_DD events ",
							" Parameters Parameter Description [in] p_event Pointer to BLE_DD events buffer ",
							" BLE_OTAPC_BleEventHandler ",
							" C void BLE_OTAPC_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_OTAPC_DeviceReset ",
							" C uint16_t BLE_OTAPC_DeviceReset(uint16_t connHandle); ",
							" Description Perform device reset request to Server role device after OTA DFU procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do device reset request operation ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts device reset request operation MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BAD_STATE OTA profile server has not allowed to perform firmware update proceudre yet ",
							" BLE_OTAPC_EventRegister ",
							" C void BLE_OTAPC_EventRegister(BLE_OTAPC_EventCb_T bleOtapcRoutine); ",
							" Description Register BLE OTA profile callback Application must call this API before starting BLE OTA procedure ",
							" Parameters Parameter Description [in] bleOtapcRoutine Client callback function ",
							" BLE_OTAPC_FeatureDisc ",
							" C uint16_t BLE_OTAPC_FeatureDisc(uint16_t connHandle); ",
							" Description Perform OTA features discovery operation for Server role device BLE_OTAPC_EVT_FEATURE_IND will be generated if the procedure is complete ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do feature discovery ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts the feature discovery procedure MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BAD_STATE OTA profile is not ready to perform this operation ",
							" BLE_OTAPC_FragmentDist ",
							" C uint16_t BLE_OTAPC_FragmentDist(uint16_t connHandle uint16_t length uint8_t *p_data); ",
							" Description Distribute fragmented firmware image to Server device for OTA DFU operation Application shall wait the BLE_OTAPC_EVT_FRAGMENT_COMPL_IND after the total length of sent fragmented images reaches to max fragmented image size before distributing the next fragmented images If the length of remaining fragmented image is less than max fragmented image size BLE_OTAPC_EVT_FRAGMENT_COMPL_IND will be generated once the complete image is received by server ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do fragmented image distribution [in] length The length of fragment It should not exceed ATT_MTU - 3 [in] p_data The fragmented image data ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts fragmented image distribution MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters - Connection handle is not valid - The length is exceed ATT_MTU - 3 - The total length of sent fragmented images + length exceeds max fragmented image size MBA_RES_BAD_STATE OTA profile server has not allowed to perform firmware update proceudre yet ",
							" BLE_OTAPC_Init ",
							" C uint16_t BLE_OTAPC_Init(); ",
							" Description Initialize BLE OTA Profile ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initialize BLE OTA Profile ",
							" BLE_OTAPC_UpdateComplete ",
							" C uint16_t BLE_OTAPC_UpdateComplete(uint16_t connHandle); ",
							" Description Perform firmware update complete operation BLE_OTAPC_EVT_COMPLETE_RSP_IND will be generated if the procedure is complete ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do firmware update complete operation ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts firmware update complete operation MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BAD_STATE OTA profile server has not allowed to perform firmware update proceudre yet ",
							" BLE_OTAPC_UpdateStart ",
							" C uint16_t BLE_OTAPC_UpdateStart(uint16_t connHandle uint8_t imgType); ",
							" Description Perform firmware update start operation BLE_OTAPC_EVT_START_RSP_IND will be generated if the procedure is complete ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do firmware update start operation [in] imgType The image used for firmware update process See Definition of image type  ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts firmware update start operation MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BAD_STATE OTA profile server has not allowed to perform firmware update proceudre yet ",
							" BLE_OTAPC_UpdateRequest ",
							" C uint16_t BLE_OTAPC_UpdateRequest(uint16_t connHandle BLE_OTAPC_Req_T * p_req); ",
							" Description Perform firmware update request operation BLE_OTAPC_EVT_REQ_RSP_IND will be generated if the procedure is complete ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to do firmware update request operation [in] p_req The request parameters send to server ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully starts firmware update request operation MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid MBA_RES_BAD_STATE OTA profile is not ready to perform this operation ",
							" Microchip OTA Profile Server Role ",
							" Defines ",
							" OTAPS image type ",
							" C #define BLE_OTAPS_IMG_TYPE_FW (1 0) ",
							" Description The definition of image type ",
							" Macro Definition Macro Description BLE_OTAPS_IMG_TYPE_FW Firmaware image type ",
							" OTAPS supported feature ",
							" C #define BLE_OTAPS_FEATURE_SUPP_IMG_TYPE (BLE_OTAPS_IMG_TYPE_FW) ",
							" Description The definition of supported features ",
							" Macro Definition Macro Description BLE_OTAPS_FEATURE_SUPP_IMG_TYPE The supported image type of BLE OTA profile ",
							" Enums ",
							" BLE_OTAPS_EventId_T ",
							" C typedef enum BLE_OTAPS_EventId_T { BLE_OTAPS_EVT_UPDATE_REQ BLE_OTAPS_EVT_START_IND BLE_OTAPS_EVT_UPDATING_IND BLE_OTAPS_EVT_COMPLETE_IND BLE_OTAPS_EVT_RESET_IND BLE_OTAPS_EVT_ERR_UNSPECIFIED_IND }BLE_OTAPS_EventId_T; ",
							" Description Enumeration type of BLE OTA profile callback events Enumerator Description BLE_OTAPS_EVT_UPDATE_REQ Request to start update procedure See BLE_OTAPS_EvtUpdateReq_T for event details BLE_OTAPS_EVT_START_IND Indication of starting one firmware image update See BLE_OTAPS_EvtStartInd_T for event details BLE_OTAPS_EVT_UPDATING_IND Indication of fragmented firmware image update See BLE_OTAPS_EvtUpdatingInd_T for event details BLE_OTAPS_EVT_COMPLETE_IND Indication of firmware update completed See BLE_OTAPS_EvtCompleteInd_T for event details BLE_OTAPS_EVT_RESET_IND Indication of device reset request received OTA client role may ask OTA Server device to rest after firmware update procedure is completed BLE_OTAPS_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs ",
							" Structures ",
							" BLE_OTAPS_EventCb_T ",
							" C typedef void(*BLE_OTAPS_EventCb_T)(BLE_OTAPS_Event_T *p_event); ",
							" Description BLE OTA profile callback type This callback function sends BLE OTA profile events to the application ",
							" BLE_OTAPS_EventField_T ",
							" C typedef union { BLE_OTAPS_EvtUpdateReq_T evtUpdateReq; BLE_OTAPS_EvtStartInd_T evtStartInd; BLE_OTAPS_EvtUpdatingInd_T evtUpdatingInd; BLE_OTAPS_EvtCompleteInd_T evtCompleteInd; } BLE_OTAPS_EventField_T; ",
							" Description Union of BLE OTA profile callback event data types ",
							" Field Documentation Field Description evtUpdateReq Handle BLE_OTAPS_EVT_UPDATE_REQ evtStartInd Handle BLE_OTAPS_EVT_START_IND evtUpdatingInd Handle BLE_OTAPS_EVT_UPDATING_IND evtCompleteInd Handle BLE_OTAPS_EVT_COMPLETE_IND ",
							" BLE_OTAPS_EvtUpdatingInd_T ",
							" C typedef struct BLE_OTAPS_EvtUpdatingInd_T { uint16_t length; } BLE_OTAPS_EvtUpdatingInd_T; ",
							" Description Data structure for BLE_OTAPS_EVT_UPDATING_IND event ",
							" Field Documentation Field Description length The length of image fragment be updated ",
							" BLE_OTAPS_Event_T ",
							" C typedef struct BLE_OTAPS_Event_T { BLE_OTAPS_EventId_T eventId; BLE_OTAPS_EventField_T eventField; } BLE_OTAPS_Event_T; ",
							" Description BLE OTA profile callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_OTAPS_EvtStartInd_T ",
							" C typedef struct BLE_OTAPS_EvtStartInd_T { uint8_t imageType; } BLE_OTAPS_EvtStartInd_T; ",
							" Description Data structure for BLE_OTAPS_EVT_START_IND event ",
							" Field Documentation Field Description imageType The type of image to update see Definition of OTAPS image type  ",
							" BLE_OTAPS_EvtUpdateReq_T ",
							" C typedef struct BLE_OTAPS_EvtUpdateReq_T { uint16_t connHandle; uint32_t fwImageSize; uint32_t fwImageId; uint32_t fwImageVer; } BLE_OTAPS_EvtUpdateReq_T; ",
							" Description Data structure for BLE_OTAPS_EVT_UPDATE_REQ event ",
							" Field Documentation Field Description connHandle The connection handle to request firmware update fwImageSize The size of new firmware image fwImageId The identity of new firmware image fwImageVer The version of new firmware image ",
							" BLE_OTAPS_EvtCompleteInd_T ",
							" C typedef struct BLE_OTAPS_EvtCompleteInd_T { bool errStatus; } BLE_OTAPS_EvtCompleteInd_T; ",
							" Description Data structure for BLE_OTAPS_EVT_COMPLETE_IND event ",
							" Field Documentation Field Description errStatus The error status of the update procedure If errStatus is false Application must call BLE_OTAPS_CompleteResponse to respond peer device the result ",
							" BLE_OTAPS_DevInfo_T ",
							" C typedef struct BLE_OTAPS_DevInfo_T { uint32_t fwImageVer; } BLE_OTAPS_DevInfo_T; ",
							" Description The structure contains current device information It should be used to response the event BLE_OTAPS_EVT_UPDATE_REQ  ",
							" Field Documentation Field Description fwImageVer The version of current firmware image ",
							" Functions ",
							" BLE_OTAPS_UpdateStop ",
							" C uint16_t BLE_OTAPS_UpdateStop(); ",
							" Description Stop BLE OTA procedure Application could call this API to stop ongoing BLE OTA DFU procedure ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully stop BLE OTA procedure ",
							" BLE_OTAPS_EventRegister ",
							" C void BLE_OTAPS_EventRegister(BLE_OTAPS_EventCb_T bleOtapsRoutine); ",
							" Description Register BLE OTA profile callback Application must call this API before starting BLE OTA procedure ",
							" Parameters Parameter Description [in] bleOtapsRoutine Client callback function ",
							" BLE_OTAPS_Init ",
							" C uint16_t BLE_OTAPS_Init(); ",
							" Description Initialize BLE OTA profile and service ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initialize BLE OTA profile and service ",
							" BLE_OTAPS_SetEncrytionInfo ",
							" C uint16_t BLE_OTAPS_SetEncrytionInfo(uint8_t * p_iv uint8_t * p_key); ",
							" Description Set IV value and encryption key of AES-CBC for OTA DFU new image decryption Application must call this API before starting BLE OTA procedure if image is encrpyted ",
							" Parameters Parameter Description [in] p_iv Pointer to the 16 bytes IV value [in] p_key Pointer to the 16 bytes encryption key ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set IV value and Key MBA_RES_BAD_STATE Failure because the BLE OTA is in progress ",
							" BLE_OTAPS_BleEventHandler ",
							" C void BLE_OTAPS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_OTAPS_CompleteResponse ",
							" C uint16_t BLE_OTAPS_CompleteResponse(bool success); ",
							" Description Respond peer device after receiving the BLE_OTAPS_EVT_COMPLETE_IND event if errStatus is false Application must check if the device firmware update is successful or fail ",
							" Parameters Parameter Description [in] success Set true if device firmware update is successful otherwise set false ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send response MBA_RES_OOM Memory not available to send response ",
							" BLE_OTAPS_UpdateResponse ",
							" C uint16_t BLE_OTAPS_UpdateResponse(uint16_t connHandle bool isAllow BLE_OTAPS_DevInfo_T * p_devInfo); ",
							" Description Respond peer device after receiving the BLE_OTAPS_EVT_UPDATE_REQ event Application must determinate if allow to start BLE OTA update procedure ",
							" Parameters Parameter Description [in] connHandle Handle of the connection to send response [in] isAllow Set true if application allows device firmware update procedure otherwise set false [in] p_devInfo Pointer to the current device information See BLE_OTAPS_DevInfo_T in detail The information would be sent to peer device if isAllow is set to true It would be ignored if isAllow is set to false ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send response MBA_RES_OOM Memory not available to send response MBA_RES_INVALID_PARA Invalid parameters Connection handle is not valid ",
							" Proximity Profile (PXP) ",
							" Proximity Profile Monitor Role ",
							" Defines ",
							" Supported service ",
							" C #define BLE_PXPM_IAS_ENABLE #define BLE_PXPM_TPS_ENABLE ",
							" Description The definition of supported service ",
							" Macro Definition Macro Description BLE_PXPM_IAS_ENABLE Feature of PXP Monitor supporting optional Immediate Alert Service BLE_PXPM_TPS_ENABLE Feature of PXP Monitor supporting optional Tx Power Service ",
							" Enums ",
							" BLE_PXPM_AlertLevel_T ",
							" C typedef enum BLE_PXPM_AlertLevel_T { BLE_PXPM_ALERT_LEVEL_NO = 0x00 BLE_PXPM_ALERT_LEVEL_MILD = 0x01 BLE_PXPM_ALERT_LEVEL_HIGH = 0x02 } BLE_PXPM_AlertLevel_T; ",
							" Description Enumeration type of BLE PXP Monitor alert levels Enumerator Description BLE_PXPM_ALERT_LEVEL_NO Indicate alert level for No Alert BLE_PXPM_ALERT_LEVEL_MILD Indicate alert level for Mild Alert BLE_PXPM_ALERT_LEVEL_HIGH Indicate alert level for High Alert ",
							" BLE_PXPM_EventId_T ",
							" C typedef enum BLE_PXPM_EventId_T { BLE_PXPM_EVT_DISC_COMPLETE_IND = 0x00 BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND BLE_PXPM_EVT_ERR_UNSPECIFIED_IND }BLE_PXPM_EventId_T; ",
							" Description Enumeration type of BLE PXP Monitor callback events Enumerator Description BLE_PXPM_EVT_DISC_COMPLETE_IND PXP Reporter Service discovery completed and ready to perform PXP procedure See BLE_PXPM_EvtDiscComplete_T for event details BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND Event for receiving LLS Alert Level write response See BLE_PXPM_EvtLlsAlertLvWriteRspInd_T for event details BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND Event for receiving LLS Alert Level read response See BLE_PXPM_EvtLlsAlertLvInd_T for event details BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND Event for receiving TPS Tx Power Level read response See BLE_PXPM_EvtTpsTxPwrLvInd_T for event details BLE_PXPM_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs ",
							" Structures ",
							" BLE_PXPM_Event_T ",
							" C typedef struct BLE_PXPM_Event_T { BLE_PXPM_EventId_T eventId; BLE_PXPM_EventField_T eventField; } BLE_PXPM_Event_T; ",
							" Description BLE PXP Monitor callback event ",
							" Field Documentation Field Description eventId Event ID See BLE_PXPM_EventId_T  eventField Event field ",
							" BLE_PXPM_EventCb_T ",
							" C typedef void(*BLE_PXPM_EventCb_T)(BLE_PXPM_Event_T *p_event); ",
							" Description BLE PXP Monitor callback type This callback function sends BLE PXP Monitor events to the application ",
							" BLE_PXPM_EventField_T ",
							" C typedef union { BLE_PXPM_EvtDiscComplete_T evtDiscComplete; BLE_PXPM_EvtLlsAlertLvWriteRspInd_T evtLlsAlertLvWriteRspInd; BLE_PXPM_EvtLlsAlertLvInd_T evtLlsAlertLvInd; BLE_PXPM_EvtTpsTxPwrLvInd_T evtTpsTxPwrLvInd; } BLE_PXPM_EventField_T; ",
							" Description Union of BLE PXP Monitor callback event data types ",
							" Field Documentation Field Description evtDiscComplete Handle BLE_PXPM_EVT_DISC_COMPLETE_IND evtLlsAlertLvWriteRspInd Handle BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND evtLlsAlertLvInd Handle BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND evtTpsTxPwrLvInd Handle BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND ",
							" BLE_PXPM_EvtDiscComplete_T ",
							" C typedef struct BLE_PXPM_EvtDiscComplete_T { uint16_t connHandle; } BLE_PXPM_EvtDiscComplete_T; ",
							" Description Data structure for BLE_PXPM_EVT_DISC_COMPLETE_IND event ",
							" Field Documentation Field Description connHandle The connection handle of discovery completion ",
							" BLE_PXPM_EvtLlsAlertLvInd_T ",
							" C typedef struct BLE_PXPM_EvtLlsAlertLvInd_T { uint16_t connHandle; BLE_PXPM_AlertLevel_T alertLevel; } BLE_PXPM_EvtLlsAlertLvInd_T; ",
							" Description Data structure for BLE_PXPM_EVT_LLS_ALERT_LEVEL_IND event ",
							" Field Documentation Field Description connHandle Connection handle alertLevel Alert level ",
							" BLE_PXPM_EvtLlsAlertLvWriteRspInd_T ",
							" C typedef struct BLE_PXPM_EvtLlsAlertLvWriteRspInd_T { uint16_t connHandle; uint16_t errCode; } BLE_PXPM_EvtLlsAlertLvWriteRspInd_T; ",
							" Description Data structure for BLE_PXPM_EVT_LLS_ALERT_LEVEL_WRITE_RSP_IND event ",
							" Field Documentation Field Description connHandle Connection Handle errCode The error code of the writing alert level response See ATT error code  ",
							" BLE_PXPM_EvtTpsTxPwrLvInd_T ",
							" C typedef struct BLE_PXPM_EvtTpsTxPwrLvInd_T { uint16_t connHandle; int8_t txPowerLevel; } BLE_PXPM_EvtTpsTxPwrLvInd_T; ",
							" Description Data structure for BLE_PXPM_EVT_TPS_TX_POWER_LEVEL_IND event ",
							" Field Documentation Field Description connHandle Connection handle txPowerLevel Tx power level ",
							" Functions ",
							" BLE_PXPM_BleDdEventHandler ",
							" C void BLE_PXPM_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE DD (Database Discovery middleware) events This API should be called in the application while caching BLE DD events ",
							" Parameters Parameter Description [in] p_event Pointer to BLE DD events buffer ",
							" BLE_PXPM_BleEventHandler ",
							" C void BLE_PXPM_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack related events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_PXPM_EventRegister ",
							" C void BLE_PXPM_EventRegister(BLE_PXPM_EventCb_T routine); ",
							" Description Register BLE PXP Monitor callback Application must call this API after starting BLE PXP Monitor procedure ",
							" Parameters Parameter Description [in] routine Client callback function ",
							" BLE_PXPM_Init ",
							" C uint16_t BLE_PXPM_Init(void); ",
							" Description Initialize BLE PXP monitor ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initalize BLE PXP monitor MBA_RES_FAIL Fail to initalize BLE PXP monitor ",
							" BLE_PXPM_ReadLlsAlertLevel ",
							" C uint16_t BLE_PXPM_ReadLlsAlertLevel(uint16_t connHandle); ",
							" Description Read Alert Level value from Link Loss Service table of peer PXP Reporter device Application must call this API after starting BLE PXP Monitor procedure ",
							" Parameters Parameter Description [in] connHandle The connection handle want to be set ",
							" BLE_PXPM_ReadTpsTxPowerLevel ",
							" C uint16_t BLE_PXPM_ReadTpsTxPowerLevel(uint16_t connHandle); ",
							" Description Read Tx Power Level value from Tx Power Service table of peer PXP Reporter device Application must call this API after starting BLE PXP Monitor procedure ",
							" Parameters Parameter Description [in] connHandle The connection handle want to be set ",
							" BLE_PXPM_WriteIasAlertLevel ",
							" C uint16_t BLE_PXPM_WriteIasAlertLevel(uint16_t connHandle BLE_PXPM_AlertLevel_T level); ",
							" Description Write Alert Level value to Immediate Alert Service table of peer PXP Reporter device Application must call this API after starting BLE PXP Monitor procedure ",
							" Parameters Parameter Description [in] connHandle The connection handle want to be set [in] level The alert level want to set for the connHandle ",
							" BLE_PXPM_WriteLlsAlertLevel ",
							" C uint16_t BLE_PXPM_WriteLlsAlertLevel(uint16_t connHandle BLE_PXPM_AlertLevel_T level); ",
							" Description Write Alert Level value to Link Loss Service table of peer PXP Reporter device Application must call this API after starting BLE PXP Monitor procedure ",
							" Parameters Parameter Description [in] connHandle The connection handle want to be set [in] level The alert level want to set for the connHandle ",
							" Proximity Profile Reporter Role ",
							" Defines ",
							" Supported service ",
							" C #define BLE_PXPR_IAS_ENABLE #define BLE_PXPR_TPS_ENABLE ",
							" Description The definition of supported service ",
							" Macro Definition Macro Description BLE_PXPR_IAS_ENABLE Feature of PXP Reporter supporting optional Immediate Alert Service BLE_PXPR_TPS_ENABLE Feature of PXP Reporter supporting optional Tx Power Service ",
							" Enums ",
							" BLE_PXPR_AlertLevel_T ",
							" C typedef enum BLE_PXPR_AlertLevel_T { BLE_PXPR_ALERT_LEVEL_NO = 0x00 BLE_PXPR_ALERT_LEVEL_MILD = 0x01 BLE_PXPR_ALERT_LEVEL_HIGH = 0x02 } BLE_PXPR_AlertLevel_T; ",
							" Description Enumeration type of BLE PXP Reporter alert levels Enumerator Description BLE_PXPR_ALERT_LEVEL_NO Indicate alert level for No Alert BLE_PXPR_ALERT_LEVEL_MILD Indicate alert level for Mild Alert BLE_PXPR_ALERT_LEVEL_HIGH Indicate alert level for High Alert ",
							" BLE_PXPR_EventId_T ",
							" C typedef enum BLE_PXPR_EventId_T { BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND = 0x00 BLE_PXPR_EVT_IAS_ALERT_LEVEL_WRITE_IND BLE_PXPR_EVT_ERR_UNSPECIFIED_IND }BLE_PXPR_EventId_T; ",
							" Description Enumeration type of BLE PXP Reporter callback events Enumerator Description BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND vent for Alert Level in Link Loss Service is written See BLE_PXPR_EvtAlertLevelWriteInd_T for event details BLE_PXPR_EVT_IAS_ALERT_LEVEL_WRITE_IND Event for Alert Level in Immediate Alert service is written See BLE_PXPR_EvtAlertLevelWriteInd_T for event details BLE_PXPR_EVT_ERR_UNSPECIFIED_IND Profile internal unspecified error occurs ",
							" Structures ",
							" BLE_PXPR_EventField_T ",
							" C typedef union { BLE_PXPR_EvtAlertLevelWriteInd_T evtLlsAlertLevelWriteInd; BLE_PXPR_EvtAlertLevelWriteInd_T evtIasAlertLevelWriteInd; } BLE_PXPR_EventField_T; ",
							" Description Union of BLE PXP Reporter callback event data types ",
							" Field Documentation Field Description evtLlsAlertLevelWriteInd Handle BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND evtIasAlertLevelWriteInd Handle BLE_PXPR_EVT_IAS_ALERT_LEVEL_WRITE_IND ",
							" BLE_PXPR_EventCb_T ",
							" C typedef void(*BLE_PXPR_EventCb_T)(BLE_PXPR_Event_T *p_event); ",
							" Description BLE PXP Reporter callback type This callback function sends BLE PXP Reporter events to the application ",
							" BLE_PXPR_EvtAlertLevelWriteInd_T ",
							" C typedef struct BLE_PXPR_EvtAlertLevelWriteInd_T { uint16_t connHandle; BLE_PXPR_AlertLevel_T alertLevel; } BLE_PXPR_EvtAlertLevelWriteInd_T; ",
							" Description Data structure for BLE_PXPR_EVT_LLS_ALERT_LEVEL_WRITE_IND  BLE_PXPR_EVT_IAS_ALERT_LEVEL_WRITE_IND event ",
							" Field Documentation Field Description connHandle The connection handle to request writing alert level alertLevel The level that the request wants to write See BLE_PXPR_AlertLevel_T for the detail ",
							" BLE_PXPR_Event_T ",
							" C typedef struct BLE_PXPR_Event_T { BLE_PXPR_EventId_T eventId; BLE_PXPR_EventField_T eventField; } BLE_PXPR_Event_T; ",
							" Description BLE PXP Reporter callback event ",
							" Field Documentation Field Description eventId Event ID See BLE_PXPR_EventId_T  eventField Event field ",
							" Functions ",
							" BLE_PXPR_BleEventHandler ",
							" C void BLE_PXPR_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_PXPR_EventRegister ",
							" C void BLE_PXPR_EventRegister(BLE_PXPR_EventCb_T routine); ",
							" Description Register BLE PXP Reporter callback Application must call this API after starting BLE PXP Reporter procedure ",
							" Parameters Parameter Description [in] routine Client callback function ",
							" BLE_PXPR_Init ",
							" C uint16_t BLE_PXPR_Init(void); ",
							" Description Initialize BLE PXP Reporter ",
							" Return values Return value Description MBA_RES_SUCCESS Success to initialize PXP reporter MBA_RES_FAIL Fail to initialize PXP reporter ",
							" BLE_PXPR_SetLlsAlertLevel ",
							" C uint16_t BLE_PXPR_SetLlsAlertLevel(BLE_PXPR_AlertLevel_T level); ",
							" Description Set Alert Level value of Link Loss Service (LLS) table ",
							" Parameters Parameter Description [in] level Alert level ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully set alert level MBA_RES_INVALID_PARA Invalid parameters ",
							" BLE_PXPR_SetTxPowerLevel ",
							" C void BLE_PXPR_SetTxPowerLevel(int8_t level); ",
							" Description Set Tx Power Level value of Tx Power Service table ",
							" Parameters Parameter Description [in] level Successfully set tx power level ",
							" Transparent Credit Based Profile (TRCBP)  This proprietary profile defines the fundamental requirements to connect and interact with Transparent Credit Based Profile intended for higher application layer to exchange control command and data between Client and Server roles See Microchip Transparent Credit Based Profile v1 0 in detail  ",
							" Transparent Credit Based Profile Server Role ",
							" Defines ",
							" Definition of TRCBPS parameters ",
							" C #define BLE_TRCBPS_SDU_LEN_FIELD_LEN 0x02 #define BLE_TRCBPS_CTRL_MTU BLE_ATT_MAX_MTU_LEN - BLE_TRCBPS_SDU_LEN_FIELD_LEN #define BLE_TRCBPS_DATA_MTU BLE_ATT_MAX_MTU_LEN - BLE_TRCBPS_SDU_LEN_FIELD_LEN #define BLE_TRCBPS_CTRL_MPS BLE_L2CAP_MAX_PDU_SIZE #define BLE_TRCBPS_DATA_MPS BLE_L2CAP_MAX_PDU_SIZE #define BLE_TRCBPS_CTRL_MAX_CREDITS 0x0002 #define BLE_TRCBPS_CTRL_MAX_ACCU_CREDITS 0x0001 #define BLE_TRCBPS_DATA_MAX_CREDITS 0x0008 #define BLE_TRCBPS_DATA_MAX_ACCU_CREDITS 0x0005 #define BLE_TRCBPS_PERMISSION 0x00 ",
							" Description The definition of BLE Transparent Credit Based Profile parameters ",
							" Macro Definition Macro Description BLE_TRCBPS_SDU_LEN_FIELD_LEN Length of the SDU length field BLE_TRCBPS_CTRL_MTU MTU size of control channel BLE_TRCBPS_DATA_MTU MTU size of data channel BLE_TRCBPS_CTRL_MPS MPS size of control channel BLE_TRCBPS_DATA_MPS MPS size of data channel BLE_TRCBPS_CTRL_MAX_CREDITS Maximum credit value of control channel BLE_TRCBPS_CTRL_MAX_ACCU_CREDITS Maximum accumulation credits which will be sent to the peer device of control channel BLE_TRCBPS_DATA_MAX_CREDITS Maximum credit value of data channel BLE_TRCBPS_DATA_MAX_ACCU_CREDITS Maximum accumulation credits which will be sent to the peer device of data channel BLE_TRCBPS_PERMISSION Permission setting ",
							" Definition of unassigned L2CAP ID ",
							" C #define BLE_TRCBPS_L2CAP_UNASSIGNED_ID 0xFF ",
							" Description The definition of unassigned L2CAP ID ",
							" Macro Definition Macro Description BLE_TRCBPS_L2CAP_UNASSIGNED_ID Unassigned BLE L2CAP ID ",
							" Definition of vendor opcode ",
							" C #define BLE_TRCBPS_VENDOR_OPCODE_MIN 0x20 #define BLE_TRCBPS_VENDOR_OPCODE_MAX 0xFF ",
							" Description The definition of BLE Transparent Credit Based Profile vendor command opcodes over control channel ",
							" Macro Definition Macro Description BLE_TRCBPS_VENDOR_OPCODE_MIN Minimum value of Opcode BLE_TRCBPS_VENDOR_OPCODE_MAX Maximum value of Opcode ",
							" Maximum buffer list ",
							" C #define BLE_TRCBPS_CTRL_MAX_BUF_IN BLE_TRCBPS_CTRL_MAX_CREDITS #define BLE_TRCBPS_DATA_MAX_BUF_IN BLE_TRCBPS_DATA_MAX_CREDITS ",
							" Description The definition of maximum buffer list ",
							" Macro Definition Macro Description BLE_TRCBPS_CTRL_MAX_BUF_IN Maximum number of PacketIn buffer list for receive data on control channel BLE_TRCBPS_DATA_MAX_BUF_IN Maximum number of PacketIn buffer list for receive data on data channel ",
							" Maximum connection number ",
							" C #define BLE_TRCBPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR ",
							" Description The definition of maximum connection number of BLE Transparent Credit Based Profile ",
							" Macro Definition Macro Description BLE_TRCBPS_MAX_CONN_NBR Maximum allowing Connection Numbers ",
							" TRCPBS status ",
							" C #define BLE_TRCBPS_STATUS_STANDBY 0x00 #define BLE_TRCBPS_STATUS_CONNECTING 0x01 #define BLE_TRCBPS_STATUS_CONNECTED 0x02 #define BLE_TRCBPS_STATUS_DISCONNECTING 0x03 ",
							" Description The definition of BLE Transparent Credit Based Profile connection status ",
							" Macro Definition Macro Description BLE_TRCBPS_STATUS_STANDBY BLE TRCBPS is standby BLE_TRCBPS_STATUS_CONNECTING BLE TRCBPS is connecting BLE_TRCBPS_STATUS_CONNECTED BLE TRCBPS is connected BLE_TRCBPS_STATUS_DISCONNECTING BLE TRCBPS is disconnecting ",
							" Enums ",
							" BLE_TRCBPS_ChanType_T ",
							" C typedef enum BLE_TRCBPS_ChanType_T { BLE_TRCBPS_UNKNOWN_CHAN = 0x00 BLE_TRCBPS_CTRL_CHAN BLE_TRCBPS_DATA_CHAN } BLE_TRCBPS_ChanType_T; ",
							" Description Enumeration type of BLE Transparent Credit Based Profile channel type Enumerator Description BLE_TRCBPS_UNKNOWN_CHAN Unknown Channel BLE_TRCBPS_CTRL_CHAN Control Channel BLE_TRCBPS_DATA_CHAN Data Channel ",
							" BLE_TRCBPS_EventId_T ",
							" C typedef enum BLE_TRCBPS_EventId_T { BLE_TRCBPS_EVT_CONNECTION_STATUS = 0x00 BLE_TRCBPS_EVT_RECEIVE_DATA BLE_TRCBPS_EVT_VENDOR_CMD BLE_TRCBPS_EVT_ERR_NO_MEM } BLE_TRCBPS_EventId_T; ",
							" Description Enumeration type of BLE Transparent Credit Based Profile callback events Enumerator Description BLE_TRCBPS_EVT_CONNECTION_STATUS Transparent Credit Based Profile Data/Control Channel connection status update event See BLE_TRCBPS_EvtConnStatus_T for event details BLE_TRCBPS_EVT_RECEIVE_DATA Transparent Credit Based Profile Data Channel received notification event See BLE_TRCBPS_EvtReceiveData_T for event details BLE_TRCBPS_EVT_VENDOR_CMD Transparent Credit Based Profile vendor command received notification event See BLE_TRCBPS_EvtVendorCmd_T for event details BLE_TRCBPS_EVT_ERR_NO_MEM Profile internal error occurs due to insufficient heap memory ",
							" Structures ",
							" BLE_TRCBP_EventCb_T ",
							" C typedef void(*BLE_TRCBP_EventCb_T)(BLE_TRCBPS_Event_T *p_event); ",
							" Description BLE Transparent Credit Based profile callback type This callback function sends BLE Transparent Credit Based profile events to the application ",
							" BLE_TRCBPS_ConnPara_T ",
							" C typedef struct BLE_TRCBPS_ConnPara_T { uint16_t spsm; uint16_t mtu; uint16_t mps; uint16_t initCredits; uint8_t permission; } BLE_TRCBPS_ConnPara_T; ",
							" Description The structure contains information about BLE Transparent Credit Based Profile connection parameters ",
							" Field Documentation Field Description spsm Simplified Protocol/Service Multiplexer mtu Maximum Transmission Unit mps Maximum PDU Payload Size initCredits Initial Credits It should not exceed BLE_TRCBPS_DATA_MAX_CREDITS permission Permission of the SPSM ",
							" BLE_TRCBPS_Event_T ",
							" C typedef struct BLE_TRCBPS_Event_T { BLE_TRCBPS_EventId_T eventId; BLE_TRCBPS_EventField_T eventField; } BLE_TRCBPS_Event_T; ",
							" Description BLE Transparent Credit Based profile callback event ",
							" Field Documentation Field Description eventId Event ID See BLE_TRCBPS_EventId_T  eventField Event field ",
							" BLE_TRCBPS_EventField_T ",
							" C typedef union BLE_TRCBPS_EventField_T { BLE_TRCBPS_EvtConnStatus_T connStatus; BLE_TRCBPS_EvtReceiveData_T onReceiveData; BLE_TRCBPS_EvtVendorCmd_T onVendorCmd; } BLE_TRCBPS_EventField_T; ",
							" Description The union of BLE Transparent Credit Based profile event types ",
							" Field Documentation Field Description connStatus Handle BLE_TRCBPS_EVT_CONNECTION_STATUS  onReceiveData Handle BLE_TRCBPS_EVT_RECEIVE_DATA  onVendorCmd Handle BLE_TRCBPS_EVT_VENDOR_CMD  ",
							" BLE_TRCBPS_EvtConnStatus_T ",
							" C typedef struct BLE_TRCBPS_EvtConnStatus_T { uint16_t connHandle; BLE_TRCBPS_ChanType_T chanType; uint8_t leL2capId; uint16_t peerMtu; uint16_t peerMps; uint8_t status; } BLE_TRCBPS_EvtConnStatus_T; ",
							" Description Data structure for BLE_TRCBPS_EVT_CONNECTION_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection chanType Channel Type See BLE_TRCBPS_ChanType_T  leL2capId Instance of L2CAP session Invaild when it was assigned as BLE_TRCBPS_L2CAP_UNASSIGNED_ID Only available for data channel peerMtu Maximum MTU size of peer device Only available for data channel peerMps Maximum PDU size of peer device Only available for data channel status Connection status See TRCPBS status  ",
							" BLE_TRCBPS_EvtReceiveData_T ",
							" C typedef struct BLE_TRCBPS_EvtReceiveData_T { uint16_t connHandle; BLE_TRCBPS_ChanType_T chanType; uint8_t leL2capId; } BLE_TRCBPS_EvtReceiveData_T; ",
							" Description Data structure for BLE_TRCBPS_EVT_RECEIVE_DATA event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection chanType Channel Type See BLE_TRCBPS_ChanType_T  leL2capId Instance of L2CAP session ",
							" BLE_TRCBPS_EvtVendorCmd_T ",
							" C typedef struct BLE_TRCBPS_EvtVendorCmd_T { uint16_t connHandle; uint16_t length; uint8_t *p_payLoad; } BLE_TRCBPS_EvtVendorCmd_T; ",
							" Description Data structure for BLE_TRCBPS_EVT_VENDOR_CMD event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection length Length of Vendor command p_payLoad Pointer to Vendor command payload ",
							" Functions ",
							" BLE_TRCBPS_BleEventHandler ",
							" C void BLE_TRCBPS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while catching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_TRCBPS_ConnReq ",
							" C uint16_t BLE_TRCBPS_ConnReq(uint16_t connHandle); ",
							" Description Issue a BLE Transparent Credit Based Profile connection request to establish a data channel ",
							" Parameters Parameter Description [in] connHandle Connection handle ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a connection request MBA_RES_OOM No available memory MBA_RES_INVALID_PARA The connection handle or SPSM doesn't exist MBA_RES_NO_RESOURCE No Transmit buffers available for sending connection request ",
							" BLE_TRCBPS_DisconnectReq ",
							" C uint16_t BLE_TRCBPS_DisconnectReq(uint16_t connHandle); ",
							" Description Issue a disconnect request to credit based connection channel ",
							" Parameters Parameter Description [in] connHandle Connection handle ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully send a disconnect request MBA_RES_OOM No available memory MBA_RES_INVALID_PARA The L2CAP link doesn't exist MBA_RES_NO_RESOURCE No Transmit buffers available for sending a disconnect request MBA_RES_FAIL Fail to send disconnect request by incorrect connection handle or SPSM ",
							" BLE_TRCBPS_EventRegistration ",
							" C void BLE_TRCBPS_EventRegistration(BLE_TRCBP_EventCb_T bleTrcbpHandler); ",
							" Description Register BLE Transparent Credit Based profile callback ",
							" Parameters Parameter Description [in] bleTrcbpHandler Client callback function ",
							" BLE_TRCBPS_GetData ",
							" C uint16_t BLE_TRCBPS_GetData(uint16_t connHandle uint8_t *p_data); ",
							" Description Get the queued data by connection handle ",
							" Parameters Parameter Description [in] connHandle Connection handle [out] p_data Pointer to the data buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Get the data successfully MBA_RES_INVALID_PARA The L2CAP link doesn't exist MBA_RES_FAIL Failed to get data due to the queue is empty ",
							" BLE_TRCBPS_GetDataLength ",
							" C uint16_t BLE_TRCBPS_GetDataLength(uint16_t connHandle uint16_t *p_dataLength); ",
							" Description Get the length of queued data by connection handle ",
							" Parameters Parameter Description [in] connHandle Connection handle [out] p_dataLength Poniter to the length of the queued data ",
							" Return values Return value Description MBA_RES_SUCCESS Get the length successfully MBA_RES_INVALID_PARA The L2CAP link doesn't exist ",
							" BLE_TRCBPS_Init ",
							" C uint16_t BLE_TRCBPS_Init(void); ",
							" Description Initialize BLE Transparent Credit Based Profile ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully Initialize BLE Transparent Credit Based Profile MBA_RES_INVALID_PARA Invalid MTU parameter usage MBA_RES_FAIL Fail to register SPSM or fail to register the service ",
							" BLE_TRCBPS_QueryPsm ",
							" C uint16_t BLE_TRCBPS_QueryPsm(uint16_t *dataPsm); ",
							" Description Query local L2CAP CoC PSM value of TRCBP Data Channel ",
							" Parameters Parameter Description [out] dataPsm Pointer to the PSM of data channel ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully query the PSM value ",
							" BLE_TRCBPS_SendData ",
							" C uint16_t BLE_TRCBPS_SendData(uint16_t connHandle uint16_t len uint8_t *p_data); ",
							" Description Send data via BLE Transparent Credit Based Profile ",
							" Parameters Parameter Description [in] connHandle Connection handle [in] len Data length [in] p_data Pointer to the transparent data ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send data command MBA_RES_OOM No available memory MBA_RES_INVALID_PARA The L2CAP link doesn't exist or parameter does not meet the spec such as the data length exceeds the maximum MTU size of remote device MBA_RES_NO_RESOURCE There is no avaliable credit of the remote device MBA_RES_BAD_STATE The connection of Transparent Credit Based Profile is not established ",
							" BLE_TRCBPS_SendVendorCommand ",
							" C uint16_t BLE_TRCBPS_SendVendorCommand(uint16_t connHandle uint8_t cmdId uint16_t len uint8_t *p_payload); ",
							" Description Send vendor command via BLE Transparent Credit Based Profile Control Channel ",
							" Parameters Parameter Description [in] connHandle Connection handle [in] cmdId Vendor command Opcode See Definition of vendor opcode  [in] len Length of vendor command [in] p_payload Pointer to the payload of vendor command ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send vendor command MBA_RES_OOM No available memory MBA_RES_INVALID_PARA The L2CAP link doesn't exist or parameter does not meet the spec such as the data length exceeds the maximum MTU size of remote device MBA_RES_BAD_STATE The connection of Transparent Credit Based Profile is not established ",
							" Message Sequence Chart ",
							" Transparent Credit Based Profile initialization   Example of Transparent Credit Based Profile Initialization    ",
							" Transparent Credit Based Profile Connection Establishment Procedure   Example of Opening Transparent Credit Based Profile Data Pipe - Client Initiated       Example of Opening Transparent Credit Based Profile Control Pipe - Client Initiated    ",
							" Transparent Credit Based Profile Disconnection Procedure   Example of Transparent Credit Based Profile Disconnection - Client Initiated       Example of Transparent Credit Based Profile Disconnection - Server Initiated    ",
							" Transparent Credit Based Profile Data/Vendor Command Exchange Procedure    Example of Transparent Credit Based Profile Data Exchange (Client to Server) Over Data Pipe         Example of Transparent Credit Based Profile Vendor Command Exchange Over Control Pipe         Example of Transparent Credit Based Profile Data Exchange (Server to Client) Over Data Pipe         Example of Transparent Credit Based Profile Data Exchange (Server to Client) Over Data Pipe without available credits         Example of Transparent Credit Based Profile Vendor Command Exchange Over Control Pipe     ",
							" Transparent Profile (TRP) ",
							" Transparent Profile Client Role ",
							" Defines ",
							" Definition of downlink status ",
							" C #define BLE_TRSPC_DL_STATUS_DISABLED 0x00 #define BLE_TRSPC_DL_STATUS_NONCBFCENABLED 0x10 #define BLE_TRSPC_DL_STATUS_CBFCENABLED 0x20 ",
							" Description The definition of BLE transparent service downlink status ",
							" Macro Definition Macro Description BLE_TRSPC_DL_STATUS_DISABLED Transparent downlink is disabled BLE_TRSPC_DL_STATUS_NONCBFCENABLED Transparent downlink is enabled without credit based flow control BLE_TRSPC_DL_STATUS_CBFCENABLED Transparent downlink is enabled with credit based flow control ",
							" Definition of uplink status ",
							" C #define BLE_TRSPC_UL_STATUS_DISABLED 0x00 #define BLE_TRSPC_UL_STATUS_CBFCENABLED 0x01 ",
							" Description The definition of BLE transparent service uplink status ",
							" Macro Definition Macro Description BLE_TRSPC_UL_STATUS_DISABLED Transparent uplink is disabled BLE_TRSPC_UL_STATUS_CBFCENABLED Transparent uplink is enabled with credit based flow control ",
							" Maximum connection number ",
							" C #define BLE_TRSPC_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR ",
							" Description The definition of Memory size ",
							" Macro Definition Macro Description BLE_TRSPC_MAX_CONN_NBR Maximum allowing Conncetion Numbers for MBADK ",
							" Enums ",
							" BLE_TRSPC_EventId_T ",
							" C typedef enum BLE_TRSPC_EventId_T { BLE_TRSPC_EVT_UL_STATUS BLE_TRSPC_EVT_DL_STATUS BLE_TRSPC_EVT_RECEIVE_DATA BLE_TRSPC_EVT_VENDOR_CMD BLE_TRSPC_EVT_VENDOR_CMD_RSP BLE_TRSPC_EVT_DISC_COMPLETE BLE_TRSPC_EVT_ERR_NO_MEM }BLE_TRSPC_EventId_T; ",
							" Description Enumeration type of BLE transparent profile callback events Enumerator Description BLE_TRSPC_EVT_UL_STATUS Transparent Profile Uplink status update event See BLE_TRSPC_EvtUplinkStatus_T for event details BLE_TRSPC_EVT_DL_STATUS Transparent Profile Downlink status update event See BLE_TRSPC_EvtDownlinkStatus_T for event details BLE_TRSPC_EVT_RECEIVE_DATA Transparent Profile Data Channel received notification event See BLE_TRSPC_EvtReceiveData_T for event details BLE_TRSPC_EVT_VENDOR_CMD Transparent Profile vendor command received notification event See BLE_TRSPC_EvtVendorCmd_T for event details BLE_TRSPC_EVT_VENDOR_CMD_RSP Transparent Profile Vendor command response received notification event See BLE_TRSPC_EvtVendorCmdRsp_T for event details BLE_TRSPC_EVT_DISC_COMPLETE Transparent Profile discovery complete event See BLE_TRSPC_EvtDiscComplete_T for event details BLE_TRSPC_EVT_ERR_NO_MEM Profile internal error occurs due to insufficient heap memory ",
							" Structures ",
							" BLE_TRSPC_Event_T ",
							" C typedef struct BLE_TRSPC_Event_T { BLE_TRSPC_EventId_T eventId; BLE_TRSPC_EventField_T eventField; } BLE_TRSPC_Event_T; ",
							" Description BLE Transparent profile client callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_TRSPC_EventCb_T ",
							" C typedef void(*BLE_TRSPC_EventCb_T)(BLE_TRSPC_Event_T *p_event); ",
							" Description BLE Transparent profile cliet callback type This callback function sends BLE Transparent profile client events to the application ",
							" BLE_TRSPC_EventField_T ",
							" C typedef union { BLE_TRSPC_EvtUplinkStatus_T onUplinkStatus; BLE_TRSPC_EvtDownlinkStatus_T onDownlinkStatus; BLE_TRSPC_EvtReceiveData_T onReceiveData; BLE_TRSPC_EvtVendorCmd_T onVendorCmd; BLE_TRSPC_EvtVendorCmdRsp_T onVendorCmdRsp; BLE_TRSPC_EvtDiscComplete_T onDiscComplete; } BLE_TRSPC_EventField_T; ",
							" Description The union of BLE Transparent profile client event types ",
							" Field Documentation Field Description onUplinkStatus Handle BLE_TRSPC_EVT_UL_STATUS  onDownlinkStatus Handle BLE_TRSPC_EVT_DL_STATUS  onReceiveData Handle BLE_TRSPC_EVT_RECEIVE_DATA  onVendorCmd Handle BLE_TRSPC_EVT_VENDOR_CMD  onVendorCmdRsp Handle BLE_TRSPC_EVT_VENDOR_CMD_RSP  onDiscComplete Handle BLE_TRSPC_EVT_DISC_COMPLETE  ",
							" BLE_TRSPC_EvtDiscComplete_T ",
							" C typedef struct BLE_TRSPC_EvtDiscComplete_T { uint16_t connHandle; } BLE_TRSPC_EvtDiscComplete_T; ",
							" Description Data structure for BLE_TRSPC_EVT_DISC_COMPLETE event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_TRSPC_EvtDownlinkStatus_T ",
							" C typedef struct BLE_TRSPC_EvtDownlinkStatus_T { uint16_t connHandle; uint8_t status; uint8_t currentCreditNumber; } BLE_TRSPC_EvtDownlinkStatus_T; ",
							" Description Data structure for BLE_TRSPC_EVT_DL_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Connection status See Definition of downlink status  currentCreditNumber The current available credit number of the downlink in this connection ",
							" BLE_TRSPC_EvtReceiveData_T ",
							" C typedef struct BLE_TRSPC_EvtReceiveData_T { uint16_t connHandle; } BLE_TRSPC_EvtReceiveData_T; ",
							" Description Data structure for BLE_TRSPC_EVT_RECEIVE_DATA event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_TRSPC_EvtUplinkStatus_T ",
							" C typedef struct BLE_TRSPC_EvtUplinkStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPC_EvtUplinkStatus_T; ",
							" Description Data structure for BLE_TRSPC_EVT_UL_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Connection status See Definition of uplink status  ",
							" BLE_TRSPC_EvtVendorCmd_T ",
							" C typedef struct BLE_TRSPC_EvtVendorCmd_T { uint16_t connHandle; uint8_t payloadLength; uint8_t *p_payLoad; } BLE_TRSPC_EvtVendorCmd_T; ",
							" Description Data structure for BLE_TRSPC_EVT_VENDOR_CMD event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection payloadLength Length of payload p_payLoad Vendor command payload pointer ",
							" BLE_TRSPC_EvtVendorCmdRsp_T ",
							" C typedef struct BLE_TRSPC_EvtVendorCmdRsp_T { uint16_t connHandle; } BLE_TRSPC_EvtVendorCmdRsp_T; ",
							" Description Data structure for BLE_TRSPC_EVT_VENDOR_CMD_RSP event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" Functions ",
							" BLE_TRSPC_BleDdEventHandler ",
							" C void BLE_TRSPC_BleDdEventHandler(BLE_DD_Event_T *p_event); ",
							" Description Handle BLE_DD (Database Discovery middleware) events This API should be called in the application while caching BLE_DD events ",
							" Parameters Parameter Description [in] p_event Pointer to BLE_DD events buffer ",
							" BLE_TRSPC_BleEventHandler ",
							" C void BLE_TRSPC_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" BLE_TRSPC_EventRegistration ",
							" C void BLE_TRSPC_EventRegistration(BLE_TRSPC_EventCb_T bleTranCliHandler); ",
							" Description Register BLE Transparent profile client callback ",
							" Parameters Parameter Description [in] bleTranCliHandler Client callback function ",
							" BLE_TRSPC_GetData ",
							" C uint16_t BLE_TRSPC_GetData(uint16_t connHandle uint8_t *p_data); ",
							" Description Get queued data ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with the queued data [out] p_data Pointer to the data buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a flow ctrl stop MBA_RES_FAIL No data in the input queue ",
							" BLE_TRSPC_GetDataLength ",
							" C void BLE_TRSPC_GetDataLength(uint16_t connHandle uint16_t *p_dataLength); ",
							" Description Get queued data length ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with the queued data [out] p_dataLength Data length ",
							" BLE_TRSPC_Init ",
							" C uint16_t BLE_TRSPC_Init(); ",
							" Description Initialize TRS client profile ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully initialize the TRS client profile MBA_RES_FAIL Fail to registering TRS discovery to BLE_DD module ",
							" BLE_TRSPC_SendData ",
							" C uint16_t BLE_TRSPC_SendData(uint16_t connHandle uint16_t len uint8_t *p_data); ",
							" Description Send transparent data ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] len Data length [in] p_data Pointer to the transparent data ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send data MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Parameter does not meet the spec ",
							" BLE_TRSPC_SendVendorCommand ",
							" C uint16_t BLE_TRSPC_SendVendorCommand(uint16_t connHandle uint8_t commandID uint8_t commandLength uint8_t *p_commandPayload); ",
							" Description Send vendor command ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] commandID Command id of the vendor command [in] commandLength Length of payload in vendor commnad [in] p_commandPayload Pointer to the payload of vendor command ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send vendor command MBA_RES_FAIL Invalid connection or the CCCD of TCP is not enabled MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Error commandID usage or commandLength invalid ",
							" Transparent Profile Server Role ",
							" Defines ",
							" Maximum connection number ",
							" C #define BLE_TRSPS_MAX_CONN_NBR BLE_GAP_MAX_LINK_NBR ",
							" Description The definition of Memory size ",
							" Macro Definition Macro Description BLE_TRSPS_MAX_CONN_NBR Maximum allowing Conncetion Numbers for MBADK ",
							" TRSPS Status ",
							" C #define BLE_TRSPS_STATUS_CTRL_DISABLED 0x00 #define BLE_TRSPS_STATUS_CTRL_OPENED 0x01 #define BLE_TRSPS_STATUS_TX_DISABLED 0x00 #define BLE_TRSPS_STATUS_TX_OPENED 0x01 ",
							" Description The definition of BLE transparent service status ",
							" Macro Definition Macro Description BLE_TRSPS_STATUS_CTRL_DISABLED Local ble transparent service control characteristic CCCD is closed BLE_TRSPS_STATUS_CTRL_OPENED Local ble transparent service control characteristic CCCD is enable BLE_TRSPS_STATUS_TX_DISABLED Local ble transparent service TX characteristic CCCD is closed BLE_TRSPS_STATUS_TX_OPENED Local ble transparent service TX characteristic CCCD is enable ",
							" Enums ",
							" BLE_TRSPS_EventId_T ",
							" C typedef enum BLE_TRSPS_EventId_T { BLE_TRSPS_EVT_CTRL_STATUS BLE_TRSPS_EVT_TX_STATUS BLE_TRSPS_EVT_CBFC_ENABLED BLE_TRSPS_EVT_CBFC_CREDIT BLE_TRSPS_EVT_RECEIVE_DATA BLE_TRSPS_EVT_VENDOR_CMD BLE_TRSPS_EVT_ERR_UNSPECIFIED BLE_TRSPS_EVT_ERR_NO_MEM }BLE_TRSPS_EventId_T; ",
							" Description Enumeration type of BLE transparent profile callback events Enumerator Description BLE_TRSPS_EVT_CTRL_STATUS Transparent Profile Control Channel status update event See BLE_TRSPS_EvtCtrlStatus_T for event details BLE_TRSPS_EVT_TX_STATUS Transparent Profile Data Channel transmit status event See BLE_TRSPS_EvtTxStatus_T for event details BLE_TRSPS_EVT_CBFC_ENABLED Transparent Profile Credit based flow control enable notification event See BLE_TRSPS_EvtCbfcEnabled_T for event details BLE_TRSPS_EVT_CBFC_CREDIT Transparent Profile Credit based flow control credit update event See BLE_TRSPS_EvtCbfcEnabled_T for event details BLE_TRSPS_EVT_RECEIVE_DATA Transparent Profile Data Channel received notification event See BLE_TRSPS_EvtReceiveData_T for event details BLE_TRSPS_EVT_VENDOR_CMD Transparent Profile vendor command received notification event See BLE_TRSPS_EvtVendorCmd_T for event details BLE_TRSPS_EVT_ERR_UNSPECIFIED Profile internal unspecified error occurs BLE_TRSPS_EVT_ERR_NO_MEM Profile internal error occurs due to insufficient heap memory ",
							" Structures ",
							" BLE_TRSPS_Event_T ",
							" C typedef struct BLE_TRSPS_Event_T { BLE_TRSPS_EventId_T eventId; BLE_TRSPS_EventField_T eventField; } BLE_TRSPS_Event_T; ",
							" Description BLE Transparent profile server callback event ",
							" Field Documentation Field Description eventId Event ID eventField Event field ",
							" BLE_TRSPS_EventCb_T ",
							" C typedef void(*BLE_TRSPS_EventCb_T)(BLE_TRSPS_Event_T *p_event); ",
							" Description BLE Transparent profile server callback type This callback function sends BLE Transparent profile server events to the application ",
							" BLE_TRSPS_EventField_T ",
							" C typedef union { BLE_TRSPS_EvtCtrlStatus_T onCtrlStatus; BLE_TRSPS_EvtTxStatus_T onTxStatus; BLE_TRSPS_EvtCbfcEnabled_T onCbfcEnabled; BLE_TRSPS_EvtReceiveData_T onReceiveData; BLE_TRSPS_EvtVendorCmd_T onVendorCmd; } BLE_TRSPS_EventField_T; ",
							" Description The union of BLE Transparent profile server event types ",
							" Field Documentation Field Description onCtrlStatus Handle BLE_TRSPS_EVT_CTRL_STATUS  onTxStatus Handle BLE_TRSPS_EVT_TX_STATUS  onCbfcEnabled Handle BLE_TRSPS_EVT_CBFC_ENABLED  onReceiveData Handle BLE_TRSPS_EVT_RECEIVE_DATA  onVendorCmd Handle BLE_TRSPS_EVT_VENDOR_CMD  ",
							" BLE_TRSPS_EvtCbfcEnabled_T ",
							" C typedef struct BLE_TRSPS_EvtCbfcEnabled_T { uint16_t connHandle; }BLE_TRSPS_EvtCbfcEnabled_T; ",
							" Description Data structure for BLE_TRSPS_EVT_CBFC_ENABLED event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_TRSPS_EvtCtrlStatus_T ",
							" C typedef struct BLE_TRSPS_EvtCtrlStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPS_EvtCtrlStatus_T; ",
							" Description Data structure for BLE_TRSPS_EVT_CTRL_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Connection status See TRSPS Status  ",
							" BLE_TRSPS_EvtReceiveData_T ",
							" C typedef struct BLE_TRSPS_EvtReceiveData_T { uint16_t connHandle; }BLE_TRSPS_EvtReceiveData_T; ",
							" Description Data structure for BLE_TRSPS_EVT_RECEIVE_DATA event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection ",
							" BLE_TRSPS_EvtTxStatus_T ",
							" C typedef struct BLE_TRSPS_EvtTxStatus_T { uint16_t connHandle; uint8_t status; } BLE_TRSPS_EvtTxStatus_T; ",
							" Description Data structure for BLE_TRSPS_EVT_TX_STATUS event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection status Connection status See TRSPS Status  ",
							" BLE_TRSPS_EvtVendorCmd_T ",
							" C typedef struct BLE_TRSPS_EvtVendorCmd_T { uint16_t connHandle; uint16_t length; uint8_t *p_payLoad; }BLE_TRSPS_EvtVendorCmd_T; ",
							" Description Data structure for BLE_TRSPS_EVT_VENDOR_CMD event ",
							" Field Documentation Field Description connHandle Connection handle associated with this connection length Vendor command payload length p_payLoad Vendor command payload pointer ",
							" BLE_TRSPS_Uuids_T ",
							" C typedef struct BLE_TRSPS_Uuids_T { uint8_t *p_primaryService; uint8_t *p_transTx; uint8_t *p_transRx; uint8_t *p_transCtrl; } BLE_TRSPS_Uuids_T; ",
							" Description The structure contains information about change UUID function parameters ",
							" Field Documentation Field Description p_primaryService The user-defined 128-bit primary service UUID p_transTx The user-defined 128-bit trans tx characteristic UUID p_transRx The user-defined 128-bit trans rx characteristic UUID p_transCtrl The user-defined 128-bit trans ctrl characteristic UUID ",
							" Functions ",
							" BLE_TRSPS_GetDataLength ",
							" C void BLE_TRSPS_GetDataLength(uint16_t connHandle uint16_t *p_dataLength); ",
							" Description Get queued data length ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with the queued data [out] p_dataLength Pointer to the data length ",
							" BLE_TRSPS_EventRegistration ",
							" C void BLE_TRSPS_EventRegistration(BLE_TRSPS_EventCb_T bleTranServHandler); ",
							" Description Register BLE Transparent profile server callback ",
							" Parameters Parameter Description [in] bleTranServHandler Client callback function ",
							" BLE_TRSPS_GetData ",
							" C uint16_t BLE_TRSPS_GetData(uint16_t connHandle uint8_t *p_data); ",
							" Description Get queued data ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with the queued data [out] p_data Pointer to the data buffer ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a flow ctrl stop MBA_RES_FAIL No data in the input queue or can not find the link ",
							" BLE_TRSPS_SendData ",
							" C uint16_t BLE_TRSPS_SendData(uint16_t connHandle uint16_t len uint8_t *p_data); ",
							" Description Send transparent data ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] len Data length [in] p_data Pointer to the transparent data ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send data MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Parameter does not meet the spec ",
							" BLE_TRSPS_ChangeUuids ",
							" C void BLE_TRSPS_ChangeUuids(BLE_TRSPS_Uuids_T *p_bleTranServUuids); ",
							" Description Change UUIDs of transparent service and characteristics ",
							" Parameters Parameter Description [in] p_bleTranServUuids Pointer to the UUIDs see BLE_TRSPS_Uuids_T  ",
							" BLE_TRSPS_Init ",
							" C uint16_t BLE_TRSPS_Init(); ",
							" Description Initialize BLE Transparent Profile ",
							" Return values Return value Description MBA_RES_SUCCESS Success to add a service to the service table MBA_RES_FAIL Fail to add a service to the service table MBA_RES_OOM No available memory ",
							" BLE_TRSPS_SendVendorCommand ",
							" C uint16_t BLE_TRSPS_SendVendorCommand(uint16_t connHandle uint8_t commandID uint8_t commandLength uint8_t *p_commandPayload); ",
							" Description Send vendor command ",
							" Parameters Parameter Description [in] connHandle Connection handle associated with this connection [in] commandID Command id of the vendor command [in] commandLength Length of payload in vendor commnad [in] p_commandPayload Pointer to the payload of vendor command ",
							" Return values Return value Description MBA_RES_SUCCESS Successfully issue a send vendor command MBA_RES_FAIL Invalid connection MBA_RES_OOM No available memory MBA_RES_INVALID_PARA Error commandID usage or commandLength invalid or the CCCD of TCP is not enabled ",
							" BLE_TRSPS_BleEventHandler ",
							" C void BLE_TRSPS_BleEventHandler(STACK_Event_T *p_stackEvent); ",
							" Description Handle BLE_Stack events This API should be called in the application while caching BLE_Stack events ",
							" Parameters Parameter Description [in] p_stackEvent Pointer to BLE_Stack events buffer ",
							" Message Sequence Chart ",
							" Transparent Profile Client Role Initialization and Connection Establishment Procedure   Example of Transparent Profile Client Role Initialization       Example of Opening Transparent Profile Client Role Control Pipe       Example of Opening Transparent Profile Client Role Data Pipe    ",
							" Transparent Profile Server Role Initialization and Connection Establishment Procedure    Example of Transparent Profile Server Role Initialization         Example of Opening Transparent Profile Server Role Control Pipe         Example of Opening Transparent Profile Server Role Data Pipe     ",
							" Transparent Profile Vendor Command Exchange Procedure    Example of Transparent Profile Client Role Vendor Command Exchange Over Control Pipe         Example of Transparent Profile Server Role Vendor Command Exchange Over Control Pipe     ",
							" Transparent Profile Data Exchange Procedure - Client Role    Example of Transparent Profile Client Role Data Exchange Over Data Pipe - The data is transmitted from a Client Role         Example of Transparent Profile Client Role Data Exchange Over Data Pipe - The data is transmitted from Server Role     ",
							" Transparent Profile Data Exchange Procedure - Server Role    Example of Transparent Profile Server Role Data Exchange Over Data Pipe - The data is transmitted from a Server Role         Example of Transparent Profile Server Role Data Exchange Over Data Pipe - The data is transmitted from Client Role       ",
							" BLE Document ",
							" Microchip OTA Profile v1 0  This profile defines fundamental requirements to perform OTA DFU procedures between OTA Client and Server  ",
							" Introduction  The OTA Profile (OTAP) defines fundamental requirements to enable over the air (OTA) application One application scenario is OTA Client distributes new firmware image to OTA Server by the OTA Service (OTAS) [1]  ",
							" Profile Dependencies  This profile requires the Generic Attribute Profile (GATT)  ",
							" Bluetooth Specification Release Capability  This specification is compatible with Bluetooth Core Specification [2]  ",
							" Configuration ",
							" Roles  The profile defines two roles: OTA Client and OTA Server In general mobile phone plays as OTA Client role and BLE accessory device is Server device   ",
							" Role/Service Relationships  OTA Client shall be a GATT Client and GAP Central role and OTA Server shall be a GATT Server and GAP peripheral role The following diagram illustrates the relationships between service and profile roles An OTA Server shall instantiate the OTA Service [1]    ",
							" Transport Dependencies  There are no transport restrictions imposed by this profile specification Bluetooth Low Energy transport is recommended from real implementation view  ",
							" OTA Server Role Requirements  The OTA Server shall instantiate one OTA Services [1] A higher layer specification may impose additional requirements on the service declaration of the OTA Service (e g «Primary Service») as well as other additional requirements There shall not be more than one instance of the OTA Service that is declared as a «Primary Service»    Table3 1: Service Requirements for OTA Server       Service  OTA Server      OTA Service  M       ",
							" OTA Client Role Requirements  The discovery requirements for the OTA Client are defined in Table 4 1    Table4 1: Discovery Requirements for OTA Client       Discovery Requirement  Support in OTA Client      OTA Service Discovery  M    OTA Service Characteristic Discovery  M       The characteristic support requirements for the OTA Client are defined in Table 4 2    Table 4 2: Characteristic Support Requirements for OTA Client       Characteristic Support Requirements  Support in OTA Client      OTA Feature  M    OTA Data  M    OTA Control Point  M       ",
							" GATT Sub-Procedure Requirements  Requirements in this section represent a minimum set of requirements for an OTA Client Other GATT sub-procedures may be used if supported by both OTA Client and Server The table below summarizes additional GATT sub-procedure requirements beyond those required by all GATT clients    Table4 3: Additional GATT Sub-Procedure Requirements       GATT Sub-Procedure  OTA Client Requirements      Discover All Characteristics of a Service  M    Discover All Characteristics Descriptors  M    Write Characteristic Value  M    Write Without Response  M    Write Characteristic Descriptors  M    Read Characteristic Descriptors  M    Read Characteristic Value  M       ",
							" Service Discovery  This section defines service discovery procedures for the OTA role  The OTA Client shall use either the GATT Discover All Primary Services sub-procedure or the GATT Discover Primary Services by Service UUID sub-procedure to discover the OTA Service  ",
							" Characteristic Discovery  This section defines characteristic discovery procedures for the OTA Client  The OTA Client shall use either the GATT Discover All Characteristics of a Service sub-procedure or the GATT Discover Characteristics by UUID sub-procedure to discover the characteristics of the service The OTA Client shall use the GATT Discover All Characteristic Descriptors sub-procedure to discover the characteristic descriptors  ",
							" Service Characteristics  This section contains characteristics and behavior that are defined in the OTA procedures    OTA Control Point  Before performing an OTA procedure the OTA Client shall configure the OTACP characteristic for notifications (i e via the Client Characteristic Configuration descriptor)  When OTA Client wants to send data to OTA Server the OTA Client shall write a characteristic value to the OTACP Characteristic The Server may respond it with a notification by Response Code that may include the Request Opcode and may also include a Response Parameter as defined in [1]   Below shows the requirements for the OTACP opcode in the context of this profile:    Table4 4: OTAP Op Code Requirements       OTAP opcode  Requirement      Firmware Update Request  Mandatory if Firmware Update Request procedure is supported    Firmware Update Start  Mandatory if Firmware Update Start procedure is supported    Firmware Update Complete  Mandatory if Firmware Update Complete procedure is supported    Device Reset Request  Mandatory if Device Reset Request procedure is supported; otherwise optional       ",
							" OTA Firmware Update Procedures  The generic procedures defined in this section provide standardized methods of using the features of the OTA Service [1] in specified sequences in order to satisfy common use cases This profile does not forbid the use of the features of OTAS in other ways and a higher layer profile may define such additional procedures However wherever a procedure listed in Table 4 4 is supported the implementation of the procedure shall conform to the requirements of this profile specification  The following diagram shows the message sequence chart of OTA firmware update process   ",
							" OTA Feature Discovery  This procedure shall be performed at least once before any other OTA Procedure is attempted The OTA Client shall read the OTA Feature characteristic to determine the supported image types of the OTA Server in order to understand its capabilities  Since all bits of this characteristic are static for the lifetime of the device (i e static permanently or until Service Changed is indicated) the OTA Client may cache this value  ",
							" OTA Data Discovery  This procedure shall be used for fragmented image distribution  The OTA Client shall configure the OTA Data characteristic for notifications (i e via the Client Characteristic Configuration descriptor) before writing data to OTA Data characteristic  The OTA Client shall perform Firmware Update Start procedure first before writing data to OTA Data characteristic  OTA Client shall expect to receive a notification from OTA Server after the total length of fragmented image has been distributed reaches to the Max_Fragmented_Image_Size OTA Client may set a timer to check this notification If OTA Client doesn’t receive the notification after this timer OTA Client shall issue the Firmware Update Complete operation to stop the OTA firmware update process  ",
							" Firmware Update Request Operation  This procedure is used by OTA Client when it attempts to request OTA Server to authorize OTA firmware update process  The OTA Client shall write the OTACP Firmware Update Request opcode to the OTACP with the image size and version information  If the response to the Firmware Update Request opcode is not “Success” OTA Client shall consider OTA Server is not ready to execute OTA firmware update process or the relative parameters are not valid OTA Client shall not issue the following operations  If the response to the Firmware Update Request opcode is “Success” OTA Client shall get maximum fragmented image size and version information  OTA Client shall cache the maximum fragmented image size for the image data transmission  ",
							" Firmware Update Start Operation  This procedure is used by OTA Client when it attempts to request OTA Server to start OTA firmware update process  The OTA Client shall write the OTACP Firmware Update Start opcode to the OTACP with the image type  If the response to the Firmware Update Start opcode is not “Success” OTA Client may issue Firmware Update Start operation again with valid parameter or issue the Firmware Update Complete operation to stop the OTA firmware update process  If the response to the Firmware Update Start opcode is “Success” OTA Client shall be able to transmit image via OTA Data characteristic  ",
							" Firmware Update Complete Operation  This procedure is used by OTA Client when it attempts to notify all the OTA firmware update process is complete OTA Client shall issue the Firmware Update Request operation for future OTA firmware update process Firmware Update Request operation and Firmware Validation Request operation are prohibited after the Firmware Update Complete operation is issued  The OTA Client shall write the OTACP Firmware Update Complete opcode to the OTACP  If the response to the Firmware Update Complete opcode is “Success” the OTA Client shall consider the OTA firmware update process is complete  ",
							" Device Reset Request Operation  This procedure is used by OTA Client when it attempts to request OTA Server to perform the reset procedure  The OTA Client shall write the OTACP Device Reset Request opcode to the OTACP  ",
							" General Error Handling  This is the start of your topic The OTA Client shall be tolerant and behave appropriately (i e the OTA Client shall be able to continue to process operations and/or receive data normally) when receiving the Result Codes ATT Application Error Codes and ATT Error Codes defined in the OTA Service [1]   If the OTA Client reads a characteristic with Reserved for Future Use (RFU) bits that are non-zero (i e RFU bits in the OTA Feature characteristic) it shall ignore those bits and continue to process the characteristic as if all the RFU bits had been zero  ",
							" Connection Establishment Procedures  Connection establishment requirements may be defined by the higher layer specification  ",
							" Security Considerations  To secure OTA procedure LE Secure Connection with MITM procedure is recommend strongly  ",
							" Acronyms and Abbreviations   Table 7 1: Abbreviations and Acronyms       Acronyms and Abbreviations  Meaning      GATT  Generic Attribute Profile    LE  Low Energy    OTAP  OTA Profile    OTAS  OTA Service    OTACP  OTA Control Point    RFU  Reserved for Future Use      ",
							" References  [1] Microchip OTA Service v1 2  [2] Bluetooth Core Specification v4 0 or later version of the Core Specification  [3] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip Transparent Profile v1 1  This profile defines fundamental requirements to connect and interact with Transparent-Channels intended for consumer to exchange control and data between Transparent Client and Transparent Server  ",
							" Introduction  The Transparent Profile (TRSP) defines fundamental requirements to enable higher layer application data exchange between TRSP Client and Server devices that exposes the Transparent Service (TRS) [1]   ",
							" Profile Dependencies  This profile requires the Generic Attribute Profile (GATT)  ",
							" Bluetooth Specification Release Compatibility  This specification is compatible with Bluetooth Core Specification v4 1 [3]   ",
							" Configuration ",
							" Roles  The profile defines two roles: Transparent Server and Transparent Client Transparent Server and Transparent Client can transfer data to each other  The Transparent Server shall be a GATT Server  The Transparent Client shall be a GATT Client  ",
							" Role/Service Relationships  The following diagram illustrates the relationships between service and profile roles   A Transparent Server shall instantiate the Transparent Service [1] As shown above a higher layer specification is required to provide additional requirements on top of TRS/TRSP that are specific to the need of the use case  This profile defines two Transparent Channels (Control Pipe and Data Pipe) which can be established for higher application layer Control Pipe is based on TCP characteristic attribute and Data Pipe is on TUD and TDD characteristic attributes  ",
							" Transport Dependencies  There are no transport restrictions exposed by this profile specification However a higher layer specification might add additional requirements  ",
							" Transparent Server Role Requirements  The Transparent Server shall instantiate one Transparent Services [1] A higher layer specification might add additional requirements on the service declaration of the Transparent Service (e g «Primary Service») as well as the other additional requirements There shall not be more than one instance of the Transparent Service that is declared as a «Primary Service»    Table 3 1: Service Requirements for Transparent Server       Service  Transparent Server      Transparent Service  M       ",
							" Additional Requirements For Low Energy Transport  This section describes additional Transparent Server requirements beyond those defined in the Transparent Service when using this profile over Low Energy transport  ",
							" Manufacturer Specific Data or Service Data AD Types  While the Transparent Client in the GAP Discoverable Mode the Transparent Server might include the Manufacturer Specific Data or Service Data defined in [3] AD type field of the advertising data This enhances the user experience since a Transparent Server might be identified by the Transparent Client before initiating a connection  ",
							" Transparent Client Role Requirements  Table4 1 describes the discovery requirements for a Transparent Client    Table4 1 Discovery Requirements for Transparent Client       Discovery Requirement  Support in Transparent Client      Transparent Service Discovery  O    Transparent Service Characteristic Discovery  M         Table 4 2 describes the characteristic support requirements for a Transparent Client    Table 4 2Characteristic Support Requirements for Transparent Client       Characteristic Support Requirements  Support in Transparent Client      Transparent Uplink Data  M    Transparent Downlink Data  M    Transparent Control Point  M       ",
							" GATT Sub-Procedure Requirements  This section represents a minimum set of the requirements for a Transparent Client The other GATT sub-procedures might be used if both of Transparent Client and Transparent Server are supported The below table summarizes the additional GATT sub-procedure requirements beyond those required by all GATT clients    Table 4 3: Additional GATT Sub-Procedure Requirements       GATT Sub-Procedure  Transparent Client Requirements      Discover All Characteristics of a Service  M    Discover All Characteristics Descriptors  M    Write Characteristic Value  M    Write Without Response  M    Write Characteristic Descriptors  M       ",
							" Service Discovery  The Transparent Client shall discover the Transparent Service on Transparent Server When using the Low Energy transport and performing primary service discovery the Transparent Client shall use either the GATT Discover All Primary Services sub-procedure or the GATT Discover Primary Services by Service UUID sub-procedure  When using the Low Energy transport and performing secondary service discovery the Transparent Client shall use the GATT Find Included Services sub-procedure to discover the Transparent Service  ",
							" Characteristic Discovery  As required by GATT the Transparent Client shall be tolerant of additional optional characteristics in the service records of services used with this profile When a characteristic which can be indicated or notified is discovered the Transparent Client shall also discover the associated Client Characteristic Configuration descriptor  ",
							" Transparent Service Characteristic Discovery  The Transparent Client shall use either the GATT Discover All Characteristics of a Service sub-procedure or the GATT Discover Characteristics by UUID sub-procedure to discover the characteristics of the service The Transparent Client shall use the GATT Discover All Characteristic Descriptors sub-procedure to discover the characteristic descriptors  ",
							" Transparent Service Characteristics  This section contains the characteristics and behavior which are not defined in the transparent procedures in Transparent Procedures session  ",
							" Transparent Up-Link Data (TUD) Characteristic  Before Transparent Server sends data to Transparent Client through this attribute handle the Transparent Client shall configure the Transparent Uplink Characteristic on Transparent Server for notifications (i e via the Client Characteristic Configuration descriptor) Transparent Client shall write a Characteristic Value to the Client Characteristic Configuration descriptor of Transparent Uplink Characteristic on Transparent Server  ",
							" Transparent Down-Link Data (TDD) Characteristic  The Transparent Client shall perform a Write Command or Write Request with a Characteristic Value to Transparent Downlink Characteristic on Transparent Server through this channel  ",
							" Transparent Control Point (TCP) Characteristic  Before performing a Transparent Control Point procedure the Transparent Client shall configure the Transparent Control Point (TCP) characteristic for notifications (i e via the Client Characteristic Configuration descriptor)  When Transparent Client prepares to send data to Transparent Server the Transparent Client shall write a Characteristic Value to the Transparent Control Point Characteristic The Transparent Server might respond it with a notification by Response Code that may include the Request opcode and might also include a Response Parameter as defined in [1]   When Transparent Server prepares to send data to Transparent Client the Transparent Server shall perform a notification with a Characteristic Value to the Transparent Control Point Characteristic  Table 4 4 shows the requirements for the TCP opcodes in the context of this profile:    Table 4 4: TCP Op Code Requirements       TCP Opcode  Requirement      Response Code (0x00 ~ 0x03)  Mandatory    Downlink Credit Based Flow Control Enable (0x14)  Mandatory if the Downlink Credit Based Flow Control is supported    Uplink Credit Based Flow Control Enable (0x15)  Mandatory if the Uplink Credit Based Flow Control is supported       ",
							" Transparent Procedures  The transparent procedures provide the standard methods by using the features of the Transparent Service [1]   Table 4 5 shows the transparent procedure requirements of this profile:    Table 4 5: Procedure Requirements       Procedures  Requirement      Downlink Credit Based Flow Control (DCBFC)  M    Uplink Credit Based Flow Control (UCBFC)  M       ",
							" Downlink Credit Based Flow Control  The procedure is used by a Transparent Client to enable Downlink Credit Based Flow Control for the Transparent Server Once it is enabled Client role can only send data to Server while the credit count is greater than zero The detail information is described in Transparent Service [1]   ",
							" Uplink Credit Based Flow Control  The procedure is used by a Transparent Client to enable Uplink Credit Based Flow Control on the Transparent Server Once it is enabled Server role can only send data to Client while the credit count is greater than zero The detail information is described in Transparent Service [1]   ",
							" Connection Establishment Procedures  Connection establishment requirements may be defined by the higher layer specification  ",
							" Security Considerations  Security requirements may be defined by the higher layer specification  ",
							" Acronyms and Abbreviations    Table 7 1: Abbreviations and Acronyms       Acronyms and Abbreviations  Meaning      AD  Advertising Data    GATT  Generic Attribute Profile    LE  Low Energy    MTU  Maximum Transmission Unit    TRSP  Transparent Profile    TRS  Transparent Service    RFU  Reserved for Future Use    DCBFC  Downlink Credit Based Flow Control    UCBFC  Uplink Credit Based Flow Control       ",
							" References  [1] Transparent Service v1 0  [2] Bluetooth Core Specification v4 0 or later version of the Core Specification  [3] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip Transparent Credit Based Profile v1 0  This profile defines fundamental requirements to connect and interact with Transparent Credit Based Profile intended for higher application layer to exchange control command and data between Client and Server roles  ",
							" Introduction  The Transparent Credit Based Profile (TRCBP) defines fundamental requirements to enable higher layer application data exchange between TRCBP Client and Server devices  ",
							" Profile Dependencies  This profile requires the Generic Attribute Profile (GATT) and LE L2CAP connection-oriented channels (L2CAP CoC) with flow control using a credit based scheme for L2CAP data  ",
							" Bluetooth Specification Release Compatibility  This specification is compatible with Bluetooth Core Specification v4 1 [3]   ",
							" Configuration ",
							" Roles  The profile defines two roles: Transparent Credit Based Server and Transparent Credit Based Client Both of them can transfer data to each other   The Transparent Credit Based Server shall be a GATT Server and L2CAP CoC Acceptor role  The Transparent Credit Based Client shall be a GATT Client and L2CAP CoC Initiator role   ",
							" Role/Service Relationships  The following diagram illustrates the relationships between service and profile roles   A Transparent Credit Based Server shall instantiate the Transparent Credit Based Service (TRCBS) [1] As shown above a higher layer specification is required to provide additional requirements on top of TRCBP that are specific to the need of the use case  ",
							" Transport Dependencies  The transport must be Bluetooth Low Energy because TRCBP is based on LE L2CAP CoC with Credit Based flow control  ",
							" Transparent Credit Based Server Role Requirements  The Transparent Credit Based Server shall instantiate one Transparent Credit Based Service [1] A higher layer specification may impose additional requirements on the service declaration of the Transparent Credit Based Service (e g «Primary Service») as well as other additional requirements There shall not be more than one instance of the Transparent Credit Based Service that is declared as a «Primary Service»    Table 3 1: Service Requirements for Transparent Credit Based Server       Service  Transparent Server      Transparent Credit Based Service  M       ",
							" Additional Requirements for Low Energy Transport  This section describes the additional Transparent Credit Based Server requirements beyond those defined in the Transparent Credit Based Service when using this profile over Low Energy transport  ",
							" Manufacturer Specific Data or Service Data AD Types  While in a GAP Discoverable Mode for initial connection to a Transparent Credit Based Client the Transparent Credit Based Server may include the Manufacturer Specific Data or Service Data defined in [3] AD type field of the advertising data This enhances the user experience since a Transparent Credit Based Server may be identified by the Transparent Credit Based Client before initiating a connection  ",
							" TRCBP Data Pipe  The L2CAP LE Credit Based Flow Control Mode shall be supported  ",
							" Transparent Credit Based Client Role Requirements  Table 4 1 describes the discovery requirements for a Transparent Credit Based Client    Table4 1 Discovery Requirements for Transparent Credit Based Client       Discovery Requirement  Support in Transparent Credit Based Client      Transparent Credit Based Service Discovery  M    Transparent Credit Based Service Characteristic Discovery  M         Table 4 2 describes the characteristic support requirements for a Transparent Credit Based Client    Table 4 2Characteristic Support Requirements for Transparent Credit Based Client       Characteristic Support Requirements  Support in Transparent Credit Based Client      L2CAP PSM Value (L2PSM)  M    Transparent Credit Based Control Point (TRCBCP)  M       ",
							" GATT Sub-Procedure Requirements  Requirements in this section represent a minimum set of requirements for a Transparent Credit Based Client Other GATT sub-procedures may be used if supported by both of Transparent Credit Based Client and Server The below table summarizes additional GATT sub-procedure requirements beyond those required by all GATT clients    Table 4 3: Additional GATT Sub-Procedure Requirements       GATT Sub-Procedure  Transparent Client Requirements      Discover All Characteristics of a Service  M    Discover All Characteristics Descriptors  M    Read Characteristic Value  M    Write Characteristic Value  M    Write Characteristic Descriptors  M       ",
							" Service Discovery  The Transparent Credit Based Client shall discover the service in Transparent Credit Based Server by performing primary service discovery the Client shall use either the GATT Discover All Primary Services sub-procedure or the GATT Discover Primary Services by Service UUID sub-procedure  When performing secondary service discovery the Client shall use the GATT Find Included Services sub-procedure to discover the Transparent Credit Based Service  ",
							" Characteristic Discovery  As required by GATT the Client shall be tolerant of additional optional characteristics in the service records of services used with this profile Where a characteristic is discovered that can be indicated or notified the Transparent Credit Based Client shall also discover the associated Client Characteristic Configuration descriptor    ",
							" TRCBS Characteristic Discovery  The Client shall use either the GATT Discover All Characteristics of a Service sub-procedure or the GATT Discover Characteristics by UUID sub-procedure to discover the characteristics of the service The Transparent Credit Based Client shall use the GATT Discover All Characteristic Descriptors sub-procedure to discover the characteristic descriptors  ",
							" TRCBS Characteristics ",
							" L2PSM Characteristic  Before L2CAP CoC connection establishment Client may get L2CAP PSM values for the TRCBP Data Pipe by reading this characteristic from Server role  ",
							" Transparent Credit Based Control Point (TRCBCP) Characteristic  To ensure the data transmission throughput of Data Pipe over LE L2CAP CoC with Credit Based flow control TRCBCP characteristic can be utilized as a Control Pipe Both of Transparent Credit Based Client and Server can send the control command/response via TRCBCP characteristic  Before performing a Transparent Credit Based Control Point procedure the Transparent Credit Based Client shall configure the Transparent Credit Based Control Point (TRCBCP) characteristic for notifications (i e via the Client Characteristic Configuration Descriptor )  When Transparent Credit Based Client would like to send the control command to Transparent Credit Based Server the Transparent Client shall Write a Characteristic Value to the TRCBCP Characteristic  When Transparent Credit Based Server would like to reply the control command to Transparent Credit Based Client the Transparent Credit Based Server shall perform a Notification with a Characteristic Value to the TRCBCP Characteristic  ",
							" Open Data Pipe  To open TRCBP Data Pipe for higher layer profile/application Client should initiate L2CAP CoC connection procedure with LE Credit Based Flow Control Mode  ",
							" Connection Establishment Procedures ",
							" Data Pipe  Before creating the L2CAP CoC connection Client obtains the L2CAP PSM value for the TRCBP Data Pipe by reading the L2PSM characteristic from Server role Then Client issues the L2CAP CoC connection request with LE Credit Based Flow Control Mode based on the L2CAP PSM value  Figure 5 1 illustrates the example of opening Transparent Credit Based Profile Data Pipe   Figure 5 1 Example of Opening Transparent Credit Based Profile Data Pipe   ",
							" Control Pipe  To enable the Control Pipe of Transparent Credit Based Profile Client shall configure the Transparent Credit Based Control Point (TRCBCP) characteristic for notifications (i e via the Client Characteristic Configuration Descriptor ) Then Client can send the control command to Server by writing a Characteristic Value to the TRCBCP Characteristic And Server can reply the control command to Client by performing a Notification with a Characteristic Value to the TRCBCP Characteristic  Figure 5 2 illustrates the example of opening Transparent Credit Based Profile Control Pipe   Figure 5 2 Example of Opening Transparent Credit Based Profile Control Pipe   ",
							" Security Considerations  Security requirements may be defined by the higher layer specification  ",
							" Acronyms and Abbreviations    Table 7 1: Abbreviations and Acronyms       Acronyms and Abbreviations  Meaning      GATT  Generic Attribute Profile    LE  Low Energy    L2CAP CoC  L2CAP Connection Oriented Channels    L2CAP PSM  L2CAP Protocol/Service Multiplexer    TRCBP  Transparent Credit Based Profile    TRCBS  Transparent Credit Based Service       ",
							" Reference  [1] Transparent Credit Based Service v1 0  [2] Bluetooth Core Specification v4 0 or later version of the Core Specification  [3] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip OTA Service v1 0  OTA Service exposes a device firmware update scheme when in a connection  ",
							" Introduction  The OTA Service is used for OTA Profile Client and Server roles for Microchip BLE device firmware update  ",
							" Conformance  If conformance to this specification is claimed all capabilities indicated as mandatory for this specification shall be supported in the specified manner (process-mandatory) This also applies for all optional and conditional capabilities for which support is indicated  ",
							" Service Dependency  This service is not dependent upon any other services  ",
							" Specification Release Compatibility  This specification is compatible with Bluetooth Core Specification 4 0 or later version of the Core Specification [1]   ",
							" GATT Sub-Procedure Requirements  Requirements in this section represent a minimum set of requirements for a server Other GATT sub‑procedures may be used if supported by both the client and server  Table 1 1 summarizes additional GATT sub-procedure requirements beyond those required by all GATT servers on Unenhanced Attribute Protocol (ATT) bearers  Requirements in this section are defined as “Mandatory” (M) “Optional” (O) “Excluded” (X) and “Conditional” (C n ) Conditional requirements (C n ) are listed directly below the table in which they appear    Table 1 1: GATT Sub-procedure Requirements       GATT Sub-Procedure  Requirements      Write Characteristic Value  M    Write Without Response  M    Notifications  M    Read Characteristic Value  M    Write Characteristic Descriptors  M       ",
							" Byte Transmission Order  All characteristics used with this service shall be transmitted with the least significant octet first (i e little endian)  The least significant octet is identified in the characteristic definitions in [2]   ",
							" Error Code  This service does not define any Attribute Protocol Application Error codes  ",
							" Service  Declaration  There shall be only one instance of the OTAS in a device The OTAS shall be instantiated as a «Primary Service»  The service Universally Unique Identifier (UUID) value shall be set to «4D434850-253D-46B3-9923-E61B8E8215D7»  ",
							" Service Characteristics  This section defines the characteristic and descriptor requirements for OTAS  Table 3 1 provides a summary of the characteristic support requirements for OTAS  Table 3 2 defines the characteristic Universally Unique Identifier (UUID) value  Requirements in this section are defined as “Mandatory” (M) “Optional” (O) “Excluded” (X) and “Conditional” (C n ) Conditional statements (C n ) are listed directly below the table in which they appear    Table 3 1: OTAS characteristics          Characteristic Name  Requirement  Mandatory Properties  Optional Properties  Security Permissions      OTA Feature  M  Read  None  Encryption required    OTA Data  M  WriteWithoutResponse Notify  None  Encryption required    OTA Control Point  M  Write Notify  None  Encryption required       Only one instance of each characteristic is permitted within this service    Table 3 2: UUID of OTAS characteristics       Characteristic Name  Universally Unique Identifier (UUID)      OTA Feature  4D434850-22E4-4246-AF03-0C4A2F906358    OTA Data  4D434850-34D9-40A6-BA7E-56F57C8CD478    OTA Control Point  4D434850-9327-45DE-8882-C97F39028A76       ",
							" OTA Feature  The OTA Feature characteristic is used to describe the support feature of the Server  Requirements for this characteristic are defined in Table 3 1   The structure of the OTA Feature characteristic is defined in Table 3 3    Table 3 3: Structure of OTA Feature characteristic         Field  Requirement  Size (octets)  Description      Supported_Image_Type  M  1   Server supported image types    Formatted as a bitfield  00000001: Firmware image is supported  00000010: Metadata is supported    The server may set multiple bits in the Supported_ Image_Type bitfield    The server shall not set a bit to 1 for an unsupported image type in the Supported_ Image_Type bitfield    All other bits: RFU        ",
							" OTA Feature Behavior  An OTA Feature characteristic returns its characteristic value when read by a client  The Server uses the OTA Feature characteristic to expose the supported image types of the device  ",
							" OTA Data  The OTA Data characteristic allow client to send specified data to Server Client shall enable the Client Characteristic Configuration Descriptor (CCCD) of OTA Data on Server before sending the specified data  Requirements for this characteristic are defined in Table 3 1   The structure of the OTA Data characteristic is defined in Table 3 4    Table 3 4: Structure of OTA Data characteristic         Field  Requirement  Size (octets)  Description      Fragmented_Image  C 1  1 to ATT_MTU-3  The fragmented image       C 1 It’s available only after client issue a Firmware Update Start procedure  ",
							" OTA Data Behavior  Client write the specified data to server via the OTA Data characteristic after issuing the dedicated operation in OTA Control Point characteristic Server shall notify the result of the OTA Data process to client  The format of the result of OTA Data process notification is defined in Table 3 5    Table 3 5: OTA Data process result format         Field  Requirement  Size (octets)  Description      Result_Code  M  1  Result Code       ",
							" Fragmented_Image Field  The fragmented image field is used for client to distribute firmware image to server This field is only valid after client issues Firmware Update Start procedure The maximum length of the Fragmented_Image is decided by ATT_MTU-3 and Max_Fragmented_Image_Size field in the Response Code operation with Opcode 0x02  If the length ATT_MTU-3 is larger than Max_Fragmented_Image_Size then the max length of fragmented image shall be Max_Fragmented_Image_Size  If the length ATT_MTU-3 is smaller than Max_Fragmented_Image_Size the client shall continue distribute the fragmented image until the total length equal to Max_Fragmented_Image_Size  Client shall wait the notification after the total length of sent fragmented images reaches to Max_Fragmented_Image_Size before distributing the next fragmented images  If the length of remaining fragmented image is less than Max_Fragmented_Image_Size then server shall send out the notification once the complete image is received  ",
							" OTA Control Point  When written by a client the OTA Control Point characteristic is an 8-bit enumerated value (known as the opcode) followed by zero or more parameter octets The opcode is used by the server to determine which OTA Control operation is being initiated by the client A notification of the OTA Control Point is used to provide a response to a client-initiated the OTA Control Point operation  The structure of the OTA Control Point characteristic is defined in Table 3 6    Table 3 6: Structure of OTA Control Point characteristic         Field  Requirement  Size (octets)  Description      Opcode  M  uint8  Opcode of the client -initiated OTA Control operation    Parameter  M  variables  Dependent of the operations defined in Table 3 7       OTA Control Point procedures only can be initiated by client  Client shall enable the Client Characteristic Configuration Descriptor (CCCD) of OTA Control Point on Server before issuing OTA Control Point procedure  OTA Control operation and any associated opcodes are defined in Table 3 7    Table 3 7: OTA Control operations          Opcode  Operation  Requirement  Applicable Response Values  Response Parameter      0x00  RFU  -      0x01  Response Code  M  N/A  N/A    0x02  Firmware Update Request  M  Success Not Supported Operation Failed Invalid Parameter  Max Fragmented Image Size (uint16) Current Firmware Version (uint32)    0x03  Firmware Update Start  M  Success Invalid State Not Supported  N/A    0x04  Firmware Update Complete  M  Success Invalid State  N/A    0x05  Device Reset Request  M  N/A  N/A    0x06-0xFF  RFU  -         ",
							" OTA Control Point Behavior  The OTA Control Point is used by a Client to control certain behaviors of the Server  The procedures are triggered by writing a value that includes an Opcode specifying the operation and this may be followed by a Parameter that is valid within the context of that Opcode For each of the procedures described in the next sections the Server shall indicate the OTACP characteristic with the Response Code Opcode (0x01) along with the Request Opcode and “Success” or other appropriate Result Code contained in the response as listed in Table 4 2   ",
							" OTA Control Operations ",
							" Response Code operation  The Response Code operation is used by server to notify the result of operation issued from client  The OTACP Response Code is variable length and the format is defined in Table 4 1    Table 4 1: Response Code operation format         Opcode  Requirement  Size (octets)  Description       M  1  Response Code    Opcode  Requirement  Size (octets)  Description    Request_Opcode  M  1  Request Opcode    Result_Code  M  1  Result Code    Response_Parameter  O  Variables  Dependent of the Request Opcode       The Result Codes are defined in Table 4 2:    Table 4 2: The result code of OTACP response value        Result Code  Definition  Description      0x00  Success  Response for successful operation    0x01  Invalid State  Response if the requested operation is not valid in the current state of the firmware update process    0x02  Not Supported  Response if unsupported Opcode is received    0x03  Operation Failed  Response if the requested operation failed    0x04  Invalid Parameter  Response if Parameter received does not meet the requirements of the service    0x05  Unspecified Error  The server has encountered an unspecified error    0x06  Reserved for future use  -       ",
							" Firmware Update Request operation  When the Firmware Update Request opcode is written to the OTACP and an error condition does not occur the Server shall start the firmware update procedure  The format of the Firmware Update Request operation is defined Table 4 3    Table 4 3: Firmware Update Request operation format         Opcode  Requirement  Size (octets)  Description      0x02  M  1  Firmware Update Request    Opcode  Requirement  Size (octets)  Description    New_Firmware_Image_Size  C 1  4  Size of new firmware image    New_Firmware_Image_ID  C 1  4  Identity of new firmware image    New_Firmware_Image_Version  C 1  4  Version of new firmware image    New_Firmware_Image_Enc_Method  C 1  1  New firmware image encrypt method  0x00: New firmware image is not encrypted 0x01: New firmware image is encrypted by AES CBC    New_Metadata_Size  C 1  4  Size of new metadata       C 1 It’s available only when Firmware Image is set supported in Supported_Image_Type field  C 2 It’s available only when Metadata is set supported in Supported_Image_Type field    The format of response parameter contained in the response parameter is defined Table 4 4    Table 4 4: The structure of response parameter for Device Information Exchange procedure         Response Parameter  Requirement  Size (octets)  Description      Max_Fragmented_Image_Size  M  2  Maximum fragmented image size    Image_Start_Index  M  4  The start index of image    Current_Firmware_Image_Version  C 1  4  Version of current Firmware image       C 1 It’s available only when firmware Image is set supported in Supported_ Image_Type field    However if an error condition occurs the “Success” result code shall not be sent and the appropriate error response shall be sent as defined in Table 4 5    Table 4 5: Requirements for Control Point Error Responses to the Firmware Update Request Opcode       Error Condition  Error Response      Upper layer rejects update request  Not supported    The received data length is invalid  Not supported    Image size exceeds max image size  Invalid parameter    Active flash head is not available  Operation failed       ",
							" Firmware Update Start operation  When the Firmware Update Start opcode is written to the OTACP along with image type parameter and an error condition does not occur the Server shall start the firmware update procedure  The format of the Firmware Update Start operation is defined in Table 4 6    Table 4 6: Firmware Update Start operation format         Opcode  Requirement  Size (octets)  Description      0x03  M  1  Firmware Update Start    Opcode  Requirement  Size (octets)  Description    Image_Type  M  1  The image used for firmware update process  0x01: Firmware image 0x02: Metadata All other values: RFU         However if an error condition occurs the “Success” result code shall not be sent and the appropriate error response shall be sent as defined in Table 4 7    Table 4 7: Requirements for Control Point Error Responses to the Firmware Update Start Opcode       Error Condition  Error Response      Requested image type is not supported  Not Supported    The received data length is invalid  Not Supported    The requested operation is not valid in the current state of the firmware update process  Invalid State    The received image type is not requested in Firmware Update Request opcode (Image size is 0)  Operation Failed    Active flash head is not available  Operation Failed       ",
							" Firmware Update Complete operation  When the Firmware Update Complete opcode is written to the OTACP and an error condition does not occur the Server shall end the firmware update process  The format of the Firmware Update Complete operation is defined in Table 4 8    Table 4 8: Firmware Update Complete operation format         Opcode  Requirement  Size (Octets)  Description      0x04  M  1  Firmware Update Complete    Opcode  Requirement  Size (Octets)  Description    -  -  -  -       However if an error condition occurs the “Success” result code shall not be sent and the appropriate error response shall be sent as defined in Table 4 9    Table 4 9: Requirements for Control Point Error Responses to the Firmware Validation Request Opcode       Error Condition  Error Response      The requested operation is not valid in the current state of the firmware update process  Invalid State       ",
							" Device Reset Request operation  When the Device Reset Request opcode is written to the OTACP the Server shall be ready to reset the device  The format of the Device Reset Request operation is defined in Table 4 10    Table 4 10: Device Reset Request operation format         Opcode  Requirement  Size(octets)  Description      0x05  M  1  Device Reset Request    Parameter  Requirement  Size(octets)  Description    -  -  -  -       ",
							" Acronyms And Abbreviations    Table 5 1: Acronyms and Abbreviations       Acronyms and Abbreviations  Meaning      GATT  Generic Attribute Profile    LE  Low Energy    OTA  Over the air    OTAP  OTA Profile    OTAS  OTA Service    OTACP  Over the Air Firmware Update Control Point       ",
							" References  [1] Bluetooth Core Specification v4 0 or later version of the Core Specification  [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip Transparent Service v1 1  The Service is used for data exchange between Transparent Client and Transparent Server that intended for consumer burst application data exchange  ",
							" Introduction  The Transparent Service is used for Transparent Profile Client and Server roles for upper layer application burst data exchange with Credit Based flow control  ",
							" Conformance  If conformance to this profile is claimed all capabilities indicated as mandatory for this profile shall be supported in the specified manner (process-mandatory) This also applies to all optional and conditional capabilities for which support is indicated All mandatory capabilities and optional and conditional capabilities for which support is indicated are subject to verification as part of the Microchip qualification program  ",
							" Service Dependency  This service is not dependent upon any other services  ",
							" Bluetooth Specification Release Compatibility  This specification is compatible with Bluetooth Core Specification 4 0 or later version of the Core Specification [1]  ",
							" GATT Sub-Procedure Requirements  Requirements in this section represent a minimum set of requirements for a Server Other GATT sub-procedures may be used if supported by both Client and Server  Table 1 1 summarizes additional GATT sub-procedure requirements beyond those required by all GATT Servers    Table 1 1: GATT Sub-procedure Requirements       GATT Sub-Procedure  Requirements       Write Characteristic Value  M    Notifications  M    Write Characteristic Descriptors  M       ",
							" Byte Transmission Order  All characteristics used with this service shall be transmitted with the least significant octet first (i e little endian) The least significant octet is identified in the characteristic definitions in [2]   ",
							" Error Codes  This service does not define any Attribute Protocol Application Error codes  ",
							" Service Declaration  In most cases the Transparent Service should be instantiated as a «Primary Service»; however it can be refined by upper layer profile or specification  The Service UUID is set to 《49535343-FE7D-4AE5-8FA9-9FAFD205E455》  ",
							" Service Characteristics  The following characteristics are exposed in the Transparent Service Only one instance of each characteristic is permitted within this service In its basic form the Transparent Service exposes three characteristics:   Transparent Uplink Data (TUD) : UUID 49535343-1E4D-4BD9-BA61-23C647249616  Transparent Downlink Data (TDD) : UUID 49535343-8841-43F4-A8D4-ECBE34729BB3  Transparent Control Point (TCP) : UUID 49535343-4C8A-39B3-2F49-511CFF073B7E   Support for the security permission within these three characteristics are optional  ",
							" Transparent Uplink Data (TUD) Characteristic  This characteristic is used for uplink data transmission from Server to Client via Characteristic Value Notify operation  ",
							" Transparent Uplink Data Characteristic Behavior  Once the Client Characteristic Configuration Descriptor of Transparent Uplink Characteristic is enabled by Client Server can notify a Characteristic Value to Client without any Attribute Protocol layer acknowledgment though this attribute handle That means Server could send burst of data to Client  This CCCD should be enabled behind Uplink Credit Based Flow Control is enabled if Client would like to enable Uplink Credit Based Flow Control  ",
							" Transparent Downlink Data (TDD) Characteristic  This characteristic is used for downlink data transmission from Client to Server via Characteristic Value Write Command or Write Request  ",
							" Transparent Downlink Data Characteristic Behavior  While Downlink Credit Based Flow Control is enabled Client can send burst data to Server by performing a Write Command with a Characteristic Value of this attribute handle  If Downlink Credit Based Flow Control is not enabled Client may just send data to Server by performing a Write Request Command with a Characteristic Value of this attribute handle  ",
							" Transparent Control Point (TCP) Characteristics  The structure of TCP characteristic is defined as below To ensure the successful operation this Client Characteristic Configuration Descriptor (CCCD) of Transparent Control Point (TCP) on Server should be enabled via Write Command by Client    Table 3 1: Structure of Transparent Control Point         Opcode  Parameter      Octet Order  N/A  LSO…MSO    Data Type  UNIT 8  Variable    Size  1 Octet  Variable       ",
							" Transparent Control Point Procedure Requirements Enter a short description of your topic here (optional)  Table 3 2 shows the opcode definition of TCP characteristic Range from 0x04 to 0x13 and 0x16 to 0x1F are reserved for future used Range from 0x20 to 0xFF are reserved for higher layer specification application   Table 3 2: Definition of opcode in TRCP characteristic         Opcode  Description  Parameter  Response Code Triggered      0x00  Response Code for received success opcode  Request opcode (UINT8) Response Parameters  No    0x01  Response Code for received opcode but not supported  Request opcode (UINT8)  No    0x02  Response Code for received opcode with invalid parameter  Request opcode (UINT8)  No    0x03  Response Code for received Op Code but operation Fail  Request opcode (UINT8)  No    0x04-0x13  Reserved  N/A  N/A    0x14  Downlink Credit Based Flow Control enable  None  Yes    0x15  Uplink Credit Based Flow Control enable  Credit Value (UNIT8)  No    0x16-0x1F  Reserved  N/A  N/A    0x20-0xFF  Reserved for higher layer specification  N/A  N/A      Table 3 3 shows the of Response Parameters structure of Triggered Response Code Recently only 0x14 opcode Client role asserted may induce Response code    Table 3 3: Definition of Response Parameters structure        Request Opcode  Response Parameters  Description      Downlink Credit Based Flow Control enable (0x14)  MTU Value (UNIT16) Credit Value (UNIT8)  Server will send these Response Parameters by 0x00 opcode to give Credit Value       Credit Value field is given Credit number that data receiver returned to transmitter One credit returned means transmitter can send one ATT packet to receiver The default Credit Value is zero before Credit Base Flow Control is enabled  MTU Value field is ATT_MTU value as the maximum size of any packet sent between a client and a server  ",
							" Transparent Control Point Characteristic Behavior  While the Transparent Control Point is used by a Client to control certain behaviors of the Server The procedures are triggered by writing a Characteristic Value that includes an opcode specifying the operation and the Server will notify the result of the operations  While the Transparent Control Point is used by a Server to control certain behaviors of the Client The procedures are triggered by notifying a Characteristic Value that includes an opcode specifying the operation and Client will write the result of the operations  For each procedure is described in the next section  ",
							" Downlink Credit Based Flow Control (DCBFC)  The procedure is used by a Transparent Client to enable Downlink Credit Based Flow Control for the Transparent Server Once it is enabled Client role can only send data to Server while the credit count is greater than zero  When enabling Downlink Credit Based Flow Control Client shall write TCP characteristic handle with “Downlink Credit Based Flow Control Enable” opcode (0x14) to the Transparent Control Point on Transparent Server And the Transparent Server shall send the MTU value and available credit numbers to Transparent Client by Response Parameters of 0x00 opcode Transparent Client will check the credit count to know how many data can be transmitted to the Transparent Server by performing the write command operation to TDD Characteristic handle The Credit count will be decreased by the number of ATT packet sending by Transparent Client Transparent Client can send data only while the credit count is greater than zero Transparent Server shall return the credit to Transparent Client after the received data has been processed completed   Figure 3 1 Example MSC of Downlink Credit Based Flow Control usage Initial credit number is 8 and credits-given threshold is 5   ",
							" Uplink Credit Based Flow Control (UCBFC)  The procedure is used by a Transparent Client to enable Uplink Credit Based Flow Control on the Transparent Server Once it is enabled Server role can only send data to Client while the credit count is greater than zero  When enable Uplink Credit Based Flow Control Client shall write “Uplink Credit Based Flow Control Enable” opcode (0x15) to the Transparent Control Point on Transparent Server There are given Credit value parameter in this opcode Transparent Server will check the credit count to know how many packets can be uploaded to the Transparent Client by performing the notify operation to TUD Characteristic handle The Credit count will be decreased by the number of ATT packet sending by Transparent Server Transparent Server can send data only while the credit count is greater than zero Transparent Client shall return the credit value to Transparent Server after the received data has been processed completed  When enable Credit Based Flow Control Uplink and available credits on Client shall be written to the Transparent Control Point on Transparent Server Transparent Server will check the number of credit to know how many available data list can transmit to the Transparent Client The number of credit is decrease by the list of data sending by Transparent Server Transparent Server is able to send data only while the number of credit is non-zero Transparent Client shall return the credit to Transparent Server after the received data has been processed completed   Example MSC of Uplink Credit Based Flow Control usage Initial credit number is 8 and credits-given threshold is 5   ",
							" Acronyms and Abbreviations    Table 4 1: Acronyms and Abbreviations       Acronyms and Abbreviations  Meaning       GATT  Generic Attribute Profile    LE  Low Energy    MTU  Maximum Transmission Unit    RFU  Reserved for Future Use       ",
							" References  [1] Bluetooth Core Specification v4 0 or later version of the Core Specification  [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip Transparent Credit Based Service v1 0  The Service is used for Transparent Credit Based Profile to establish one or more LE L2CAP connection oriented channels (L2CAP CoC) that intended for higher layer application burst data exchange  ",
							" Introduction  The Transparent Credit Based Service (TRCBS) is used for Transparent Credit Based Profile (TRCBP) to establish one or more LE L2CAP connection oriented channels that intended for higher layer application burst data exchange  ",
							" Service Dependency  This service is not dependent upon any other services  ",
							" Bluetooth Specification Release Compatibility  This specification is compatible with Bluetooth Core Specification 4 1 or later version of the Core Specification [1]   ",
							" GATT Sub-Procedure Requirements  Requirements in this section represent a minimum set of requirements for a Server Other GATT sub-procedures may be used if supported by both Client and Server  Table 1 1 summarizes additional GATT sub-procedure requirements beyond those required by all GATT Servers    Table 1 1: GATT Sub-procedure Requirements       GATT Sub-Procedure  Requirements      Read Characteristic Value  M    Write Characteristic Value  M    Notifications  M    Write Characteristic Descriptors  M       ",
							" Byte Transmission Order  All characteristics used with this service shall be transmitted with the least significant octet first (i e little endian) The least significant octet is identified in the characteristic definitions in [2]   ",
							" Error Codes  This service does not define any Attribute Protocol Application Error codes  ",
							" Service Declaration  In most cases the Transparent Credit Based Service (TRCBS) should be instantiated as a «Primary Service»; however it can be refined by upper layer profile or specification  The default service UUID is set to 《49535343-2120-45FC-BDDB-E8A01AEDEC50》  ",
							" Service Characteristics  The following characteristics are exposed in the TRCBS:   L2CAP PSM Value (L2PSM) Characteristic : UUID 49535343-C2DB-4991-9A9F-68C13B25DD1F    Transparent Credit Based Control Point (TRCBCP) Characteristic UUID 49535343-0284-18AE-1E46-35E91AF7D03C   ",
							" L2CAP PSM Value (L2PSM) Characteristic  This characteristic is used to record PSM values of LE L2CAP CoC Permission is read only To initiate L2CAP CoC connection Client can read it via Characteristic Value read operation  There is one L2CAP PSM values included in this characteristic The L2CAP PSM value size is 16 bits See below definition:  PSM_Data : 0x0081  ",
							" Transparent Credit Based Control Point (TRCBCP) Characteristic  The structure of TCP characteristic is defined as below To ensure the successful operation this Client Characteristic Configuration Descriptor (CCCD) of Transparent Credit Based Control Point (TRCBCP) on Server should be enabled via Write Request by Client    Table 3 1: Structure of Transparent Credit Based Control Point         Opcode  Parameter      Octet Order  N/A  LSO…MSO    Data Type  UNIT 8  Variable    Size  1 Octet  Variable       ",
							" Transparent Credit Based Control Point Procedure Requirements  Table 3 2 shows the opcode definition of TRCBCP characteristic Range from 0x00 to 0xFF are reserved for higher layer specification application    Table 3 2: Definition of Op Code in TRCBCP characteristic         Opcode  Description  Parameter  Response Code      0x00-0xFF  Reserved for higher layer specification  N/A  N/A       ",
							" Transparent Credit Based Control Point Characteristic Behavior  While the Transparent Credit Based Control Point is used by a Client to control certain behaviors of the Server The procedures are triggered by Write a Characteristic Value that includes an Op Code specifying the operation and the Server will Notify the result of the operations  While the Transparent Credit Based Control Point is used by a Server to control certain behaviors of the Client The procedures are triggered by Notify a Characteristic Value that includes an Op Code specifying the operation and Client will Write the result of the operations  ",
							" Acronyms and Abbreviations    Table 4 1: Acronyms and Abbreviations       Acronyms and Abbreviations  Meaning      GATT  Generic Attribute Profile    LE  Low Energy    L2CAP CoC  L2CAP Connection oriented Channels    L2CAP PSM  L2CAP protocol/service multiplexer    TRCBP  Transparent Credit Based Profile    TRCBS  Transparent Credit Based Service       ",
							" References  [1] Bluetooth Core Specification v4 0 or later version of the Core Specification  [2] Characteristic and Descriptor descriptions are accessible via the Bluetooth SIG Assigned Numbers  ",
							" Microchip Information ",
							" The Microchip Website  Microchip provides online support via our website at This website is used to make files and information easily available to customers Some of the content available includes:   Product Support – Data sheets and errata application notes and sample programs design resources user’s guides and hardware support documents latest software releases and archived software  General Technical Support – Frequently Asked Questions (FAQs) technical support requests online discussion groups Microchip design partner program member listing  Business of Microchip – Product selector and ordering guides latest Microchip press releases listing of seminars and events listings of Microchip sales offices distributors and factory representatives   ",
							" Product Change Notification Service  Microchip’s product change notification service helps keep customers current on Microchip products Subscribers will receive email notification whenever there are changes updates revisions or errata related to a specified product family or development tool of interest  To register go to and follow the registration instructions  ",
							" Customer Support  Users of Microchip products can receive assistance through several channels:   Distributor or Representative  Local Sales Office  Embedded Solutions Engineer (ESE)  Technical Support   Customers should contact their distributor representative or ESE for support Local sales offices are also available to help customers A listing of sales offices and locations is included in this document  Technical support is available through the website at:  ",
							" Microchip Devices Code Protection Feature  Note the following details of the code protection feature on Microchip products:   Microchip products meet the specifications contained in their particular Microchip Data Sheet  Microchip believes that its family of products is secure when used in the intended manner within operating specifications and under normal conditions  Microchip values and aggressively protects its intellectual property rights Attempts to breach the code protection features of Microchip product is strictly prohibited and may violate the Digital Millennium Copyright Act  Neither Microchip nor any other semiconductor manufacturer can guarantee the security of its code Code protection does not mean that we are guaranteeing the product is “unbreakable” Code protection is constantly evolving Microchip is committed to continuously improving the code protection features of our products   ",
							" Legal Notice  This publication and the information herein may be used only with Microchip products including to design test and integrate Microchip products with your application Use of this information in any other manner violates these terms Information regarding device applications is provided only for your convenience and may be superseded by updates It is your responsibility to ensure that your application meets with your specifications Contact your local Microchip sales office for additional support or obtain additional support at   THIS INFORMATION IS PROVIDED BY MICROCHIP \"AS IS\" MICROCHIP MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WHETHER EXPRESS OR IMPLIED WRITTEN OR ORAL STATUTORY OR OTHERWISE RELATED TO THE INFORMATION INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE OR WARRANTIES RELATED TO ITS CONDITION QUALITY OR PERFORMANCE  IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT SPECIAL PUNITIVE INCIDENTAL OR CONSEQUENTIAL LOSS DAMAGE COST OR EXPENSE OF ANY KIND WHATSOEVER RELATED TO THE INFORMATION OR ITS USE HOWEVER CAUSED EVEN IF MICROCHIP HAS BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE TO THE FULLEST EXTENT ALLOWED BY LAW MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY RELATED TO THE INFORMATION OR ITS USE WILL NOT EXCEED THE AMOUNT OF FEES IF ANY THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THE INFORMATION  Use of Microchip devices in life support and/or safety applications is entirely at the buyer's risk and the buyer agrees to defend indemnify and hold harmless Microchip from any and all damages claims suits or expenses resulting from such use No licenses are conveyed implicitly or otherwise under any Microchip intellectual property rights unless otherwise stated  ",
							" Trademarks  The Microchip name and logo the Microchip logo Adaptec AVR AVR logo AVR Freaks BesTime BitCloud CryptoMemory CryptoRF dsPIC flexPWR HELDO IGLOO JukeBlox KeeLoq Kleer LANCheck LinkMD maXStylus maXTouch MediaLB megaAVR Microsemi Microsemi logo MOST MOST logo MPLAB OptoLyzer PIC picoPower PICSTART PIC32 logo PolarFire Prochip Designer QTouch SAM-BA SenGenuity SpyNIC SST SST Logo SuperFlash Symmetricom SyncServer Tachyon TimeSource tinyAVR UNI/O Vectron and XMEGA are registered trademarks of Microchip Technology Incorporated in the U S A and other countries  AgileSwitch APT ClockWorks The Embedded Control Solutions Company EtherSynch Flashtec Hyper Speed Control HyperLight Load Libero motorBench mTouch Powermite 3 Precision Edge ProASIC ProASIC Plus ProASIC Plus logo Quiet- Wire SmartFusion SyncWorld Temux TimeCesium TimeHub TimePictra TimeProvider TrueTime and ZL are registered trademarks of Microchip Technology Incorporated in the U S A  Adjacent Key Suppression AKS Analog-for-the-Digital Age Any Capacitor AnyIn AnyOut Augmented Switching BlueSky BodyCom Clockstudio CodeGuard CryptoAuthentication CryptoAutomotive CryptoCompanion CryptoController dsPICDEM dsPICDEM net Dynamic Average Matching DAM ECAN Espresso T1S EtherGREEN GridTime IdealBridge In-Circuit Serial Programming ICSP INICnet Intelligent Paralleling IntelliMOS Inter-Chip Connectivity JitterBlocker Knob-on-Display KoD maxCrypto maxView memBrain Mindi MiWi MPASM MPF MPLAB Certified logo MPLIB MPLINK MultiTRAK NetDetach Omniscient Code Generation PICDEM PICDEM net PICkit PICtail PowerSmart PureSilicon QMatrix REAL ICE Ripple Blocker RTAX RTG4 SAM-ICE Serial Quad I/O simpleMAP SimpliPHY SmartBuffer SmartHLS SMART-I S storClad SQI SuperSwitcher SuperSwitcher II Switchtec SynchroPHY Total Endurance Trusted Time TSHARC USBCheck VariSense VectorBlox VeriPHY ViewSpan WiperLock XpressConnect and ZENA are trademarks of Microchip Technology Incorporated in the U S A and other countries  SQTP is a service mark of Microchip Technology Incorporated in the U S A  The Adaptec logo Frequency on Demand Silicon Storage Technology and Symmcom are registered trademarks of Microchip Technology Inc in other countries  GestIC is a registered trademark of Microchip Technology Germany II GmbH Co KG a subsidiary of Microchip Technology Inc in other countries  All other trademarks mentioned herein are property of their respective companies  © Microchip Technology Incorporated and its subsidiaries All Rights Reserved  ISBN:  ",
							" Quality Management System   For information regarding Microchip’s Quality Management Systems please visit    ",
							" Worldwide Sales and Service          AMERICAS  ASIA/PACIFIC  ASIA/PACIFIC  EUROPE       Corporate Office  2355 West Chandler Blvd  Chandler AZ 85224-6199  Tel: 480-792-7200  Fax: 480-792-7277  Technical Support:   Web Address:   Atlanta  Duluth GA  Tel: 678-957-9614  Fax: 678-957-1455  Austin TX  Tel: 512-257-3370  Boston  Westborough MA  Tel: 774-760-0087  Fax: 774-760-0088  Chicago  Itasca IL  Tel: 630-285-0071  Fax: 630-285-0075  Dallas  Addison TX  Tel: 972-818-7423  Fax: 972-818-2924  Detroit  Novi MI  Tel: 248-848-4000  Houston TX  Tel: 281-894-5983  Indianapolis  Noblesville IN  Tel: 317-773-8323  Fax: 317-773-5453  Tel: 317-536-2380  Los Angeles  Mission Viejo CA  Tel: 949-462-9523  Fax: 949-462-9608  Tel: 951-273-7800  Raleigh NC  Tel: 919-844-7510  New York NY  Tel: 631-435-6000  San Jose CA  Tel: 408-735-9110  Tel: 408-436-4270  Canada - Toronto  Tel: 905-695-1980  Fax: 905-695-2078    Australia - Sydney  Tel: 61-2-9868-6733  China - Beijing  Tel: 86-10-8569-7000  China - Chengdu  Tel: 86-28-8665-5511  China - Chongqing  Tel: 86-23-8980-9588  China - Dongguan  Tel: 86-769-8702-9880  China - Guangzhou  Tel: 86-20-8755-8029  China - Hangzhou  Tel: 86-571-8792-8115  China - Hong Kong SAR  Tel: 852-2943-5100  China - Nanjing  Tel: 86-25-8473-2460  China - Qingdao  Tel: 86-532-8502-7355  China - Shanghai  Tel: 86-21-3326-8000  China - Shenyang  Tel: 86-24-2334-2829  China - Shenzhen  Tel: 86-755-8864-2200  China - Suzhou  Tel: 86-186-6233-1526  China - Wuhan  Tel: 86-27-5980-5300  China - Xian  Tel: 86-29-8833-7252  China - Xiamen  Tel: 86-592-2388138  China - Zhuhai  Tel: 86-756-3210040    India - Bangalore  Tel: 91-80-3090-4444  India - New Delhi  Tel: 91-11-4160-8631  India - Pune  Tel: 91-20-4121-0141  Japan - Osaka  Tel: 81-6-6152-7160  Japan - Tokyo  Tel: 81-3-6880- 3770  Korea - Daegu  Tel: 82-53-744-4301  Korea - Seoul  Tel: 82-2-554-7200  Malaysia - Kuala Lumpur  Tel: 60-3-7651-7906  Malaysia - Penang  Tel: 60-4-227-8870  Philippines - Manila  Tel: 63-2-634-9065  Singapore  Tel: 65-6334-8870  Taiwan - Hsin Chu  Tel: 886-3-577-8366  Taiwan - Kaohsiung  Tel: 886-7-213-7830  Taiwan - Taipei  Tel: 886-2-2508-8600  Thailand - Bangkok  Tel: 66-2-694-1351  Vietnam - Ho Chi Minh  Tel: 84-28-5448-2100    Austria - Wels  Tel: 43-7242-2244-39  Fax: 43-7242-2244-393  Denmark - Copenhagen  Tel: 45-4485-5910  Fax: 45-4485-2829  Finland - Espoo  Tel: 358-9-4520-820  France - Paris  Tel: 33-1-69-53-63-20  Fax: 33-1-69-30-90-79  Germany - Garching  Tel: 49-8931-9700  Germany - Haan  Tel: 49-2129-3766400  Germany - Heilbronn  Tel: 49-7131-72400  Germany - Karlsruhe  Tel: 49-721-625370  Germany - Munich  Tel: 49-89-627-144-0  Fax: 49-89-627-144-44  Germany - Rosenheim  Tel: 49-8031-354-560  Israel - Ra’anana  Tel: 972-9-744-7705  Italy - Milan  Tel: 39-0331-742611  Fax: 39-0331-466781  Italy - Padova  Tel: 39-049-7625286  Netherlands - Drunen  Tel: 31-416-690399  Fax: 31-416-690340  Norway - Trondheim  Tel: 47-72884388  Poland - Warsaw  Tel: 48-22-3325737  Romania - Bucharest  Tel: 40-21-407-87-50  Spain - Madrid  Tel: 34-91-708-08-90  Fax: 34-91-708-08-91  Sweden - Gothenberg  Tel: 46-31-704-60-40  Sweden - Stockholm  Tel: 46-8-5090-4654  UK - Wokingham  Tel: 44-118-921-5800  Fax: 44-118-921-5820       "];

